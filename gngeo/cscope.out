cscope 15 $HOME/Github/gh_retrogame_emulator/gngeo               0002043102
	@config.h

8 
	#ALIGNLONGS
 
ALIGNLONGS


	)

23 
	#HAVE_ATEXIT
 1

	)

26 
	#HAVE_BASENAME
 1

	)

30 
	#HAVE_DIRENT_H
 1

	)

36 
	#HAVE_ERRNO_H
 1

	)

39 
	#HAVE_FLOOR
 1

	)

42 
	#HAVE_GETOPT_LONG
 1

	)

45 
	#HAVE_GETTIMEOFDAY
 1

	)

51 
	#HAVE_INTTYPES_H
 1

	)

54 
	#HAVE_LIBM
 1

	)

57 
	#HAVE_LIBZ
 1

	)

60 
	#HAVE_LIMITS_H
 1

	)

63 
	#HAVE_MALLOC_H
 1

	)

66 
	#HAVE_MEMORY_H
 1

	)

69 
	#HAVE_MEMSET
 1

	)

72 
	#HAVE_MKDIR
 1

	)

75 
	#HAVE_MMAP
 1

	)

81 
	#HAVE_POW
 1

	)

84 
	#HAVE_SCANDIR
 1

	)

87 
	#HAVE_STDDEF_H
 1

	)

90 
	#HAVE_STDINT_H
 1

	)

93 
	#HAVE_STDLIB_H
 1

	)

96 
	#HAVE_STRCHR
 1

	)

99 
	#HAVE_STRINGS_H
 1

	)

102 
	#HAVE_STRING_H
 1

	)

105 
	#HAVE_STRSTR
 1

	)

108 
	#HAVE_STRTOUL
 1

	)

119 
	#HAVE_SYS_STAT_H
 1

	)

122 
	#HAVE_SYS_TIME_H
 1

	)

125 
	#HAVE_SYS_TYPES_H
 1

	)

128 
	#HAVE_UNISTD_H
 1

	)

131 
	#HAVE_VPRINTF
 1

	)

134 
	#PACKAGE
 "gngeo"

	)

137 
	#PACKAGE_BUGREPORT
 ""

	)

140 
	#PACKAGE_NAME
 "gngeo"

	)

143 
	#PACKAGE_STRING
 "gngeÿ0.8"

	)

146 
	#PACKAGE_TARNAME
 "gngeo"

	)

149 
	#PACKAGE_URL
 ""

	)

152 
	#PACKAGE_VERSION
 "0.8"

	)

170 
	#STDC_HEADERS
 1

	)

173 
	#TIME_WITH_SYS_TIME
 1

	)

185 
	#USE_GENERATOR68K
 1

	)

188 
	#USE_GL2
 1

	)

191 
	#USE_MAMEZ80
 1

	)

200 
	#VERSION
 "0.8"

	)

213 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


214 #i‡
deföed
 
__BIG_ENDIAN__


215 
	#WORDS_BIGENDIAN
 1

	)

218 #i‚de‡
WORDS_BIGENDIAN


228 #i‚de‡
__˝lu•lus


	@mmuhack/hackbench.cpp

1 
	~<uni°d.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

5 
	~<time.h
>

6 
	~<f˙é.h
>

7 
	~<sys/time.h
>

8 
	~<sys/mm™.h
>

10 
	$mmuhack
()

12 
mmufd
 = 
	`›í
("/dev/mmuhack", 
O_RDWR
);

13 if(
mmufd
 < 0) {

14 
	`sy°em
("/sbin/insmod mmuhack.o");

15 
mmufd
 = 
	`›í
("/dev/mmuhack", 
O_RDWR
);

17 if(
mmufd
 < 0)  0;

19 
	`˛o£
(
mmufd
);

21 
	}
}

23 
	$bíchm¨k
 (*
mem±r
)

25 
°¨âime
 = 
	`time
 (
NULL
);

26 
a
,
b
,
c
,
d
;

27 vﬁ©ûê*
µ
 = (*Ë
mem±r
;

29 
°¨âime
 =
	`time
 (
NULL
));

31 
	`¥ötf
 ("ªadÅe°\n", 
mem±r
);

32 
d
 = 0; d < 3; d ++)

34 
°¨âime
 = 
	`time
 (
NULL
);

35 
b
 = 0;

36 
c
 = 0;

37 
°¨âime
 =
	`time
 (
NULL
))

39 
a
 = 0;á < 20000;á ++)

41 
b
 +
µ
[
a
];

43 
c
 ++;

45 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

48 
	`¥ötf
 ("writeÅest\n");

49 
d
 = 0; d < 3; d ++)

51 
°¨âime
 = 
	`time
 (
NULL
);

52 
b
 = 0;

53 
c
 = 0;

54 
°¨âime
 =
	`time
 (
NULL
))

56 
a
 = 0;á < 20000;á ++)

58 
µ
[
a
] = 0x37014206;

60 
c
 ++;

62 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

65 
	`¥ötf
 ("combinedÅest (read, write back)\n");

66 
d
 = 0; d < 3; d ++)

68 
°¨âime
 = 
	`time
 (
NULL
);

69 
b
 = 0;

70 
c
 = 0;

71 
°¨âime
 =
	`time
 (
NULL
))

73 
a
 = 0;á < 20000;á ++)

75 
µ
[
a
] += 0x55017601;

77 
c
 ++;

79 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

82 
	`¥ötf
 ("test complete\n");

83 
	}
}

85 
	$maö
–
¨gc
, * 
¨gv
[] )

87 
memfd
 = 
	`›í
("/dev/mem", 
O_RDWR
);

88 if(
memfd
 < 0)  0;

90 vﬁ©ûê*
myBuf
 = (vﬁ©ûê*)
	`mm≠
((*)0, 65536, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
, 
memfd
, 0x03000000);

91 vﬁ©ûê*
myBuf2
 = (vﬁ©ûê*)
	`mm≠
((*)0, 65536, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
, 
memfd
, 0x02000000);

92 vﬁ©ûê*
£cbuf
 = (*)
	`mÆloc
 (204800);

94 
	`mmuhack
();

96 
	`mem£t
 ((*)
myBuf
, 0x55, 65536);

97 
	`mem£t
 ((*)
myBuf2
, 0x55, 65536);

98 
	`mem£t
 ((*)
£cbuf
, 0x55, 65536);

100 
	`¥ötf
("mm≠ed 0x03000000 buf„∏@ VA: %08X\n\n", 
myBuf
);

101 
	`bíchm¨k
 ((*)
myBuf
);

102 
	`¥ötf
("\nmm≠ed 0x02000000 buf„∏@ VA: %08X\n\n", 
myBuf2
);

103 
	`bíchm¨k
 ((*)
myBuf2
);

104 
	`¥ötf
("\nmÆloc'd buf„∏@ VA: %08X\n\n", 
£cbuf
);

105 
	`bíchm¨k
 ((*)
£cbuf
);

107 
	`¥ötf
 ("\nClosing files...\n");

108 
	`‰ì
((*)
£cbuf
);

109 
	`˛o£
 (
memfd
);

110 
	`¥ötf
 ("Exiting...\n");

113 
	}
}

	@mmuhack/mmuhack.c

1 
	~<löux/c⁄fig.h
>

2 
	~<löux/moduÀ.h
>

3 
	~<löux/kî√l.h
>

4 
	~<löux/öô.h
>

5 
	~<löux/miscdevi˚.h
>

6 
	~<asm/mem‹y.h
>

8 
	#MMUHACK_MINOR
 225

	)

9 
	#DEVICE_NAME
 "mmuhack"

	)

11 #i‡
__GNUC__
 == 3

12 
	~<löux/vîsi⁄.h
>

13 c⁄° 
	g__moduÀ_kî√l_vîsi⁄_gcc3
[] 
__©åibuã__
((
__u£d__
)Ë__©åibuã__((
£˘i⁄
(".modinfo"))) =

14 "kî√l_vîsi⁄=" 
UTS_RELEASE
;

17 
ssize_t
 
	$mmuhack_›í
(
öode
 *öode, 
fûe
 *
fûp
)

19 *
pgèbÀ
;

20 *
˝t
;

21 
i
, 
j
;

22 
âb
;

23 
ªt
 = -
EFAULT
;

26 
asm
 volatile(

30 "ldmü sp!, {r0}\n\t": "Ù"(
âb
)

33 
pgèbÀ
 = 
	`__va
(
âb
);

35 
i
 = 0; i < 4096; i ++Ëi‡–(
pgèbÀ
[i] & 3) == 1 ) {

36 
˝t
 = 
	`__va
(
pgèbÀ
[
i
] & 0xfffffc00);

38 
j
 = 0; j < 256; j ++) {

46 i‡(((
˝t
[
j
] & 0xff000000) == 0x02000000) && ((cpt[j] & 12)==0) )

49 
˝t
[
j
] |= 0xFFC;

52 i‡(((
˝t
[
j
] & 0xff000000) == 0x03000000) && ((cpt[j] & 12)==0))

56 
˝t
[
j
] |= 0xFFC;

62 
asm
 volatile(

70 i‡(
ªt
 == 0)

71 
	`¥ötk
("MMU hackápplied.\n");

74 
	}
}

76 
fûe_›î©i⁄s
 
	gmmuhack_f›s
 = {

77 
ow√r
: 
THIS_MODULE
,

78 
›í
: 
mmuhack_›í
,

82 
miscdevi˚
 
	gmmuhack
 = {

83 
MMUHACK_MINOR
, 
DEVICE_NAME
, &
mmuhack_f›s


86 
__öô
 
	$mmuhack_öô
()

88 
	`misc_ªgi°î
(&
mmuhack
);

93 
	}
}

95 
__exô
 
	$mmuhack_exô
()

97 
	`misc_dîegi°î
(&
mmuhack
);

101 
	}
}

103 
moduÀ_öô
(
mmuhack_öô
);

104 
moduÀ_exô
(
mmuhack_exô
);

	@src/blitter.h

2 #i‚de‡
_BLITTER_H_


3 
	#_BLITTER_H_


	)

5 #ifde‡
HAVE_CONFIG_H


6 
	~<c⁄fig.h
>

10 
	~"SDL.h
"

13 c⁄° *
	m«me
;

14 c⁄° *
	mdesc
;

15 (*
	möô
) ();

16 (*
	mªsize
Ë(
	mw
, 
	mh
);

17 (*
	mupd©e
) ();

18 (*
	mfuŒs¸ìn
) ();

19 (*
	m˛o£
) ();

20 } 
	tblôãr_func
;

23 
blôãr_so·_öô
();

24 
blôãr_so·_upd©e
();

25 
blôãr_so·_fuŒs¸ìn
();

26 
blôãr_so·_˛o£
();

29 
blôãr_›ígl_öô
();

30 
blôãr_›ígl_ªsize
(
w
, 
h
);

31 
blôãr_›ígl_upd©e
();

32 
blôãr_›ígl_fuŒs¸ìn
();

33 
blôãr_›ígl_˛o£
();

36 
blôãr_ovîœy_öô
();

37 
blôãr_ovîœy_ªsize
();

38 
blôãr_ovîœy_upd©e
();

39 
blôãr_ovîœy_fuŒs¸ìn
();

40 
blôãr_ovîœy_˛o£
();

42 
blôãr_func
 
blôãr
[];

	@src/blitter/glproc.h

2 #i‚de‡
_GLPROC_H_


3 
	#_GLPROC_H_


	)

5 #i‚de‡
GP2X


7 
	~"SDL_›ígl.h
"

9 (*
pglCÀ¨Cﬁ‹
)(
GL˛ampf
 
ªd
, GL˛amp‡
gªí
, GL˛amp‡
blue
, GL˛amp‡
Æpha
);

10 (*
pglCÀ¨
)(
GLbôfõld
 
mask
);

12 (*
pglE«bÀ
)(
GLíum
 
ˇp
);

13 (*
pglVõwp‹t
)(
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
);

14 (*
pglTexP¨amëîi
)(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
);

15 (*
pglPixñSt‹ei
)(
GLíum
 
≤ame
, 
GLöt
 
∑øm
);

16 (*
pglTexImage2D
)(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 *
pixñs
);

17 (*
pglBegö
)(
GLíum
 
mode
);

18 (*
pglEnd
)();

19 (*
pglTexCo‹d2f
)(
GLÊﬂt
 
s
, GLÊﬂà
t
);

20 (*
pglVîãx2f
)(
GLÊﬂt
 
s
, GLÊﬂà
t
);

	@src/blitter/opengl.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~<c⁄fig.h
>

4 #ifde‡
HAVE_GL_GL_H


5 #i‚de‡
WII


6 #i‚de‡
GP2X


8 
	~"SDL.h
"

9 
	~"../emu.h
"

10 
	~"../s¸ìn.h
"

11 
	~"../video.h
"

12 
	~"../ef„˘.h
"

13 
	~"../c⁄f.h
"

14 
	~"../gnutû.h
"

15 
	~"gÕroc.h
"

19 
	ga
;

20 
	gb
;

21 
	gc
;

22 
	gd
;

24 
SDL_SurÁ˚
 *
	gvideo_›ígl
;

25 
SDL_SurÁ˚
 *
	gãx_›ígl
;

26 
SDL_Re˘
 
	ggÃe˘ef
;

28 
	$lﬂd_gÕroc
() {

29 
öô
=0;

30 
CONF_ITEM
 *
cf_libgl
=
	`cf_gë_ôem_by_«me
("libglpath");

31 i‡(
öô
Ë 
GN_TRUE
;

32 
öô
=1;

33 i‡(
	`SDL_GL_LﬂdLibøry
(
	`CF_STR
(
cf_libgl
))==-1) {

34 
	`¥ötf
("U«bÀÅÿlﬂd O≥nGLÜibøry: %s\n", 
	`CF_STR
(
cf_libgl
));

35  
GN_FALSE
;

38 
pglCÀ¨Cﬁ‹
 = 
	`SDL_GL_GëProcAddªss
("glClearColor");

39 
pglCÀ¨
 = 
	`SDL_GL_GëProcAddªss
("glClear");

40 
pglE«bÀ
 = 
	`SDL_GL_GëProcAddªss
("glEnable");

41 
pglVõwp‹t
 = 
	`SDL_GL_GëProcAddªss
("glViewport");

42 
pglTexP¨amëîi
 = 
	`SDL_GL_GëProcAddªss
("glTexParameteri");

43 
pglPixñSt‹ei
 = 
	`SDL_GL_GëProcAddªss
("glPixelStorei");

44 
pglTexImage2D
 = 
	`SDL_GL_GëProcAddªss
("glTexImage2D");

45 
pglBegö
 = 
	`SDL_GL_GëProcAddªss
("glBegin");

46 
pglEnd
 = 
	`SDL_GL_GëProcAddªss
("glEnd");

47 
pglTexCo‹d2f
 = 
	`SDL_GL_GëProcAddªss
("glTexCoord2f");

48 
pglVîãx2f
 = 
	`SDL_GL_GëProcAddªss
("glVertex2f");

49 
	`SDL_GL_SëAâribuã
(
SDL_GL_DOUBLEBUFFER
, 1);

50  
GN_TRUE
;

51 
	}
}

54 
	$blôãr_›ígl_öô
()

56 
Uöt32
 
sdl_Êags
;

57 
Uöt32
 
width
 = 
visibÀ_¨ó
.
w
;

58 
Uöt32
 
height
 = 
visibÀ_¨ó
.
h
;

60 i‡(
	`lﬂd_gÕroc
(Ë=
GN_FALSE
)  GN_FALSE;

62 
sdl_Êags
 = (
fuŒs¸ìn
?
SDL_FULLSCREEN
:0)| 
SDL_DOUBLEBUF
 | 
SDL_HWSURFACE


63 | 
SDL_HWPALETTE
 | 
SDL_OPENGL
 | 
SDL_RESIZABLE
;

66 i‡((
ef„˘
[
√f„˘
].
x_øtio
!=2 ||Éf„˘[√f„˘].
y_øtio
!=2) &&

67 (
ef„˘
[
√f„˘
].
x_øtio
!=1 ||Éf„˘[√f„˘].
y_øtio
!=1) ) {

68 
	`¥ötf
("Opengl support onlyÉffect witháÑatio of 2x2 or 1x1\n");

69  
GN_FALSE
;

75 i‡(
sˇÀ
 < 2) {

76 
width
 *=
ef„˘
[
√f„˘
].
x_øtio
;

77 
height
*=
ef„˘
[
√f„˘
].
y_øtio
;

79 
width
 *
sˇÀ
;

80 
height
 *
sˇÀ
;

81 
	`¥ötf
("%d %d %d %d %d\n",
width
,
height
,
sˇÀ
,
visibÀ_¨ó
.
w
,visibÀ_¨ó.
h
);

89 
c⁄f
.
ªs_x
=
width
;

90 
c⁄f
.
ªs_y
=
height
;

92 
video_›ígl
 = 
	`SDL_SëVideoMode
(
width
, 
height
, 16, 
sdl_Êags
);

94 i‡–
video_›ígl
 =
NULL
)

95  
GN_FALSE
;

97 
	`pglCÀ¨Cﬁ‹
(0, 0, 0, 0);

98 
	`pglCÀ¨
(
GL_COLOR_BUFFER_BIT
);

100 
	`pglE«bÀ
(
GL_TEXTURE_2D
);

101 
	`pglVõwp‹t
(0, 0, 
width
, 
height
);

105 
	`pglTexP¨amëîi
(
GL_TEXTURE_2D
, 
GL_TEXTURE_MAG_FILTER
, 
GL_LINEAR
);

106 
	`pglTexP¨amëîi
(
GL_TEXTURE_2D
, 
GL_TEXTURE_MIN_FILTER
, 
GL_LINEAR
);

112 
	`pglTexP¨amëîi
(
GL_TEXTURE_2D
, 
GL_TEXTURE_WRAP_S
, 
GL_CLAMP
);

113 
	`pglTexP¨amëîi
(
GL_TEXTURE_2D
, 
GL_TEXTURE_WRAP_T
, 
GL_CLAMP
);

116 i‡(
√f„˘
 == 0)

125 #ifde‡
USE_GL2


126 
ãx_›ígl

	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 512, 256, 16, 0xF800, 0x7E0, 0x1F, 0);

128 
	`pglPixñSt‹ei
(
GL_UNPACK_ROW_LENGTH
, 352);

133 
a
 = ((256.0/()
visibÀ_¨ó
.
w
Ë- 1.0f)*
ef„˘
[
√f„˘
].
x_øtio
/2.0;

134 
b
 = ((512.0/()
visibÀ_¨ó
.
w
Ë- 1.0f)*
ef„˘
[
√f„˘
].
x_øtio
/2.0;

135 
c
 = ((()
visibÀ_¨ó
.
h
/256.0))*
ef„˘
[
√f„˘
].
y_øtio
/2.0;

136 
d
 = ((()((
visibÀ_¨ó
.
w
<<1)-512)/256.0))*
ef„˘
[
√f„˘
].
y_øtio
/2.0;

137 
s¸ìn
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 
visibÀ_¨ó
.
w
<<1, 512, 16, 0xF800, 0x7E0, 0x1F, 0);

139 #ifde‡
USE_GL2


140 
ãx_›ígl

	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 1024, 512, 16, 0xF800, 0x7E0, 0x1F, 0);

141 i‡(
visibÀ_¨ó
.
w
==320) {

142 
gÃe˘ef
.
x
=0;

143 
gÃe˘ef
.
y
=0;

144 
gÃe˘ef
.
w
=320*2;

145 
gÃe˘ef
.
h
=224*2;

147 
gÃe˘ef
.
x
=0;

148 
gÃe˘ef
.
y
=0;

149 
gÃe˘ef
.
w
=304*2;

150 
gÃe˘ef
.
h
=224*2;

153 
	`pglPixñSt‹ei
(
GL_UNPACK_ROW_LENGTH
, 
visibÀ_¨ó
.
w
<<1);

157  
GN_TRUE
;

158 
	}
}

161 
	$blôãr_›ígl_ªsize
(
w
,
h
)

163 
Uöt32
 
sdl_Êags
;

165 
sdl_Êags
 = 
SDL_DOUBLEBUF
 | 
SDL_HWSURFACE
 | 
SDL_HWPALETTE
 | 
SDL_OPENGL
 | 
SDL_RESIZABLE
;

167 
video_›ígl
 = 
	`SDL_SëVideoMode
(
w
, 
h
, 16, 
sdl_Êags
);

169 i‡–
video_›ígl
 =
NULL
)

170  
GN_FALSE
;

172 
	`pglE«bÀ
(
GL_TEXTURE_2D
);

173 
	`pglVõwp‹t
(0, 0, 
w
, 
h
);

175  
GN_TRUE
;

176 
	}
}

179 
	$blôãr_›ígl_upd©e
()

181 #i‚de‡
USE_GL2


182 
VALA
=512/()
visibÀ_¨ó
.
w
-1.0;

189 i‡(
√f„˘
 == 0) {

190 #i‚de‡
USE_GL2


192 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
buf„r
->
pixñs
 + (
visibÀ_¨ó
.
x
<<1));

193 
	`pglBegö
(
GL_QUADS
);

196 
	`pglTexCo‹d2f
(0.0f, 16.0f/256.0f);

197 
	`pglVîãx2f
 (-1.0f, 1.0f);

199 
	`pglTexCo‹d2f
(1.0f, 16.0f/256.0f);

200 
	`pglVîãx2f
 (
VALA
, 1.0f);

202 
	`pglTexCo‹d2f
(1.0f, 1.0f-16.0f/256.0f);

203 
	`pglVîãx2f
 (
VALA
, -1.0f);

205 
	`pglTexCo‹d2f
(0.0f, 1.0f-16.0f/256.0f);

206 
	`pglVîãx2f
 (-1.0f, -1.0f);

207 
	`pglEnd
();

209 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 64, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
buf„r
->
pixñs
 + 512+ (
visibÀ_¨ó
.
x
<<1));

210 
	`pglBegö
(
GL_QUADS
);

211 
	`pglTexCo‹d2f
(0.0f, 16.0f/256.0f);

212 
	`pglVîãx2f
 (
VALA
, 1.0f);

214 
	`pglTexCo‹d2f
(1.0, 16.0f/256.0f);

215 
	`pglVîãx2f
 (1.0f, 1.0f);

217 
	`pglTexCo‹d2f
(1.0, 1.0f-16.0f/256.0f);

218 
	`pglVîãx2f
 (1.0f, -1.0f);

220 
	`pglTexCo‹d2f
(0.0f, 1.0f-16.0f/256.0f);

221 
	`pglVîãx2f
 (
VALA
, -1.0f);

222 
	`pglEnd
();

225 
	`SDL_BlôSurÁ˚
(
buf„r
, &
visibÀ_¨ó
, 
ãx_›ígl
, 
NULL
);

226 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 512, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
ãx_›ígl
->
pixñs
);

228 
	`pglBegö
(
GL_QUADS
);

229 
	`pglTexCo‹d2f
(0.0f, 0.0f);

230 
	`pglVîãx2f
 (-1.0f, 1.0f);

232 
	`pglTexCo‹d2f
(()
visibÀ_¨ó
.
w
/512.0f, 0.0f);

233 
	`pglVîãx2f
 (1.0f, 1.0f);

235 
	`pglTexCo‹d2f
(()
visibÀ_¨ó
.
w
/512.0f, 1.0f-32.0f/256.0f);

236 
	`pglVîãx2f
 (1.0f, -1.0f);

238 
	`pglTexCo‹d2f
(0.0f, 1.0f-32.0f/256.0f);

239 
	`pglVîãx2f
 (-1.0f, -1.0f);

240 
	`pglEnd
();

247 #i‚de‡
USE_GL2


248 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 );

249 
	`pglBegö
(
GL_QUADS
);

250 
	`pglTexCo‹d2f
(0.0f, 0.0f);

251 
	`pglVîãx2f
 (-1.0f, 1.0f);

253 
	`pglTexCo‹d2f
(1.0f, 0.0f);

254 
	`pglVîãx2f
 (
a
, 1.0f);

256 
	`pglTexCo‹d2f
(1.0f, 
c
);

257 
	`pglVîãx2f
 (
a
, 0.0f);

259 
	`pglTexCo‹d2f
(0.0f, 
c
);

260 
	`pglVîãx2f
 (-1.0f, 0.0f);

261 
	`pglEnd
();

263 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 + 512 );

264 
	`pglBegö
(
GL_QUADS
);

265 
	`pglTexCo‹d2f
(0.0f, 0.0f);

266 
	`pglVîãx2f
 (
a
, 1.0f);

268 
	`pglTexCo‹d2f
(1.0f, 0.0f);

269 
	`pglVîãx2f
 (
b
, 1.0f);

271 
	`pglTexCo‹d2f
(1.0f, 
c
);

272 
	`pglVîãx2f
 (
b
, 0.0f);

274 
	`pglTexCo‹d2f
(0.0f, 
c
);

275 
	`pglVîãx2f
 (
a
, 0.0f);

276 
	`pglEnd
();

278 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 + 1024 );

279 
	`pglBegö
(
GL_QUADS
);

280 
	`pglTexCo‹d2f
(0.0f, 0.0f);

281 
	`pglVîãx2f
 (
b
, 1.0f);

283 
	`pglTexCo‹d2f
(
d
, 0.0f);

284 
	`pglVîãx2f
 (1.0f, 1.0f);

286 
	`pglTexCo‹d2f
(
d
, 
c
);

287 
	`pglVîãx2f
 (1.0f, 0.0f);

289 
	`pglTexCo‹d2f
(0.0f, 
c
);

290 
	`pglVîãx2f
 (
b
, 0.0f);

291 
	`pglEnd
();

293 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 + (
visibÀ_¨ó
.
w
<<2) * 224 );

294 
	`pglBegö
(
GL_QUADS
);

295 
	`pglTexCo‹d2f
(0.0f, 0.0f);

296 
	`pglVîãx2f
 (-1.0f, 0.0f);

298 
	`pglTexCo‹d2f
(1.0f, 0.0f);

299 
	`pglVîãx2f
 (
a
, 0.0f);

301 
	`pglTexCo‹d2f
(1.0f, 
c
);

302 
	`pglVîãx2f
 (
a
, -1.0f);

304 
	`pglTexCo‹d2f
(0.0f, 
c
);

305 
	`pglVîãx2f
 (-1.0f, -1.0f);

306 
	`pglEnd
();

308 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 + (
visibÀ_¨ó
.
w
<<2) * 224 + 512 );

309 
	`pglBegö
(
GL_QUADS
);

310 
	`pglTexCo‹d2f
(0.0f, 0.0f);

311 
	`pglVîãx2f
 (
a
, 0.0f);

313 
	`pglTexCo‹d2f
(1.0f, 0.0f);

314 
	`pglVîãx2f
 (
b
, 0.0f);

316 
	`pglTexCo‹d2f
(1.0f, 
c
);

317 
	`pglVîãx2f
 (
b
, -1.0f);

319 
	`pglTexCo‹d2f
(0.0f, 
c
);

320 
	`pglVîãx2f
 (
a
, -1.0f);

321 
	`pglEnd
();

323 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 256, 256, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
s¸ìn
->
pixñs
 + (
visibÀ_¨ó
.
w
<<2) * 224 + 1024 );

324 
	`pglBegö
(
GL_QUADS
);

325 
	`pglTexCo‹d2f
(0.0f, 0.0f);

326 
	`pglVîãx2f
 (
b
, 0.0f);

328 
	`pglTexCo‹d2f
(
d
, 0.0f);

329 
	`pglVîãx2f
 (1.0f, 0.0f);

331 
	`pglTexCo‹d2f
(
d
, 
c
);

332 
	`pglVîãx2f
 (1.0f, -1.0f);

334 
	`pglTexCo‹d2f
(0.0f, 
c
);

335 
	`pglVîãx2f
 (
b
, -1.0f);

336 
	`pglEnd
();

338 
	`SDL_BlôSurÁ˚
(
s¸ìn
, &
gÃe˘ef
, 
ãx_›ígl
, 
NULL
);

339 
	`pglTexImage2D
(
GL_TEXTURE_2D
, 0, 3, 1024, 512, 0, 
GL_RGB
, 
GL_UNSIGNED_SHORT_5_6_5
, 
ãx_›ígl
->
pixñs
);

341 
	`pglBegö
(
GL_QUADS
);

342 
	`pglTexCo‹d2f
(0.0f, 0.0f);

343 
	`pglVîãx2f
 (-1.0f, 1.0f);

345 
	`pglTexCo‹d2f
(()
visibÀ_¨ó
.
w
*2/1024.0f, 0.0f);

346 
	`pglVîãx2f
 (1.0f, 1.0f);

348 
	`pglTexCo‹d2f
(()
visibÀ_¨ó
.
w
*2/1024.0f, 448.0f/512.0f);

349 
	`pglVîãx2f
 (1.0f, -1.0f);

351 
	`pglTexCo‹d2f
(0.0f, 448.0f/512.0f);

352 
	`pglVîãx2f
 (-1.0f, -1.0f);

353 
	`pglEnd
();

357 
	`SDL_GL_Sw≠Buf„rs
();

358 
	}
}

361 
	$blôãr_›ígl_˛o£
()

365 
	}
}

367 
	$blôãr_›ígl_fuŒs¸ìn
() {

369 
	`SDL_WM_ToggÀFuŒS¸ìn
(
video_›ígl
);

370 
	`pglE«bÀ
(
GL_TEXTURE_2D
);

371 
	`pglVõwp‹t
(0, 0, 
c⁄f
.
ªs_x
, c⁄f.
ªs_y
);

375 
	}
}

	@src/blitter/overlay.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~"SDL.h
"

7 
	~"../emu.h
"

8 
	~"../s¸ìn.h
"

9 
	~"../video.h
"

10 
	~"../c⁄f.h
"

11 
	~"../gnutû.h
"

13 
SDL_Re˘
 
	gov_ª˘
;

14 
SDL_Ovîœy
 *
	govîœy
;

18 
	$blôãr_ovîœy_öô
()

20 
Uöt32
 
width
 = 
visibÀ_¨ó
.
w
;

21 
Uöt32
 
height
 = 
visibÀ_¨ó
.
h
;

22 
Uöt32
 
sdl_Êags
 = (
fuŒs¸ìn
?
SDL_FULLSCREEN
:0)|
SDL_HWSURFACE
|
SDL_RESIZABLE
;

23 
Uöt32
 
i
;

25 
ovîœy
=
NULL
;

28 i‡(
√f„˘
 != 0) {

29 
	`¥ötf
("WARNING: Overlay doesÇot supportÉffect.\n");

30  
GN_FALSE
;

35 i‡(
sˇÀ
<2) scale=2;

36 
width
 *
sˇÀ
;

37 
height
 *
sˇÀ
;

38 
c⁄f
.
ªs_x
 = 
width
;

39 
c⁄f
.
ªs_y
 = 
height
;

42 
s¸ìn
 = 
	`SDL_SëVideoMode
(
width
, 
height
, 0, 
sdl_Êags
);

44 
ovîœy
 = 
	`SDL_Cª©eYUVOvîœy
(
visibÀ_¨ó
.
w
*2,visibÀ_¨ó.
h
*2,
SDL_YV12_OVERLAY
,
s¸ìn
);

46 
i
=0;i<
ovîœy
->
pôches
[1]*ovîœy->
h
/2;i++) {

47 
ovîœy
->
pixñs
[1][
i
]=128;

48 
ovîœy
->
pixñs
[2][
i
]=128;

51 
	`öô_rgb2yuv_èbÀ
();

53 
ov_ª˘
.
x
=0;

54 
ov_ª˘
.
y
=0;

55 
ov_ª˘
.
w
=
width
;

56 
ov_ª˘
.
h
=
height
;

57  
GN_TRUE
;

58 
	}
}

61 
	$blôãr_ovîœy_ªsize
(
w
,
h
)

63 
Uöt32
 
sdl_Êags
 = 
SDL_HWSURFACE
|
SDL_RESIZABLE
;

64 
s¸ìn
 = 
	`SDL_SëVideoMode
(
w
, 
h
, 16, 
sdl_Êags
);

65 
ov_ª˘
.
x
=0;

66 
ov_ª˘
.
y
=0;

67 
ov_ª˘
.
w
=w;

68 
ov_ª˘
.
h
=h;

69  
GN_TRUE
;

70 
	}
}

73 
	$blôãr_ovîœy_upd©e
()

75 
x
,
y
;

76 
Uöt16
 *
buf
=(Uöt16*Ë
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + visibÀ_¨ó.
y
*(buf„r->
pôch
>>1);

77 
Uöt16
 *
bufy
=(Uöt16 *)
ovîœy
->
pixñs
[0];

78 
Uöt16
 *
nbufy
=(Uöt16 *)
ovîœy
->
pixñs
[0]+(ovîœy->
pôches
[0]>>1);

79 
Uöt8
 *
bufu
=(Uöt8 *)
ovîœy
->
pixñs
[1];

80 
Uöt8
 *
bufv
=(Uöt8 *)
ovîœy
->
pixñs
[2];

81 
y
=0;y<
visibÀ_¨ó
.
h
;y++) {

82 
x
=0;x<
visibÀ_¨ó
.
w
;x++) {

83 
bufy
[
x
]=
rgb2yuv
[
buf
[x]].
y
;

84 
nbufy
[
x
]=
rgb2yuv
[
buf
[x]].
y
;

85 
bufu
[
x
]=
rgb2yuv
[
buf
[x]].
u
;

86 
bufv
[
x
]=
rgb2yuv
[
buf
[x]].
v
;

88 
bufy
+=(
ovîœy
->
pôches
[0]);

89 
nbufy
+=(
ovîœy
->
pôches
[0]);

90 
bufu
+=(
ovîœy
->
pôches
[1]);

91 
bufv
+=(
ovîœy
->
pôches
[2]);

92 
buf
+=(
buf„r
->
pôch
>>1);

94 
	`SDL_Di•œyYUVOvîœy
(
ovîœy
,&
ov_ª˘
);

95 
	}
}

98 
	$blôãr_ovîœy_˛o£
() {

99 i‡(
ovîœy
Ë
	`SDL_FªeYUVOvîœy
(overlay);

100 
sˇÀ
=
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("scale"));

101 
	}
}

104 
	$blôãr_ovîœy_fuŒs¸ìn
() {

105 
	`SDL_WM_ToggÀFuŒS¸ìn
(
s¸ìn
);

106 
	}
}

	@src/blitter/soft.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~"SDL.h
"

7 
	~"../emu.h
"

8 
	~"../s¸ìn.h
"

9 
	~"../video.h
"

10 
	~"../ef„˘.h
"

11 
	~"../c⁄f.h
"

12 
	~"../gnutû.h
"

13 #ifde‡
GP2X


14 
	~"../gp2x.h
"

16 
	#SC_STATUS
 0x1802>>1

	)

17 
	#SC_DISP_FIELD
 (1<<8)

	)

23 #ifde‡
DEVKIT8000


24 
SDL_Re˘
 
	gs¸ìn_ª˘
 = { 0, 0, 304, 240};

26 
SDL_Re˘
 
	gs¸ìn_ª˘
 = { 0, 0, 304, 224};

29 
	gvsync
;

33 
	$blôãr_so·_öô
()

35 
Uöt32
 
width
 = 
visibÀ_¨ó
.
w
;

36 
Uöt32
 
height
 = 
visibÀ_¨ó
.
h
;

37 #ifde‡
GP2X


38 
Uöt32
 
s¸ìn_w
;

39 
hw_surÁ˚
=
SDL_HWSURFACE
 ;

40 *
tvoff£t
 = 
	`CF_ARRAY
(
	`cf_gë_ôem_by_«me
("tv_offset"));

44 
hw_surÁ˚
=(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("hwsurÁ˚"))?
SDL_HWSURFACE
:
SDL_SWSURFACE
);

47 #ifde‡
DEVKIT8000


48 
Uöt32
 
sdl_Êags
 = 
hw_surÁ˚
|(
fuŒs¸ìn
?
SDL_FULLSCREEN
:0)|
SDL_DOUBLEBUF
;

50 
s¸ìn_ª˘
.
w
=
visibÀ_¨ó
.w;

51 
s¸ìn_ª˘
.
h
=240;

52 
height
=240;

54 
Uöt32
 
sdl_Êags
 = 
hw_surÁ˚
 | (
fuŒs¸ìn
 ? 
SDL_FULLSCREEN
 : 0);

56 
vsync
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"));

57 
sdl_Êags
 |(
vsync
?
SDL_DOUBLEBUF
:0);

59 i‡(
vsync
) {

60 
height
=240;

61 
s¸ìn_ª˘
.
y
 = 8;

64 
height
=
visibÀ_¨ó
.
h
;

65 
s¸ìn_ª˘
.
y
 = 0;

66 
ys¸ì≈addög
=0;

69 
s¸ìn_ª˘
.
w
=
visibÀ_¨ó
.w;

70 
s¸ìn_ª˘
.
h
=
visibÀ_¨ó
.h;

74 i‡(
√f„˘
!=0Ë
sˇÀ
 =1;

75 i‡(
sˇÀ
 == 1) {

76 
width
 *=
ef„˘
[
√f„˘
].
x_øtio
;

77 
height
*=
ef„˘
[
√f„˘
].
y_øtio
;

79 i‡(
sˇÀ
 > 3) scale=3;

80 
width
 *=
sˇÀ
;

81 
height
 *=
sˇÀ
;

84 #ifde‡
PANDORA


86 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("wide"))) {

87 
	`£ãnv
("SDL_OMAP_LAYER_SIZE","800x480",1);

89 
	`£ãnv
("SDL_OMAP_LAYER_SIZE","640x480",1);

94 #ifde‡
GP2X


99 i‡((
s¸ìn_w
=
	`gp2x_is_tvout_⁄
())==0) {

100 
s¸ìn
 = 
	`SDL_SëVideoMode
(
width
, 
height
, 16,

101 
sdl_Êags
|

102 (
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"))?
SDL_DOUBLEBUF
:0));

104 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"))) {

105 
	`£t_LCD_cu°om_øã
(
LCDR_60
);

108 i‡(
width
!=320) {

110 
	`SDL_GP2X_MöiDi•œy
(8,8);

113 
	`SDL_GP2X_MöiDi•œy
(0,8);

116 i‡(
s¸ìn_w
==240)

117 
s¸ìn
 = 
	`SDL_SëVideoMode
(360, 240, 16,

118 
sdl_Êags
|

119 (
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"))?
SDL_DOUBLEBUF
:0));

121 
s¸ìn
 = 
	`SDL_SëVideoMode
(360, 288, 16,

122 
sdl_Êags
|

123 (
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"))?
SDL_DOUBLEBUF
:0));

124 i‡(
width
!=320) {

125 
s¸ìn_ª˘
.
x
=8;

127 
s¸ìn_ª˘
.
y
=8;

129 
s¸ìn_ª˘
.
y
=(sig√d)s¸ìn_ª˘.y+
tvoff£t
[1];

130 
s¸ìn_ª˘
.
x
=(sig√d)s¸ìn_ª˘.x+
tvoff£t
[0];

131 i‡(
s¸ìn_ª˘
.
x
<0Ë{
visibÀ_¨ó
.x-=screen_rect.x;screen_rect.x=0;}

132 i‡(
s¸ìn_ª˘
.
y
<0Ë{
visibÀ_¨ó
.y-=screen_rect.y;screen_rect.y=0;}

137 
s¸ìn
 = 
	`SDL_SëVideoMode
(
width
, 480, 16, 
sdl_Êags
);

140 i‡(!
s¸ìn
Ë 
GN_FALSE
;

141 i‡(
vsync
Ë
ys¸ì≈addög
 = 
s¸ìn_ª˘
.
y
 * 
s¸ìn
->
pôch
;

144  
GN_TRUE
;

145 
	}
}

148 
	$upd©e_doubÀ
()

150 
Uöt16
 *
§c
, *
d°
;

151 
Uöt32
 
s
, 
d
;

152 
Uöt8
 
w
, 
h
;

154 
§c
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + (buf„r->
w
 << 4);

156 
d°
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

158 
h
 = 
visibÀ_¨ó
.h; h > 0; h--)

160 
w
 = 
visibÀ_¨ó
.w>>1; w > 0; w--)

162 
s
 = *(
Uöt32
 *)
§c
;

163 #ifde‡
WORDS_BIGENDIAN


164 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

165 *(
Uöt32
 *)(
d°
Ë
d
;

166 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)Ë
d
;

168 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

169 *(
Uöt32
 *)(
d°
+2Ë
d
;

170 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)+2Ë
d
;

172 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF) << 16);

173 *(
Uöt32
 *)(
d°
Ë
d
;

174 *(
Uöt32
 *Ë(
d°
 + (
visibÀ_¨ó
.
w
 << 1)Ë
d
;

176 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

177 *(
Uöt32
 *)(
d°
+2Ë
d
;

178 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)+2Ë
d
;

182 
d°
 += 4;

183 
§c
 += 2;

186 
§c
 +(
visibÀ_¨ó
.
x
<<1);

187 
d°
 +(
visibÀ_¨ó
.
w
<<1);

190 
	}
}

193 
	$upd©e_åùÀ
()

195 
Uöt16
 *
§c
, *
d°
;

196 
Uöt32
 
s
, 
d
;

197 
Uöt8
 
w
, 
h
;

199 
§c
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + (buf„r->
w
 << 4);

200 
d°
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

202 
h
 = 
visibÀ_¨ó
.h; h > 0; h--)

204 
w
 = 
visibÀ_¨ó
.w>>1; w > 0; w--)

206 
s
 = *(
Uöt32
 *)
§c
;

207 #ifde‡
WORDS_BIGENDIAN


208 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

209 *(
Uöt32
 *)(
d°
Ë
d
;

210 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)Ë
d
;

211 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)Ë
d
;

213 *(
Uöt32
 *)(
d°
+2Ë
s
;

214 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)+2Ë
s
;

215 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)+2Ë
s
;

217 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

218 *(
Uöt32
 *)(
d°
+4Ë
d
;

219 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)+4Ë
d
;

220 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)+4Ë
d
;

223 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

224 *(
Uöt32
 *)(
d°
+4Ë
d
;

225 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)+4Ë
d
;

226 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)+4Ë
d
;

228 *(
Uöt32
 *)(
d°
+2Ë
s
;

229 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)+2Ë
s
;

230 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)+2Ë
s
;

232 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

233 *(
Uöt32
 *)(
d°
Ë
d
;

234 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*3)Ë
d
;

235 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
*6)Ë
d
;

237 
d°
 += 6;

238 
§c
 += 2;

240 
§c
 +(
visibÀ_¨ó
.
x
<<1);

241 
d°
 +(
visibÀ_¨ó
.
w
*6);

243 
	}
}

244 #ifde‡
GP2X


245 
	$thªaded_blô
(*
buf
)

247 
SDL_SurÁ˚
 *
b
=(SDL_SurÁ˚*)
buf
;

248 
	`SDL_BlôSurÁ˚
(
b
, &
visibÀ_¨ó
, 
s¸ìn
, &
s¸ìn_ª˘
);

249 
	`SDL_Flù
(
s¸ìn
);

251 
	}
}

254 
	$blôãr_so·_upd©e
()

256 #ifde‡
GP2X


257 
	`SDL_BlôSurÁ˚
(
buf„r
, &
visibÀ_¨ó
, 
s¸ìn
, &
s¸ìn_ª˘
);

258 
	`SDL_Flù
(
s¸ìn
);

260 #ifde‡
PANDORA


261 i‡(
√f„˘
 == 0 ||Çeffect == 1) {

263 i‡(
√f„˘
 == 0) {

265 
sˇÀ
) {

266 2: 
	`upd©e_doubÀ
(); ;

267 3: 
	`upd©e_åùÀ
(); ;

271 
s¸ìn_ª˘
.
h
 = 480;

272 
	`SDL_So·Såëch
(
buf„r
, &
visibÀ_¨ó
, 
s¸ìn
, &
s¸ìn_ª˘
);

274 if(
	`SDL_MUSTLOCK
(
s¸ìn
)Ë
	`SDL_LockSurÁ˚
(screen);

275 
x
, 
y
;

276 
sw
 = 
visibÀ_¨ó
.
w
 >> 1;

277 
sh
 = 
visibÀ_¨ó
.
h
;

278 
sx
 = 
visibÀ_¨ó
.
x
 >> 1;

279 
sy
 = ((
visibÀ_¨ó
.
y
 >> 1) * (352 >> 1));

280 
uöt32_t
 *
s
 = ((uöt32_t*)
buf„r
->
pixñs
Ë+ 
sx
 + 
sy
;

281 
uöt32_t
 *
d
 = (uöt32_t*)
s¸ìn
->
pixñs
;

283 
y
=0; y<240; y++){

284 
x
=0; x<
sw
; x++){

285 *
d
++ = *
s
++;

287 
s
+= ((352 - 320) >> 1);

288 
d
+= 160;

290 if(
	`SDL_MUSTLOCK
(
s¸ìn
)Ë
	`SDL_U∆ockSurÁ˚
(screen);

296 #ifde‡
DEVKIT8000


297 
	`SDL_Flù
(
s¸ìn
);

299 i‡(
vsync
)

300 
	`SDL_Flù
(
s¸ìn
);

302 
	`SDL_Upd©eRe˘
(
s¸ìn
, 0, 0, 0, 0);

307 
	}
}

310 
	$blôãr_so·_˛o£
()

313 
	}
}

316 
	$blôãr_so·_fuŒs¸ìn
() {

317 
	`SDL_WM_ToggÀFuŒS¸ìn
(
s¸ìn
);

318 
	}
}

	@src/conf.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

24 
	~<°dlib.h
>

25 
	~<˘y≥.h
>

26 
	~<°rög.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<sys/°©.h
>

29 
	~<uni°d.h
>

30 
	~<dúít.h
>

32 #ifde‡
HAVE_GETOPT_LONG


33 
	~<gë›t.h
>

35 
	~"gë›t.h
"

38 
	~<zlib.h
>

39 
	~"unzù.h
"

40 
	~"SDL.h
"

41 
	~"c⁄f.h
"

42 
	~"emu.h
"

43 
	~"mem‹y.h
"

44 
	~"gnutû.h
"

60 
CONF_ITEM
 **
	mc⁄f
;

61 
	msize
, 
	mnb_ôem
;

62 } 
	gcf_hash
[128];

65 #ifde‡
GP2X


66 
	gdeÁu…_tvoff£t
[] = {0, 0};

69 #i‡
deföed
(
GP2X
Ë|| deföed(
WIZ
)

70 * 
	gdeÁu…_p1c⁄åﬁ
 = "UP=J0B0,DOWN=J0B4,LEFT=J0B2,RIGHT=J0B6,A=J0B14,"

72 * 
	gdeÁu…_p2c⁄åﬁ
 = "";

73 #ñi‡
deföed
(
PANDORA
)

74 * 
	gdeÁu…_p1c⁄åﬁ
 = "A=K281,B=K279,C=K278,D=K280,START=K308,COIN=K306,"

76 * 
	gdeÁu…_p2c⁄åﬁ
 = "";

77 #ñi‡
deföed
 (
DINGUX
)

78 * 
	gdeÁu…_p1c⁄åﬁ
 = "A=K308,B=K306,C=K304,D=K32,START=K13,COIN=K9,"

80 * 
	gdeÁu…_p2c⁄åﬁ
 = "";

81 #ñi‡
deföed
 (
WII
)

82 *
	gdeÁu…_p1c⁄åﬁ
 = "A=J0B9,B=J0B10,C=J0B11,D=J0B12,START=J0B18,COIN=J0B17"

84 *
	gdeÁu…_p2c⁄åﬁ
 = "....";

87 * 
	gdeÁu…_p1c⁄åﬁ
 = "A=K119,B=K120,C=K113,D=K115,START=K38,COIN=K34,"

89 * 
	gdeÁu…_p2c⁄åﬁ
 = "";

92 
	gdeÁu…_p1hŸkey0
[] = {0, 0, 0, 0};

93 
	gdeÁu…_p1hŸkey1
[] = {0, 0, 0, 0};

94 
	gdeÁu…_p1hŸkey2
[] = {0, 0, 0, 0};

95 
	gdeÁu…_p1hŸkey3
[] = {0, 0, 0, 0};

96 
	gdeÁu…_p2hŸkey0
[] = {0, 0, 0, 0};

97 
	gdeÁu…_p2hŸkey1
[] = {0, 0, 0, 0};

98 
	gdeÁu…_p2hŸkey2
[] = {0, 0, 0, 0};

99 
	gdeÁu…_p2hŸkey3
[] = {0, 0, 0, 0};

101 
	$cf_ˇche_c⁄f
() {

102 *
cou¡ry
;

103 *
sy°em
;

106 
c⁄f
.
sound
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sound"));

107 
c⁄f
.
vsync
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"));

108 
c⁄f
.
ßm∂e_øã
 = 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("samplerate"));

109 
c⁄f
.
debug
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("debug"));

110 
c⁄f
.
ø°î
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("raster"));

111 
c⁄f
.
∑l
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("pal"));

113 
c⁄f
.
auto‰ameskù
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("autoframeskip"));

114 
c⁄f
.
show_Âs
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("showfps"));

115 
c⁄f
.
¶ìp_idÀ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sleepidle"));

116 
c⁄f
.
s¸ìn320
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("screen320"));

117 #ifde‡
GP2X


118 
c⁄f
.
accuøã940
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("940sync"));

120 
cou¡ry
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("country"));

121 
sy°em
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("system"));

122 i‡(!
	`°rcmp
(
sy°em
, "unibios")) {

123 
c⁄f
.
sy°em
 = 
SYS_UNIBIOS
;

125 i‡(!
	`°rcmp
(
sy°em
, "home")) {

126 
c⁄f
.
sy°em
 = 
SYS_HOME
;

128 
c⁄f
.
sy°em
 = 
SYS_ARCADE
;

131 i‡(!
	`°rcmp
(
cou¡ry
, "japan")) {

132 
c⁄f
.
cou¡ry
 = 
CTY_JAPAN
;

133 } i‡(!
	`°rcmp
(
cou¡ry
, "usa")) {

134 
c⁄f
.
cou¡ry
 = 
CTY_USA
;

135 } i‡(!
	`°rcmp
(
cou¡ry
, "asia")) {

136 
c⁄f
.
cou¡ry
 = 
CTY_ASIA
;

138 
c⁄f
.
cou¡ry
 = 
CTY_EUROPE
;

140 
	}
}

142 
	$ªad_¨øy
(*
èb
, *
vÆ
, 
size
) {

143 
i
 = 0;

144 *
v
;

146 
v
 = 
	`°πok
(
vÆ
, ",");

148 
v
 !
NULL
 && 
i
 < 
size
) {

149 
èb
[
i
] = 
	`©oi
(
v
);

150 
v
 = 
	`°πok
(
NULL
, ",");

151 
i
++;

153 
	}
}

155 **
	$ªad_°r_¨øy
(*
vÆ
, *
size
) {

156 *
v
;

157 
nb_ñem
 = 1;

158 
i
 = 0;

159 **
èb
;

160 
vÆ
[
i
] != 0) {

161 i‡(
vÆ
[
i
] =','Ë
nb_ñem
++;

162 
i
++;

164 
	`¥ötf
("%†:NBÉÀm %d\n", 
vÆ
, 
nb_ñem
);

165 
èb
 = 
	`mÆloc
(
nb_ñem
 *  (*));

166 i‡(!
èb
Ë 
NULL
;

168 
v
 = 
	`°πok
(
vÆ
, ",");

169 
	`¥ötf
("V1=%s\n", 
v
);

170 
i
 = 0; i < 
nb_ñem
; i++) {

171 
èb
[
i
] = 
	`°rdup
(
v
);

172 
v
 = 
	`°πok
(
NULL
, ",");

173 
	`¥ötf
("V%d=%s\n", 
i
, 
v
);

175 *
size
 = 
nb_ñem
;

176  
èb
;

177 
	}
}

179 
CONF_ITEM
 * 
	$¸óã_c⁄f_ôem
(c⁄° *
«me
, c⁄° *
hñp
, 
sh‹t_›t
, (*
a˘i⁄
)(
CONF_ITEM
 *
£lf
)) {

180 
a
;

181 
vÆ
 = 0x100;

182 
CONF_ITEM
 *
t
 = (CONF_ITEM*Ë
	`ˇŒoc
(1,  (CONF_ITEM));

184 
a
 = 
	`tﬁowî
((Ë
«me
[0]);

186 
t
->
«me
 = 
	`°rdup
(name);

187 
t
->
hñp
 = 
	`°rdup
(help);

188 
t
->
modifõd
 = 0;

189 i‡(
sh‹t_›t
 == 0) {

190 
vÆ
++;

191 
t
->
sh‹t_›t
 = 
vÆ
;

193 
t
->
sh‹t_›t
 = short_opt;

195 i‡(
a˘i⁄
) {

196 
t
->
a˘i⁄
 =áction;

200 i‡(
cf_hash
[
a
].
size
 <cf_hash[a].
nb_ôem
) {

201 
cf_hash
[
a
].
size
 += 10;

202 
cf_hash
[
a
].
c⁄f
 = (
CONF_ITEM
**Ë
	`ªÆloc
(cf_hash[a].c⁄f, cf_hash[a].
size
 *  (CONF_ITEM*));

205 
cf_hash
[
a
].
c⁄f
[cf_hash[a].
nb_ôem
] = 
t
;

206 
cf_hash
[
a
].
nb_ôem
++;

207  
t
;

208 
	}
}

217 
	$cf_¸óã_boﬁ_ôem
(c⁄° *
«me
, c⁄° *
hñp
, 
sh‹t_›t
, 
def
) {

218 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
NULL
);

219 
t
->
ty≥
 = 
CFT_BOOLEAN
;

220 
t
->
d©a
.
dt_boﬁ
.
boﬁón
 = 
def
;

221 
t
->
d©a
.
dt_boﬁ
.
deÁu…_boﬁ
 = 
def
;

222 
	}
}

224 
	$cf_¸óã_a˘i⁄_ôem
(c⁄° *
«me
, c⁄° *
hñp
, 
sh‹t_›t
, (*
a˘i⁄
)(
CONF_ITEM
 *
£lf
)) {

225 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
a˘i⁄
);

226 
t
->
ty≥
 = 
CFT_ACTION
;

227 
	}
}

229 
	$cf_¸óã_a˘i⁄_¨g_ôem
(c⁄° *
«me
, c⁄° *
hñp
, c⁄° *
hÕ_¨g
, 
sh‹t_›t
, (*
a˘i⁄
)(
CONF_ITEM
 *
£lf
)) {

230 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
a˘i⁄
);

231 
t
->
ty≥
 = 
CFT_ACTION_ARG
;

232 
t
->
hñp_¨g
 = (*Ë
hÕ_¨g
;

233 
	}
}

235 
	$cf_¸óã_°rög_ôem
(c⁄° *
«me
, c⁄° *
hñp
, c⁄° *
hÕ_¨g
, 
sh‹t_›t
, c⁄° *
def
) {

236 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
NULL
);

237 
t
->
ty≥
 = 
CFT_STRING
;

238 
	`°r˝y
(
t
->
d©a
.
dt_°r
.
°r
, 
def
);

239 
t
->
d©a
.
dt_°r
.
deÁu…_°r
 = 
	`°rdup
(
def
);

240 
t
->
hñp_¨g
 = (*Ë
hÕ_¨g
;

241 
	}
}

243 
	$cf_¸óã_öt_ôem
(c⁄° *
«me
, c⁄° *
hñp
, c⁄° *
hÕ_¨g
, 
sh‹t_›t
, 
def
) {

244 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
NULL
);

245 
t
->
ty≥
 = 
CFT_INT
;

246 
t
->
d©a
.
dt_öt
.
vÆ
 = 
def
;

247 
t
->
d©a
.
dt_öt
.
deÁu…_vÆ
 = 
def
;

248 
t
->
hñp_¨g
 = (*Ë
hÕ_¨g
;

249 
	}
}

251 
	$cf_¸óã_¨øy_ôem
(c⁄° *
«me
, c⁄° *
hñp
, c⁄° *
hÕ_¨g
, 
sh‹t_›t
, 
size
, *
def
) {

252 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
NULL
);

253 
t
->
ty≥
 = 
CFT_ARRAY
;

254 
t
->
d©a
.
dt_¨øy
.
size
 = size;

255 
t
->
d©a
.
dt_¨øy
.
¨øy
 = (*Ë
	`ˇŒoc
(1, 
size
 *  ());

256 
	`mem˝y
(
t
->
d©a
.
dt_¨øy
.
¨øy
, 
def
, 
size
 *  ());

257 
t
->
d©a
.
dt_¨øy
.
deÁu…_¨øy
 = 
def
;

258 
t
->
hñp_¨g
 = (*Ë
hÕ_¨g
;

259 
	}
}

261 
	$cf_¸óã_°r_¨øy_ôem
(c⁄° *
«me
, c⁄° *
hñp
, c⁄° *
hÕ_¨g
, 
sh‹t_›t
, *
def
) {

262 
CONF_ITEM
 *
t
 = 
	`¸óã_c⁄f_ôem
(
«me
, 
hñp
, 
sh‹t_›t
, 
NULL
);

263 
t
->
ty≥
 = 
CFT_STR_ARRAY
;

264 
t
->
d©a
.
dt_°r_¨øy
.
size
 = 0;

265 i‡(
def
 !
NULL
)

266 
t
->
d©a
.
dt_°r_¨øy
.
¨øy
 = 
	`ªad_°r_¨øy
(
def
, &t->d©a.dt_°r_¨øy.
size
);

268 
t
->
d©a
.
dt_°r_¨øy
.
¨øy
 = 
NULL
;

269 
t
->
d©a
.
dt_°r_¨øy
.
deÁu…_¨øy
 = 
	`°rdup
(
def
);

270 
t
->
hñp_¨g
 = (*Ë
hÕ_¨g
;

271 
	}
}

273 
CONF_ITEM
* 
	$cf_gë_ôem_by_«me
(c⁄° *
«me
) {

274 
i
;

275 
a
 = 
	`tﬁowî
((Ë
«me
[0]);

277 
i
 = 0; i < 
cf_hash
[
a
].
nb_ôem
; i++) {

278 i‡(
	`°rˇ£cmp
(
cf_hash
[
a
].
c⁄f
[
i
]->
«me
,Çame) == 0)

279  
cf_hash
[
a
].
c⁄f
[
i
];

281  
NULL
;

282 
	}
}

284 
CONF_ITEM
* 
	$cf_gë_ôem_by_vÆ
(
vÆ
) {

285 
i
, 
j
;

287 
i
 = 0; i < 128; i++) {

288 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++) {

289 i‡(
cf_hash
[
i
].
c⁄f
[
j
]->
sh‹t_›t
 =
vÆ
)

290  
cf_hash
[
i
].
c⁄f
[
j
];

293  
NULL
;

294 
	}
}

296 
	$cf_ª£t_Æl_ch™ged_Êag
() {

297 
i
, 
j
;

299 
i
 = 0; i < 128; i++)

300 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++)

301 
cf_hash
[
i
].
c⁄f
[
j
]->
modifõd
=0;

302 
	}
}

304 
	$cf_ôem_has_bìn_ch™ged
(
CONF_ITEM
 * 
ôem
) {

305 i‡(
ôem
)

306 
ôem
->
modifõd
 = 1;

307 
	}
}

309 
	$cf_¥öt_hñp
() {

310 
i
, 
j
;

311 
CONF_ITEM
 *
cf
;

312 
	`¥ötf
("Usage: gngeo [OPTION]... ROMSET\n"

315 
i
 = 0; i < 128; i++) {

316 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++) {

317 
cf
 = 
cf_hash
[
i
].
c⁄f
[
j
];

318 i‡(
cf
->
sh‹t_›t
 < 128 && cf->short_opt >= 32)

319 
	`¥ötf
(" -%c, --", 
cf
->
sh‹t_›t
);

321 
	`¥ötf
(" --");

322 
cf
->
ty≥
) {

323 
CFT_ARRAY
:

324 
CFT_STR_ARRAY
:

325 
CFT_STRING
:

326 
CFT_ACTION_ARG
:

327 
CFT_INT
:

329 
buf
[22];

330 
	`¢¥ötf
(
buf
, 21, "%s=%s", 
cf
->
«me
, cf->
hñp_¨g
);

331 
	`¥ötf
("%-20†%s\n", 
buf
, 
cf
->
hñp
);

334 
CFT_BOOLEAN
:

335 
CFT_ACTION
:

336 
	`¥ötf
("%-20†%s\n", 
cf
->
«me
, cf->
hñp
);

341 
	`¥ötf
("\nAll boolean options can be disabled with --no-OPTION\n"

343 
	}
}

345 
	$¥öt_hñp
(
CONF_ITEM
 *
£lf
) {

346 
	`cf_¥öt_hñp
();

348 
	}
}

350 
	$show_Æl_game
(
CONF_ITEM
 *
£lf
) {

351 
	`¥ötf
("Not implemented yet\n");

373 
	}
}

375 
	$show_vîsi⁄
(
CONF_ITEM
 *
£lf
) {

376 
	`¥ötf
("Gngeÿ%s\n", 
VERSION
);

377 
	`¥ötf
("Copyright (C) 2001 Peponas Mathieu\n\n");

380 
	}
}

382 
	$cf_öô
() {

384 
	`cf_¸óã_a˘i⁄_ôem
("hñp", "Pröàthi†hñ∞™dÉxô", 'h', 
¥öt_hñp
);

385 
	`cf_¸óã_a˘i⁄_ôem
("li°game", "ShowáŒÅhêgamêavaûabÀ i¿thêromrc", 'l', 
show_Æl_game
);

386 
	`cf_¸óã_a˘i⁄_ôem
("vîsi⁄", "Show vîsi⁄ándÉxô", 'v', 
show_vîsi⁄
);

388 
	`cf_¸óã_boﬁ_ôem
("f‹˚pc", "F‹˚ÅhêPCÅÿ®c‹ª˘ vÆuê© sèπup", 0, 
GN_FALSE
);

389 
	`cf_¸óã_boﬁ_ôem
("dump", "Cª©ê®gnÿdum∞öÅhêcuºíàdúándÉxô", 0, 
GN_FALSE
);

391 
	`cf_¸óã_boﬁ_ôem
("öãΩﬁ©i⁄", "Mîgêthêœ° fømê™dÅhêcuºít", 'I', 
GN_FALSE
);

392 
	`cf_¸óã_boﬁ_ôem
("ø°î", "E«bÀÅhêø°î i¡îru±", 'r', 
GN_FALSE
);

393 
	`cf_¸óã_boﬁ_ôem
("sound", "E«bÀ sound", 0, 
GN_TRUE
);

394 
	`cf_¸óã_boﬁ_ôem
("showÂs", "Show FPSáà°¨tup", 0, 
GN_FALSE
);

396 
	`cf_¸óã_boﬁ_ôem
("¶ìpidÀ", "SÀï whí idÀ", 0, 
GN_FALSE
);

397 
	`cf_¸óã_boﬁ_ôem
("joy°ick", "E«bÀ joy°ick suµ‹t", 0, 
GN_TRUE
);

398 
	`cf_¸óã_boﬁ_ôem
("debug", "Sèπ wôh i∆öêdebugî", 'D', 
GN_FALSE
);

399 
	`cf_¸óã_boﬁ_ôem
("hwsurÁ˚", "U£ h¨dw¨êsurÁ˚ f‹Åhês¸ìn", 'H', 
GN_TRUE
);

400 #ifde‡
PANDORA


401 
	`cf_¸óã_boﬁ_ôem
("vsync", "Synchr⁄i£Åhêdi•œy wôh VBLANK", 0, 
GN_TRUE
);

402 
	`cf_¸óã_boﬁ_ôem
("auto‰ameskù", "E«bÀáutÿ‰ameskù", 0, 
GN_FALSE
);

403 
	`cf_¸óã_boﬁ_ôem
("fuŒs¸ìn", "Sèπ gngeÿö fuŒs¸ìn", 'f', 
GN_TRUE
);

404 
	`cf_¸óã_boﬁ_ôem
("wide", "U£áŒÅhêP™d‹®S¸ìn", 0, 
GN_FALSE
);

406 
	`cf_¸óã_boﬁ_ôem
("vsync", "Synchr⁄i£Åhêdi•œy wôh VBLANK", 0, 
GN_FALSE
);

407 
	`cf_¸óã_boﬁ_ôem
("auto‰ameskù", "E«bÀáutÿ‰ameskù", 0, 
GN_TRUE
);

408 
	`cf_¸óã_boﬁ_ôem
("fuŒs¸ìn", "Sèπ gngeÿö fuŒs¸ìn", 'f', 
GN_FALSE
);

411 
	`cf_¸óã_boﬁ_ôem
("∑l", "U£ PALÅimög (buggy)", 'P', 
GN_FALSE
);

412 
	`cf_¸óã_boﬁ_ôem
("s¸ìn320", "U£ 320x224 ouçuàs¸ì¿(ö°ód 304x224)", 0, 
GN_FALSE
);

413 
	`cf_¸óã_boﬁ_ôem
("bích", "Døw x fømes,Åhí quôánd showávîagêÂs", 0, 
GN_FALSE
);

416 
	`cf_¸óã_°rög_ôem
("country", "SetÅhe contryÅo japan,ásia, usa orÉurope", "...", 0, "europe");

417 
	`cf_¸óã_°rög_ôem
("system", "SetÅhe systemÅo home,árcade or unibios", "...", 0, "arcade");

418 #ifde‡
EMBEDDED_FS


419 
	`cf_¸óã_°rög_ôem
("rom∑th", "Tñ»gngeÿwhîêyou∏rom†¨e", "PATH", 'i', 
ROOTPATH
"./roms");

420 
	`cf_¸óã_°rög_ôem
("bio•©h", "Tñ»gngeÿwhîêyou∏√ogeÿbio†is", "PATH", 'B', 
ROOTPATH
"./roms");

421 
	`cf_¸óã_°rög_ôem
("d©afûe", "Tñ»gngeÿwhîêhi†ªssour˚ fûêis", "PATH", 'd', 
ROOTPATH
"./gngeo_data.zip");

426 
	`cf_¸óã_°rög_ôem
("rom∑th", "Tñ»gngeÿwhîêyou∏rom†¨e", "PATH", 'i', 
ROOTPATH
"./roms");

427 
	`cf_¸óã_°rög_ôem
("bio•©h", "Tñ»gngeÿwhîêyou∏√ogeÿbio†is", "PATH", 'B', 
ROOTPATH
"./roms");

428 
	`cf_¸óã_°rög_ôem
("d©afûe", "Tñ»gngeÿwhîêhi†ªssour˚ fûêis", "PATH", 'd', 
ROOTPATH
"./gngeo_data.zip");

431 
	`cf_¸óã_°rög_ôem
("libglpath", "PathÅo yourÜibGL.so", "PATH", 0, "/usr/lib/libGL.so");

432 
	`cf_¸óã_°rög_ôem
("effect", "UseÅhe specifiedÉffect (help foráÜist)", "Effect", 'e', "none");

433 
	`cf_¸óã_°rög_ôem
("blitter", "UseÅhe specified blitter (help foráÜist)", "Blitter", 'b', "soft");

434 
	`cf_¸óã_°rög_ôem
("transpack", "UseÅhe specifiedÅransparencyÖack", "Transpack", 't', "none");

435 
	`cf_¸óã_°rög_ôem
("p1c⁄åﬁ", "Pœyî1 c⁄åﬁ c⁄figuèti⁄", "...", 0, 
deÁu…_p1c⁄åﬁ
);

436 
	`cf_¸óã_°rög_ôem
("p2c⁄åﬁ", "Pœyî2 c⁄åﬁ c⁄figuèti⁄", "...", 0, 
deÁu…_p2c⁄åﬁ
);

458 
	`cf_¸óã_¨øy_ôem
("p1hŸkey0", "Pœyî1 HŸkey 0 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p1hŸkey0
);

459 
	`cf_¸óã_¨øy_ôem
("p1hŸkey1", "Pœyî1 HŸkey 1 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p1hŸkey1
);

460 
	`cf_¸óã_¨øy_ôem
("p1hŸkey2", "Pœyî1 HŸkey 2 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p1hŸkey2
);

461 
	`cf_¸óã_¨øy_ôem
("p1hŸkey3", "Pœyî1 HŸkey 3 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p1hŸkey3
);

462 
	`cf_¸óã_¨øy_ôem
("p2hŸkey0", "Pœyî2 HŸkey 0 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p2hŸkey0
);

463 
	`cf_¸óã_¨øy_ôem
("p2hŸkey1", "Pœyî2 HŸkey 1 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p2hŸkey1
);

464 
	`cf_¸óã_¨øy_ôem
("p2hŸkey2", "Pœyî2 HŸkey 2 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p2hŸkey2
);

465 
	`cf_¸óã_¨øy_ôem
("p2hŸkey3", "Pœyî2 HŸkey 3 c⁄figuøti⁄", "...", 0, 4, 
deÁu…_p2hŸkey3
);

469 
	`cf_¸óã_öt_ôem
("scale", "ScaleÅheÑesolution by X", "X", 0, 1);

470 
	`cf_¸óã_öt_ôem
("samplerate", "SetÅhe sampleÑateÅo RATE", "RATE", 0, 22050);

471 
	`cf_¸óã_öt_ôem
("68kclock", "OverclockÅhe 68k by x% (-x% for underclk)", "x", 0, 0);

472 
	`cf_¸óã_öt_ôem
("z80clock", "OverclockÅhe Z80 by x% (-x% for underclk)", "x", 0, 0);

475 #ifde‡
GP2X


476 
	`cf_¸óã_boﬁ_ôem
("ømhack", "E«bÀ CøigX'†RAMÅimög hack", 0, 
GN_FALSE
);

477 
	`cf_¸óã_boﬁ_ôem
("tvout", "E«bÀ Tvouà(NTSC)", 0, 
GN_FALSE
);

478 
	`cf_¸óã_¨øy_ôem
("tv_off£t", "Shi· TV s¸ì¿by x,yÖixñ", "x,y", 0, 2, 
deÁu…_tvoff£t
);

479 
	`cf_¸óã_boﬁ_ôem
("940sync", "Accuøã synchr⁄ißti⁄ bëwì¿thêbŸh c‹e", 0, 
GN_TRUE
);

480 
	`cf_¸óã_öt_ôem
("cpu_speed", "OverclockÅhe GP2X cpuÅo x Mhz", "x", 0, 0);

481 
	`cf_¸óã_°rög_ôem
("frontend", "Execute CMD whenÉxit. UsefullÅoÑeturnÅo Selector or Rage2x", "CMD", 0, "/usr/gp2x/gp2xmenu");

484 
	`cf_gë_ôem_by_«me
("rom∑th")->
Êags
|=
CF_SYSTEMOPT
;

485 
	`cf_gë_ôem_by_«me
("libgÕ©h")->
Êags
|=
CF_SYSTEMOPT
;

486 
	`cf_gë_ôem_by_«me
("d©afûe")->
Êags
|=
CF_SYSTEMOPT
;

487 
	}
}

490 
	$disˇrd_löe
(*
buf
) {

491 i‡(
buf
[0] == '#')

492  
GN_TRUE
;

493 i‡(
buf
[0] == '\n')

494  
GN_TRUE
;

495 i‡(
buf
[0] == 0)

496  
GN_TRUE
;

498  
GN_FALSE
;

499 
	}
}

502 *
	$my_fgës
(*
s
, 
size
, 
FILE
 *
°ªam
) {

503 
i
 = 0;

504 
ch
;

505 
i
 < 
size
 && !
	`„of
(
°ªam
)) {

506 
ch
 = 
	`fgëc
(
°ªam
);

507 i‡(
ch
 == 0x0D) ;

508 i‡(
ch
 == 0x0A) {

509 
s
[
i
] = 0;

510  
s
;

512 
s
[
i
] = 
ch
;

513 
i
++;

515  
s
;

516 
	}
}

520 
	$cf_ßve_›ti⁄
(*
fûíame
, *
›äame
,
Êags
) {

521 *
c⁄f_fûe
 = 
fûíame
;

522 *
c⁄f_fûe_d°
;

523 
FILE
 *
f
;

524 
FILE
 *
f_d°
;

525 
i
 = 0, 
j
, 
a
;

526 
buf
[512];

527 
«me
[32];

528 
vÆ
[255];

529 
CONF_ITEM
 *
cf
;

530 
CONF_ITEM
 *
toßve
;

532 i‡(!
c⁄f_fûe
) {

533 #ifde‡
EMBEDDED_FS


534 
Àn
 = 
	`°æí
("gnge‹c"Ë+ såÀn(
ROOTPATH
"conf/") + 1;

535 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

536 
	`•rötf
(
c⁄f_fûe
, 
ROOTPATH
"conf/gngeorc");

537 #ñi‡
__AMIGA__


538 
Àn
 = 
	`°æí
("gngeorc") + strlen("/PROGDIR/data/") + 1;

539 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

540 
	`•rötf
(
c⁄f_fûe
, "/PROGDIR/data/gngeorc");

542 
Àn
 = 
	`°æí
("gnge‹c"Ë+ såÀn(
	`gëív
("HOME")) + strlen("/.gngeo/") + 1;

543 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

544 
	`•rötf
(
c⁄f_fûe
, "%s/.gngeo/gnge‹c", 
	`gëív
("HOME"));

547 
c⁄f_fûe_d°
 = 
	`Æloˇ
(
	`°æí
(
c⁄f_fûe
) + 4);

548 
	`•rötf
(
c⁄f_fûe_d°
, "%s.t", 
c⁄f_fûe
);

550 i‡((
f_d°
 = 
	`f›í
(
c⁄f_fûe_d°
, "w")) == 0) {

552  
GN_FALSE
;

554 i‡(
›äame
!=
NULL
) {

555 
toßve
=
	`cf_gë_ôem_by_«me
(
›äame
);

556 i‡(
toßve
Ë
	`cf_ôem_has_bìn_ch™ged
(tosave);

557 } 
toßve
=
NULL
;

559 i‡((
f
 = 
	`f›í
(
c⁄f_fûe
, "rb"))) {

563 !
	`„of
(
f
)) {

564 
i
 = 0;

565 
	`my_fgës
(
buf
, 510, 
f
);

566 i‡(
	`disˇrd_löe
(
buf
)) {

567 
	`Ârötf
(
f_d°
, "%s\n", 
buf
);

572 
	`ssˇnf
(
buf
, "%†", 
«me
);

573 
	`°∫˝y
(
vÆ
, 
buf
 + 
	`°æí
(
«me
) + 1, 254);

575 
cf
 = 
	`cf_gë_ôem_by_«me
(
«me
);

576 i‡(
cf
 && (cf==
toßve
 ||Åoßve==
NULL
)) {

577 i‡(
cf
->
modifõd
) {

578 
cf
->
modifõd
 = 0;

579 
cf
->
ty≥
) {

580 
CFT_INT
:

581 
	`Ârötf
(
f_d°
, "%†%d\n", 
cf
->
«me
, 
	`CF_VAL
(cf));

583 
CFT_BOOLEAN
:

584 i‡(
	`CF_BOOL
(
cf
))

585 
	`Ârötf
(
f_d°
, "%†åue\n", 
cf
->
«me
);

587 
	`Ârötf
(
f_d°
, "%†Ál£\n", 
cf
->
«me
);

589 
CFT_STRING
:

590 
	`Ârötf
(
f_d°
, "%†%s\n", 
cf
->
«me
, 
	`CF_STR
(cf));

592 
CFT_ARRAY
:

593 
	`Ârötf
(
f_d°
, "%†", 
cf
->
«me
);

594 
a
 = 0;á < 
	`CF_ARRAY_SIZE
(
cf
) - 1;á++)

595 
	`Ârötf
(
f_d°
, "%d,", 
	`CF_ARRAY
(
cf
)[
a
]);

596 
	`Ârötf
(
f_d°
, "%d\n", 
	`CF_ARRAY
(
cf
)[
a
]);

598 
CFT_ACTION
:

599 
CFT_ACTION_ARG
:

601 
CFT_STR_ARRAY
:

602 
	`¥ötf
("TODO: Save CFT_STR_ARRAY\n");

606 
	`Ârötf
(
f_d°
, "%s\n", 
buf
);

609 
	`f˛o£
(
f
);

613 
i
 = 0; i < 128; i++) {

614 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++) {

615 
cf
 = 
cf_hash
[
i
].
c⁄f
[
j
];

617 i‡(
cf
->
modifõd
!=0 && (cf==
toßve
 ||Åoßve==
NULL
)) {

618 
cf
->
modifõd
=0;

619 
cf
->
ty≥
) {

620 
CFT_INT
:

621 
	`Ârötf
(
f_d°
, "%†%d\n", 
cf
->
«me
, 
	`CF_VAL
(cf));

623 
CFT_BOOLEAN
:

624 i‡(
	`CF_BOOL
(
cf
))

625 
	`Ârötf
(
f_d°
, "%†åue\n", 
cf
->
«me
);

627 
	`Ârötf
(
f_d°
, "%†Ál£\n", 
cf
->
«me
);

629 
CFT_STRING
:

630 
	`Ârötf
(
f_d°
, "%†%s\n", 
cf
->
«me
, 
	`CF_STR
(cf));

632 
CFT_ARRAY
:

633 
	`Ârötf
(
f_d°
, "%†", 
cf
->
«me
);

634 
a
 = 0;á < 
	`CF_ARRAY_SIZE
(
cf
) - 1;á++)

635 
	`Ârötf
(
f_d°
, "%d,", 
	`CF_ARRAY
(
cf
)[
a
]);

636 
	`Ârötf
(
f_d°
, "%d\n", 
	`CF_ARRAY
(
cf
)[
a
]);

638 
CFT_ACTION
:

639 
CFT_ACTION_ARG
:

642 
CFT_STR_ARRAY
:

643 
	`¥ötf
("TODO: Save CFT_STR_ARRAY\n");

649 
	`f˛o£
(
f_d°
);

651 
	`ªmove
(
c⁄f_fûe
);

652 
	`ª«me
(
c⁄f_fûe_d°
, 
c⁄f_fûe
);

654  
GN_TRUE
;

655 
	}
}

657 
	$cf_ßve_fûe
(*
fûíame
, 
Êags
) {

658  
	`cf_ßve_›ti⁄
(
fûíame
,
NULL
,
Êags
);

659 
	}
}

661 
	$cf_ª£t_to_deÁu…
() {

662 
i
,
j
;

663 
CONF_ITEM
 *
cf
;

664 
i
 = 0; i < 128; i++) {

665 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++) {

666 
cf
 = 
cf_hash
[
i
].
c⁄f
[
j
];

667 i‡(!
cf
->
modifõd
 && !(cf->
Êags
 & 
CF_SETBYCMD
Ë&&!(cf->Êag†& 
CF_SYSTEMOPT
)) {

668 
cf
->
ty≥
) {

669 
CFT_INT
:

670 
	`CF_VAL
(
cf
Ëcf->
d©a
.
dt_öt
.
deÁu…_vÆ
;

672 
CFT_BOOLEAN
:

673 
	`CF_BOOL
(
cf
Ëcf->
d©a
.
dt_boﬁ
.
deÁu…_boﬁ
;

675 
CFT_STRING
:

676 
	`°∫˝y
(
	`CF_STR
(
cf
), cf->
d©a
.
dt_°r
.
deÁu…_°r
, 254);

678 
CFT_ARRAY
:

679 
	`mem˝y
(
cf
->
d©a
.
dt_¨øy
.
¨øy
, cf->d©a.dt_¨øy.
deÁu…_¨øy
,

680 
	`CF_ARRAY_SIZE
(
cf
) *  ());

689 
	}
}

691 
	$cf_›í_fûe
(*
fûíame
) {

693 *
c⁄f_fûe
 = 
fûíame
;

694 
FILE
 *
f
;

695 
i
 = 0;

696 
buf
[512];

697 
«me
[32];

698 
vÆ
[255];

699 
CONF_ITEM
 *
cf
;

701 i‡(!
c⁄f_fûe
) {

702 #ifde‡
EMBEDDED_FS


703 
Àn
 = 
	`°æí
("gnge‹c"Ë+ såÀn(
ROOTPATH
"conf/") + 1;

704 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

705 
	`•rötf
(
c⁄f_fûe
, 
ROOTPATH
"conf/gngeorc");

706 #ñi‡
__AMIGA__


707 
Àn
 = 
	`°æí
("gngeorc") + strlen("/PROGDIR/data/") + 1;

708 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

709 
	`•rötf
(
c⁄f_fûe
, "/PROGDIR/data/gngeorc");

711 
Àn
 = 
	`°æí
("gnge‹c"Ë+ såÀn(
	`gëív
("HOME")) + strlen("/.gngeo/") + 1;

712 
c⁄f_fûe
 = (*Ë
	`Æloˇ
(
Àn
 *  ());

713 
	`•rötf
(
c⁄f_fûe
, "%s/.gngeo/gnge‹c", 
	`gëív
("HOME"));

716 i‡((
f
 = 
	`f›í
(
c⁄f_fûe
, "rb")) == 0) {

718  
GN_FALSE
;

721 !
	`„of
(
f
)) {

722 
i
 = 0;

723 
	`my_fgës
(
buf
, 510, 
f
);

724 i‡(
	`disˇrd_löe
(
buf
))

728 
	`ssˇnf
(
buf
, "%†%s", 
«me
, 
vÆ
);

734 
cf
 = 
	`cf_gë_ôem_by_«me
(
«me
);

735 i‡(
cf
 && !(cf->
Êags
 & 
CF_SETBYCMD
Ë&& (!cf->
modifõd
)) {

736 
	`¥ötf
("O±i⁄ %s\n",
cf
->
«me
);

737 
cf
->
ty≥
) {

738 
CFT_INT
:

739 
	`CF_VAL
(
cf
Ë
	`©oi
(
vÆ
);

741 
CFT_BOOLEAN
:

742 
	`CF_BOOL
(
cf
Ë(
	`°rˇ£cmp
(
vÆ
, "åue"Ë=0 ? 
GN_TRUE
 : 
GN_FALSE
);

744 
CFT_STRING
:

745 
	`°∫˝y
(
	`CF_STR
(
cf
), 
vÆ
, 254);

747 
CFT_ARRAY
:

748 
	`ªad_¨øy
(
	`CF_ARRAY
(
cf
), 
vÆ
, 
	`CF_ARRAY_SIZE
(cf));

750 
CFT_ACTION
:

751 
CFT_ACTION_ARG
:

754 
CFT_STR_ARRAY
:

755 
	`CF_STR_ARRAY
(
cf
Ë
	`ªad_°r_¨øy
(
vÆ
, &
	`CF_STR_ARRAY_SIZE
(cf));

764 
	`cf_ˇche_c⁄f
();

765  
GN_TRUE
;

766 
	}
}

769 
›ti⁄
 *
	gl⁄g›t
;

772 
	$add_l⁄g_›t_ôem
(*
«me
, 
has_¨g
, *
Êag
, 
vÆ
) {

773 
›t_size
 = 0;

774 
›t
 = 0;

776 i‡(
›t
 >
›t_size
) {

777 
›t_size
 += 10;

778 
l⁄g›t
 = 
	`ªÆloc
÷⁄g›t, (
›t_size
 + 1Ë*  (
›ti⁄
));

782 
l⁄g›t
[
›t
].
«me
 =Çame;

783 
l⁄g›t
[
›t
].
has_¨g
 = has_arg;

784 
l⁄g›t
[
›t
].
Êag
 = flag;

785 
l⁄g›t
[
›t
].
vÆ
 = val;

793 
›t
++;

794 
	}
}

796 
	g›ti⁄_ödex
 = 0;

797 
	gsh‹t›t
[255];

799 
	$cf_öô_cmd_löe
() {

800 
i
, 
j
;

801 
CONF_ITEM
 *
cf
;

802 *
sbuf
;

803 
buÊí
;

805 
	`mem£t
(
sh‹t›t
, 0, 255);

807 
i
 = 0; i < 128; i++) {

808 
j
 = 0; j < 
cf_hash
[
i
].
nb_ôem
; j++) {

809 
cf
 = 
cf_hash
[
i
].
c⁄f
[
j
];

811 i‡(
cf
->
sh‹t_›t
 <= 128) {

812 
b
[2];

813 
	`•rötf
(
b
, "%c", 
cf
->
sh‹t_›t
);

814 
	`°rˇt
(
sh‹t›t
, 
b
);

817 
cf
->
ty≥
) {

818 
CFT_ARRAY
:

819 
CFT_STR_ARRAY
:

820 
CFT_STRING
:

821 
CFT_INT
:

822 
CFT_ACTION_ARG
:

823 i‡(
cf
->
sh‹t_›t
 <128Ë
	`°rˇt
(
sh‹t›t
, ":");

824 
	`add_l⁄g_›t_ôem
(
cf
->
«me
, 1, 
NULL
, cf->
sh‹t_›t
);

826 
CFT_BOOLEAN
:

828 
	`add_l⁄g_›t_ôem
(
cf
->
«me
, 0, 
NULL
, cf->
sh‹t_›t
);

830 
buÊí
 = 
	`°æí
("no-"Ë+ såÀn(
cf
->
«me
);

831 
sbuf
 = 
	`mÆloc
(
buÊí
 + 2);

832 
	`¢¥ötf
(
sbuf
, 
buÊí
 + 1, "no-%s", 
cf
->
«me
);

834 
	`add_l⁄g_›t_ôem
(
sbuf
, 0, 
NULL
, 
cf
->
sh‹t_›t
+0x1000);

836 
CFT_ACTION
:

837 
	`add_l⁄g_›t_ôem
(
cf
->
«me
, 0, 
NULL
, cf->
sh‹t_›t
);

844 
	`add_l⁄g_›t_ôem
(0, 0, 0, 0);

846 
	}
}

848 * 
	$cf_∑r£_cmd_löe
(
¨gc
, *
¨gv
[]) {

849 
c
;

850 
CONF_ITEM
 *
cf
;

853 
›ti⁄_ödex
 = 
›töd
 = 0;

854 #ifde‡
WII


855  
NULL
;

857 (
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
sh‹t›t
, 
l⁄g›t
, &
›ti⁄_ödex
)Ë!
EOF
) {

859 
	`¥ötf
("c=%d\n",
c
);

860 
cf
 = 
	`cf_gë_ôem_by_vÆ
(
c
&0xFFF);

861 i‡(
cf
) {

862 
cf
->
Êags
 |
CF_SETBYCMD
;

863 
	`¥ötf
("Êag†%†£à⁄ cmdÜöe\n", 
cf
->
«me
);

864 
cf
->
ty≥
) {

866 
CFT_INT
:

867 
	`CF_VAL
(
cf
Ë
	`©oi
(
›èrg
);

869 
CFT_BOOLEAN
:

870 i‡(
c
 & 0x1000)

871 
	`CF_BOOL
(
cf
) = 0;

873 
	`CF_BOOL
(
cf
) = 1;

875 
CFT_STRING
:

876 
	`°r˝y
(
	`CF_STR
(
cf
), 
›èrg
);

879 
CFT_ARRAY
:

880 
	`ªad_¨øy
(
	`CF_ARRAY
(
cf
), 
›èrg
, 
	`CF_ARRAY_SIZE
(cf));

882 
CFT_ACTION_ARG
:

883 
	`°r˝y
(
	`CF_STR
(
cf
), 
›èrg
);

884 i‡(
cf
->
a˘i⁄
) {

885 
	`exô
(
cf
->
	`a˘i⁄
(cf));

888 
CFT_ACTION
:

889 i‡(
cf
->
a˘i⁄
) {

890 
	`exô
(
cf
->
	`a˘i⁄
(cf));

893 
CFT_STR_ARRAY
:

900 
	`cf_ˇche_c⁄f
();

901 i‡(
›töd
 >
¨gc
)

902  
NULL
;

904  
	`°rdup
(
¨gv
[
›töd
]);

905 
	}
}

	@src/conf.h

1 #i‚de‡
_CONF_H_


2 
	#_CONF_H_


	)

6 
	eCF_TYPE
{

7 
	mCFT_INT
=0,

8 
	mCFT_STRING
,

9 
	mCFT_BOOLEAN
,

10 
	mCFT_ARRAY
,

11 
	mCFT_ACTION
,

12 
	mCFT_ACTION_ARG
,

13 
	mCFT_STR_ARRAY
,

14 }
	tCF_TYPE
;

16 
	#CF_MODIFIED
 0x1

	)

17 
	#CF_SETBYCMD
 0x2

	)

18 
	#CF_CACHED
 0x4

	)

19 
	#CF_SYSTEMOPT
 0x8

	)

21 
	#CF_MAXSTRLEN
 255

	)

23 
	sCONF_ITEM
 {

24 *
	m«me
;

25 
	msh‹t_›t
;

26 *
	mhñp
;

27 *
	mhñp_¨g
;

28 (*
	ma˘i⁄
)(
CONF_ITEM
 *
	m£lf
);

30 
	mÊags
;

31 
	mmodifõd
;

32 
CF_TYPE
 
	mty≥
;

35 
	mvÆ
;

36 
	mdeÁu…_vÆ
;

37 }
	mdt_öt
;

39 
	mboﬁón
;

40 
	mdeÁu…_boﬁ
;

41 }
	mdt_boﬁ
;

43 
	m°r
[
CF_MAXSTRLEN
];

44 *
	mdeÁu…_°r
;

45 }
	mdt_°r
;

47 
	msize
;

48 *
	m¨øy
;

49 *
	mdeÁu…_¨øy
;

50 }
	mdt_¨øy
;

52 
	msize
;

53 **
	m¨øy
;

54 *
	mdeÁu…_¨øy
;

55 }
	mdt_°r_¨øy
;

56 }
	md©a
;

57 }
	tCONF_ITEM
;

59 
	#CF_BOOL
(
t
Ët->
d©a
.
dt_boﬁ
.
boﬁón


	)

60 
	#CF_VAL
(
t
Ët->
d©a
.
dt_öt
.
vÆ


	)

61 
	#CF_STR
(
t
Ët->
d©a
.
dt_°r
.
°r


	)

62 
	#CF_ARRAY
(
t
Ët->
d©a
.
dt_¨øy
.
¨øy


	)

63 
	#CF_ARRAY_SIZE
(
t
Ët->
d©a
.
dt_¨øy
.
size


	)

64 
	#CF_STR_ARRAY
(
t
Ët->
d©a
.
dt_°r_¨øy
.
¨øy


	)

65 
	#CF_STR_ARRAY_SIZE
(
t
Ët->
d©a
.
dt_°r_¨øy
.
size


	)

67 
CONF_ITEM
* 
cf_gë_ôem_by_«me
(c⁄° *
«me
);

68 
cf_¸óã_boﬁ_ôem
(c⁄° *
«me
,c⁄° *
hñp
,
sh‹t_›t
,
def
);

69 
cf_¸óã_a˘i⁄_ôem
(c⁄° *
«me
,c⁄° *
hñp
,
sh‹t_›t
,(*
a˘i⁄
)(
CONF_ITEM
 *
£lf
));

70 
	`cf_¸óã_a˘i⁄_¨g_ôem
(c⁄° *
«me
,c⁄° *
hñp
,c⁄° *
hÕ_¨g
,
sh‹t_›t
,(*
a˘i⁄
)(
CONF_ITEM
 *
£lf
));

71 
	`cf_¸óã_°rög_ôem
(c⁄° *
«me
,c⁄° *
hñp
,c⁄° *
hÕ_¨g
,
sh‹t_›t
,c⁄° *
def
);

72 
	`cf_¸óã_öt_ôem
(c⁄° *
«me
,c⁄° *
hñp
,c⁄° *
hÕ_¨g
,
sh‹t_›t
,
def
);

73 
	`cf_¸óã_¨øy_ôem
(c⁄° *
«me
,c⁄° *
hñp
,c⁄° *
hÕ_¨g
,
sh‹t_›t
,
size
,*
def
);

74 
	`cf_¸óã_°r_¨øy_ôem
(c⁄° *
«me
,c⁄° *
hñp
,c⁄° *
hÕ_¨g
,
sh‹t_›t
,*
def
);

75 
	`cf_öô
();

76 
	`cf_ßve_›ti⁄
(*
fûíame
, *
›äame
,
Êags
);

77 
	`cf_ßve_fûe
(*
fûíame
,
Êags
);

78 
	`cf_›í_fûe
(*
fûíame
);

79 
	`cf_öô_cmd_löe
();

80 
	`cf_gë_n⁄_›t_ödex
(
¨gc
, *
¨gv
[]);

81 * 
	`cf_∑r£_cmd_löe
(
¨gc
, *
¨gv
[]);

82 
	`cf_¥öt_hñp
();

83 
	`cf_ª£t_to_deÁu…
();

84 
	`cf_ôem_has_bìn_ch™ged
(
CONF_ITEM
 * 
ôem
);

	@src/crypt.h

30 
	#CRC32
(
c
, 
b
Ë((*(
p¸c_32_èb
+((()(cË^ (b)Ë& 0xff))Ë^ ((cË>> 8))

	)

35 
	$de¸y±_byã
(* 
pkeys
, c⁄° * 
p¸c_32_èb
)

37 
ãmp
;

41 
ãmp
 = (()(*(
pkeys
+2)) & 0xffff) | 2;

42  ()(((
ãmp
 * (temp ^ 1)) >> 8) & 0xff);

43 
	}
}

48 
	$upd©e_keys
(* 
pkeys
,c⁄° * 
p¸c_32_èb
,
c
)

50 (*(
pkeys
+0)Ë
	`CRC32
((*’keys+0)), 
c
);

51 (*(
pkeys
+1)) += (*(pkeys+0)) & 0xff;

52 (*(
pkeys
+1)) = (*(pkeys+1)) * 134775813L + 1;

54 
keyshi·
 = ()((*(
pkeys
+1)) >> 24);

55 (*(
pkeys
+2)Ë
	`CRC32
((*’keys+2)), 
keyshi·
);

57  
c
;

58 
	}
}

65 
	$öô_keys
(c⁄° * 
∑sswd
,* 
pkeys
,c⁄° * 
p¸c_32_èb
)

67 *(
pkeys
+0) = 305419896L;

68 *(
pkeys
+1) = 591751049L;

69 *(
pkeys
+2) = 878082192L;

70 *
∑sswd
 != '\0') {

71 
	`upd©e_keys
(
pkeys
,
p¸c_32_èb
,()*
∑sswd
);

72 
∑sswd
++;

74 
	}
}

76 
	#zdecode
(
pkeys
,
p¸c_32_èb
,
c
) \

77 (
	`upd©e_keys
(
pkeys
,
p¸c_32_èb
,
c
 ^
	`de¸y±_byã
’keys,p¸c_32_èb)))

	)

79 
	#zícode
(
pkeys
,
p¸c_32_èb
,
c
,
t
) \

80 (
t
=
	`de¸y±_byã
(
pkeys
,
p¸c_32_èb
), 
	`upd©e_keys
’keys,p¸c_32_èb,
c
),Å^(c))

	)

82 #ifde‡
INCLUDECRYPTINGCODE_IFCRYPTALLOWED


84 
	#RAND_HEAD_LEN
 12

	)

86 #i‚de‡
ZCR_SEED2


87 
	#ZCR_SEED2
 3141592654UL

	)

90 
	$¸y±hód
(
∑sswd
, 
buf
, 
bufSize
, 
pkeys
, 
p¸c_32_èb
, 
¸cF‹Cry±ög
)

91 c⁄° *
∑sswd
;

92 *
buf
;

93 
bufSize
;

94 * 
pkeys
;

95 c⁄° * 
p¸c_32_èb
;

96 
¸cF‹Cry±ög
;

98 
n
;

99 
t
;

100 
c
;

101 
hódî
[
RAND_HEAD_LEN
-2];

102 
ˇŒs
 = 0;

104 i‡(
bufSize
<
RAND_HEAD_LEN
)

111 i‡(++
ˇŒs
 == 1)

113 
	`§™d
(()(
	`time
(
NULL
Ë^ 
ZCR_SEED2
));

115 
	`öô_keys
(
∑sswd
, 
pkeys
, 
p¸c_32_èb
);

116 
n
 = 0;Ç < 
RAND_HEAD_LEN
-2;Ç++)

118 
c
 = (
	`ønd
() >> 7) & 0xff;

119 
hódî
[
n
] = ()
	`zícode
(
pkeys
, 
p¸c_32_èb
, 
c
, 
t
);

122 
	`öô_keys
(
∑sswd
, 
pkeys
, 
p¸c_32_èb
);

123 
n
 = 0;Ç < 
RAND_HEAD_LEN
-2;Ç++)

125 
buf
[
n
] = ()
	`zícode
(
pkeys
, 
p¸c_32_èb
, 
hódî
[n], 
t
);

127 
buf
[
n
++] = 
	`zícode
(
pkeys
, 
p¸c_32_èb
, ()(
¸cF‹Cry±ög
 >> 16Ë& 0xff, 
t
);

128 
buf
[
n
++] = 
	`zícode
(
pkeys
, 
p¸c_32_èb
, ()(
¸cF‹Cry±ög
 >> 24Ë& 0xff, 
t
);

129  
n
;

130 
	}
}

	@src/cyclone/Cyclone.h

11 #i‚de‡
__CYCLONE_H__


12 
	#__CYCLONE_H__


	)

14 #ifde‡
__˝lu•lus


18 
Cy˛⁄eVî
;

20 
	sCy˛⁄e


22 
	gd
[8];

23 
	ga
[8];

24 
	gpc
;

25 
	g§h
;

26 
	gunu£d
;

27 
	gÊags
;

28 
	gúq
;

29 
	go•
;

30 
	gxc
;

31 
	g¥ev_pc
;

32 
	gª£rved
;

33 
	g°©e_Êags
;

34 
	gcy˛es
;

35 
	gmemba£
;

36 (*
	gcheckpc
)(
	gpc
);

37 (*
	gªad8
 )(
	ga
);

38 (*
	gªad16
 )(
	ga
);

39 (*
	gªad32
 )(
	ga
);

40 (*
	gwrôe8
 )(
	ga
,
	gd
);

41 (*
	gwrôe16
)(
	ga
,
	gd
);

42 (*
	gwrôe32
)(
	ga
,
	gd
);

43 (*
	g„tch8
 )(
	ga
);

44 (*
	g„tch16
)(
	ga
);

45 (*
	g„tch32
)(
	ga
);

46 (*
	gIrqCÆlback
)(
	göt_Àvñ
);

47 (*
	gRe£tCÆlback
)();

48 (*
	gUƒecognizedCÆlback
)();

49 
	göã∫Æ
[6];

53 
Cy˛⁄eInô
();

56 
Cy˛⁄eRun
(
Cy˛⁄e
 *
pcy
);

59 
Cy˛⁄eSëSr
(
Cy˛⁄e
 *
pcy
, 
§
);

60 
Cy˛⁄eGëSr
(c⁄° 
Cy˛⁄e
 *
pcy
);

64 
Cy˛⁄eFlushIrq
(
Cy˛⁄e
 *
pcy
);

69 
Cy˛⁄ePack
(c⁄° 
Cy˛⁄e
 *
pcy
, *
ßve_buf„r
);

70 
Cy˛⁄eU≈ack
(
Cy˛⁄e
 *
pcy
, c⁄° *
ßve_buf„r
);

73 
Cy˛⁄eSëRólTAS
(
u£_ªÆ
);

81 
	#CYCLONE_INT_ACK_AUTOVECTOR
 -1

	)

86 
	#CYCLONE_INT_ACK_SPURIOUS
 -2

	)

89 #ifde‡
__˝lu•lus


	@src/cyclone_interf.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~<c⁄fig.h
>

27 #ifde‡
USE_CYCLONE


29 
	~<°dlib.h
>

31 
	~"cy˛⁄e/Cy˛⁄e.h
"

32 
	~"mem‹y.h
"

33 
	~"emu.h
"

34 
	~"°©e.h
"

35 
	~"debug.h
"

36 
	~"video.h
"

37 
	~"c⁄f.h
"

39 
Cy˛⁄e
 
	gMyCy˛⁄e
;

40 
	gtŸÆ_cy˛es
;

41 
	gtime_¶i˚
;

42 
Uöt32
 
	gcy˛⁄e_pc
;

43 
cuºít_löe
;

44 
Uöt8
 
	gßve_buf„r
[128];

46 
Uöt32
 
úq2pos_vÆue
;

47 
__ölöe__
 
	$cy˛⁄e68k_°‹e_video_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
)

52 
addr
 &= 0xFFFF;

53 
addr
) {

55 
mem‹y
.
vid
.
v±r
 = 
d©a
 & 0xffff;

64 
	`WRITE_WORD
(&
mem‹y
.
vid
.
øm
[mem‹y.vid.
v±r
 << 1], 
d©a
);

65 
mem‹y
.
vid
.
v±r
 = (mem‹y.vid.v±∏+ mem‹y.vid.
modulo
) & 0xffff;

68 
mem‹y
.
vid
.
modulo
 = (Ë
d©a
;

71 
	`wrôe_√o_c⁄åﬁ
(
d©a
);

74 
	`wrôe_úq2pos
((
mem‹y
.
vid
.
úq2pos
 & 0xffffË| ((
Uöt32
Ë
d©a
 << 16));

77 
	`wrôe_úq2pos
((
mem‹y
.
vid
.
úq2pos
 & 0xffff0000Ë| (
Uöt32
Ë
d©a
);

86 
	}
}

88 
	$¥öt_⁄e_ªg
(
Uöt32
 
r
) {

89 
	`¥ötf
("ªg=%08x\n",
r
);

90 
	}
}

92 
	$sw≠_mem‹y
(
Uöt8
 * 
mem
, 
Uöt32
 
Àngth
)

94 
i
, 
j
;

97 
i
 = 0; i < 
Àngth
; i += 2) {

98 
j
 = 
mem
[
i
];

99 
mem
[
i
] = mem[i + 1];

100 
mem
[
i
 + 1] = 
j
;

102 
	}
}

104 
	$MyCheckPc
(
pc
) {

105 
i
;

106 
pc
-=
MyCy˛⁄e
.
memba£
;

108 
pc
&=0xFFFFFF;

109 
MyCy˛⁄e
.
memba£
=-1;

115 (
pc
&0xF00000)>>20) {

117 
MyCy˛⁄e
.
memba£
=()
mem‹y
.
rom
.
˝u_m68k
.
p
;

120 
MyCy˛⁄e
.
memba£
=()(
mem‹y
.
rom
.
˝u_m68k
.
p
+
b™kaddªss
)-0x200000;

123 i‡(
pc
<=0x10FFff)

124 
MyCy˛⁄e
.
memba£
=()
mem‹y
.
øm
-0x100000;

127 i‡(
pc
<=0xc1FFff)

128 
MyCy˛⁄e
.
memba£
=()
mem‹y
.
rom
.
bios_m68k
.
p
-0xc00000;

132 i‡(
MyCy˛⁄e
.
memba£
==-1) {

133 
	`¥ötf
("ERROROROOR %08x\n",
pc
);

134 
	`exô
(1);

137  
MyCy˛⁄e
.
memba£
+
pc
;

138 
	}
}

140 
	#MEMHANDLER_READ
(
°¨t
,
íd
,
func
Ë{i‡(
a
>=°¨à&&á<ÛndË 
	`func
◊);}

	)

141 
	#MEMHANDLER_WRITE
(
°¨t
,
íd
,
func
Ë{i‡(
a
>=°¨à&&á<ÛndË{
	`func
◊,
d
);;}}

	)

143 
	$MyRód8
 (
a
) {

144 
addr
=
a
&0xFFFFF;

145 
b
=((
a
&0xF0000)>>16);

146 
a
&=0xFFFFFF;

147 (
a
&0xFF0000)>>20) {

149  (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
))&0xFF;

152 i‡(
mem‹y
.
bksw_uns¸ambÀ
)

153  
	`mem68k_„tch_bk_n‹mÆ_byã
(
a
);

154  (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + 
addr
))&0xFF;

157  (
	`READ_BYTE_ROM
(
mem‹y
.
øm
 + (
addr
&0xFFFF)))&0xFF;

160 i‡(
b
<=1Ë (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
))&0xFF;

163 i‡(
b
==0Ë 
	`mem68k_„tch_§am_byã
(
a
)&0xFF;

166 i‡(
b
==0Ë 
	`mem68k_„tch_∑l_byã
(
a
)&0xFF;

169 i‡(
b
==0xCË 
	`mem68k_„tch_video_byã
(
a
)&0xFF;

170 i‡(
b
==0Ë 
	`mem68k_„tch_˘l1_byã
(
a
)&0xFF;

171 i‡(
b
==4Ë 
	`mem68k_„tch_˘l2_byã
(
a
)&0xFF;

172 i‡(
b
==8Ë 
	`mem68k_„tch_˘l3_byã
(
a
)&0xFF;

173 i‡(
b
==2Ë 
	`mem68k_„tch_coö_byã
(
a
)&0xFF;

176 i‡(
b
==0Ë 
	`mem68k_„tch_mem¸d_byã
(
a
)&0xFF;

181 
	}
}

182 
	$MyRód16
 (
a
) {

183 
addr
=
a
&0xFFFFF;

184 
b
=((
a
&0xF0000)>>16);

186 
a
&=0xFFFFFF;

188 (
a
&0xFF0000)>>20) {

190  (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
))&0xFFFF;

193 i‡(
mem‹y
.
bksw_uns¸ambÀ
)

194  
	`mem68k_„tch_bk_n‹mÆ_w‹d
(
a
);

195  (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + 
addr
))&0xFFFF;

199  (
	`READ_WORD_ROM
(
mem‹y
.
øm
 + (
addr
&0xFFFF)))&0xFFFF;

202 i‡(
b
<=1Ë (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
))&0xFFFF;

206 i‡(
b
==0Ë 
	`mem68k_„tch_§am_w‹d
(
a
)&0xFFFF;

209 i‡(
b
==0Ë 
	`mem68k_„tch_∑l_w‹d
(
a
)&0xFFFF;

212 i‡(
b
==0xCË 
	`mem68k_„tch_video_w‹d
(
a
)&0xFFFF;

213 i‡(
b
==0Ë 
	`mem68k_„tch_˘l1_w‹d
(
a
)&0xFFFF;

214 i‡(
b
==4Ë 
	`mem68k_„tch_˘l2_w‹d
(
a
)&0xFFFF;

215 i‡(
b
==8Ë 
	`mem68k_„tch_˘l3_w‹d
(
a
)&0xFFFF;

216 i‡(
b
==2Ë 
	`mem68k_„tch_coö_w‹d
(
a
)&0xFFFF;

219 i‡(
b
==0Ë 
	`mem68k_„tch_mem¸d_w‹d
(
a
)&0xFFFF;

224 
	}
}

225 
	$MyRód32
 (
a
) {

227 
addr
=
a
&0xFFFFF;

228 
b
=((
a
&0xF0000)>>16);

229 
a
&=0xFFFFFF;

231 (
a
&0xFF0000)>>20) {

234  ((
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
))<<16) |

235 (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + (
addr
+2)));

239 i‡(
mem‹y
.
bksw_uns¸ambÀ
)

240  
	`mem68k_„tch_bk_n‹mÆ_l⁄g
(
a
);

241  ((
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + 
addr
))<<16) |

242 (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + (
addr
+2)));

246 
addr
&=0xFFFF;

247  ((
	`READ_WORD_ROM
(
mem‹y
.
øm
 + 
addr
))<<16) |

248 (
	`READ_WORD_ROM
(
mem‹y
.
øm
 + (
addr
+2)));

252 i‡(
b
<=1Ë ((
	`READ_WORD_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
))<<16) |

253 (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + (
addr
+2)));

257 i‡(
b
==0Ë 
	`mem68k_„tch_§am_l⁄g
(
a
);

260 i‡(
b
==0Ë 
	`mem68k_„tch_∑l_l⁄g
(
a
);

263 i‡(
b
==0xCË 
	`mem68k_„tch_video_l⁄g
(
a
);

264 i‡(
b
==0Ë 
	`mem68k_„tch_˘l1_l⁄g
(
a
);

265 i‡(
b
==4Ë 
	`mem68k_„tch_˘l2_l⁄g
(
a
);

266 i‡(
b
==8Ë 
	`mem68k_„tch_˘l3_l⁄g
(
a
);

267 i‡(
b
==2Ë 
	`mem68k_„tch_coö_l⁄g
(
a
);

270 i‡(
b
==0Ë 
	`mem68k_„tch_mem¸d_l⁄g
(
a
);

275 
	}
}

276 
	$MyWrôe8
 (
a
,
d
) {

277 
b
=((
a
&0xF0000)>>16);

278 
a
&=0xFFFFFF;

279 
d
&=0xFF;

280 (
a
&0xFF0000)>>20) {

282 
	`WRITE_BYTE_ROM
(
mem‹y
.
øm
 + (
a
&0xffff),
d
);

286 i‡(
b
==0xcË{
	`mem68k_°‹e_video_byã
(
a
,
d
);;}

287 i‡(
b
==8Ë{
	`mem68k_°‹e_pd4990_byã
(
a
,
d
);;}

288 i‡(
b
==2Ë{
	`mem68k_°‹e_z80_byã
(
a
,
d
);;}

289 i‡(
b
==0xAË{
	`mem68k_°‹e_£âög_byã
(
a
,
d
);;}

292 i‡(
b
==0Ë
	`mem68k_°‹e_∑l_byã
(
a
,
d
);

296 i‡(
b
==0Ë
	`mem68k_°‹e_§am_byã
(
a
,
d
);;

299 i‡(
b
==0xFË
	`mem68k_°‹e_bk_n‹mÆ_byã
(
a
,
d
);;

302 i‡(
b
==0Ë
	`mem68k_°‹e_mem¸d_byã
(
a
,
d
);;

307 if(
a
==0x300001Ë
mem‹y
.
w©chdog
=0;

310 
	}
}

311 
	$MyWrôe16
(
a
,
d
) {

312 
b
=((
a
&0xF0000)>>16);

313 
a
&=0xFFFFFF;

314 
d
&=0xFFFF;

317 (
a
&0xFF0000)>>20) {

319 
	`WRITE_WORD_ROM
(
mem‹y
.
øm
 + (
a
&0xffff),
d
);

324 i‡(
b
==0xc) {

325 
	`mem68k_°‹e_video_w‹d
(
a
,
d
);;}

326 i‡(
b
==8Ë{
	`mem68k_°‹e_pd4990_w‹d
(
a
,
d
);;}

327 i‡(
b
==2Ë{
	`mem68k_°‹e_z80_w‹d
(
a
,
d
);;}

328 i‡(
b
==0xAË{
	`mem68k_°‹e_£âög_w‹d
(
a
,
d
);;}

331 i‡(
b
==0Ë
	`mem68k_°‹e_∑l_w‹d
(
a
,
d
);;

334 i‡(
b
==0Ë
	`mem68k_°‹e_§am_w‹d
(
a
,
d
);;

337 i‡(
b
==0xFË
	`mem68k_°‹e_bk_n‹mÆ_w‹d
(
a
,
d
);;

340 i‡(
b
==0Ë
	`mem68k_°‹e_mem¸d_w‹d
(
a
,
d
);;

345 
	}
}

346 
	$MyWrôe32
(
a
,
d
) {

347 
b
=((
a
&0xF0000)>>16);

348 
a
&=0xFFFFFF;

349 
d
&=0xFFFFFFFF;

350 (
a
&0xFF0000)>>20) {

352 
	`WRITE_WORD_ROM
(
mem‹y
.
øm
 + (
a
&0xffff),
d
>>16);

353 
	`WRITE_WORD_ROM
(
mem‹y
.
øm
 + (
a
&0xffff)+2,
d
&0xFFFF);

357 i‡(
b
==0xc) {

358 
	`mem68k_°‹e_video_w‹d
(
a
,
d
>>16);

359 
	`mem68k_°‹e_video_w‹d
(
a
+2,
d
 & 0xffff);

362 i‡(
b
==8Ë{
	`mem68k_°‹e_pd4990_l⁄g
(
a
,
d
);;}

363 i‡(
b
==2Ë{
	`mem68k_°‹e_z80_l⁄g
(
a
,
d
);;}

364 i‡(
b
==0xAË{
	`mem68k_°‹e_£âög_l⁄g
(
a
,
d
);;}

367 i‡(
b
==0Ë
	`mem68k_°‹e_∑l_l⁄g
(
a
,
d
);;

370 i‡(
b
==0Ë
	`mem68k_°‹e_§am_l⁄g
(
a
,
d
);;

373 i‡(
b
==0xFË
	`mem68k_°‹e_bk_n‹mÆ_l⁄g
(
a
,
d
);;

376 i‡(
b
==0Ë
	`mem68k_°‹e_mem¸d_l⁄g
(
a
,
d
);;

381 
	}
}

384 
	$˝u_68k_mk°©e
(
gzFûe
 
gzf
,
mode
) {

385 
	`¥ötf
("Savê°©êmodê%†PC=%08x\n",(
mode
==
STREAD
?"READ":"WRITE"),
MyCy˛⁄e
.
pc
-MyCy˛⁄e.
memba£
);

386 i‡(
mode
==
STWRITE
Ë
	`Cy˛⁄ePack
(&
MyCy˛⁄e
, 
ßve_buf„r
);

387 
	`mk°©e_d©a
(
gzf
, 
ßve_buf„r
, 128, 
mode
);

388 i‡(
mode
 =
STREAD
Ë
	`Cy˛⁄eU≈ack
(&
MyCy˛⁄e
, 
ßve_buf„r
);

389 
	`¥ötf
("Savê°©êPha£ 2 PC=%08x\n", (
mode
 =
STREAD
 ? "READ" : "WRITE"), 
MyCy˛⁄e
.
pc
 - MyCy˛⁄e.
memba£
);

390 
	}
}

391 
	$˝u_68k_gëcy˛e
() {

392  
tŸÆ_cy˛es
-
MyCy˛⁄e
.
cy˛es
;

393 
	}
}

394 
	$b™kswôchî_öô
() {

395 
b™kaddªss
=0;

396 
	}
}

397 
	$cy˛⁄e_debug
(
o
) {

398 
	`¥ötf
("CYCLONE DEBUG %04x\n",
o
);

400 
	}
}

402 
	$˝u_68k_öô
() {

403 
ovî˛k
=
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("68kclock"));

405 
	`Cy˛⁄eInô
();

406 
	`mem£t
(&
MyCy˛⁄e
, 0,(MyCyclone));

412 
MyCy˛⁄e
.
ªad8
=
MyRód8
;

413 
MyCy˛⁄e
.
ªad16
=
MyRód16
;

414 
MyCy˛⁄e
.
ªad32
=
MyRód32
;

416 
MyCy˛⁄e
.
wrôe8
=
MyWrôe8
;

417 
MyCy˛⁄e
.
wrôe16
=
MyWrôe16
;

418 
MyCy˛⁄e
.
wrôe32
=
MyWrôe32
;

420 
MyCy˛⁄e
.
checkpc
=
MyCheckPc
;

422 
MyCy˛⁄e
.
„tch8
 =
MyRód8
;

423 
MyCy˛⁄e
.
„tch16
 =
MyRód16
;

424 
MyCy˛⁄e
.
„tch32
 =
MyRód32
;

428 
	`b™kswôchî_öô
();

432 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 > 0x100000) {

433 
b™kaddªss
 = 0x100000;

438 
time_¶i˚
=(
ovî˛k
==0?

439 200000:200000+(
ovî˛k
*200000/100.0))/262.0;

440 
	}
}

442 
	$˝u_68k_ª£t
() {

445 
MyCy˛⁄e
.
§h
=0x27;

449 
MyCy˛⁄e
.
úq
=0;

450 
MyCy˛⁄e
.
a
[7]=MyCy˛⁄e.
	`ªad32
(0);

452 
MyCy˛⁄e
.
memba£
=0;

453 
MyCy˛⁄e
.
pc
=MyCy˛⁄e.
	`checkpc
(MyCy˛⁄e.
	`ªad32
(4));

456 
	}
}

458 
	$˝u_68k_run
(
Uöt32
 
nb_cy˛e
) {

459 
Uöt32
 
i
;

460 i‡(
c⁄f
.
ø°î
) {

461 
tŸÆ_cy˛es
=
nb_cy˛e
;
MyCy˛⁄e
.
cy˛es
=nb_cycle;

462 
	`Cy˛⁄eRun
(&
MyCy˛⁄e
);

463  -
MyCy˛⁄e
.
cy˛es
;

466 
cuºít_löe
=0;

468 
tŸÆ_cy˛es
=
nb_cy˛e
;

470 
MyCy˛⁄e
.
cy˛es
=0;

471 
i
=0;i<261;i++) {

472 
MyCy˛⁄e
.
cy˛es
+=
time_¶i˚
;

473 
	`Cy˛⁄eRun
(&
MyCy˛⁄e
);

474 
cuºít_löe
++;

477 
tŸÆ_cy˛es
=
nb_cy˛e
;
MyCy˛⁄e
.
cy˛es
=nb_cycle;

478 
	`Cy˛⁄eRun
(&
MyCy˛⁄e
);

480  -
MyCy˛⁄e
.
cy˛es
;

483 
	}
}

485 
	$˝u_68k_öãºu±
(
a
) {

487 
MyCy˛⁄e
.
úq
=
a
;

488 
	}
}

490 
	$˝u_68k_b™kswôch
(
Uöt32
 
addªss
) {

492 
b™kaddªss
 = 
addªss
;

493 
	}
}

495 
	$˝u_68k_dißs£mbÀ
(
pc
, 
nb_ö°r
) {

497 
	}
}

499 
	$˝u_68k_dum¥eg
() {

500 
i
;

501 
i
=0;i<8;i++Ë
	`¥ötf
(" d%d=%08xá%d=%08x\n",i,
MyCy˛⁄e
.
d
[i],i,MyCy˛⁄e.
a
[i]);

507 
	}
}

509 
	$˝u_68k_run_°ï
() {

510 
MyCy˛⁄e
.
cy˛es
=0;

511 
	`Cy˛⁄eRun
(&
MyCy˛⁄e
);

512  -
MyCy˛⁄e
.
cy˛es
;

513 
	}
}

515 
Uöt32
 
	$˝u_68k_gëpc
() {

516  
MyCy˛⁄e
.
pc
-MyCy˛⁄e.
memba£
;

517 
	}
}

520 
	$˝u_68k_debugî
((*
exec°ï
)(),(*
dump
)()) {

523 
	}
}

	@src/debug.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

6 
	~<SDL.h
>

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

9 
	~"mem‹y.h
"

10 
	~"gnutû.h
"

14 
	#MAX_BP
 500

	)

15 
	#MAX_BT
 20

	)

17 
	gbªakpoöts
[
MAX_BP
];

18 
	gnb_bªakpoöts
 = 0;

19 
	gdbg_°ï
 = 0;

20 
Uöt32
 
	gbackåa˚
[
MAX_BT
];

22 
	$add_bt
(
Uöt32
 
pc
)

24 
i
;

25 
i
=
MAX_BT
-1;i>=0;i--)

26 
backåa˚
[
i
+1]=backtrace[i];

27 
backåa˚
[0]=
pc
;

28 
	}
}

30 
	$show_bt
() {

31 
i
;

32 
i
=
MAX_BT
-1;i>=0;i--)

33 
	`¥ötf
("%08x\n",
backåa˚
[
i
]);

34 
	}
}

36 
	$add_c⁄d
(
Uöt8
 
ty≥
,
ªg
,
Uöt32
 
vÆ
) {

37 
	}
}

39 
	$check_bp
(
pc
)

41 
i
;

42 
i
 = 0; i < 
nb_bªakpoöts
; i++) {

43 i‡(
bªakpoöts
[
i
] =
pc
)

44  
GN_TRUE
;

46  
GN_FALSE
;

47 
	}
}

49 
	$add_bp
(
pc
)

51 i‡(
nb_bªakpoöts
 > 
MAX_BP
) {

52 
	`¥ötf
("Too many breakpoint\n");

55 
bªakpoöts
[
nb_bªakpoöts
++] = 
pc
;

56 
	}
}

58 
	$dñ_bp
(
pc
)

60 
i
;

61 
i
 = 0; i < 
nb_bªakpoöts
; i++) {

62 i‡(
bªakpoöts
[
i
] =
pc
)

63 
bªakpoöts
[
i
] = -1;

65 
	}
}

67 
	$debug_öãrf
()

69 
ö_buf
[256];

70 
vÆ
[32];

71 
cmd
;

72 
ö_a
, 
ö_b
, 
ö_c
;

73 
i
, 
j
;

75 
	`¥ötf
("> ");

76 
	`fÊush
(
°dout
);

80 
	`fgës
(
ö_buf
, 255, 
°dö
);

81 
ö_buf
[0]) {

84 
dbg_°ï
 = 0;

88 
dbg_°ï
 = 1;

91 
	`ssˇnf
(
ö_buf
, "%¯%x", &
cmd
, &
ö_a
);

92 
	`add_bp
(
ö_a
);

95 
	`ssˇnf
(
ö_buf
, "%¯%x", &
cmd
, &
ö_a
);

96 
	`dñ_bp
(
ö_a
);

99 
	`ssˇnf
(
ö_buf
, "%¯%s", &
cmd
, 
vÆ
);

104 
ö_a
 = 
	`°πﬁ
(
vÆ
, 
NULL
, 0);

106 
	`˝u_68k_dißs£mbÀ
(
ö_a
, 10);

109 
	`˝u_68k_dum¥eg
();

112 
	`¥ötf
("\n");

114 
	}
}

116 
	$dbg_68k_run
(
Uöt32
 
nbcy˛e
)

118 
i
 = 0;

119 
i
 < 
nbcy˛e
) {

121 i‡(
	`check_bp
(
	`˝u_68k_gëpc
())) {

122 
	`˝u_68k_dißs£mbÀ
(
	`˝u_68k_gëpc
(), 1);

123 
	`debug_öãrf
();

125 
i
 +
	`˝u_68k_run_°ï
();

127  
i
;

128 
	}
}

	@src/debug.h

1 #i‚de‡
_DEBUG_H_


2 
	#_DEBUG_H_


	)

5 
show_bt
();

6 
add_bt
(
Uöt32
 
pc
);

7 
check_bp
(
pc
);

8 
add_bp
(
pc
);

9 
dñ_bp
(
pc
);

10 
dbg_68k_run
(
Uöt32
 
nbcy˛e
);

11 
dbg_°ï
;

	@src/drz80/DrZ80.h

9 #ifde‡
__˝lu•lus


13 #i‚de‡
DRZ80_H


14 
	#DRZ80_H


	)

16 
DrZ80Vî
;

18 
	sDrZ80


20 
	mZ80PC
;

21 
	mZ80A
;

22 
	mZ80F
;

23 
	mZ80BC
;

24 
	mZ80DE
;

25 
	mZ80HL
;

26 
	mZ80SP
;

27 
	mZ80PC_BASE
;

28 
	mZ80SP_BASE
;

29 
	mZ80IX
;

30 
	mZ80IY
;

31 
	mZ80I
;

32 
	mZ80A2
;

33 
	mZ80F2
;

34 
	mZ80BC2
;

35 
	mZ80DE2
;

36 
	mZ80HL2
;

39 
	mZ80_IRQ
;

40 
	mZ80IF
;

41 
	mZ80IM
;

42 
	m•¨e
;

43 
	mz80úqve˘‹
;

44 (*
	mz80_úq_ˇŒback
 )();

45 (*
	mz80_wrôe8
 )(
	md
,
	ma
);

46 (*
	mz80_wrôe16
 )(
	md
,
	ma
);

47 (*
	mz80_ö
)(
	mp
);

48 (*
	mz80_out
 )(
	mp
,
	md
);

49 (*
	mz80_ªad8
)(
	ma
);

50 (*
	mz80_ªad16
)(
	ma
);

51 (*
	mz80_ªba£SP
)(
	m√w_•
);

52 (*
	mz80_ªba£PC
)(
	m√w_pc
);

55 
DrZ80Run
(
DrZ80
 *
pcy
,
cyc
);

59 #ifde‡
__˝lu•lus


	@src/drz80_interf.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 #ifde‡
USE_DRZ80


26 
	~"emu.h
"

27 
	~"mem‹y.h
"

28 
	~"drz80/DrZ80.h
"

29 
	~"°©e.h
"

30 #ifde‡
GP2X


31 
	~"ym2610-940/940sh¨ed.h
"

34 #i‚de‡
ENABLE_940T


36 
Uöt8
 *
	gz80m≠1
, *
	gz80m≠2
, *
	gz80m≠3
, *
	gz80m≠4
;

37 
Uöt8
 
	gdrz80mem
[0x10000];

38 
Uöt32
 
	gmydrz80_Z80PC
,
	gmydrz80_Z80SP
;

40 
DrZ80
 
	gmydrz80
;

43 
	$drz80_ªba£PC
(
addªss
)

47 
mydrz80
.
Z80PC_BASE
 = ()
drz80mem
;

48 
mydrz80
.
Z80PC
 = mydrz80.
Z80PC_BASE
 + 
addªss
;

49  
mydrz80
.
Z80PC_BASE
 + 
addªss
;

50 
	}
}

52 
	$drz80_ªba£SP
(
addªss
)

55 
mydrz80
.
Z80SP_BASE
 = ()
drz80mem
;

56 
mydrz80
.
Z80SP
 = mydrz80.
Z80SP_BASE
 + 
addªss
;

57  
mydrz80
.
Z80SP_BASE
 + 
addªss
;

58 
	}
}

60 
	$drz80_ªad8
(
addªss
) {

61  (
drz80mem
[
addªss
&0xFFFF]);

62 
	}
}

64 
	$drz80_ªad16
(
addªss
) {

65  
	`drz80_ªad8
(
addªss
) | (drz80_read8(address + 1) << 8);

66 
	}
}

68 
	$drz80_wrôe8
(
d©a
,
addªss
) {

69 i‡(
addªss
>=0xf800Ë
drz80mem
[addªss&0xFFFF]=
d©a
;

70 
	}
}

72 
	$drz80_wrôe16
(
d©a
,
addªss
) {

73 
	`drz80_wrôe8
(
d©a
 & 0xFF,
addªss
);

74 
	`drz80_wrôe8
(
d©a
 >> 8,
addªss
 + 1);

75 
	}
}

77 
	$drz80_wrôï‹t16
(
Uöt16
 
p‹t
, 
Uöt8
 
vÆue
)

80 
	`z80_p‹t_wrôe
(
p‹t
, 
vÆue
);

81 
	}
}

83 
Uöt8
 
	$drz80_ªadp‹t16
(
Uöt16
 
p‹t
)

86  
	`z80_p‹t_ªad
(
p‹t
);

87 
	}
}

90 
	$˝u_z80_swôchb™k
(
Uöt8
 
b™k
, 
Uöt16
 
P‹tNo
)

93 i‡(
b™k
<=3)

94 
z80_b™k
[
b™k
]=
P‹tNo
;

96 
b™k
) {

98 
z80m≠1
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x4000 * ((
P‹tNo
 >> 8) & 0x0f));

99 
	`mem˝y
(
drz80mem
 + 0x8000, 
z80m≠1
, 0x4000);

102 
z80m≠2
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x2000 * ((
P‹tNo
 >> 8) & 0x1f));

103 
	`mem˝y
(
drz80mem
 + 0xc000, 
z80m≠2
, 0x2000);

106 
z80m≠3
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x1000 * ((
P‹tNo
 >> 8) & 0x3f));

107 
	`mem˝y
(
drz80mem
 + 0xe000, 
z80m≠3
, 0x1000);

110 
z80m≠4
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x0800 * ((
P‹tNo
 >> 8) & 0x7f));

111 
	`mem˝y
(
drz80mem
 + 0xf000, 
z80m≠4
, 0x0800);

114 
	}
}

116 
	$drz80_úq_ˇŒback
()

121 
	}
}

123 
	$˝u_z80_mk°©e
(
gzFûe
 
gzf
,
mode
) {

125 
	}
}

126 
	$˝u_z80_öô
()

128 
	`mem£t
 (&
mydrz80
, 0, (mydrz80));

129 
mydrz80
.
z80_ªba£PC
=
drz80_ªba£PC
;

130 
mydrz80
.
z80_ªba£SP
=
drz80_ªba£SP
;

131 
mydrz80
.
z80_ªad8
 =
drz80_ªad8
;

132 
mydrz80
.
z80_ªad16
 =
drz80_ªad16
;

133 
mydrz80
.
z80_wrôe8
 =
drz80_wrôe8
;

134 
mydrz80
.
z80_wrôe16
 =
drz80_wrôe16
;

135 
mydrz80
.
z80_ö
 =
drz80_ªadp‹t16
;

136 
mydrz80
.
z80_out
 =
drz80_wrôï‹t16
;

139 
mydrz80
.
Z80F
 = (1<<2);

144 
mydrz80
.
Z80F2
 = 1<<2;

148 
mydrz80
.
Z80IX
 = 0xFFFF;

149 
mydrz80
.
Z80IY
 = 0xFFFF;

150 
mydrz80
.
Z80I
 = 0x00;

151 
mydrz80
.
Z80IM
 = 0x01;

152 
mydrz80
.
Z80_IRQ
 = 0x00;

153 
mydrz80
.
Z80IF
 = 0x00;

154 
mydrz80
.
Z80PC
=mydrz80.
	`z80_ªba£PC
(0);

158 
z80m≠1
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0x8000;

159 
z80m≠2
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xc000;

160 
z80m≠3
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xe000;

161 
z80m≠4
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xf000;

163 
z80_b™k
[0]=0x8000;

164 
z80_b™k
[1]=0xc000;

165 
z80_b™k
[2]=0xe000;

166 
z80_b™k
[3]=0xf000;

168 
	`mem˝y
(
drz80mem
, 
mem‹y
.
rom
.
˝u_z80
.
p
, 0xf800);

170 
	}
}

171 
	$˝u_z80_run
(
nbcy˛e
) {

173 
	`DrZ80Run
(&
mydrz80
, 
nbcy˛e
);

174 
	}
}

179 
	$˝u_z80_nmi
()

182 
mydrz80
.
Z80_IRQ
 |= 0x02;

184 
	}
}

185 
	$˝u_z80_øi£_úq
(
l
)

188 
mydrz80
.
Z80_IRQ
 |= 0x1;

190 
	}
}

191 
	$˝u_z80_lowî_úq
()

194 
mydrz80
.
Z80_IRQ
 &= ~0x1;

195 
	}
}

	@src/effect.h

2 #i‚de‡
_EFFECT_H_


3 
	#_EFFECT_H_


	)

5 #ifde‡
HAVE_CONFIG_H


6 
	~<c⁄fig.h
>

10 
	~"SDL.h
"

13 c⁄° *
	m«me
;

14 c⁄° *
	mdesc
;

15 
Uöt8
 
	mx_øtio
,
	my_øtio
;

16 (*
	möô
) ();

17 (*
	mupd©e
) ();

18 } 
	tef„˘_func
;

21 
ef„˘_sˇ∆öe_öô
();

22 
ef„˘_sˇ∆öe_upd©e
();

23 
ef„˘_sˇ∆öe50_upd©e
();

25 
ef„˘_doubÀx_upd©e
();

28 
ef„˘_sˇÀ2x_öô
();

29 
ef„˘_sˇÀ3x_öô
();

30 
ef„˘_sˇÀ4x_öô
();

31 
ef„˘_sˇÀ2x_upd©e
();

32 
ef„˘_sˇÀ3x_upd©e
();

33 
ef„˘_sˇÀ4x_upd©e
();

34 
ef„˘_sˇÀ2x50_upd©e
();

35 
ef„˘_sˇÀ2x75_upd©e
();

38 
ef„˘_hq2x_öô
();

39 
ef„˘_hq2x_upd©e
();

40 
ef„˘_hq3x_öô
();

41 
ef„˘_hq3x_upd©e
();

42 
ef„˘_hq4x_öô
();

43 
ef„˘_hq4x_upd©e
();

45 
ef„˘_lq2x_öô
();

46 
ef„˘_lq2x_upd©e
();

47 
ef„˘_lq3x_öô
();

48 
ef„˘_lq3x_upd©e
();

51 
ef„˘_ßi_öô
();

52 
ef„˘_ßi_upd©e
();

53 
ef„˘_ógÀ_upd©e
();

54 
ef„˘_su≥rßi_upd©e
();

57 
ef„˘_func
 
ef„˘
[];

	@src/effect/hq2x.c

32 #ifde‡
HAVE_CONFIG_H


33 
	~<c⁄fig.h
>

36 
	~"SDL.h
"

37 
	~"../s¸ìn.h
"

38 
	~"../video.h
"

39 
	~"../gnutû.h
"

41 
	~"hqx_comm⁄.h
"

42 
	~"hq2x.h
"

50 
Uöt16
 *
	gd°0
, *
	gd°1
, *
	g§c0
, *
	g§c1
, *
	g§c2
;

51 
Uöt16
 
	gheight
;

54 #ifde‡
I386_ASM


55 
hq2x_16_i386
(
Uöt8
*, Uint8*, , , );

58 
	$ef„˘_hq2x_öô
()

60 #ifde‡
I386_ASM


62 
	`InôLUTs
();

63 
tmps

	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,
visibÀ_¨ó
.
w
, visibÀ_¨ó.
h
, 16, 0xF800, 0x7E0, 0x1F, 0);

65  
GN_TRUE
;

66 
	}
}

68 #i‚de‡
I386_ASM


70 
	$hq2x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
)

72 
i
;

74 
i
=0;i<
cou¡
;++i) {

75 
mask
;

77 
Uöt16
 
c
[9];

79 
c
[1] = 
§c0
[0];

80 
c
[4] = 
§c1
[0];

81 
c
[7] = 
§c2
[0];

83 i‡(
i
>0) {

84 
c
[0] = 
§c0
[-1];

85 
c
[3] = 
§c1
[-1];

86 
c
[6] = 
§c2
[-1];

88 
c
[0] = c[1];

89 
c
[3] = c[4];

90 
c
[6] = c[7];

93 i‡(
i
<
cou¡
-1) {

94 
c
[2] = 
§c0
[1];

95 
c
[5] = 
§c1
[1];

96 
c
[8] = 
§c2
[1];

98 
c
[2] = c[1];

99 
c
[5] = c[4];

100 
c
[8] = c[7];

103 
mask
 = 0;

105 i‡(
	`öãΩ_16_diff
(
c
[0], c[4]))

106 
mask
 |= 1 << 0;

107 i‡(
	`öãΩ_16_diff
(
c
[1], c[4]))

108 
mask
 |= 1 << 1;

109 i‡(
	`öãΩ_16_diff
(
c
[2], c[4]))

110 
mask
 |= 1 << 2;

111 i‡(
	`öãΩ_16_diff
(
c
[3], c[4]))

112 
mask
 |= 1 << 3;

113 i‡(
	`öãΩ_16_diff
(
c
[5], c[4]))

114 
mask
 |= 1 << 4;

115 i‡(
	`öãΩ_16_diff
(
c
[6], c[4]))

116 
mask
 |= 1 << 5;

117 i‡(
	`öãΩ_16_diff
(
c
[7], c[4]))

118 
mask
 |= 1 << 6;

119 i‡(
	`öãΩ_16_diff
(
c
[8], c[4]))

120 
mask
 |= 1 << 7;

122 
	#P0
 
d°0
[0]

	)

123 
	#P1
 
d°0
[1]

	)

124 
	#P2
 
d°1
[0]

	)

125 
	#P3
 
d°1
[1]

	)

126 
	#MUR
 
	`öãΩ_16_diff
(
c
[1], c[5])

	)

127 
	#MDR
 
	`öãΩ_16_diff
(
c
[5], c[7])

	)

128 
	#MDL
 
	`öãΩ_16_diff
(
c
[7], c[3])

	)

129 
	#MUL
 
	`öãΩ_16_diff
(
c
[3], c[1])

	)

130 
	#IC
(
p0
Ë
c
[p0]

	)

131 
	#I11
(
p0
,
p1
Ë
	`öãΩ_16_11
(
c
[p0], c[p1])

	)

132 
	#I211
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_211
(
c
[p0], c[p1], c[p2])

	)

133 
	#I31
(
p0
,
p1
Ë
	`öãΩ_16_31
(
c
[p0], c[p1])

	)

134 
	#I332
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_332
(
c
[p0], c[p1], c[p2])

	)

135 
	#I431
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_431
(
c
[p0], c[p1], c[p2])

	)

136 
	#I521
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_521
(
c
[p0], c[p1], c[p2])

	)

137 
	#I53
(
p0
,
p1
Ë
	`öãΩ_16_53
(
c
[p0], c[p1])

	)

138 
	#I611
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_611
(
c
[p0], c[p1], c[p2])

	)

139 
	#I71
(
p0
,
p1
Ë
	`öãΩ_16_71
(
c
[p0], c[p1])

	)

140 
	#I772
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_772
(
c
[p0], c[p1], c[p2])

	)

141 
	#I97
(
p0
,
p1
Ë
	`öãΩ_16_97
(
c
[p0], c[p1])

	)

142 
	#I1411
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_1411
(
c
[p0], c[p1], c[p2])

	)

143 
	#I151
(
p0
,
p1
Ë
	`öãΩ_16_151
(
c
[p0], c[p1])

	)

145 
mask
) {

146 
	~"hq2x.d©
"

149 #unde‡
P0


150 #unde‡
P1


151 #unde‡
P2


152 #unde‡
P3


153 #unde‡
MUR


154 #unde‡
MDR


155 #unde‡
MDL


156 #unde‡
MUL


157 #unde‡
IC


158 #unde‡
I11


159 #unde‡
I211


160 #unde‡
I31


161 #unde‡
I332


162 #unde‡
I431


163 #unde‡
I521


164 #unde‡
I53


165 #unde‡
I611


166 #unde‡
I71


167 #unde‡
I772


168 #unde‡
I97


169 #unde‡
I1411


170 #unde‡
I151


172 
§c0
 += 1;

173 
§c1
 += 1;

174 
§c2
 += 1;

175 
d°0
 += 2;

176 
d°1
 += 2;

178 
	}
}

182 
	$ef„˘_hq2x_upd©e
()

184 
height
 = 
visibÀ_¨ó
.
h
;

186 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

187 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

189 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

190 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

191 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

192 
height
--)

194 
	`hq2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

196 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

197 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

199 
§c0
 += 352;

200 
§c1
 += 352;

201 
§c2
 += 352;

203 
	}
}

205 
	$ef„˘_hq2x_upd©e
()

207 
	`SDL_BlôSurÁ˚
(
buf„r
, &
visibÀ_¨ó
, 
tmps
, &
tmps_ª˘
);

208 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

209 
§c0
 = (
Uöt16
 *)
tmps
->
pixñs
;

212 
	`hq2x_16_i386
((
Uöt8
*)
§c0
, (Uöt8*)
d°0
, 
visibÀ_¨ó
.
w
, visibÀ_¨ó.
h
, visible_area.w*4);

213 
	}
}

	@src/effect/hq2x.h

31 #i‚de‡
__HQ2X_H


32 
	#__HQ2X_H


	)

34 
	~"öãΩ.h
"

35 
hq2x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
);

	@src/effect/hq3x.c

33 #ifde‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~"SDL.h
"

38 
	~"../s¸ìn.h
"

39 
	~"../video.h
"

40 
	~"../gnutû.h
"

42 
	~"hqx_comm⁄.h
"

43 
	~"hq3x.h
"

51 
Uöt16
 *
	gd°0
, *
	gd°1
, *
	gd°2
, *
	g§c0
, *
	g§c1
, *
	g§c2
;

52 
Uöt16
 
	gheight
;

54 #ifde‡
I386_ASM


55 
hq3x_16_i386
(
Uöt8
*, Uint8*, , , );

58 
	$ef„˘_hq3x_öô
()

60 #ifde‡
I386_ASM


62 
	`InôLUTs
();

63 
tmps

	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,
visibÀ_¨ó
.
w
, visibÀ_¨ó.
h
, 16, 0xF800, 0x7E0, 0x1F, 0);

65  
GN_TRUE
;

66 
	}
}

68 #i‚de‡
I386_ASM


69 
	$hq3x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
d°2
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
)

71 
i
;

73 
i
=0;i<
cou¡
;++i) {

74 
mask
;

76 
Uöt16
 
c
[9];

78 
c
[1] = 
§c0
[0];

79 
c
[4] = 
§c1
[0];

80 
c
[7] = 
§c2
[0];

82 i‡(
i
>0) {

83 
c
[0] = 
§c0
[-1];

84 
c
[3] = 
§c1
[-1];

85 
c
[6] = 
§c2
[-1];

87 
c
[0] = c[1];

88 
c
[3] = c[4];

89 
c
[6] = c[7];

92 i‡(
i
<
cou¡
-1) {

93 
c
[2] = 
§c0
[1];

94 
c
[5] = 
§c1
[1];

95 
c
[8] = 
§c2
[1];

97 
c
[2] = c[1];

98 
c
[5] = c[4];

99 
c
[8] = c[7];

102 
mask
 = 0;

104 i‡(
	`öãΩ_16_diff
(
c
[0], c[4]))

105 
mask
 |= 1 << 0;

106 i‡(
	`öãΩ_16_diff
(
c
[1], c[4]))

107 
mask
 |= 1 << 1;

108 i‡(
	`öãΩ_16_diff
(
c
[2], c[4]))

109 
mask
 |= 1 << 2;

110 i‡(
	`öãΩ_16_diff
(
c
[3], c[4]))

111 
mask
 |= 1 << 3;

112 i‡(
	`öãΩ_16_diff
(
c
[5], c[4]))

113 
mask
 |= 1 << 4;

114 i‡(
	`öãΩ_16_diff
(
c
[6], c[4]))

115 
mask
 |= 1 << 5;

116 i‡(
	`öãΩ_16_diff
(
c
[7], c[4]))

117 
mask
 |= 1 << 6;

118 i‡(
	`öãΩ_16_diff
(
c
[8], c[4]))

119 
mask
 |= 1 << 7;

121 
	#P0
 
d°0
[0]

	)

122 
	#P1
 
d°0
[1]

	)

123 
	#P2
 
d°0
[2]

	)

124 
	#P3
 
d°1
[0]

	)

125 
	#P4
 
d°1
[1]

	)

126 
	#P5
 
d°1
[2]

	)

127 
	#P6
 
d°2
[0]

	)

128 
	#P7
 
d°2
[1]

	)

129 
	#P8
 
d°2
[2]

	)

130 
	#MUR
 
	`öãΩ_16_diff
(
c
[1], c[5])

	)

131 
	#MDR
 
	`öãΩ_16_diff
(
c
[5], c[7])

	)

132 
	#MDL
 
	`öãΩ_16_diff
(
c
[7], c[3])

	)

133 
	#MUL
 
	`öãΩ_16_diff
(
c
[3], c[1])

	)

134 
	#IC
(
p0
Ë
c
[p0]

	)

135 
	#I11
(
p0
,
p1
Ë
	`öãΩ_16_11
(
c
[p0], c[p1])

	)

136 
	#I211
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_211
(
c
[p0], c[p1], c[p2])

	)

137 
	#I31
(
p0
,
p1
Ë
	`öãΩ_16_31
(
c
[p0], c[p1])

	)

138 
	#I332
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_332
(
c
[p0], c[p1], c[p2])

	)

139 
	#I431
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_431
(
c
[p0], c[p1], c[p2])

	)

140 
	#I521
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_521
(
c
[p0], c[p1], c[p2])

	)

141 
	#I53
(
p0
,
p1
Ë
	`öãΩ_16_53
(
c
[p0], c[p1])

	)

142 
	#I611
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_611
(
c
[p0], c[p1], c[p2])

	)

143 
	#I71
(
p0
,
p1
Ë
	`öãΩ_16_71
(
c
[p0], c[p1])

	)

144 
	#I772
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_772
(
c
[p0], c[p1], c[p2])

	)

145 
	#I97
(
p0
,
p1
Ë
	`öãΩ_16_97
(
c
[p0], c[p1])

	)

146 
	#I1411
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_1411
(
c
[p0], c[p1], c[p2])

	)

147 
	#I151
(
p0
,
p1
Ë
	`öãΩ_16_151
(
c
[p0], c[p1])

	)

149 
mask
) {

150 
	~"hq3x.d©
"

153 #unde‡
P0


154 #unde‡
P1


155 #unde‡
P2


156 #unde‡
P3


157 #unde‡
P4


158 #unde‡
P5


159 #unde‡
P6


160 #unde‡
P7


161 #unde‡
P8


162 #unde‡
MUR


163 #unde‡
MDR


164 #unde‡
MDL


165 #unde‡
MUL


166 #unde‡
IC


167 #unde‡
I11


168 #unde‡
I211


169 #unde‡
I31


170 #unde‡
I332


171 #unde‡
I431


172 #unde‡
I521


173 #unde‡
I53


174 #unde‡
I611


175 #unde‡
I71


176 #unde‡
I772


177 #unde‡
I97


178 #unde‡
I1411


179 #unde‡
I151


181 
§c0
 += 1;

182 
§c1
 += 1;

183 
§c2
 += 1;

184 
d°0
 += 3;

185 
d°1
 += 3;

186 
d°2
 += 3;

188 
	}
}

190 
	$ef„˘_hq3x_upd©e
()

192 
height
 = 
visibÀ_¨ó
.
h
;

194 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

195 
d°1
 = (
Uöt16
 *)
d°0
 + 
visibÀ_¨ó
.
w
*3;

196 
d°2
 = (
Uöt16
 *)
d°1
 + 
visibÀ_¨ó
.
w
*3;

198 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

199 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

200 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

201 
height
--)

204 
	`hq3x_16_def
(
d°0
, 
d°1
, 
d°2
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

206 
d°0
 +(
visibÀ_¨ó
.
w
*9);

207 
d°1
 +(
visibÀ_¨ó
.
w
*9);

208 
d°2
 +(
visibÀ_¨ó
.
w
*9);

210 
§c0
 += 352;

211 
§c1
 += 352;

212 
§c2
 += 352;

214 
	}
}

218 
	$ef„˘_hq3x_upd©e
()

220 
	`SDL_BlôSurÁ˚
(
buf„r
, &
visibÀ_¨ó
, 
tmps
, &
tmps_ª˘
);

221 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

222 
§c0
 = (
Uöt16
 *)
tmps
->
pixñs
;

225 
	`hq3x_16_i386
((
Uöt8
*)
§c0
, (Uöt8*)
d°0
, 
visibÀ_¨ó
.
w
, visibÀ_¨ó.
h
, visible_area.w*6);

226 
	}
}

	@src/effect/hq3x.h

31 #i‚de‡
__HQ3X_H


32 
	#__HQ3X_H


	)

34 
	~"öãΩ.h
"

36 
hq3x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
d°2
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
);

	@src/effect/hqx_common.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

24 
	~"SDL.h
"

27 #ifde‡
I386_ASM


29 
Uöt32
 
	gLUT16to32
[65536];

30 
Uöt32
 
	gRGBtoYUV
[65536];

32 
SDL_SurÁ˚
 *
	gtmps
;

33 
SDL_Re˘
 
	gtmps_ª˘
 = { 0, 0, 304, 224};

35 
	$InôLUTs
()

37 
i
, 
j
, 
k
, 
r
, 
g
, 
b
, 
Y
, 
u
, 
v
;

39 
i
=0; i<65536; i++)

40 
LUT16to32
[
i
] = ((i & 0xF800) << 8) + ((i & 0x07E0) << 5) + ((i & 0x001F) << 3);

42 
i
=0; i<32; i++)

43 
j
=0; j<64; j++)

44 
k
=0; k<32; k++)

46 
r
 = 
i
 << 3;

47 
g
 = 
j
 << 2;

48 
b
 = 
k
 << 3;

49 
Y
 = (
r
 + 
g
 + 
b
) >> 2;

50 
u
 = 128 + ((
r
 - 
b
) >> 2);

51 
v
 = 128 + ((-
r
 + 2*
g
 -
b
)>>3);

52 
RGBtoYUV
[ (
i
 << 11Ë+ (
j
 << 5Ë+ 
k
 ] = (
Y
<<16Ë+ (
u
<<8Ë+ 
v
;

55 
	}
}

	@src/effect/hqx_common.h

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

24 
	~"SDL.h
"

26 
Uöt32
 
LUT16to32
[65536];

27 
Uöt32
 
RGBtoYUV
[65536];

29 
SDL_SurÁ˚
 *
tmps
;

30 
SDL_Re˘
 
tmps_ª˘
;

32 
InôLUTs
();

	@src/effect/interp.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~"SDL.h
"

24 
	~"../s¸ìn.h
"

26 
	#INTERP_Y_LIMIT
 (0x30 * 4)

	)

27 
	#INTERP_U_LIMIT
 (0x07 * 4)

	)

28 
	#INTERP_V_LIMIT
 (0x06 * 8)

	)

30 
	$öãΩ_16_diff
(
Uöt16
 
p1
, Uöt16 
p2
)

32 
r
, 
g
, 
b
;

33 
y
, 
u
, 
v
;

35 i‡(
p1
 =
p2
)

38 
b
 = ()((
p1
 & 0x1FË- (
p2
 & 0x1F)) << 3;

39 
g
 = ()((
p1
 & 0x7E0Ë- (
p2
 & 0x7E0)) >> 3;

40 
r
 = ()((
p1
 & 0xF800Ë- (
p2
 & 0xF800)) >> 8;

42 
y
 = 
r
 + 
g
 + 
b
;

44 i‡(
y
 < -
INTERP_Y_LIMIT
 || y > INTERP_Y_LIMIT)

47 
u
 = 
r
 - 
b
;

49 i‡(
u
 < -
INTERP_U_LIMIT
 || u > INTERP_U_LIMIT)

52 
v
 = -
r
 + 2*
g
 - 
b
;

54 i‡(
v
 < -
INTERP_V_LIMIT
 || v > INTERP_V_LIMIT)

58 
	}
}

	@src/effect/interp.h

1 #i‚de‡
_INTERP_H_


2 
	#_INTERP_H_


	)

4 
öãΩ_16_diff
(
Uöt16
 
p1
, Uöt16 
p2
);

6 
	#INTERP_16_MASK_1
(
v
Ë((vË& 0xf81F)

	)

7 
	#INTERP_16_MASK_2
(
v
Ë((vË& 0x7E0)

	)

8 
	#INTERP_16_UNMASK_1
(
v
Ë((vË& 0xf81F)

	)

9 
	#INTERP_16_UNMASK_2
(
v
Ë((vË& 0x7E0)

	)

11 
ölöe
 
Uöt16
 
	$öãΩ_16_521
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

13  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*5 + INTERP_16_MASK_1(
p2
)*2 + INTERP_16_MASK_1(
p3
)*1) / 8)

14 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*5 + INTERP_16_MASK_2(
p2
)*2 + INTERP_16_MASK_2(
p3
)*1) / 8);

15 
	}
}

17 
ölöe
 
Uöt16
 
	$öãΩ_16_332
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

19  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*3 + INTERP_16_MASK_1(
p2
)*3 + INTERP_16_MASK_1(
p3
)*2) / 8)

20 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*3 + INTERP_16_MASK_2(
p2
)*3 + INTERP_16_MASK_2(
p3
)*2) / 8);

21 
	}
}

23 
ölöe
 
Uöt16
 
	$öãΩ_16_611
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

25  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*6 + INTERP_16_MASK_1(
p2
Ë+ INTERP_16_MASK_1(
p3
)) / 8)

26 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*6 + INTERP_16_MASK_2(
p2
Ë+ INTERP_16_MASK_2(
p3
)) / 8);

27 
	}
}

29 
ölöe
 
Uöt16
 
	$öãΩ_16_71
(
Uöt16
 
p1
, Uöt16 
p2
)

31  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*7 + INTERP_16_MASK_1(
p2
)) / 8)

32 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*7 + INTERP_16_MASK_2(
p2
)) / 8);

33 
	}
}

35 
ölöe
 
Uöt16
 
	$öãΩ_16_211
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

37  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*2 + INTERP_16_MASK_1(
p2
Ë+ INTERP_16_MASK_1(
p3
)) / 4)

38 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*2 + INTERP_16_MASK_2(
p2
Ë+ INTERP_16_MASK_2(
p3
)) / 4);

39 
	}
}

41 
ölöe
 
Uöt16
 
	$öãΩ_16_772
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

43  
	`INTERP_16_UNMASK_1
(((
	`INTERP_16_MASK_1
(
p1
Ë+ INTERP_16_MASK_1(
p2
))*7 + INTERP_16_MASK_1(
p3
)*2) / 16)

44 | 
	`INTERP_16_UNMASK_2
(((
	`INTERP_16_MASK_2
(
p1
Ë+ INTERP_16_MASK_2(
p2
))*7 + INTERP_16_MASK_2(
p3
)*2) / 16);

45 
	}
}

47 
ölöe
 
Uöt16
 
	$öãΩ_16_11
(
Uöt16
 
p1
, Uöt16 
p2
)

49  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
Ë+ INTERP_16_MASK_1(
p2
)) / 2)

50 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
Ë+ INTERP_16_MASK_2(
p2
)) / 2);

51 
	}
}

52 
ölöe
 
Uöt16
 
	$öãΩ_16_31
(
Uöt16
 
p1
, Uöt16 
p2
)

54  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*3 + INTERP_16_MASK_1(
p2
)) / 4)

55 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*3 + INTERP_16_MASK_2(
p2
)) / 4);

56 
	}
}

58 
ölöe
 
Uöt16
 
	$öãΩ_16_1411
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

60  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*14 + INTERP_16_MASK_1(
p2
Ë+ INTERP_16_MASK_1(
p3
)) / 16)

61 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*14 + INTERP_16_MASK_2(
p2
Ë+ INTERP_16_MASK_2(
p3
)) / 16);

62 
	}
}

64 
ölöe
 
Uöt16
 
	$öãΩ_16_431
(
Uöt16
 
p1
, Uöt16 
p2
, Uöt16 
p3
)

66  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*4 + INTERP_16_MASK_1(
p2
)*3 + INTERP_16_MASK_1(
p3
)) / 8)

67 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*4 + INTERP_16_MASK_2(
p2
)*3 + INTERP_16_MASK_2(
p3
)) / 8);

68 
	}
}

70 
ölöe
 
Uöt16
 
	$öãΩ_16_53
(
Uöt16
 
p1
, Uöt16 
p2
)

72  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*5 + INTERP_16_MASK_1(
p2
)*3) / 8)

73 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*5 + INTERP_16_MASK_2(
p2
)*3) / 8);

74 
	}
}

76 
ölöe
 
Uöt16
 
	$öãΩ_16_151
(
Uöt16
 
p1
, Uöt16 
p2
)

78  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*15 + INTERP_16_MASK_1(
p2
)) / 16)

79 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*15 + INTERP_16_MASK_2(
p2
)) / 16);

80 
	}
}

82 
ölöe
 
Uöt16
 
	$öãΩ_16_97
(
Uöt16
 
p1
, Uöt16 
p2
)

84  
	`INTERP_16_UNMASK_1
((
	`INTERP_16_MASK_1
(
p1
)*9 + INTERP_16_MASK_1(
p2
)*7) / 16)

85 | 
	`INTERP_16_UNMASK_2
((
	`INTERP_16_MASK_2
(
p1
)*9 + INTERP_16_MASK_2(
p2
)*7) / 16);

86 
	}
}

	@src/effect/lq2x.c

30 #ifde‡
HAVE_CONFIG_H


31 
	~<c⁄fig.h
>

34 
	~"SDL.h
"

35 
	~"../s¸ìn.h
"

36 
	~"../video.h
"

37 
	~"../gnutû.h
"

39 
	~"lq2x.h
"

48 
Uöt16
 *
	gd°0
, *
	gd°1
, *
	g§c0
, *
	g§c1
, *
	g§c2
;

49 
Uöt16
 
	gheight
;

51 
	$ef„˘_lq2x_öô
()

53  
GN_TRUE
;

54 
	}
}

56 
	$lq2x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
)

58 
i
;

60 
i
=0;i<
cou¡
;++i) {

61 
mask
;

63 
Uöt16
 
c
[9];

65 
c
[1] = 
§c0
[0];

66 
c
[4] = 
§c1
[0];

67 
c
[7] = 
§c2
[0];

69 i‡(
i
>0) {

70 
c
[0] = 
§c0
[-1];

71 
c
[3] = 
§c1
[-1];

72 
c
[6] = 
§c2
[-1];

74 
c
[0] = c[1];

75 
c
[3] = c[4];

76 
c
[6] = c[7];

79 i‡(
i
<
cou¡
-1) {

80 
c
[2] = 
§c0
[1];

81 
c
[5] = 
§c1
[1];

82 
c
[8] = 
§c2
[1];

84 
c
[2] = c[1];

85 
c
[5] = c[4];

86 
c
[8] = c[7];

89 
mask
 = 0;

91 i‡(
c
[0] != c[4])

92 
mask
 |= 1 << 0;

93 i‡(
c
[1] != c[4])

94 
mask
 |= 1 << 1;

95 i‡(
c
[2] != c[4])

96 
mask
 |= 1 << 2;

97 i‡(
c
[3] != c[4])

98 
mask
 |= 1 << 3;

99 i‡(
c
[5] != c[4])

100 
mask
 |= 1 << 4;

101 i‡(
c
[6] != c[4])

102 
mask
 |= 1 << 5;

103 i‡(
c
[7] != c[4])

104 
mask
 |= 1 << 6;

105 i‡(
c
[8] != c[4])

106 
mask
 |= 1 << 7;

108 
	#P0
 
d°0
[0]

	)

109 
	#P1
 
d°0
[1]

	)

110 
	#P2
 
d°1
[0]

	)

111 
	#P3
 
d°1
[1]

	)

112 
	#MUR
 (
c
[1] !c[5])

	)

113 
	#MDR
 (
c
[5] !c[7])

	)

114 
	#MDL
 (
c
[7] !c[3])

	)

115 
	#MUL
 (
c
[3] !c[1])

	)

116 
	#IC
(
p0
Ë
c
[p0]

	)

117 
	#I11
(
p0
,
p1
Ë
	`öãΩ_16_11
(
c
[p0], c[p1])

	)

118 
	#I211
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_211
(
c
[p0], c[p1], c[p2])

	)

119 
	#I31
(
p0
,
p1
Ë
	`öãΩ_16_31
(
c
[p0], c[p1])

	)

120 
	#I332
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_332
(
c
[p0], c[p1], c[p2])

	)

121 
	#I431
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_431
(
c
[p0], c[p1], c[p2])

	)

122 
	#I521
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_521
(
c
[p0], c[p1], c[p2])

	)

123 
	#I53
(
p0
,
p1
Ë
	`öãΩ_16_53
(
c
[p0], c[p1])

	)

124 
	#I611
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_611
(
c
[p0], c[p1], c[p2])

	)

125 
	#I71
(
p0
,
p1
Ë
	`öãΩ_16_71
(
c
[p0], c[p1])

	)

126 
	#I772
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_772
(
c
[p0], c[p1], c[p2])

	)

127 
	#I97
(
p0
,
p1
Ë
	`öãΩ_16_97
(
c
[p0], c[p1])

	)

128 
	#I1411
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_1411
(
c
[p0], c[p1], c[p2])

	)

129 
	#I151
(
p0
,
p1
Ë
	`öãΩ_16_151
(
c
[p0], c[p1])

	)

131 
mask
) {

132 
	~"lq2x.d©
"

135 #unde‡
P0


136 #unde‡
P1


137 #unde‡
P2


138 #unde‡
P3


139 #unde‡
MUR


140 #unde‡
MDR


141 #unde‡
MDL


142 #unde‡
MUL


143 #unde‡
IC


144 #unde‡
I11


145 #unde‡
I211


146 #unde‡
I31


147 #unde‡
I332


148 #unde‡
I431


149 #unde‡
I521


150 #unde‡
I53


151 #unde‡
I611


152 #unde‡
I71


153 #unde‡
I772


154 #unde‡
I97


155 #unde‡
I1411


156 #unde‡
I151


158 
§c0
 += 1;

159 
§c1
 += 1;

160 
§c2
 += 1;

161 
d°0
 += 2;

162 
d°1
 += 2;

164 
	}
}

166 
	$ef„˘_lq2x_upd©e
()

168 
height
 = 
visibÀ_¨ó
.
h
;

170 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

171 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

173 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

174 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

175 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

176 
height
--)

178 
	`lq2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

180 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

181 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

183 
§c0
 += 352;

184 
§c1
 += 352;

185 
§c2
 += 352;

187 
	}
}

	@src/effect/lq2x.h

31 #i‚de‡
__LQ2X_H


32 
	#__LQ2X_H


	)

34 
	~"öãΩ.h
"

35 
lq2x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
);

	@src/effect/lq3x.c

31 #ifde‡
HAVE_CONFIG_H


32 
	~<c⁄fig.h
>

35 
	~"SDL.h
"

36 
	~"../s¸ìn.h
"

37 
	~"../video.h
"

38 
	~"../gnutû.h
"

40 
	~"lq3x.h
"

42 
Uöt16
 *
	gd°0
, *
	gd°1
, *
	gd°2
, *
	g§c0
, *
	g§c1
, *
	g§c2
;

43 
Uöt16
 
	gheight
;

51 
	$ef„˘_lq3x_öô
()

53  
GN_TRUE
;

54 
	}
}

56 
	$lq3x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
d°2
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
)

58 
i
;

60 
i
=0;i<
cou¡
;++i) {

61 
mask
;

63 
Uöt16
 
c
[9];

65 
c
[1] = 
§c0
[0];

66 
c
[4] = 
§c1
[0];

67 
c
[7] = 
§c2
[0];

69 i‡(
i
>0) {

70 
c
[0] = 
§c0
[-1];

71 
c
[3] = 
§c1
[-1];

72 
c
[6] = 
§c2
[-1];

74 
c
[0] = c[1];

75 
c
[3] = c[4];

76 
c
[6] = c[7];

79 i‡(
i
<
cou¡
-1) {

80 
c
[2] = 
§c0
[1];

81 
c
[5] = 
§c1
[1];

82 
c
[8] = 
§c2
[1];

84 
c
[2] = c[1];

85 
c
[5] = c[4];

86 
c
[8] = c[7];

89 
mask
 = 0;

91 i‡(
c
[0] != c[4])

92 
mask
 |= 1 << 0;

93 i‡(
c
[1] != c[4])

94 
mask
 |= 1 << 1;

95 i‡(
c
[2] != c[4])

96 
mask
 |= 1 << 2;

97 i‡(
c
[3] != c[4])

98 
mask
 |= 1 << 3;

99 i‡(
c
[5] != c[4])

100 
mask
 |= 1 << 4;

101 i‡(
c
[6] != c[4])

102 
mask
 |= 1 << 5;

103 i‡(
c
[7] != c[4])

104 
mask
 |= 1 << 6;

105 i‡(
c
[8] != c[4])

106 
mask
 |= 1 << 7;

108 
	#P0
 
d°0
[0]

	)

109 
	#P1
 
d°0
[1]

	)

110 
	#P2
 
d°0
[2]

	)

111 
	#P3
 
d°1
[0]

	)

112 
	#P4
 
d°1
[1]

	)

113 
	#P5
 
d°1
[2]

	)

114 
	#P6
 
d°2
[0]

	)

115 
	#P7
 
d°2
[1]

	)

116 
	#P8
 
d°2
[2]

	)

117 
	#MUR
 (
c
[1] !c[5])

	)

118 
	#MDR
 (
c
[5] !c[7])

	)

119 
	#MDL
 (
c
[7] !c[3])

	)

120 
	#MUL
 (
c
[3] !c[1])

	)

121 
	#IC
(
p0
Ë
c
[p0]

	)

122 
	#I11
(
p0
,
p1
Ë
	`öãΩ_16_11
(
c
[p0], c[p1])

	)

123 
	#I211
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_211
(
c
[p0], c[p1], c[p2])

	)

124 
	#I31
(
p0
,
p1
Ë
	`öãΩ_16_31
(
c
[p0], c[p1])

	)

125 
	#I332
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_332
(
c
[p0], c[p1], c[p2])

	)

126 
	#I431
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_431
(
c
[p0], c[p1], c[p2])

	)

127 
	#I521
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_521
(
c
[p0], c[p1], c[p2])

	)

128 
	#I53
(
p0
,
p1
Ë
	`öãΩ_16_53
(
c
[p0], c[p1])

	)

129 
	#I611
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_611
(
c
[p0], c[p1], c[p2])

	)

130 
	#I71
(
p0
,
p1
Ë
	`öãΩ_16_71
(
c
[p0], c[p1])

	)

131 
	#I772
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_772
(
c
[p0], c[p1], c[p2])

	)

132 
	#I97
(
p0
,
p1
Ë
	`öãΩ_16_97
(
c
[p0], c[p1])

	)

133 
	#I1411
(
p0
,
p1
,
p2
Ë
	`öãΩ_16_1411
(
c
[p0], c[p1], c[p2])

	)

134 
	#I151
(
p0
,
p1
Ë
	`öãΩ_16_151
(
c
[p0], c[p1])

	)

136 
mask
) {

137 
	~"lq3x.d©
"

140 #unde‡
P0


141 #unde‡
P1


142 #unde‡
P2


143 #unde‡
P3


144 #unde‡
P4


145 #unde‡
P5


146 #unde‡
P6


147 #unde‡
P7


148 #unde‡
P8


149 #unde‡
MUR


150 #unde‡
MDR


151 #unde‡
MDL


152 #unde‡
MUL


153 #unde‡
IC


154 #unde‡
I11


155 #unde‡
I211


156 #unde‡
I31


157 #unde‡
I332


158 #unde‡
I431


159 #unde‡
I521


160 #unde‡
I53


161 #unde‡
I611


162 #unde‡
I71


163 #unde‡
I772


164 #unde‡
I97


165 #unde‡
I1411


166 #unde‡
I151


168 
§c0
 += 1;

169 
§c1
 += 1;

170 
§c2
 += 1;

171 
d°0
 += 3;

172 
d°1
 += 3;

173 
d°2
 += 3;

175 
	}
}

178 
	$ef„˘_lq3x_upd©e
()

180 
height
 = 
visibÀ_¨ó
.
h
;

182 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

183 
d°1
 = (
Uöt16
 *)
d°0
 + 
visibÀ_¨ó
.
w
*3;

184 
d°2
 = (
Uöt16
 *)
d°1
 + 
visibÀ_¨ó
.
w
*3;

186 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

187 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

188 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

189 
height
--)

192 
	`lq3x_16_def
(
d°0
, 
d°1
, 
d°2
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

194 
d°0
 +(
visibÀ_¨ó
.
w
*9);

195 
d°1
 +(
visibÀ_¨ó
.
w
*9);

196 
d°2
 +(
visibÀ_¨ó
.
w
*9);

198 
§c0
 += 352;

199 
§c1
 += 352;

200 
§c2
 += 352;

202 
	}
}

	@src/effect/lq3x.h

31 #i‚de‡
__LQ3X_H


32 
	#__LQ3X_H


	)

34 
	~"öãΩ.h
"

35 
lq3x_16_def
(
Uöt16
 *
d°0
, Uöt16 *
d°1
, Uöt16 *
d°2
, Uöt16 *
§c0
, Uöt16 *
§c1
, Uöt16 *
§c2
, 
cou¡
);

	@src/effect/sai.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

5 #ifde‡
I386_ASM


6 
	~<°dlib.h
>

7 
	~"SDL.h
"

8 
	~"../s¸ìn.h
"

9 
	~"../video.h
"

11 
Inô_2xSaIMMX
(
Uöt32
 
bôf‹m©
);

12 
_2xSaILöe
(
Uöt8
 *
§cPå
, Uöt8 *
dñèPå
, 
Uöt32
 
§cPôch
, Uöt32 
width
,

13 
Uöt32
 
d°Off£t
, Uöt32 
d°Pôch
, 
Uöt16
 
d°Segmít
);

15 
_2xSaISu≥r2xSaILöe
(
Uöt8
 *
§cPå
, Uöt8 *
dñèPå
, 
Uöt32
 
§cPôch
, Uöt32 
width
,

16 
Uöt32
 
d°Off£t
, Uöt32 
d°Pôch
, 
Uöt16
 
d°Segmít
);

18 
_2xSaISu≥rEagÀLöe
(
Uöt8
 *
§cPå
, Uöt8 *
dñèPå
, 
Uöt32
 
§cPôch
, Uöt32 
width
,

19 
Uöt32
 
d°Off£t
, Uöt32 
d°Pôch
, 
Uöt16
 
d°Segmít
);

21 
Uöt8
 *
	gdñè±r
;

25 
	$ef„˘_ßi_öô
()

28 
	`Inô_2xSaIMMX
(565);

29 i‡(!
dñè±r
)

30 
dñè±r
 = (
Uöt8
*)
	`mÆloc
(352*256*2);

31 
	`¥ötf
("dñè±r=%∞ßi\n",
dñè±r
);

38  
GN_TRUE
;

39 
	}
}

43 
	$ef„˘_ßi_upd©e
()

45 
Uöt8
 *
§c
 = 
buf„r
->
pixñs
 + (352*
visibÀ_¨ó
.
y
+visibÀ_¨ó.
x
)*2;

46 
Uöt8
 *
d°
 = 
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

47 
Uöt8
 *
d±r
 = 
dñè±r
;

49 
Uöt8
 
height
 = 
visibÀ_¨ó
.
h
;

51 
height
--)

62 
	`_2xSaILöe
(
§c
, 
d±r
, 352*2, 
visibÀ_¨ó
.
w
, (
Uöt32
)
d°
, visible_area.w<<2, 0);

64 
d°
 +(
visibÀ_¨ó
.
w
<<3);

65 
§c
 += 352*2;

66 
d±r
+= 352*4;

68 
	}
}

71 
	$ef„˘_su≥rßi_upd©e
()

73 
Uöt8
 *
§c
 = 
buf„r
->
pixñs
 + (352*
visibÀ_¨ó
.
y
+visibÀ_¨ó.
x
)*2;

74 
Uöt8
 *
d°
 = 
s¸ìn
->
pixñs
;

75 
Uöt8
 *
d±r
 = 
dñè±r
;

77 
Uöt8
 
height
 = 
visibÀ_¨ó
.
h
;

79 
height
--)

90 
	`_2xSaISu≥r2xSaILöe
(
§c
, 
d±r
, 352*2, 
visibÀ_¨ó
.
w
, (
Uöt32
)
d°
, visible_area.w<<2, 0);

92 
d°
 +(
visibÀ_¨ó
.
w
<<3);

93 
§c
 += 352*2;

94 
d±r
+= 352*4;

96 
	}
}

99 
	$ef„˘_ógÀ_upd©e
()

101 
Uöt8
 *
§c
 = 
buf„r
->
pixñs
 + (352*
visibÀ_¨ó
.
y
+visibÀ_¨ó.
x
)*2;

102 
Uöt8
 *
d°
 = 
s¸ìn
->
pixñs
;

103 
Uöt8
 *
d±r
 = 
dñè±r
;

105 
Uöt8
 
height
 = 
visibÀ_¨ó
.
h
;

107 
height
--)

119 
	`_2xSaISu≥rEagÀLöe
(
§c
, 
d±r
, 352*2, 
visibÀ_¨ó
.
w
, (
Uöt32
)
d°
, visible_area.w<<2, 0);

121 
d°
 +(
visibÀ_¨ó
.
w
<<3);

122 
§c
 += 352*2;

123 
d±r
+= 352*4;

125 
	}
}

	@src/effect/scale2x.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~"SDL.h
"

7 
	~"../s¸ìn.h
"

8 
	~"../video.h
"

9 
	~"../gnutû.h
"

11 
	~"sˇÀ2x.h
"

12 
	~"sˇÀ3x.h
"

14 
Uöt16
 *
	gd°0
, *
	gd°1
, *
	gd°2
, *
	g§c0
, *
	g§c1
, *
	g§c2
;

15 
Uöt16
 
	gheight
;

16 
SDL_SurÁ˚
 *
	gsˇÀ4xtmp
;

19 
	$ef„˘_sˇÀ2x_öô
()

25  
GN_TRUE
;

26 
	}
}

27 
	$ef„˘_sˇÀ3x_öô
()

33  
GN_TRUE
;

34 
	}
}

35 
	$ef„˘_sˇÀ4x_öô
()

41 i‡(!
sˇÀ4xtmp
)

42 
sˇÀ4xtmp
=
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,
visibÀ_¨ó
.
w
<<2, (visibÀ_¨ó.
h
<<2)+16, 16,

44  
GN_TRUE
;

45 
	}
}

46 
ölöe
 
	$öã∫Æ_sˇÀ2x_16_def
(
Uöt16
* 
d°0
, Uöt16* 
d°1
, c⁄° Uöt16* 
§c0
,

47 c⁄° 
Uöt16
* 
§c1
, c⁄° Uöt16* 
§c2
, 
cou¡
)

53 
d°0
[0] = 
§c1
[0];

54 
d°1
[0] = 
§c1
[0];

55 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

56 
d°0
[1] =
§c0
[0];

58 
d°0
[1] =
§c1
[0];

59 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0])

60 
d°1
[1] =
§c2
[0];

62 
d°1
[1] =
§c1
[0];

63 ++
§c0
;

64 ++
§c1
;

65 ++
§c2
;

66 
d°0
 += 2;

67 
d°1
 += 2;

70 
cou¡
 -= 2;

72 
cou¡
)

74 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

75 
d°0
[0] = 
§c0
[0];

77 
d°0
[0] = 
§c1
[0];

78 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

79 
d°0
[1] =
§c0
[0];

81 
d°0
[1] =
§c1
[0];

83 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[1] != src2[0])

84 
d°1
[0] =
§c2
[0];

86 
d°1
[0] =
§c1
[0];

87 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[-1] != src2[0])

88 
d°1
[1] =
§c2
[0];

90 
d°1
[1] =
§c1
[0];

92 ++
§c0
;

93 ++
§c1
;

94 ++
§c2
;

95 
d°0
 += 2;

96 
d°1
 += 2;

97 --
cou¡
;

101 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

102 
d°0
[0] =
§c0
[0];

104 
d°0
[0] =
§c1
[0];

105 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0])

106 
d°1
[0] =
§c2
[0];

108 
d°1
[0] =
§c1
[0];

109 
d°0
[1] =
§c1
[0];

110 
d°1
[1] =
§c1
[0];

112 
	}
}

115 
ölöe
 
	$öã∫Æ_sˇÀ2x_16_def_50
(
Uöt16
* 
d°0
, Uöt16* 
d°1
, c⁄° Uöt16* 
§c0
,

116 c⁄° 
Uöt16
* 
§c1
, c⁄° Uöt16* 
§c2
, 
cou¡
)

120 
d°0
[0] = 
§c1
[0];

121 
d°1
[0] = 
§c1
[0];

122 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

123 
d°0
[1] =
§c0
[0];

125 
d°0
[1] =
§c1
[0];

126 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0])

127 
d°1
[1] =
§c2
[0];

129 
d°1
[1] =
§c1
[0];

130 ++
§c0
;

131 ++
§c1
;

132 ++
§c2
;

133 
d°0
 += 2;

134 
d°1
 += 2;

137 
cou¡
 -= 2;

139 
cou¡
)

141 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

142 
d°0
[0] = 
§c0
[0];

144 
d°0
[0] = 
§c1
[0];

145 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

146 
d°0
[1] =
§c0
[0];

148 
d°0
[1] =
§c1
[0];

150 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[1] != src2[0])

151 
d°1
[0] =(
§c2
[0]&0xf7de)>>1;

153 
d°1
[0] =(
§c1
[0]&0xf7de)>>1;

155 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[-1] != src2[0])

156 
d°1
[1] =(
§c2
[0]&0xf7de)>>1;

158 
d°1
[1] =(
§c1
[0]&0xf7de)>>1;

161 ++
§c0
;

162 ++
§c1
;

163 ++
§c2
;

164 
d°0
 += 2;

165 
d°1
 += 2;

166 --
cou¡
;

170 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

171 
d°0
[0] =
§c0
[0];

173 
d°0
[0] =
§c1
[0];

174 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0])

175 
d°1
[0] =
§c2
[0];

177 
d°1
[0] =
§c1
[0];

178 
d°0
[1] =
§c1
[0];

179 
d°1
[1] =
§c1
[0];

181 
	}
}

184 
ölöe
 
	$öã∫Æ_sˇÀ2x_16_def_75
(
Uöt16
* 
d°0
, Uöt16* 
d°1
, c⁄° Uöt16* 
§c0
,

185 c⁄° 
Uöt16
* 
§c1
, c⁄° Uöt16* 
§c2
, 
cou¡
)

189 
d°0
[0] = 
§c1
[0];

190 
d°1
[0] = 
§c1
[0];

191 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

192 
d°0
[1] =
§c0
[0];

194 
d°0
[1] =
§c1
[0];

195 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0])

196 
d°1
[1] =
§c2
[0];

198 
d°1
[1] =
§c1
[0];

199 ++
§c0
;

200 ++
§c1
;

201 ++
§c2
;

202 
d°0
 += 2;

203 
d°1
 += 2;

206 
cou¡
 -= 2;

208 
cou¡
)

210 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

211 
d°0
[0] = 
§c0
[0];

213 
d°0
[0] = 
§c1
[0];

214 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

215 
d°0
[1] =
§c0
[0];

217 
d°0
[1] =
§c1
[0];

219 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[1] != src2[0]) {

220 
d°1
[0] =(
§c2
[0]&0xf7de)>>1;

221 
d°1
[0] =((
§c2
[0]&0xf7de)>>1)+((dst1[0]&0xf7de)>>1);

223 
d°1
[0] =(
§c1
[0]&0xf7de)>>1;

224 
d°1
[0] =((
§c1
[0]&0xf7de)>>1)+((dst1[0]&0xf7de)>>1);

226 i‡(
§c1
[1] =
§c2
[0] && 
§c0
[0] != src2[0] && src1[-1] != src2[0]) {

227 
d°1
[1] =(
§c2
[0]&0xf7de)>>1;

228 
d°1
[1] =((
§c2
[0]&0xf7de)>>1)+((dst1[1]&0xf7de)>>1);

230 
d°1
[1] =(
§c1
[0]&0xf7de)>>1;

231 
d°1
[1] =((
§c1
[0]&0xf7de)>>1)+((dst1[1]&0xf7de)>>1);

234 ++
§c0
;

235 ++
§c1
;

236 ++
§c2
;

237 
d°0
 += 2;

238 
d°1
 += 2;

239 --
cou¡
;

243 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

244 
d°0
[0] =
§c0
[0];

246 
d°0
[0] =
§c1
[0];

247 i‡(
§c1
[-1] =
§c2
[0] && 
§c0
[0] != src2[0])

248 
d°1
[0] =
§c2
[0];

250 
d°1
[0] =
§c1
[0];

251 
d°0
[1] =
§c1
[0];

252 
d°1
[1] =
§c1
[0];

254 
	}
}

256 
	$ef„˘_sˇÀ2x_upd©e
()

258 
height
 = 
visibÀ_¨ó
.
h
;

260 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

261 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

263 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

264 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

265 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

266 
height
--)

268 #ifde‡
I386_ASM_DESACTIVE


269 
	`sˇÀ2x_16_mmx
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

271 
	`sˇÀ2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

274 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

275 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

277 
§c0
 += 352;

278 
§c1
 += 352;

279 
§c2
 += 352;

281 
	}
}

283 
	$ef„˘_sˇÀ4x_upd©e
()

285 
height
 =
visibÀ_¨ó
.
h
;

287 
d°0
 = (
Uöt16
 *)
sˇÀ4xtmp
->
pixñs
;

288 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

290 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

291 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

292 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

293 
height
--)

296 #ifde‡
I386_ASM_DESACTIVE


297 
	`sˇÀ2x_16_mmx
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

299 
	`sˇÀ2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

302 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

303 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

305 
§c0
 += 352;

306 
§c1
 += 352;

307 
§c2
 += 352;

310 
height
 = (
visibÀ_¨ó
.
h
<<1);

311 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

312 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<2);

314 
§c1
 = (
Uöt16
 *)
sˇÀ4xtmp
->
pixñs
 + (
visibÀ_¨ó
.
w
<<1);

315 
§c0
 = (
Uöt16
 *)
§c1
 - (
visibÀ_¨ó
.
w
<<1);

316 
§c2
 = (
Uöt16
 *)
§c1
 + (
visibÀ_¨ó
.
w
<<1);

317 
height
--)

319 #ifde‡
I386_ASM_DESACTIVE


320 
	`sˇÀ2x_16_mmx
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, (
visibÀ_¨ó
.
w
<<1));

322 
	`sˇÀ2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, (
visibÀ_¨ó
.
w
<<1));

325 
d°0
 +(
visibÀ_¨ó
.
w
<<3);

326 
d°1
 +(
visibÀ_¨ó
.
w
<<3);

328 
§c0
 +(
visibÀ_¨ó
.
w
<<1);

329 
§c1
 +(
visibÀ_¨ó
.
w
<<1);

330 
§c2
 +(
visibÀ_¨ó
.
w
<<1);

332 
	}
}

336 
	$ef„˘_sˇÀ3x_upd©e
()

338 
height
 = 
visibÀ_¨ó
.
h
;

340 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

341 
d°1
 = (
Uöt16
 *)
d°0
 + 
visibÀ_¨ó
.
w
*3;

342 
d°2
 = (
Uöt16
 *)
d°1
 + 
visibÀ_¨ó
.
w
*3;

344 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

345 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

346 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

347 
height
--)

350 
	`sˇÀ3x_16_def
(
d°0
, 
d°1
, 
d°2
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

352 
d°0
 +(
visibÀ_¨ó
.
w
*9);

353 
d°1
 +(
visibÀ_¨ó
.
w
*9);

354 
d°2
 +(
visibÀ_¨ó
.
w
*9);

356 
§c0
 += 352;

357 
§c1
 += 352;

358 
§c2
 += 352;

360 
	}
}

363 
	$ﬁd_ef„˘_sˇÀ2x_upd©e
()

365 
height
 = 224;

367 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

368 
d°1
 = (
Uöt16
 *)
d°0
 + 608;

370 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 336 * 16 + 16;

371 
§c0
 = (
Uöt16
 *)
§c1
 - 336;

372 
§c2
 = (
Uöt16
 *)
§c1
 + 336;

374 
height
--)

376 
	`öã∫Æ_sˇÀ2x_16_def
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 304);

378 
d°0
 += 608*2;

379 
d°1
 += 608*2;

381 
§c0
 += 336;

382 
§c1
 += 336;

383 
§c2
 += 336;

385 
	}
}

388 
	$ef„˘_sˇÀ2x50_upd©e
()

390 
height
 = 
visibÀ_¨ó
.
h
;

392 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

393 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

395 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

396 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

397 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

399 
height
--)

401 
	`öã∫Æ_sˇÀ2x_16_def_50
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

403 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

404 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

406 
§c0
 += 352;

407 
§c1
 += 352;

408 
§c2
 += 352;

410 
	}
}

413 
	$ef„˘_sˇÀ2x75_upd©e
()

415 
height
 = 
visibÀ_¨ó
.
h
;

417 
d°0
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

418 
d°1
 = (
Uöt16
 *)
d°0
 + (
visibÀ_¨ó
.
w
<<1);

420 
§c1
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 352 * 
visibÀ_¨ó
.
y
 + visibÀ_¨ó.
x
;

421 
§c0
 = (
Uöt16
 *)
§c1
 - 352;

422 
§c2
 = (
Uöt16
 *)
§c1
 + 352;

424 
height
--)

426 
	`öã∫Æ_sˇÀ2x_16_def_75
(
d°0
, 
d°1
, 
§c0
, 
§c1
, 
§c2
, 
visibÀ_¨ó
.
w
);

428 
d°0
 +(
visibÀ_¨ó
.
w
<<2);

429 
d°1
 +(
visibÀ_¨ó
.
w
<<2);

431 
§c0
 += 352;

432 
§c1
 += 352;

433 
§c2
 += 352;

435 
	}
}

	@src/effect/scale2x.h

35 #i‚de‡
__SCALE2X_H


36 
	#__SCALE2X_H


	)

38 
	~<as£π.h
>

43 
	tsˇÀ2x_Uöt8
;

44 
	tsˇÀ2x_Uöt16
;

45 
	tsˇÀ2x_Uöt32
;

52 
ölöe
 
	$sˇÀ2x_8_def_sögÀ
(
sˇÀ2x_Uöt8
* 
d°
, c⁄° sˇÀ2x_Uöt8* 
§c0
, c⁄° sˇÀ2x_Uöt8* 
§c1
, c⁄° sˇÀ2x_Uöt8* 
§c2
, 
cou¡
)

54 
	`as£π
(
cou¡
 >= 2);

57 
d°
[0] = 
§c1
[0];

58 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

59 
d°
[1] = 
§c0
[0];

61 
d°
[1] = 
§c1
[0];

62 ++
§c0
;

63 ++
§c1
;

64 ++
§c2
;

65 
d°
 += 2;

68 
cou¡
 -= 2;

70 
cou¡
) {

71 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

72 
d°
[0] = 
§c0
[0];

74 
d°
[0] = 
§c1
[0];

75 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

76 
d°
[1] = 
§c0
[0];

78 
d°
[1] = 
§c1
[0];

80 ++
§c0
;

81 ++
§c1
;

82 ++
§c2
;

83 
d°
 += 2;

84 --
cou¡
;

88 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

89 
d°
[0] = 
§c0
[0];

91 
d°
[0] = 
§c1
[0];

92 
d°
[1] = 
§c1
[0];

94 
	}
}

96 
ölöe
 
	$sˇÀ2x_16_def_sögÀ
(
sˇÀ2x_Uöt16
* 
d°
, c⁄° sˇÀ2x_Uöt16* 
§c0
, c⁄° sˇÀ2x_Uöt16* 
§c1
, c⁄° sˇÀ2x_Uöt16* 
§c2
, 
cou¡
)

98 
	`as£π
(
cou¡
 >= 2);

101 
d°
[0] = 
§c1
[0];

102 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

103 
d°
[1] = 
§c0
[0];

105 
d°
[1] = 
§c1
[0];

106 ++
§c0
;

107 ++
§c1
;

108 ++
§c2
;

109 
d°
 += 2;

112 
cou¡
 -= 2;

114 
cou¡
) {

115 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

116 
d°
[0] = 
§c0
[0];

118 
d°
[0] = 
§c1
[0];

119 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

120 
d°
[1] = 
§c0
[0];

122 
d°
[1] = 
§c1
[0];

124 ++
§c0
;

125 ++
§c1
;

126 ++
§c2
;

127 
d°
 += 2;

128 --
cou¡
;

132 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

133 
d°
[0] = 
§c0
[0];

135 
d°
[0] = 
§c1
[0];

136 
d°
[1] = 
§c1
[0];

138 
	}
}

140 
ölöe
 
	$sˇÀ2x_32_def_sögÀ
(
sˇÀ2x_Uöt32
* 
d°
, c⁄° sˇÀ2x_Uöt32* 
§c0
, c⁄° sˇÀ2x_Uöt32* 
§c1
, c⁄° sˇÀ2x_Uöt32* 
§c2
, 
cou¡
)

142 
	`as£π
(
cou¡
 >= 2);

145 
d°
[0] = 
§c1
[0];

146 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

147 
d°
[1] = 
§c0
[0];

149 
d°
[1] = 
§c1
[0];

150 ++
§c0
;

151 ++
§c1
;

152 ++
§c2
;

153 
d°
 += 2;

156 
cou¡
 -= 2;

158 
cou¡
) {

159 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

160 
d°
[0] = 
§c0
[0];

162 
d°
[0] = 
§c1
[0];

163 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

164 
d°
[1] = 
§c0
[0];

166 
d°
[1] = 
§c1
[0];

168 ++
§c0
;

169 ++
§c1
;

170 ++
§c2
;

171 
d°
 += 2;

172 --
cou¡
;

176 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

177 
d°
[0] = 
§c0
[0];

179 
d°
[0] = 
§c1
[0];

180 
d°
[1] = 
§c1
[0];

182 
	}
}

197 
ölöe
 
	$sˇÀ2x_8_def
(
sˇÀ2x_Uöt8
* 
d°0
, sˇÀ2x_Uöt8* 
d°1
, c⁄° sˇÀ2x_Uöt8* 
§c0
, c⁄° sˇÀ2x_Uöt8* 
§c1
, c⁄° sˇÀ2x_Uöt8* 
§c2
, 
cou¡
)

199 
	`as£π
(
cou¡
 >= 2);

201 
	`sˇÀ2x_8_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

202 
	`sˇÀ2x_8_def_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

203 
	}
}

216 
ölöe
 
	$sˇÀ2x_16_def
(
sˇÀ2x_Uöt16
* 
d°0
, sˇÀ2x_Uöt16* 
d°1
, c⁄° sˇÀ2x_Uöt16* 
§c0
, c⁄° sˇÀ2x_Uöt16* 
§c1
, c⁄° sˇÀ2x_Uöt16* 
§c2
, 
cou¡
)

218 
	`as£π
(
cou¡
 >= 2);

220 
	`sˇÀ2x_16_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

221 
	`sˇÀ2x_16_def_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

222 
	}
}

235 
ölöe
 
	$sˇÀ2x_32_def
(
sˇÀ2x_Uöt32
* 
d°0
, sˇÀ2x_Uöt32* 
d°1
, c⁄° sˇÀ2x_Uöt32* 
§c0
, c⁄° sˇÀ2x_Uöt32* 
§c1
, c⁄° sˇÀ2x_Uöt32* 
§c2
, 
cou¡
)

237 
	`as£π
(
cou¡
 >= 2);

239 
	`sˇÀ2x_32_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

240 
	`sˇÀ2x_32_def_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

241 
	}
}

246 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__i386__
)

286 
ölöe
 
	$sˇÀ2x_8_mmx_sögÀ
(
sˇÀ2x_Uöt8
* 
d°
, c⁄° sˇÀ2x_Uöt8* 
§c0
, c⁄° sˇÀ2x_Uöt8* 
§c1
, c⁄° sˇÀ2x_Uöt8* 
§c2
, 
cou¡
)

288 
	`as£π
(
cou¡
 >= 16);

289 
	`as£π
(
cou¡
 % 8 == 0);

292 
cou¡
 -= 2*8;

294 
__asm__
 
	`__vﬁ©ûe__
(

471 : "+r" (
§c0
), "+r" (
§c1
), "+r" (
§c2
), "+r" (
d°
), "+r" (
cou¡
)

475 
	}
}

477 
ölöe
 
	$sˇÀ2x_16_mmx_sögÀ
(
sˇÀ2x_Uöt16
* 
d°
, c⁄° sˇÀ2x_Uöt16* 
§c0
, c⁄° sˇÀ2x_Uöt16* 
§c1
, c⁄° sˇÀ2x_Uöt16* 
§c2
, 
cou¡
)

479 
	`as£π
(
cou¡
 >= 8);

480 
	`as£π
(
cou¡
 % 4 == 0);

483 
cou¡
 -= 2*4;

485 
__asm__
 
	`__vﬁ©ûe__
(

662 : "+r" (
§c0
), "+r" (
§c1
), "+r" (
§c2
), "+r" (
d°
), "+r" (
cou¡
)

666 
	}
}

668 
ölöe
 
	$sˇÀ2x_32_mmx_sögÀ
(
sˇÀ2x_Uöt32
* 
d°
, c⁄° sˇÀ2x_Uöt32* 
§c0
, c⁄° sˇÀ2x_Uöt32* 
§c1
, c⁄° sˇÀ2x_Uöt32* 
§c2
, 
cou¡
)

670 
	`as£π
(
cou¡
 >= 4);

671 
	`as£π
(
cou¡
 % 2 == 0);

674 
cou¡
 -= 2*2;

676 
__asm__
 
	`__vﬁ©ûe__
(

853 : "+r" (
§c0
), "+r" (
§c1
), "+r" (
§c2
), "+r" (
d°
), "+r" (
cou¡
)

857 
	}
}

880 
ölöe
 
	$sˇÀ2x_8_mmx
(
sˇÀ2x_Uöt8
* 
d°0
, sˇÀ2x_Uöt8* 
d°1
, c⁄° sˇÀ2x_Uöt8* 
§c0
, c⁄° sˇÀ2x_Uöt8* 
§c1
, c⁄° sˇÀ2x_Uöt8* 
§c2
, 
cou¡
)

882 
	`as£π
(
cou¡
 >= 16);

883 
	`as£π
(
cou¡
 % 8 == 0);

885 
	`sˇÀ2x_8_mmx_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

886 
	`sˇÀ2x_8_mmx_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

887 
	}
}

900 
ölöe
 
	$sˇÀ2x_16_mmx
(
sˇÀ2x_Uöt16
* 
d°0
, sˇÀ2x_Uöt16* 
d°1
, c⁄° sˇÀ2x_Uöt16* 
§c0
, c⁄° sˇÀ2x_Uöt16* 
§c1
, c⁄° sˇÀ2x_Uöt16* 
§c2
, 
cou¡
)

902 
	`as£π
(
cou¡
 >= 8);

903 
	`as£π
(
cou¡
 % 4 == 0);

905 
	`sˇÀ2x_16_mmx_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

906 
	`sˇÀ2x_16_mmx_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

907 
	}
}

920 
ölöe
 
	$sˇÀ2x_32_mmx
(
sˇÀ2x_Uöt32
* 
d°0
, sˇÀ2x_Uöt32* 
d°1
, c⁄° sˇÀ2x_Uöt32* 
§c0
, c⁄° sˇÀ2x_Uöt32* 
§c1
, c⁄° sˇÀ2x_Uöt32* 
§c2
, 
cou¡
)

922 
	`as£π
(
cou¡
 >= 4);

923 
	`as£π
(
cou¡
 % 2 == 0);

925 
	`sˇÀ2x_32_mmx_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

926 
	`sˇÀ2x_32_mmx_sögÀ
(
d°1
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

927 
	}
}

	@src/effect/scale3x.h

35 #i‚de‡
__SCALE3X_H


36 
	#__SCALE3X_H


	)

38 
	~<as£π.h
>

43 
	tsˇÀ3x_Uöt8
;

44 
	tsˇÀ3x_Uöt16
;

45 
	tsˇÀ3x_Uöt32
;

50 
	$sˇÀ3x_8_def_sögÀ
(
sˇÀ3x_Uöt8
* 
d°
, c⁄° sˇÀ3x_Uöt8* 
§c0
, c⁄° sˇÀ3x_Uöt8* 
§c1
, c⁄° sˇÀ3x_Uöt8* 
§c2
, 
cou¡
)

52 
	`as£π
(
cou¡
 >= 2);

55 
d°
[0] = 
§c1
[0];

56 
d°
[1] = 
§c1
[0];

57 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

58 
d°
[2] = 
§c0
[0];

60 
d°
[2] = 
§c1
[0];

61 ++
§c0
;

62 ++
§c1
;

63 ++
§c2
;

64 
d°
 += 3;

67 
cou¡
 -= 2;

68 
cou¡
) {

69 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

70 
d°
[0] = 
§c0
[0];

72 
d°
[0] = 
§c1
[0];

73 
d°
[1] = 
§c1
[0];

74 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

75 
d°
[2] = 
§c0
[0];

77 
d°
[2] = 
§c1
[0];

79 ++
§c0
;

80 ++
§c1
;

81 ++
§c2
;

83 
d°
 += 3;

84 --
cou¡
;

88 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

89 
d°
[0] = 
§c0
[0];

91 
d°
[0] = 
§c1
[0];

92 
d°
[1] = 
§c1
[0];

93 
d°
[2] = 
§c1
[0];

94 
	}
}

96 
	$sˇÀ3x_8_def_fûl
(
sˇÀ3x_Uöt8
* 
d°
, c⁄° sˇÀ3x_Uöt8* 
§c
, 
cou¡
)

98 
cou¡
) {

99 
d°
[0] = 
§c
[0];

100 
d°
[1] = 
§c
[0];

101 
d°
[2] = 
§c
[0];

103 ++
§c
;

104 
d°
 += 3;

105 --
cou¡
;

107 
	}
}

109 
	$sˇÀ3x_16_def_sögÀ
(
sˇÀ3x_Uöt16
* 
d°
, c⁄° sˇÀ3x_Uöt16* 
§c0
, c⁄° sˇÀ3x_Uöt16* 
§c1
, c⁄° sˇÀ3x_Uöt16* 
§c2
, 
cou¡
)

111 
	`as£π
(
cou¡
 >= 2);

114 
d°
[0] = 
§c1
[0];

115 
d°
[1] = 
§c1
[0];

116 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

117 
d°
[2] = 
§c0
[0];

119 
d°
[2] = 
§c1
[0];

120 ++
§c0
;

121 ++
§c1
;

122 ++
§c2
;

123 
d°
 += 3;

126 
cou¡
 -= 2;

127 
cou¡
) {

128 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

129 
d°
[0] = 
§c0
[0];

131 
d°
[0] = 
§c1
[0];

132 
d°
[1] = 
§c1
[0];

133 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

134 
d°
[2] = 
§c0
[0];

136 
d°
[2] = 
§c1
[0];

138 ++
§c0
;

139 ++
§c1
;

140 ++
§c2
;

142 
d°
 += 3;

143 --
cou¡
;

147 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

148 
d°
[0] = 
§c0
[0];

150 
d°
[0] = 
§c1
[0];

151 
d°
[1] = 
§c1
[0];

152 
d°
[2] = 
§c1
[0];

153 
	}
}

155 
	$sˇÀ3x_16_def_fûl
(
sˇÀ3x_Uöt16
* 
d°
, c⁄° sˇÀ3x_Uöt16* 
§c
, 
cou¡
)

157 
cou¡
) {

158 
d°
[0] = 
§c
[0];

159 
d°
[1] = 
§c
[0];

160 
d°
[2] = 
§c
[0];

162 ++
§c
;

163 
d°
 += 3;

164 --
cou¡
;

166 
	}
}

168 
	$sˇÀ3x_32_def_sögÀ
(
sˇÀ3x_Uöt32
* 
d°
, c⁄° sˇÀ3x_Uöt32* 
§c0
, c⁄° sˇÀ3x_Uöt32* 
§c1
, c⁄° sˇÀ3x_Uöt32* 
§c2
, 
cou¡
)

170 
	`as£π
(
cou¡
 >= 2);

173 
d°
[0] = 
§c1
[0];

174 
d°
[1] = 
§c1
[0];

175 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0])

176 
d°
[2] = 
§c0
[0];

178 
d°
[2] = 
§c1
[0];

179 ++
§c0
;

180 ++
§c1
;

181 ++
§c2
;

182 
d°
 += 3;

185 
cou¡
 -= 2;

186 
cou¡
) {

187 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[1] != src0[0])

188 
d°
[0] = 
§c0
[0];

190 
d°
[0] = 
§c1
[0];

191 
d°
[1] = 
§c1
[0];

192 i‡(
§c1
[1] =
§c0
[0] && 
§c2
[0] != src0[0] && src1[-1] != src0[0])

193 
d°
[2] = 
§c0
[0];

195 
d°
[2] = 
§c1
[0];

197 ++
§c0
;

198 ++
§c1
;

199 ++
§c2
;

201 
d°
 += 3;

202 --
cou¡
;

206 i‡(
§c1
[-1] =
§c0
[0] && 
§c2
[0] != src0[0])

207 
d°
[0] = 
§c0
[0];

209 
d°
[0] = 
§c1
[0];

210 
d°
[1] = 
§c1
[0];

211 
d°
[2] = 
§c1
[0];

212 
	}
}

214 
	$sˇÀ3x_32_def_fûl
(
sˇÀ3x_Uöt32
* 
d°
, c⁄° sˇÀ3x_Uöt32* 
§c
, 
cou¡
)

216 
cou¡
) {

217 
d°
[0] = 
§c
[0];

218 
d°
[1] = 
§c
[0];

219 
d°
[2] = 
§c
[0];

221 ++
§c
;

222 
d°
 += 3;

223 --
cou¡
;

225 
	}
}

241 
ölöe
 
	$sˇÀ3x_8_def
(
sˇÀ3x_Uöt8
* 
d°0
, sˇÀ3x_Uöt8* 
d°1
, sˇÀ3x_Uöt8* 
d°2
, c⁄° sˇÀ3x_Uöt8* 
§c0
, c⁄° sˇÀ3x_Uöt8* 
§c1
, c⁄° sˇÀ3x_Uöt8* 
§c2
, 
cou¡
)

243 
	`as£π
(
cou¡
 >= 2);

245 
	`sˇÀ3x_8_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

246 
	`sˇÀ3x_8_def_fûl
(
d°1
, 
§c1
, 
cou¡
);

247 
	`sˇÀ3x_8_def_sögÀ
(
d°2
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

248 
	}
}

262 
ölöe
 
	$sˇÀ3x_16_def
(
sˇÀ3x_Uöt16
* 
d°0
, sˇÀ3x_Uöt16* 
d°1
, sˇÀ3x_Uöt16* 
d°2
, c⁄° sˇÀ3x_Uöt16* 
§c0
, c⁄° sˇÀ3x_Uöt16* 
§c1
, c⁄° sˇÀ3x_Uöt16* 
§c2
, 
cou¡
)

264 
	`as£π
(
cou¡
 >= 2);

266 
	`sˇÀ3x_16_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

267 
	`sˇÀ3x_16_def_fûl
(
d°1
, 
§c1
, 
cou¡
);

268 
	`sˇÀ3x_16_def_sögÀ
(
d°2
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

269 
	}
}

283 
ölöe
 
	$sˇÀ3x_32_def
(
sˇÀ3x_Uöt32
* 
d°0
, sˇÀ3x_Uöt32* 
d°1
, sˇÀ3x_Uöt32* 
d°2
, c⁄° sˇÀ3x_Uöt32* 
§c0
, c⁄° sˇÀ3x_Uöt32* 
§c1
, c⁄° sˇÀ3x_Uöt32* 
§c2
, 
cou¡
)

285 
	`as£π
(
cou¡
 >= 2);

287 
	`sˇÀ3x_32_def_sögÀ
(
d°0
, 
§c0
, 
§c1
, 
§c2
, 
cou¡
);

288 
	`sˇÀ3x_32_def_fûl
(
d°1
, 
§c1
, 
cou¡
);

289 
	`sˇÀ3x_32_def_sögÀ
(
d°2
, 
§c2
, 
§c1
, 
§c0
, 
cou¡
);

290 
	}
}

	@src/effect/scanline.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~"SDL.h
"

7 
	~"../s¸ìn.h
"

8 
	~"../video.h
"

9 
	~"../gnutû.h
"

13 
do_ö√r_doubÀx_i386
(*
d°
,*
§c
,
s¸ìnw
,
s¸ình
,
sx
);

16 
	$ef„˘_sˇ∆öe_öô
()

22  
GN_TRUE
;

23 
	}
}

26 
	$ef„˘_sˇ∆öe_upd©e
()

28 
Uöt16
 *
§c
, *
d°
;

29 
Uöt32
 
s
, 
d
;

30 
Uöt8
 
h
, 
w
;

31 
i
=0;

33 
§c
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + (352 << 4);

34 
d°
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

36 
h
 = 
visibÀ_¨ó
.h; h > 0; h--)

38 
w
 = 
visibÀ_¨ó
.w>>1; w > 0; w--)

40 
s
 = *(
Uöt32
 *)
§c
;

41 #ifde‡
WORDS_BIGENDIAN


42 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

43 *(
Uöt32
 *)(
d°
Ë
d
;

45 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

46 *(
Uöt32
 *)(
d°
+2Ë
d
;

48 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

49 *(
Uöt32
 *)(
d°
+2Ë
d
;

51 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

52 *(
Uöt32
 *)(
d°
Ë
d
;

55 
d°
 += 4;

56 
§c
 += 2;

58 
§c
 +(
visibÀ_¨ó
.
x
<<1);

59 
d°
 +(
visibÀ_¨ó
.
w
<<1);

61 
	}
}

64 
	$ef„˘_sˇ∆öe50_upd©e
()

66 
Uöt16
 *
§c
, *
d°
;

67 
Uöt32
 
s
, 
d
;

68 
Uöt8
 
h
, 
w
;

70 
§c
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + (352 << 4);

71 
d°
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + 
ys¸ì≈addög
;

74 
h
 = 
visibÀ_¨ó
.h; h > 0; h--)

76 
w
 = 
visibÀ_¨ó
.w>>1; w > 0; w--)

78 
s
 = *(
Uöt32
 *)
§c
;

79 #ifde‡
WORDS_BIGENDIAN


80 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

81 *(
Uöt32
 *)(
d°
Ë
d
;

82 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)Ë(
d
 & 0xf7def7de) >> 1;

84 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

85 *(
Uöt32
 *)(
d°
+2Ë
d
;

86 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)+2Ë(
d
 & 0xf7def7de) >> 1;

88 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

89 *(
Uöt32
 *)(
d°
+2Ë
d
;

90 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)+2Ë(
d
 & 0xf7def7de) >> 1;

92 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

93 *(
Uöt32
 *)(
d°
Ë
d
;

94 *(
Uöt32
 *)(
d°
+(
visibÀ_¨ó
.
w
<<1)Ë(
d
 & 0xf7def7de) >> 1;

96 
d°
 += 4;

97 
§c
 += 2;

99 
§c
 +(
visibÀ_¨ó
.
x
<<1);

100 
d°
 +(
visibÀ_¨ó
.
w
<<1);

102 
	}
}

104 
	$ef„˘_doubÀx_upd©e
()

106 
Uöt16
 *
§c
, *
d°
;

107 
Uöt32
 
s
, 
d
;

108 
Uöt8
 
h
, 
w
;

110 
§c
 = (
Uöt16
 *)
buf„r
->
pixñs
 + 
visibÀ_¨ó
.
x
 + (352 << 4);

111 
d°
 = (
Uöt16
 *)
s¸ìn
->
pixñs
 + (
ys¸ì≈addög
>>1);

113 #ifde‡
I386_ASM


114 
	`do_ö√r_doubÀx_i386
(
d°
,
§c
,
visibÀ_¨ó
.
w
>>1,visibÀ_¨ó.
h
,visibÀ_¨ó.
x
);

117 
h
 = 
visibÀ_¨ó
.h; h > 0; h--)

119 
w
 = 
visibÀ_¨ó
.w>>1; w > 0; w--)

121 
s
 = *(
Uöt32
 *)
§c
;

122 #ifde‡
WORDS_BIGENDIAN


123 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

124 *(
Uöt32
 *)(
d°
Ë
d
;

126 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

127 *(
Uöt32
 *)(
d°
+2Ë
d
;

129 
d
 = (
s
 & 0xFFFF0000) + ((s & 0xFFFF0000)>>16);

130 *(
Uöt32
 *)(
d°
+2Ë
d
;

132 
d
 = (
s
 & 0x0000FFFF) + ((s & 0x0000FFFF)<<16);

133 *(
Uöt32
 *)(
d°
Ë
d
;

136 
d°
 += 4;

137 
§c
 += 2;

139 
§c
 +(
visibÀ_¨ó
.
x
<<1);

143 
	}
}

	@src/emu.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~"SDL.h
"

25 
	~<°rög.h
>

26 
	~<°dlib.h
>

27 
	~<time.h
>

29 
	~"emu.h
"

30 
	~"mem‹y.h
"

31 
	~"‰ame_skù.h
"

32 
	~"pd4990a.h
"

33 
	~"mesßges.h
"

34 
	~"¥ofûî.h
"

35 
	~"debug.h
"

37 
	~"timî.h
"

39 
	~"ym2610/2610ötf.h
"

40 
	~"sound.h
"

41 
	~"s¸ìn.h
"

42 
	~"√o¸y±.h
"

43 
	~"c⁄f.h
"

46 #ifde‡
FULL_GL


47 
	~"videogl.h
"

49 #ifde‡
GP2X


50 
	~"gp2x.h
"

52 
	~"ym2610-940/940sh¨ed.h
"

53 
	~"ym2610-940/940¥iv©e.h
"

55 
	~"míu.h
"

56 
	~"evít.h
"

58 
	g‰ame
;

59 
	gnb_öãæa˚
 = 256;

60 
	gcuºít_löe
;

68 
	$£tup_misc_∑tch
(*
«me
) {

71 i‡(!
	`°rcmp
(
«me
, "ssideki")) {

72 
	`WRITE_WORD_ROM
(&
mem‹y
.
rom
.
˝u_m68k
.
p
[0x2240], 0x4e71);

79 i‡(!
	`°rcmp
(
«me
, "mslugx")) {

81 
i
;

82 
Uöt8
 *
RAM
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

83 
i
 = 0; i < 
mem‹y
.
rom
.
˝u_m68k
.
size
; i += 2) {

84 i‡((
	`READ_WORD_ROM
(&
RAM
[
i
 + 0]) == 0x0243)

85 && (
	`READ_WORD_ROM
(&
RAM
[
i
 + 2]) == 0x0001) &&

86 (
	`READ_WORD_ROM
(&
RAM
[
i
 + 4]) == 0x6600)) {

88 
	`WRITE_WORD_ROM
(&
RAM
[
i
 + 4], 0x4e71);

89 
	`WRITE_WORD_ROM
(&
RAM
[
i
 + 6], 0x4e71);

93 
	`WRITE_WORD_ROM
(&
RAM
[0x3bdc], 0x4e71);

94 
	`WRITE_WORD_ROM
(&
RAM
[0x3bde], 0x4e71);

95 
	`WRITE_WORD_ROM
(&
RAM
[0x3be0], 0x4e71);

96 
	`WRITE_WORD_ROM
(&
RAM
[0x3c0c], 0x4e71);

97 
	`WRITE_WORD_ROM
(&
RAM
[0x3c0e], 0x4e71);

98 
	`WRITE_WORD_ROM
(&
RAM
[0x3c10], 0x4e71);

100 
	`WRITE_WORD_ROM
(&
RAM
[0x3c36], 0x4e71);

101 
	`WRITE_WORD_ROM
(&
RAM
[0x3c38], 0x4e71);

104 
	}
}

106 
	$√ogeo_ª£t
() {

108 
§am_lock
 = 0;

109 
sound_code
 = 0;

110 
≥ndög_comm™d
 = 0;

111 
ªsu…_code
 = 0;

112 #ifde‡
ENABLE_940T


113 
sh¨ed_˘l
->
sound_code
 = sound_code;

114 
sh¨ed_˘l
->
≥ndög_comm™d
 =Öending_command;

115 
sh¨ed_˘l
->
ªsu…_code
 =Ñesult_code;

117 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 > 0x100000)

118 
	`˝u_68k_b™kswôch
(0x100000);

120 
	`˝u_68k_b™kswôch
(0);

121 
	`˝u_68k_ª£t
();

123 
	}
}

125 
	$öô_sound
() {

127 i‡(
c⁄f
.
sound
Ë
	`öô_sdl_audio
();

129 #ifde‡
ENABLE_940T


130 
	`¥ötf
("InitállÇeo");

131 
sh¨ed_d©a
->
ßm∂e_øã
 = 
c⁄f
.sample_rate;

132 
sh¨ed_d©a
->
z80_cy˛e
 = (
z80_ovî˛k
 == 0 ? 73333 : 73333

133 + (
z80_ovî˛k
 * 73333 / 100.0));

135 
	`gp2x_add_job940
(
JOB940_INITALL
);

136 
	`waô_busy_940
(
JOB940_INITALL
);

137 
	`¥ötf
("The YM2610 have been initialized\n");

139 
	`˝u_z80_öô
();

141 
	`YM2610_sh_°¨t
();

143 i‡(
c⁄f
.
sound
Ë
	`∑u£_audio
(0);

145 
	}
}

147 
	$öô_√o
() {

148 #ifde‡
ENABLE_940T


149 
z80_ovî˛k
 = 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("z80clock"));

152 
	`√ogeo_öô_ßve_°©e
();

154 #ifde‡
GP2X


155 
	`gp2x_øm_±r_ª£t
();

158 
	`˝u_68k_öô
();

160 
	`pd4990a_öô
();

163 
	`öô_sound
();

165 
	`√ogeo_ª£t
();

166 
	}
}

168 
	$èke_s¸ìnshŸ
() {

169 
time_t
 
…ime
;

170 
tm
 *
today
;

171 
buf
[256];

172 
d©e_°r
[101];

174 
SDL_Re˘
 
s¸ìn_ª˘
 = { 0, 0, 304, 224 };

175 
SDL_SurÁ˚
 *
shoŸ
;

177 
s¸ìn_ª˘
.
w
 = 
visibÀ_¨ó
.w;

178 
s¸ìn_ª˘
.
h
 = 
visibÀ_¨ó
.h;

180 i‡(
shoŸ
 =
NULL
)

181 
shoŸ
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 
visibÀ_¨ó
.
w
,

182 
visibÀ_¨ó
.
h
, 16, 0xF800, 0x7E0, 0x1F, 0);

184 
	`time
(&
…ime
);

185 
today
 = 
	`loˇ…ime
(&
…ime
);

186 #i‡
	`deföed
 (
__AMIGA__
)

187 
	`°r·ime
 (
d©e_°r
,100,"%Y%m%d_%H%M",
today
);

188 
	`¢¥ötf
(
buf
,255,"%s/%s_%s.bmp","/PROGDIR/shŸs",
c⁄f
.
game
,
d©e_°r
);

190 
	`°r·ime
(
d©e_°r
, 100, "%a_%b_%d_%T_%Y", 
today
);

191 
	`¢¥ötf
(
buf
, 255, "%s/%s_%s.bmp", 
	`gëív
("HOME"), 
c⁄f
.
game
, 
d©e_°r
);

193 
	`¥ötf
("ßvêtÿ%s\n", 
buf
);

195 
	`SDL_BlôSurÁ˚
(
buf„r
, &
visibÀ_¨ó
, 
shoŸ
, &
s¸ìn_ª˘
);

196 
	`SDL_SaveBMP
(
shoŸ
, 
buf
);

197 
	}
}

199 
	gfc
;

200 
	gœ°_löe
;

201 
	gskù_this_‰ame
 = 0;

203 
ölöe
 
	$√o_öãºu±
() {

204 
‰ames
;

206 
	`pd4990a_addªåa˚
();

208 i‡(!(
mem‹y
.
vid
.
úq2c⁄åﬁ
 & 0x8)) {

209 i‡(
fc
 >
√ogeo_‰ame_cou¡î_•ìd
) {

210 
fc
 = 0;

211 
√ogeo_‰ame_cou¡î
++;

213 
fc
++;

216 
skù_this_‰ame
 = 
skù_√xt_‰ame
;

217 
skù_√xt_‰ame
 = 
	`‰ame_skù
(0);

219 i‡(!
skù_this_‰ame
) {

220 
	`PROFILER_START
(
PROF_VIDEO
);

222 
	`døw_s¸ìn
();

224 
	`PROFILER_STOP
(
PROF_VIDEO
);

238 
	}
}

240 
ölöe
 
	$upd©e_s¸ìn
() {

242 i‡(
mem‹y
.
vid
.
úq2c⁄åﬁ
 & 0x40)

243 
mem‹y
.
vid
.
úq2°¨t
 = (mem‹y.vid.
úq2pos
 + 3) / 0x180;

245 
mem‹y
.
vid
.
úq2°¨t
 = 1000;

247 i‡(!
skù_this_‰ame
) {

248 i‡(
œ°_löe
 < 21) {

250 
	`døw_s¸ìn
();

252 
	`døw_s¸ìn_sˇ∆öe
(
œ°_löe
 - 21, 262, 1);

256 
œ°_löe
 = 0;

258 
	`pd4990a_addªåa˚
();

259 i‡(
fc
 >
√ogeo_‰ame_cou¡î_•ìd
) {

260 
fc
 = 0;

261 
√ogeo_‰ame_cou¡î
++;

263 
fc
++;

265 
skù_this_‰ame
 = 
skù_√xt_‰ame
;

266 
skù_√xt_‰ame
 = 
	`‰ame_skù
(0);

267 
	}
}

269 
ölöe
 
	$upd©e_sˇ∆öe
() {

270 
mem‹y
.
vid
.
úq2èkí
 = 0;

272 i‡(
mem‹y
.
vid
.
úq2c⁄åﬁ
 & 0x10) {

274 i‡(
cuºít_löe
 =
mem‹y
.
vid
.
úq2°¨t
) {

275 i‡(
mem‹y
.
vid
.
úq2c⁄åﬁ
 & 0x80)

276 
mem‹y
.
vid
.
úq2°¨t
 +(mem‹y.vid.
úq2pos
 + 3) / 0x180;

277 
mem‹y
.
vid
.
úq2èkí
 = 1;

281 i‡(
mem‹y
.
vid
.
úq2èkí
) {

282 i‡(!
skù_this_‰ame
) {

283 i‡(
œ°_löe
 < 21)

284 
œ°_löe
 = 21;

285 i‡(
cuºít_löe
 < 20)

286 
cuºít_löe
 = 20;

287 
	`døw_s¸ìn_sˇ∆öe
(
œ°_löe
 - 21, 
cuºít_löe
 - 20, 0);

289 
œ°_löe
 = 
cuºít_löe
;

291 
cuºít_löe
++;

292  
mem‹y
.
vid
.
úq2èkí
;

293 
	}
}

295 
	g¶ow_mŸi⁄
 = 0;

297 
	$maö_lo›
() {

298 
√o_emu_d⁄e
 = 0;

299 
m68k_ovî˛k
 = 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("68kclock"));

300 
z80_ovî˛k
 = 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("z80clock"));

302 
a
,
i
;

303 #ifde‡
GP2X


305 
¢d_vﬁume
 = 60;

306 
vﬁbuf
[21];

308 
FILE
 *
¢dbuf
;

309 
ßm∂e_Àn
 = 
c⁄f
.
ßm∂e_øã
 / 60.0;

310 
gp2x_timî
;

311 
gp2x_timî_¥ev
;

313 
SDL_Re˘
 
buf_ª˘
 = { 24, 16, 304, 224 };

314 
SDL_Re˘
 
s¸ìn_ª˘
 = { 0, 0, 304, 224 };

315 
Uöt32
 
˝u_68k_time¶i˚
 = (
m68k_ovî˛k
 == 0 ? 200000 : 200000

316 + (
m68k_ovî˛k
 * 200000 / 100.0));

317 
Uöt32
 
˝u_68k_time¶i˚_sˇ∆öe
 = 
˝u_68k_time¶i˚
 / 264.0;

318 
Uöt32
 
˝u_z80_time¶i˚
 = (
z80_ovî˛k
 == 0 ? 73333 : 73333 + (z80_overclk

320 
Uöt32
 
tm_cy˛e
 = 0;

322 
Uöt32
 
˝u_z80_time¶i˚_öãæa˚
 = 
˝u_z80_time¶i˚


323 / (Ë
nb_öãæa˚
;

325 #ifde‡
GP2X


326 
	`gp2x_sound_vﬁume_£t
(
¢d_vﬁume
, snd_volume);

329 
	`ª£t_‰ame_skù
();

330 
	`my_timî
();

333 !
√o_emu_d⁄e
) {

334 i‡(
c⁄f
.
ã°_swôch
 == 1)

335 
c⁄f
.
ã°_swôch
 = 0;

338 i‡(
	`h™dÀ_evít
()) {

339 
öãΩ
 = 
öãΩﬁ©i⁄
;

340 
	`SDL_BlôSurÁ˚
(
buf„r
, &
buf_ª˘
, 
°©e_img
, &
s¸ìn_ª˘
);

341 
öãΩﬁ©i⁄
 = 0;

342 i‡(
c⁄f
.
sound
Ë
	`∑u£_audio
(1);

343 i‡(
	`run_míu
() == 2) {

344 
√o_emu_d⁄e
 = 1;

347 i‡(
c⁄f
.
sound
Ë
	`∑u£_audio
(0);

349 
öãΩﬁ©i⁄
 = 
öãΩ
;

350 
	`ª£t_‰ame_skù
();

351 
	`ª£t_evít
();

355 
	`SDL_PﬁlEvít
(&
evít
)) {

356 
evít
.
ty≥
) {

357 
SDL_JOYAXISMOTION
:

358 i‡(
evít
.
jaxis
.
vÆue
 >5000 ||Évent.jaxis.value<-5000)

359 
	`¥ötf
("AXE %d %d dú %d\n",
evít
.
jaxis
.
which
,evít.jaxis.
axis
,evít.jaxis.
vÆue
);

360 
joy_axe
[
evít
.
jaxis
.
which
][evít.jaxis.
axis
] =Évít.jaxis.
vÆue
;

361 i‡(
show_keysym
) {

362 
	`•rötf
(
ksym_code
, "%d", 
evít
.
jaxis
.
axis
);

363 
	`døw_mesßge
(
ksym_code
);

367 
SDL_JOYHATMOTION
:

368 
	`¥ötf
("HAT %d dú %d\n",
evít
.
jh©
.
which
,evít.jh©.
vÆue
);

369 
evít
.
jh©
.
vÆue
) {

370 
SDL_HAT_CENTERED
:

371 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 0;

372 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 0;

375 
SDL_HAT_UP
:

376 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = -32767;

377 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 0;

380 
SDL_HAT_DOWN
:

381 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 32767;

382 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 0;

385 
SDL_HAT_LEFT
:

386 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = -32767;

387 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 0;

390 
SDL_HAT_RIGHT
:

391 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 32767;

392 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 0;

395 
SDL_HAT_RIGHTUP
:

396 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 32767;

397 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = -32767;

400 
SDL_HAT_RIGHTDOWN
:

401 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = 32767;

402 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 32767;

405 
SDL_HAT_LEFTUP
:

406 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = -32767;

407 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = -32767;

410 
SDL_HAT_LEFTDOWN
:

411 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which]] = -32767;

412 
joy_axe
[
evít
.
jh©
.
which
][”vít.jh©.
h©
 * 2Ë+ 
joy_numaxes
[event.jhat.which] + 1] = 32767;

417 i‡(
show_keysym
) {

418 
	`•rötf
(
ksym_code
, "%d", 
evít
.
jh©
.
h©
);

419 
	`døw_mesßge
(
ksym_code
);

423 
SDL_JOYBUTTONDOWN
:

424 
joy_buâ⁄
[
evít
.
jbuâ⁄
.
which
][evít.jbuâ⁄.
buâ⁄
] = 1;

427 i‡(
show_keysym
) {

428 
	`•rötf
(
ksym_code
, "%d", 
evít
.
jbuâ⁄
.
buâ⁄
);

429 
	`døw_mesßge
(
ksym_code
);

431 #ifde‡
GP2X


432 i‡((
joy_buâ⁄
[0][
GP2X_VOL_UP
]Ë&& 
c⁄f
.
sound
) {

433 i‡(
¢d_vﬁume
<100) snd_volume+=5; snd_volume=100;

434 
	`gp2x_sound_vﬁume_£t
(
¢d_vﬁume
,snd_volume);

435 
i
=0;i<
¢d_vﬁume
/5;i++Ë
vﬁbuf
[i]='|';

436 
i
=
¢d_vﬁume
/5;i<20;i++Ë
vﬁbuf
[i]='-';

437 
vﬁbuf
[20]=0;

438 
	`døw_mesßge
(
vﬁbuf
);

440 i‡((
joy_buâ⁄
[0][
GP2X_VOL_DOWN
] && 
c⁄f
.
sound
)) {

441 i‡(
¢d_vﬁume
>0) snd_volume-=5; snd_volume=0;

442 
	`gp2x_sound_vﬁume_£t
(
¢d_vﬁume
,snd_volume);

443 
i
=0;i<
¢d_vﬁume
/5;i++Ë
vﬁbuf
[i]='|';

444 
i
=
¢d_vﬁume
/5;i<20;i++Ë
vﬁbuf
[i]='-';

445 
vﬁbuf
[20]=0;

446 
	`døw_mesßge
(
vﬁbuf
);

448 i‡((
joy_buâ⁄
[0][
GP2X_PUSH
]) &&

449 (
joy_buâ⁄
[0][
GP2X_VOL_DOWN
]) &&

450 (
joy_buâ⁄
[0][
GP2X_VOL_UP
]) ) {

452 
	`døw_mesßge
("Test Switch ON");

453 
c⁄f
.
ã°_swôch
 = 1;

457 i‡(
joy_buâ⁄
[0][
GP2X_R
] && joy_buâ⁄[0][
GP2X_L
] &&

458 (
joy_buâ⁄
[0][
GP2X_START
] || joy_buâ⁄[0][
GP2X_SELECT
])) {

459 
joy_buâ⁄
[0][
GP2X_R
] = joy_buâ⁄[0][
GP2X_L
] = 0;

460 
joy_buâ⁄
[0][
GP2X_START
] = joy_buâ⁄[0][
GP2X_SELECT
] = 0;

462 
	`SDL_BlôSurÁ˚
(
buf„r
, &
buf_ª˘
, 
°©e_img
, &
s¸ìn_ª˘
);

463 i‡(
c⁄f
.
sound
Ë{
	`∑u£_audio
(1); 
	`SDL_LockAudio
();}

464 i‡(
	`run_míu
()==2Ë{
√o_emu_d⁄e
 = 1;
	`SDL_U∆ockAudio
();}

465 i‡(
c⁄f
.
sound
Ë{
	`∑u£_audio
(0); 
	`SDL_U∆ockAudio
();}

467 
	`ª£t_‰ame_skù
();

480 
SDL_JOYBUTTONUP
:

481 
joy_buâ⁄
[
evít
.
jbuâ⁄
.
which
][evít.jbuâ⁄.
buâ⁄
] = 0;

483 #i‚de‡
GP2X


484 
SDL_KEYUP
:

485 
key
[
evít
.key.
keysym
.
sym
] = 0;

487 
SDL_KEYDOWN
:

488 
sˇncode
 = 
evít
.
key
.
keysym
.
sym
;

489 i‡(
show_keysym
) {

490 
	`•rötf
(
ksym_code
, "%d", 
sˇncode
);

491 
	`døw_mesßge
(
ksym_code
);

493 
key
[
sˇncode
] = 1;

495 
sˇncode
) {

496 
SDLK_ESCAPE
:

497 
√o_emu_d⁄e
 = 1;

504 
SDLK_F1
:

505 
	`døw_mesßge
("Reset");

507 
	`˝u_68k_ª£t
();

509 
SDLK_F2
:

510 
	`èke_s¸ìnshŸ
();

511 
	`døw_mesßge
("Screenshot saved");

513 
SDLK_F3
:

514 
	`døw_mesßge
("Test Switch ON");

515 
c⁄f
.
ã°_swôch
 = 1;

517 
SDLK_F5
:

518 
show_Âs
 ^
GN_TRUE
;

520 
SDLK_F4
:

521 
show_keysym
 = 1 - show_keysym;

522 i‡(
show_keysym
)

523 
	`døw_mesßge
("Show keysym code : ON");

525 
	`døw_mesßge
("Show keysym code : OFF");

527 
SDLK_F6
:

528 
¶ow_mŸi⁄
 = 1 - slow_motion;

529 i‡(
¶ow_mŸi⁄
)

530 
	`døw_mesßge
("SlowMotion : ON");

532 
	`døw_mesßge
("SlowMotion : OFF");

533 
	`ª£t_‰ame_skù
();

536 
SDLK_F7
:

538 i‡(
c⁄f
.
debug
) {

539 
dbg_°ï
 = 1;

542 
SDLK_F8
:

544 
vÆ
;

545 *
íd±r
;

546 
	`ãxt_öput
("Savêtÿ¶Ÿ [0-999]? ",16,227,
öput_buf
,3);

547 
vÆ
=
	`°πﬁ
(
öput_buf
,&
íd±r
,10);

548 i‡(
öput_buf
 !
íd±r
) {

549 
≥ndög_ßve_°©e
=
vÆ
+1;

553 
SDLK_F9
:

555 
vÆ
;

556 *
íd±r
;

557 
	`ãxt_öput
("Lﬂd from slŸ [0-999]? ",16,227,
öput_buf
,3);

558 
vÆ
=
	`°πﬁ
(
öput_buf
,&
íd±r
,10);

559 i‡(
öput_buf
 !
íd±r
) {

560 
≥ndög_lﬂd_°©e
=
vÆ
+1;

564 
SDLK_F10
:

565 
auto‰ameskù
 ^
GN_TRUE
;

566 i‡(
auto‰ameskù
) {

567 
	`ª£t_‰ame_skù
();

568 
	`døw_mesßge
("AutoFrameSkip : ON");

570 
	`døw_mesßge
("AutoFrameSkip : OFF");

572 
SDLK_F11
:

573 
¶ìp_idÀ
 ^
GN_TRUE
;

574 i‡(
¶ìp_idÀ
)

575 
	`døw_mesßge
("Sleep idle : ON");

577 
	`døw_mesßge
("Sleep idle : OFF");

579 
SDLK_F12
:

580 
	`s¸ìn_fuŒs¸ìn
();

585 
SDL_VIDEORESIZE
:

586 
c⁄f
.
ªs_x
=
evít
.
ªsize
.
w
;

587 
c⁄f
.
ªs_y
=
evít
.
ªsize
.
h
;

588 
	`s¸ìn_ªsize
(
evít
.
ªsize
.
w
,Évít.ªsize.
h
);

590 
SDL_QUIT
:

591 
√o_emu_d⁄e
 = 1;

599 
	`upd©e_p1_key
();

600 
	`upd©e_p2_key
();

601 
	`upd©e_°¨t
();

602 
	`upd©e_coö
();

606 i‡(
¶ow_mŸi⁄
)

607 
	`SDL_Dñay
(100);

609 #i‚de‡
ENABLE_940T


610 i‡(
c⁄f
.
sound
) {

611 
	`PROFILER_START
(
PROF_Z80
);

613 
i
 = 0; i < 
nb_öãæa˚
; i++) {

614 
	`˝u_z80_run
(
˝u_z80_time¶i˚_öãæa˚
);

615 
	`my_timî
();

619 
	`PROFILER_STOP
(
PROF_Z80
);

624 #ifde‡
ENABLE_940T


625 i‡(
c⁄f
.
sound
) {

626 
	`PROFILER_START
(
PROF_Z80
);

627 
	`waô_busy_940
(
JOB940_RUN_Z80
);

629 i‡(
gp2x_timî
) {

630 
gp2x_timî_¥ev
=
gp2x_timî
;

631 
gp2x_timî
=
gp2x_memªgl
[0x0A00>>2];

632 
sh¨ed_˘l
->
ßm∂e_todo
=()(((
gp2x_timî
-
gp2x_timî_¥ev
)*
c⁄f
.
ßm∂e_øã
)/7372800.0);

634 
gp2x_timî
=
gp2x_memªgl
[0x0A00>>2];

635 
sh¨ed_˘l
->
ßm∂e_todo
=
ßm∂e_Àn
;

638 
	`gp2x_add_job940
(
JOB940_RUN_Z80
);

639 
	`PROFILER_STOP
(
PROF_Z80
);

644 i‡(!
c⁄f
.
debug
) {

645 i‡(
c⁄f
.
ø°î
) {

646 
cuºít_löe
 = 0;

647 
i
 = 0; i < 264; i++) {

648 
tm_cy˛e
 = 
	`˝u_68k_run
(
˝u_68k_time¶i˚_sˇ∆öe


649 - 
tm_cy˛e
);

650 i‡(
	`upd©e_sˇ∆öe
())

651 
	`˝u_68k_öãºu±
(2);

653 
tm_cy˛e
 = 
	`˝u_68k_run
(
˝u_68k_time¶i˚_sˇ∆öe
 -Åm_cycle);

656 
	`upd©e_s¸ìn
();

657 
mem‹y
.
w©chdog
++;

658 i‡(
mem‹y
.
w©chdog
 > 7) {

659 
	`¥ötf
("WATCHDOG RESET\n");

660 
	`˝u_68k_ª£t
();

662 
	`˝u_68k_öãºu±
(1);

664 
	`PROFILER_START
(
PROF_68K
);

665 
tm_cy˛e
 = 
	`˝u_68k_run
(
˝u_68k_time¶i˚
 -Åm_cycle);

666 
	`PROFILER_STOP
(
PROF_68K
);

667 
a
 = 
	`√o_öãºu±
();

672 
mem‹y
.
w©chdog
++;

674 i‡(
mem‹y
.
w©chdog
 > 7) {

675 
	`¥ötf
("WATCHDOG RESET %d\n",
mem‹y
.
w©chdog
);

676 
	`˝u_68k_ª£t
();

679 i‡(
a
) {

680 
	`˝u_68k_öãºu±
(
a
);

685 
√o_emu_d⁄e
 = 1;

688 #ifde‡
ENABLE_PROFILER


689 
	`¥ofûî_show_°©
();

691 
	`PROFILER_START
(
PROF_ALL
);

693 
	`∑u£_audio
(1);

694 #ifde‡
ENABLE_940T


695 
	`waô_busy_940
(
JOB940_RUN_Z80
);

696 
	`waô_busy_940
(
JOB940_RUN_Z80_NMI
);

697 
sh¨ed_˘l
->
z80_run
 = 0;

700 
	}
}

702 
	$˝u_68k_dpg_°ï
() {

703 
Uöt32
 
nb_cy˛e
;

704 
Uöt32
 
löe_cy˛e
;

705 
Uöt32
 
˝u_68k_time¶i˚
 = 200000;

706 
Uöt32
 
˝u_68k_time¶i˚_sˇ∆öe
 = 200000 / () 262;

707 
Uöt32
 
cy˛e
;

708 i‡(
nb_cy˛e
 == 0) {

709 
	`maö_lo›
();

711 
cy˛e
 = 
	`˝u_68k_run_°ï
();

712 
	`add_bt
(
	`˝u_68k_gëpc
());

713 
löe_cy˛e
 +
cy˛e
;

714 
nb_cy˛e
 +
cy˛e
;

715 i‡(
nb_cy˛e
 >
˝u_68k_time¶i˚
) {

716 
nb_cy˛e
 = 
löe_cy˛e
 = 0;

717 i‡(
c⁄f
.
ø°î
) {

718 
	`upd©e_s¸ìn
();

720 
	`√o_öãºu±
();

723 
	`˝u_68k_öãºu±
(1);

725 i‡(
löe_cy˛e
 >
˝u_68k_time¶i˚_sˇ∆öe
) {

726 
löe_cy˛e
 = 0;

727 i‡(
c⁄f
.
ø°î
) {

728 i‡(
	`upd©e_sˇ∆öe
())

729 
	`˝u_68k_öãºu±
(2);

733 
	}
}

735 
	$debug_lo›
() {

736 
a
;

738 
a
 = 
	`˝u_68k_debugî
(
˝u_68k_dpg_°ï
, 
NULL
);

739 } 
a
 != -1);

740 
	}
}

	@src/emu.h

19 #i‚de‡
_EMU_H_


20 
	#_EMU_H_


	)

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~<°rög.h
>

27 
	~<°döt.h
>

28 
	~"SDL.h
"

29 
	~"SDL_ty≥s.h
"

30 
	#Uöçå
 

	)

33 
	eSYSTEM
 {

34 
	mSYS_ARCADE
=0,

35 
	mSYS_HOME
,

36 
	mSYS_UNIBIOS
,

37 
	mSYS_MAX


38 } 
	tSYSTEM
;

40 
	eCOUNTRY
 {

41 
	mCTY_JAPAN
=0,

42 
	mCTY_EUROPE
,

43 
	mCTY_USA
,

44 
	mCTY_ASIA
,

45 
	mCTY_MAX


46 } 
	tCOUNTRY
;

49 *
	mgame
;

50 
Uöt16
 
	mx_°¨t
;

51 
Uöt16
 
	my_°¨t
;

52 
Uöt16
 
	mªs_x
;

53 
Uöt16
 
	mªs_y
;

54 
Uöt16
 
	mßm∂e_øã
;

55 
Uöt16
 
	mã°_swôch
;

57 
Uöt8
 
	msound
;

58 
Uöt8
 
	mvsync
;

60 
Uöt8
 
	mdo_mesßge
;

61 
Uöt8
 
	mnb_joy
;

62 
Uöt8
 
	mø°î
;

63 
Uöt8
 
	mdebug
;

64 
Uöt8
 
	mrom_ty≥
;

65 
Uöt8
 
	m•ecül_bios
;

66 
Uöt8
 
	mexåa_x‹
;

67 
Uöt8
 
	m∑l
;

68 
Uöt8
 
	maccuøã940
;

69 
SYSTEM
 
	msy°em
;

70 
COUNTRY
 
	mcou¡ry
;

72 
Uöt8
 
	mauto‰ameskù
;

73 
Uöt8
 
	mshow_Âs
;

74 
Uöt8
 
	m¶ìp_idÀ
;

75 
Uöt8
 
	ms¸ìn320
;

77 
	mmesßge
[128];

78 
	mÂs
[4];

80 *
	mp1_key
;

81 *
	mp2_key
;

83 
SDL_Joy°ick
 **
	mjoy
;

84 *
	mp1_joy
;

85 *
	mp2_joy
;

87 *
	mp1_hŸkey0
, *
	mp1_hŸkey1
, *
	mp1_hŸkey2
, *
	mp1_hŸkey3
;

88 *
	mp2_hŸkey0
, *
	mp2_hŸkey1
, *
	mp2_hŸkey2
, *
	mp2_hŸkey3
;

90 
	mp1_hŸkey
[4];

91 
	mp2_hŸkey
[4];

92 } 
	gc⁄f
;

95 
	mHOTKEY_MASK_A
 = 0x1,

96 
	mHOTKEY_MASK_B
 = 0x2,

97 
	mHOTKEY_MASK_C
 = 0x4,

98 
	mHOTKEY_MASK_D
 = 0x8,

102 
	mBUT_A
 = 0,

103 
	mBUT_B
,

104 
	mBUT_C
,

105 
	mBUT_D
,

106 
	mBUT_START
,

107 
	mBUT_COIN
,

108 
	mKB_UP
,

109 
	mKB_DOWN
,

110 
	mKB_LEFT
,

111 
	mKB_RIGHT
,

112 
	mBUT_HOTKEY0
,

113 
	mBUT_HOTKEY1
,

114 
	mBUT_HOTKEY2
,

115 
	mBUT_HOTKEY3


118 
	mAXE_X
 = 6,

119 
	mAXE_Y
,

120 
	mAXE_X_DIR
,

121 
	mAXE_Y_DIR


126 
Uöt8
 
	gkey
[
SDLK_LAST
];

127 
Uöt8
 *
	gjoy_buâ⁄
[2];

128 
Söt32
 *
	gjoy_axe
[2];

129 
Uöt32
 
	gjoy_numaxes
[2];

131 
debug_lo›
();

132 
maö_lo›
();

133 
öô_√o
();

134 
˝u_68k_dpg_°ï
();

135 
£tup_misc_∑tch
(*
«me
);

136 
√ogeo_ª£t
();

138 #ifde‡
ENABLE_PROFILER


139 
	#PROFILER_START
 
¥ofûî_°¨t


	)

140 
	#PROFILER_STOP
 
¥ofûî_°›


	)

143 
	#PROFILER_START
(
a
)

	)

144 
	#PROFILER_STOP
(
a
)

	)

	@src/event.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

7 
	~"SDL.h
"

8 
	~"s¸ìn.h
"

9 
	~"evít.h
"

10 
	~"c⁄f.h
"

11 
	~"emu.h
"

12 
	~"mem‹y.h
"

13 
	~"gnutû.h
"

14 
	~"mesßges.h
"

16 
	$gë_m≠id
(*
butid
) {

17 
	`¥ötf
("Gë m≠id %s\n",
butid
);

18 i‡(!
	`°rcmp
(
butid
,"A")Ë 
GN_A
;

19 i‡(!
	`°rcmp
(
butid
,"B")Ë 
GN_B
;

20 i‡(!
	`°rcmp
(
butid
,"C")Ë 
GN_C
;

21 i‡(!
	`°rcmp
(
butid
,"D")Ë 
GN_D
;

23 i‡(!
	`°rcmp
(
butid
,"UP")Ë 
GN_UP
;

24 i‡(!
	`°rcmp
(
butid
,"DOWN")Ë 
GN_DOWN
;

25 i‡(!
	`°rcmp
(
butid
,"UPDOWN")Ë 
GN_UP
;

27 i‡(!
	`°rcmp
(
butid
,"LEFT")Ë 
GN_LEFT
;

28 i‡(!
	`°rcmp
(
butid
,"RIGHT")Ë 
GN_RIGHT
;

29 i‡(!
	`°rcmp
(
butid
,"LEFTRIGHT")Ë 
GN_LEFT
;

31 i‡(!
	`°rcmp
(
butid
,"JOY")Ë 
GN_UP
;

33 i‡(!
	`°rcmp
(
butid
,"START")Ë 
GN_START
;

34 i‡(!
	`°rcmp
(
butid
,"COIN")Ë 
GN_SELECT_COIN
;

36 i‡(!
	`°rcmp
(
butid
,"MENU")Ë 
GN_MENU_KEY
;

38 i‡(!
	`°rcmp
(
butid
,"HOTKEY1")Ë 
GN_HOTKEY1
;

39 i‡(!
	`°rcmp
(
butid
,"HOTKEY2")Ë 
GN_HOTKEY2
;

40 i‡(!
	`°rcmp
(
butid
,"HOTKEY3")Ë 
GN_HOTKEY3
;

41 i‡(!
	`°rcmp
(
butid
,"HOTKEY4")Ë 
GN_HOTKEY4
;

43  
GN_NONE
;

44 
	}
}

46 
	$¸óã_joym≠_‰om_°rög
(
∂ayî
,*
jc⁄f
) {

47 *
v
;

48 
butid
[32]={0,};

49 
jevt
;

50 
code
;

51 
jid
;

52 
rc
;

53 
ty≥
;

55 i‡(
jc⁄f
==
NULL
)  0;

56 
v
=
	`°rdup
(
jc⁄f
);

57 
v
=
	`°πok
(v,",");

59 
v
) {

60 
rc
=
	`ssˇnf
(
v
,"%[A-Z1-4]=%c%d%c%d",
butid
,&
ty≥
,&
jid
,&
jevt
,&
code
);

61 i‡(
rc
==3 && 
ty≥
=='K') {

63 
code
=
jid
;

64 i‡(
code
<
SDLK_LAST
) {

65 
jm≠
->
key
[
code
].
∂ayî
=player;

66 
jm≠
->
key
[
code
].
m≠
=
	`gë_m≠id
(
butid
);

70 i‡(
rc
==5 && 
ty≥
=='J') {

71 
	`¥ötf
("%d, %s | joyÇo %d |Évt %c | %d\n",

72 
rc
,
butid
,
jid
,
jevt
,
code
);

73 i‡(
jid
<
c⁄f
.
nb_joy
) {

74 
jevt
) {

76 i‡(
code
<
	`SDL_Joy°ickNumAxes
(
c⁄f
.
joy
[
jid
])) {

77 
jm≠
->
jaxe
[
jid
][
code
].
∂ayî
=player;

78 
jm≠
->
jaxe
[
jid
][
code
].
m≠
=
	`gë_m≠id
(
butid
);

79 
jm≠
->
jaxe
[
jid
][
code
].
dú
=1;

83 i‡(
code
<
	`SDL_Joy°ickNumAxes
(
c⁄f
.
joy
[
jid
])) {

84 
jm≠
->
jaxe
[
jid
][
code
].
∂ayî
=player;

85 
jm≠
->
jaxe
[
jid
][
code
].
m≠
=
	`gë_m≠id
(
butid
);

86 
jm≠
->
jaxe
[
jid
][
code
].
dú
=-1;

90 i‡(
code
<
	`SDL_Joy°ickNumH©s
(
c⁄f
.
joy
[
jid
])) {

91 
jm≠
->
jh©
[
jid
][
code
].
∂ayî
=player;

92 
jm≠
->
jh©
[
jid
][
code
].
m≠
=
	`gë_m≠id
(
butid
);

96 i‡(
code
<
	`SDL_Joy°ickNumBuâ⁄s
(
c⁄f
.
joy
[
jid
])) {

97 
jm≠
->
jbuâ⁄
[
jid
][
code
].
∂ayî
=player;

98 
jm≠
->
jbuâ⁄
[
jid
][
code
].
m≠
=
	`gë_m≠id
(
butid
);

105 
v
=
	`°πok
(
NULL
,",");

108  
GN_TRUE
;

109 
	}
}

111 
	$ˇlcuœã_hŸkey_bômasks
()

113 *
p
;

114 
i
, 
j
, 
mask
;

115 c⁄° *
p1_key_li°
[] = { "p1hotkey0", "p1hotkey1", "p1hotkey2", "p1hotkey3" };

116 c⁄° *
p2_key_li°
[] = { "p2hotkey0", "p2hotkey1", "p2hotkey2", "p2hotkey3" };

119  
i
 = 0; i < 4; i++ ) {

120 
p
=
	`CF_ARRAY
(
	`cf_gë_ôem_by_«me
(
p1_key_li°
[
i
]));

121  
mask
 = 0, 
j
 = 0; j < 4; j++ ) mask |
p
[j];

122 
c⁄f
.
p1_hŸkey
[
i
] = 
mask
;

125  
i
 = 0; i < 4; i++ ) {

126 
p
=
	`CF_ARRAY
(
	`cf_gë_ôem_by_«me
(
p2_key_li°
[
i
]));

127  
mask
 = 0, 
j
 = 0; j < 4; j++ ) mask |
p
[j];

128 
c⁄f
.
p2_hŸkey
[
i
] = 
mask
;

131 
	}
}

134 
	$öô_evít
() {

135 
i
;

137 
jm≠
=
	`ˇŒoc
((
JOYMAP
),1);

139 
	`ˇlcuœã_hŸkey_bômasks
();

141 #ifde‡
WII


142 
c⁄f
.
nb_joy
 = 4;

144 
c⁄f
.
nb_joy
 = 
	`SDL_NumJoy°icks
();

146 if–
c⁄f
.
nb_joy
>0) {

147 i‡(
c⁄f
.
joy
!=
NULL
Ë
	`‰ì
(conf.joy);

148 
c⁄f
.
joy
=
	`ˇŒoc
((
SDL_Joy°ick
*),c⁄f.
nb_joy
);

150 
	`SDL_Joy°ickEvítSèã
(
SDL_ENABLE
);

152 
jm≠
->
jbuâ⁄
=
	`ˇŒoc
(
c⁄f
.
nb_joy
,(
BUT_MAP
*));

153 
jm≠
->
jaxe

	`ˇŒoc
(
c⁄f
.
nb_joy
,(
BUT_MAPJAXIS
*));

154 
jm≠
->
jh©

	`ˇŒoc
(
c⁄f
.
nb_joy
,(
BUT_MAP
*));

158 
i
=0;i<
c⁄f
.
nb_joy
;i++) {

159 
c⁄f
.
joy
[
i
]=
	`SDL_Joy°ickO≥n
(i);

160 
	`¥ötf
("joy \"%s\",áxe:%d, button:%d\n",

161 
	`SDL_Joy°ickName
(
i
),

162 
	`SDL_Joy°ickNumAxes
(
c⁄f
.
joy
[
i
])+ (
	`SDL_Joy°ickNumH©s
(conf.joy[i]) * 2),

163 
	`SDL_Joy°ickNumBuâ⁄s
(
c⁄f
.
joy
[
i
]));

164 
jm≠
->
jbuâ⁄
[
i
]=
	`ˇŒoc
(
	`SDL_Joy°ickNumBuâ⁄s
(
c⁄f
.
joy
[i]),(
BUT_MAP
));

165 
jm≠
->
jaxe
[
i
]=
	`ˇŒoc
(
	`SDL_Joy°ickNumAxes
(
c⁄f
.
joy
[i]),(
BUT_MAPJAXIS
));

166 
jm≠
->
jh©
[
i
]=
	`ˇŒoc
(
	`SDL_Joy°ickNumH©s
(
c⁄f
.
joy
[i]),(
BUT_MAP
));

169 
	`¸óã_joym≠_‰om_°rög
(1,
	`CF_STR
(
	`cf_gë_ôem_by_«me
("p1control")));

170 
	`¸óã_joym≠_‰om_°rög
(2,
	`CF_STR
(
	`cf_gë_ôem_by_«me
("p2control")));

171  
GN_TRUE
;

172 
	}
}

173 #ifde‡
GP2X


174 
	$h™dÀ_pdï_evít
(
SDL_Evít
 *
evít
) {

175 
¢d_vﬁume
=75;

176 
vﬁbuf
[21];

177 
i
;

178 
evít
->
ty≥
) {

179 
SDL_JOYBUTTONDOWN
:

181 i‡(
evít
->
jbuâ⁄
.
which
==0) {

182 i‡(
evít
->
jbuâ⁄
.
buâ⁄
==
GP2X_VOL_UP
 && 
c⁄f
.
sound
) {

183 i‡(
¢d_vﬁume
<100) snd_volume+=5; snd_volume=100;

184 
	`gp2x_sound_vﬁume_£t
(
¢d_vﬁume
,snd_volume);

185 
i
=0;i<
¢d_vﬁume
/5;i++Ë
vﬁbuf
[i]='|';

186 
i
=
¢d_vﬁume
/5;i<20;i++Ë
vﬁbuf
[i]='-';

187 
vﬁbuf
[20]=0;

188 
	`døw_mesßge
(
vﬁbuf
);

190 i‡(
evít
->
jbuâ⁄
.
buâ⁄
==
GP2X_VOL_DOWN
 && 
c⁄f
.
sound
) {

191 i‡(
¢d_vﬁume
>0) snd_volume-=5; snd_volume=0;

192 
	`gp2x_sound_vﬁume_£t
(
¢d_vﬁume
,snd_volume);

193 
i
=0;i<
¢d_vﬁume
/5;i++Ë
vﬁbuf
[i]='|';

194 
i
=
¢d_vﬁume
/5;i<20;i++Ë
vﬁbuf
[i]='-';

195 
vﬁbuf
[20]=0;

196 
	`døw_mesßge
(
vﬁbuf
);

202 
	}
}

203 #ñi‡
DEVKIT8000_


204 
	$h™dÀ_pdï_evít
(
SDL_Evít
 *
evít
) {

205 
evít
->
ty≥
) {

206 
SDL_MOUSEBUTTONDOWN
:

207 
SDL_MOUSEBUTTONUP
:

208 
	`¥ötf
("Mou£Dow¿%d %d %d\n",
evít
->
buâ⁄
.
°©e
,evít->buâ⁄.
x
,evít->buâ⁄.
y
);

211 
	}
}

213 
	$h™dÀ_pdï_evít
(
SDL_Evít
 *
evít
) {

214 
evít
->
ty≥
) {

215 
SDL_KEYDOWN
:

216 
evít
->
key
.
keysym
.
sym
) {

217 
SDLK_ESCAPE
:

220 
SDLK_F3
:

221 
	`døw_mesßge
("Test Switch ON");

222 
c⁄f
.
ã°_swôch
 = 1;

224 
SDLK_F12
:

225 
	`s¸ìn_fuŒs¸ìn
();

235 
	}
}

238 
	#EVGAME
 1

	)

239 
	#EVMENU
 2

	)

241 
	$h™dÀ_evít
() {

242 
SDL_Evít
 
evít
;

244 
ªt
;

245 
jaxis_thªshﬁd
=10000;

248 
	`SDL_PﬁlEvít
(&
evít
)) {

249 i‡((
ªt
=
	`h™dÀ_pdï_evít
(&
evít
))!=0) {

250  
ªt
;

252 
evít
.
ty≥
) {

253 
SDL_KEYUP
:

255 
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
∂ayî
) {

257 
joy_°©e
[0][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=0;

260 
joy_°©e
[1][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=0;

263 
joy_°©e
[1][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=0;

264 
joy_°©e
[0][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=0;

270 
SDL_KEYDOWN
:

272 
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
∂ayî
) {

274 
joy_°©e
[0][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=1;

277 
joy_°©e
[1][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=1;

280 
joy_°©e
[1][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=1;

281 
joy_°©e
[0][
jm≠
->
key
[
evít
.key.
keysym
.
sym
].
m≠
]=1;

287 
SDL_JOYHATMOTION
:

289 
∂ayî
=
jm≠
->
jh©
[
evít
.jh©.
which
][evít.jh©.
h©
].player;

290 
m≠
=
jm≠
->
jh©
[
evít
.jh©.
which
][evít.jh©.
h©
].map;

291 
i
;

292 i‡(
∂ayî
 && 
m≠
==
GN_UP
) {

293 
∂ayî
-=1;

294 
i
=
GN_UP
;i<=
GN_RIGHT
;i++)

295 
joy_°©e
[
∂ayî
][
i
]=0;

296 i‡(
evít
.
jh©
.
vÆue
&
SDL_HAT_UP
Ë
joy_°©e
[
∂ayî
][
GN_UP
]=1;

297 i‡(
evít
.
jh©
.
vÆue
&
SDL_HAT_DOWN
Ë
joy_°©e
[
∂ayî
][
GN_DOWN
]=1;

298 i‡(
evít
.
jh©
.
vÆue
&
SDL_HAT_LEFT
Ë
joy_°©e
[
∂ayî
][
GN_LEFT
]=1;

299 i‡(
evít
.
jh©
.
vÆue
&
SDL_HAT_RIGHT
Ë
joy_°©e
[
∂ayî
][
GN_RIGHT
]=1;

307 
SDL_JOYAXISMOTION
:

309 
∂ayî
=
jm≠
->
jaxe
[
evít
.
jaxis
.
which
][evít.jaxis.
axis
].player;

310 
m≠
=
jm≠
->
jaxe
[
evít
.
jaxis
.
which
][evít.jaxis.
axis
].map;

311 
ﬁdvÆue
=
jm≠
->
jaxe
[
evít
.
jaxis
.
which
][evít.jaxis.
axis
].
vÆue
;

312 
vÆue
=0;

315 i‡(
∂ayî
) {

316 
∂ayî
-=1;

318 
vÆue
=
evít
.
jaxis
.vÆue*
jm≠
->
jaxe
[evít.jaxis.
which
][evít.jaxis.
axis
].
dú
;

321 i‡(
m≠
==
GN_UP
 || m≠==
GN_DOWN
) {

322 i‡(
vÆue
>
jaxis_thªshﬁd
) {

323 
joy_°©e
[
∂ayî
][
GN_UP
]=1;

324 
joy_°©e
[
∂ayî
][
GN_DOWN
]=0;

326 i‡(
vÆue
<-
jaxis_thªshﬁd
) {

327 
joy_°©e
[
∂ayî
][
GN_DOWN
]=1;

328 
joy_°©e
[
∂ayî
][
GN_UP
]=0;

330 i‡(
ﬁdvÆue
>
jaxis_thªshﬁd
 && 
vÆue
<=jaxis_threshold && value>=-jaxis_threshold)

331 
joy_°©e
[
∂ayî
][
GN_UP
]=0;

332 i‡(
ﬁdvÆue
<-
jaxis_thªshﬁd
 && 
vÆue
>=-jaxis_threshold && value<=jaxis_threshold)

333 
joy_°©e
[
∂ayî
][
GN_DOWN
]=0;

336 i‡(
m≠
==
GN_LEFT
 || m≠==
GN_RIGHT
) {

337 i‡(
vÆue
>
jaxis_thªshﬁd
) {

338 
joy_°©e
[
∂ayî
][
GN_RIGHT
]=1;

339 
joy_°©e
[
∂ayî
][
GN_LEFT
]=0;

341 i‡(
vÆue
<-
jaxis_thªshﬁd
) {

342 
joy_°©e
[
∂ayî
][
GN_LEFT
]=1;

343 
joy_°©e
[
∂ayî
][
GN_RIGHT
]=0;

345 i‡(
ﬁdvÆue
>
jaxis_thªshﬁd
 && 
vÆue
<=jaxis_threshold && value>=-jaxis_threshold)

346 
joy_°©e
[
∂ayî
][
GN_RIGHT
]=0;

347 i‡(
ﬁdvÆue
<-
jaxis_thªshﬁd
 && 
vÆue
>=-jaxis_threshold && value<=jaxis_threshold)

348 
joy_°©e
[
∂ayî
][
GN_LEFT
]=0;

352 
jm≠
->
jaxe
[
evít
.
jaxis
.
which
][evít.jaxis.
axis
].
vÆue
=value;

363 
SDL_JOYBUTTONDOWN
:

365 
∂ayî
=
jm≠
->
jbuâ⁄
[
evít
.jbuâ⁄.
which
][evít.jbuâ⁄.
buâ⁄
].player;

366 
m≠
=
jm≠
->
jbuâ⁄
[
evít
.jbuâ⁄.
which
][evít.jbuâ⁄.
buâ⁄
].map;

368 i‡(
∂ayî
) {

369 
∂ayî
-=1;

370 
joy_°©e
[
∂ayî
][
m≠
]=1;

376 
SDL_JOYBUTTONUP
:

378 
∂ayî
=
jm≠
->
jbuâ⁄
[
evít
.jbuâ⁄.
which
][evít.jbuâ⁄.
buâ⁄
].player;

379 
m≠
=
jm≠
->
jbuâ⁄
[
evít
.jbuâ⁄.
which
][evít.jbuâ⁄.
buâ⁄
].map;

380 i‡(
∂ayî
) {

381 
∂ayî
-=1;

382 
joy_°©e
[
∂ayî
][
m≠
]=0;

386 
SDL_VIDEORESIZE
:

387 
c⁄f
.
ªs_x
=
evít
.
ªsize
.
w
;

388 
c⁄f
.
ªs_y
=
evít
.
ªsize
.
h
;

389 
	`s¸ìn_ªsize
(
evít
.
ªsize
.
w
,Évít.ªsize.
h
);

391 
SDL_QUIT
:

407 
mem‹y
.
öã∫_coö
 = 0x7;

408 i‡(
joy_°©e
[0][
GN_SELECT_COIN
])

409 
mem‹y
.
öã∫_coö
 &= 0x6;

410 i‡(
joy_°©e
[1][
GN_SELECT_COIN
])

411 
mem‹y
.
öã∫_coö
 &= 0x5;

413 
mem‹y
.
öã∫_°¨t
 = 0x8F;

414 i‡(
joy_°©e
[0][
GN_START
])

415 
mem‹y
.
öã∫_°¨t
 &= 0xFE;

416 i‡(
joy_°©e
[1][
GN_START
])

417 
mem‹y
.
öã∫_°¨t
 &= 0xFB;

420 
mem‹y
.
öã∫_p1
 = 0xFF;

421 i‡(
joy_°©e
[0][
GN_UP
] && (!joy_°©e[0][
GN_DOWN
]))

422 
mem‹y
.
öã∫_p1
 &= 0xFE;

423 i‡(
joy_°©e
[0][
GN_DOWN
] && (!joy_°©e[0][
GN_UP
]))

424 
mem‹y
.
öã∫_p1
 &= 0xFD;

425 i‡(
joy_°©e
[0][
GN_LEFT
] && (!joy_°©e[0][
GN_RIGHT
]))

426 
mem‹y
.
öã∫_p1
 &= 0xFB;

427 i‡(
joy_°©e
[0][
GN_RIGHT
] && (!joy_°©e[0][
GN_LEFT
]))

428 
mem‹y
.
öã∫_p1
 &= 0xF7;

429 i‡(
joy_°©e
[0][
GN_A
])

430 
mem‹y
.
öã∫_p1
 &= 0xEF;

431 i‡(
joy_°©e
[0][
GN_B
])

432 
mem‹y
.
öã∫_p1
 &= 0xDF;

433 i‡(
joy_°©e
[0][
GN_C
])

434 
mem‹y
.
öã∫_p1
 &= 0xBF;

435 i‡(
joy_°©e
[0][
GN_D
])

436 
mem‹y
.
öã∫_p1
 &= 0x7F;

439 
mem‹y
.
öã∫_p2
 = 0xFF;

440 i‡(
joy_°©e
[1][
GN_UP
] && (!joy_°©e[1][
GN_DOWN
]))

441 
mem‹y
.
öã∫_p2
 &= 0xFE;

442 i‡(
joy_°©e
[1][
GN_DOWN
] && (!joy_°©e[1][
GN_UP
]))

443 
mem‹y
.
öã∫_p2
 &= 0xFD;

444 i‡(
joy_°©e
[1][
GN_LEFT
] && (!joy_°©e[1][
GN_RIGHT
]))

445 
mem‹y
.
öã∫_p2
 &= 0xFB;

446 i‡(
joy_°©e
[1][
GN_RIGHT
] && (!joy_°©e[1][
GN_LEFT
]))

447 
mem‹y
.
öã∫_p2
 &= 0xF7;

448 i‡(
joy_°©e
[1][
GN_A
])

449 
mem‹y
.
öã∫_p2
 &= 0xEF;

450 i‡(
joy_°©e
[1][
GN_B
])

451 
mem‹y
.
öã∫_p2
 &= 0xDF;

452 i‡(
joy_°©e
[1][
GN_C
])

453 
mem‹y
.
öã∫_p2
 &= 0xBF;

454 i‡(
joy_°©e
[1][
GN_D
])

455 
mem‹y
.
öã∫_p2
 &= 0x7F;

457 #i‡
	`deföed
(
GP2X
Ë|| deföed(
WIZ
)

458 i‡(
joy_°©e
[0][
GN_HOTKEY1
] && joy_°©e[0][
GN_HOTKEY2
]

459 && (
joy_°©e
[0][
GN_START
] || joy_°©e[0][
GN_SELECT_COIN
]))

463 if(
joy_°©e
[0][
GN_MENU_KEY
]==1)

468 
	}
}

475 
	gœ°
=-1;

476 
	gcou¡î
=40;

478 
	$ª£t_evít
() {

479 
SDL_Evít
 
evít
;

480 
i
;

481 
i
 = 0; i < 
GN_MAX_KEY
; i++)

482 
joy_°©e
[0][
i
] = 0;

483 
	`SDL_PﬁlEvít
(&
evít
));

484 
œ°
=-1;

485 
cou¡î
=40;

486 
	}
}

488 
	$waô_evít
() {

489 
SDL_Evít
 
evít
;

490 
i
,
a
;

497 
	`SDL_PﬁlEvít
(&
evít
)) {

498 
evít
.
ty≥
) {

499 
SDL_KEYDOWN
:

501 
evít
.
key
.
keysym
.
sym
) {

502 
SDLK_TAB
:

503 
joy_°©e
[0][
GN_MENU_KEY
]=1;

507 
SDLK_UP
:

508 
joy_°©e
[0][
GN_UP
]=1;

512 
SDLK_DOWN
:

513 
joy_°©e
[0][
GN_DOWN
]=1;

517 
SDLK_LEFT
:

518 
joy_°©e
[0][
GN_LEFT
]=1;

522 
SDLK_RIGHT
:

523 
joy_°©e
[0][
GN_RIGHT
]=1;

527 
SDLK_ESCAPE
:

528 
joy_°©e
[0][
GN_A
]=1;

532 
SDLK_RETURN
:

533 
SDLK_KP_ENTER
:

534 
joy_°©e
[0][
GN_B
]=1;

539 
	`SDL_PushEvít
(&
evít
);

540 
	`h™dÀ_evít
();

544 
SDL_KEYUP
:

547 
i
=0;i<
GN_MAX_KEY
;i++)

548 
joy_°©e
[0][
i
]=0;

549 
œ°
=-1;

550 
cou¡î
=40;

553 
	`SDL_PushEvít
(&
evít
);

554 
	`h™dÀ_evít
();

556 
a
=0;

557 
i
 = 0; i < 
GN_MAX_KEY
; i++)

558 i‡(
joy_°©e
[0][
i
]Ë
a
++;

559 i‡(
a
!=1) {

560 
i
 = 0; i < 
GN_MAX_KEY
; i++)

561 
joy_°©e
[0][
i
] = 0;

562 
œ°
 = -1;

563 
cou¡î
 = 40;

574 i‡(
œ°
!=-1) {

575 i‡(
cou¡î
>0)

576 
cou¡î
--;

577 i‡(
cou¡î
==0) {

578 
cou¡î
=5;

579  
œ°
;

582 
i
=0;i<
GN_MAX_KEY
;i++)

583 i‡(
joy_°©e
[0][
i
]) {

584 
œ°
=
i
;

585  
i
;

608 
	}
}

	@src/event.h

1 #i‚de‡
GNEVENT_H


2 
	#GNEVENT_H


	)

4 
	~"SDL.h
"

7 
	mGN_NONE
=0,

8 
	mGN_A
,

9 
	mGN_B
,

10 
	mGN_C
,

11 
	mGN_D
,

12 
	mGN_UP
,

13 
	mGN_DOWN
,

14 
	mGN_LEFT
,

15 
	mGN_RIGHT
,

16 
	mGN_START
,

17 
	mGN_SELECT_COIN
,

18 
	mGN_MENU_KEY
,

19 
	mGN_HOTKEY1
,

20 
	mGN_HOTKEY2
,

21 
	mGN_HOTKEY3
,

22 
	mGN_HOTKEY4
,

23 
	mGN_MAX_KEY
,

24 }
	tGNGEO_BUTTON
;

26 
	sBUT_MAP
 {

27 
Uöt8
 
	m∂ayî
;

28 
GNGEO_BUTTON
 
	mm≠
;

30 
	sBUT_MAPJAXIS
 {

31 
Uöt8
 
	m∂ayî
;

32 
GNGEO_BUTTON
 
	mm≠
;

33 
	mdú
;

34 
	mvÆue
;

37 
	sJOYMAP
 {

38 
BUT_MAP
 
	mkey
[
SDLK_LAST
];

39 
BUT_MAP
 **
	mjbuâ⁄
;

40 
BUT_MAPJAXIS
 **
	mjaxe
;

41 
BUT_MAP
 **
	mjh©
;

42 }
	tJOYMAP
;

44 
JOYMAP
 *
	gjm≠
;

45 
Uöt8
 
	gjoy_°©e
[2][
GN_MAX_KEY
];

48 
öô_evít
();

50 
¸óã_joym≠_‰om_°rög
(
∂ayî
,*
jc⁄f
);

51 
h™dÀ_evít
();

52 
waô_evít
();

53 
ª£t_evít
();

	@src/font.h

4 
	mwidth
;

5 
	mheight
;

6 
	mbyãs_≥r_pixñ
;

7 
	mpixñ_d©a
[767 * 9 * 3 + 1];

8 } 
	gf⁄t_image
 = {

	@src/frame_skip.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<uni°d.h
>

24 
	~<sys/time.h
>

25 
	~<m©h.h
>

26 
	~"SDL.h
"

27 
	~"‰ame_skù.h
"

28 
	~"mesßges.h
"

29 
	~"emu.h
"

30 
	~"c⁄f.h
"

31 
	~"gnutû.h
"

33 #i‚de‡
u˛ock_t


34 
	#u˛ock_t
 
Uöt32


	)

37 
	#TICKS_PER_SEC
 1000000UL

	)

40 
u˛ock_t
 
	gF
;

42 
	#MAX_FRAMESKIP
 10

	)

44 
	göô_‰ame_skù
 = 1;

45 
	gskù_√xt_‰ame
 = 0;

46 #i‡
deföed
(
HAVE_GETTIMEOFDAY
Ë&& !deföed(
WII
)

47 
	gCPU_FPS
 = 60;

48 
timevÆ
 
	göô_tv
 = { 0, 0 };

51 
	gCPU_FPS
=61;

52 
Uöt32
 
	göô_tv
=0;

54 
u˛ock_t
 
	gbích
;

56 #i‡
deföed
(
HAVE_GETTIMEOFDAY
Ë&& !deföed(
WII
)

57 
u˛ock_t
 
	$gë_ticks
() {

58 
timevÆ
 
tv
;

60 
	`gëtimeofday
(&
tv
, 0);

61 i‡(
öô_tv
.
tv_£c
 == 0)

62 
öô_tv
 = 
tv
;

63  (
tv
.
tv_£c
 - 
öô_tv
.tv_£cË* 
TICKS_PER_SEC
 +Åv.
tv_u£c


64 - 
öô_tv
.
tv_u£c
;

66 
	}
}

68 
Uöt32
 
	$gë_ticks
()

70 
Uöt32
 
tv
;

71 i‡(
öô_tv
==0)

72 
öô_tv
=
	`SDL_GëTicks
();

73  (
	`SDL_GëTicks
()-
öô_tv
)*1000;

74 
	}
}

77 
	$ª£t_‰ame_skù
() {

78 #i‡
	`deföed
(
HAVE_GETTIMEOFDAY
Ë&& !deföed(
WII
)

79 
öô_tv
.
tv_u£c
 = 0;

80 
öô_tv
.
tv_£c
 = 0;

82 
öô_tv
=0;

84 
skù_√xt_‰ame
 = 0;

85 
öô_‰ame_skù
 = 1;

86 i‡(
c⁄f
.
∑l
)

87 
CPU_FPS
 = 50;

88 
F
 = (
u˛ock_t
Ë((Ë
TICKS_PER_SEC
 / 
CPU_FPS
);

89 
	}
}

91 
	$‰ame_skù
(
öô
) {

92 
f2skù
;

93 
u˛ock_t
 
£c
 = 0;

94 
u˛ock_t
 
rfd
;

95 
u˛ock_t
 
èrgë
;

96 
nbFøme
 = 0;

97 
nbFøme_moy
 = 0;

98 
nbFøme_mö
 = 1000;

99 
nbFøme_max
 = 0;

100 
skpFrm
 = 0;

101 
cou¡
 = 0;

102 
moy
 = 60;

104 i‡(
öô_‰ame_skù
) {

105 
öô_‰ame_skù
 = 0;

106 
èrgë
 = 
	`gë_ticks
();

107 
bích
 = (
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("bench")) ? 1 : 0);

109 
nbFøme
 = 0;

112 
£c
 = 0;

116 
èrgë
 +
F
;

117 i‡(
f2skù
 > 0) {

118 
f2skù
--;

119 
skpFrm
++;

120  
GN_TRUE
;

122 
skpFrm
 = 0;

125 
rfd
 = 
	`gë_ticks
();

127 i‡(
c⁄f
.
auto‰ameskù
) {

128 i‡(
rfd
 < 
èrgë
 && 
f2skù
 == 0)

129 
	`gë_ticks
(Ë< 
èrgë
) {

130 #i‚de‡
WIN32


131 i‡(
c⁄f
.
¶ìp_idÀ
) {

132 
	`u¶ìp
(5);

137 
f2skù
 = (
rfd
 - 
èrgë
Ë/ (Ë
F
;

138 i‡(
f2skù
 > 
MAX_FRAMESKIP
) {

139 
f2skù
 = 
MAX_FRAMESKIP
;

140 
	`ª£t_‰ame_skù
();

146 
nbFøme
++;

147 
nbFøme_moy
++;

154 i‡(
c⁄f
.
show_Âs
) {

155 i‡(
	`gë_ticks
(Ë- 
£c
 >
TICKS_PER_SEC
) {

157 i‡(
bích
) {

159 i‡(
nbFøme_mö
 > 
nbFøme
)

160 
nbFøme_mö
 = 
nbFøme
;

161 i‡(
nbFøme_max
 < 
nbFøme
)

162 
nbFøme_max
 = 
nbFøme
;

163 
cou¡
++;

164 
moy
 = 
nbFøme_moy
 / (Ë
cou¡
;

166 i‡(
cou¡
 == 30)

167 
cou¡
 = 0;

168 
	`•rötf
(
Âs_°r
, "%d %d %d %d\n", 
nbFøme
 - 1, 
nbFøme_mö
 - 1,

169 
nbFøme_max
 - 1, 
moy
 - 1);

171 
	`•rötf
(
Âs_°r
, "%2d", 
nbFøme
 - 1);

174 
nbFøme
 = 0;

175 
£c
 = 
	`gë_ticks
();

178  
GN_FALSE
;

179 
	}
}

	@src/frame_skip.h

20 #i‚de‡
_FRAME_SKIP_H


21 
	#_FRAME_SKIP_H


	)

23 
skù_√xt_‰ame
;

25 
	gÂs_°r
[32];

27 
ª£t_‰ame_skù
();

28 
‰ame_skù
(
öô
);

	@src/generator68k/ccg/asm-cache.h

21 #i‚de‡
__ccg_asm_ˇche_h


22 
	#__ccg_asm_ˇche_h


	)

26 #i‡
deföed
(
__i386__
)

28 
	#iÊush
(
fú°
,
œ°
)

	)

30 #ñi‡
deföed
(
__PPC__
Ë|| deföed(
_POWER
Ë|| deföed(
_IBMR2
)

32 #i‡
deföed
(
__GNUC__
)

33 
	$iÊush
(
ö¢
 *
addr
, ö¢ *
œ°
)

35 
addr
 < 
œ°
) {

36 
asm
 vﬁ©ûê("dcb° 0,%0; sync; icbò0,%0; isync" : : "r"(
addr
));

37 ++
addr
;

39 
	}
}

40 #ñi‡
deföed
(
macötosh
Ë|| deföed(
__MWERKS__
)

43 #¥agm®
öã∫Æ
 
⁄


44 
asm
 
	$iÊush
(
ö¢
 *
addr
, ö¢ *
œ°
)

46 
cm∂w
 
¸1
, 
addr
, 
œ°


47 
bgñr
 
¸1


48 
lo›
: 
dcb°
 
r0
, 
addr


49 
sync


50 
icbi
 
r0
, 
addr


51 
isync


52 
addi
 
addr
,áddr, 4

53 
cm∂w
 
¸1
, 
addr
, 
œ°


54 
b…
 
¸1
, 
lo›


55 
bÃ


56 
	}
}

57 #¥agm®
öã∫Æ
 
off


59 
	#_ASM_NOCOMP


	)

62 #ñi‡
deföed
(
__•¨c__
)

64 #i‡
deföed
(
__GNUC__
)

65 
	$iÊush
(
ö¢
 *
addr
, ö¢ *
œ°
)

67 
asm
 volatile ("stbar");

68 
addr
 < 
œ°
) {

69 
asm
 vﬁ©ûê("Êush %0"::"r"(
addr
));

70 ++
addr
;

73 
asm
 volatile ("nop;Çop;Çop;Çop;Çop");

74 
	}
}

76 
	#_ASM_NOCOMP


	)

81 
	#_ASM_NOARCH


	)

87 #ifde‡
_ASM_NOCOMP


88 #îr‹: 
∂ó£
 
ªim∂emít
 
iÊush
(Ë
your
 
compûî
,

89 #îr‹: 
™d
 
EMAIL
 
THE
 
CODE
 
to
: 
ün
.
pium¨è
@
örü
.
‰


92 #ifde‡
_ASM_NOARCH


93 #îr‹: 
∂ó£
 
im∂emít
 
iÊush
(Ë
your
 
¨chôe˘uª
,

94 #îr‹: 
™d
 
EMAIL
 
THE
 
CODE
 
to
: 
ün
.
pium¨è
@
örü
.
‰


	@src/generator68k/ccg/asm-common.h

21 #i‚de‡
__ccg_asm_comm⁄_h


22 
	#__ccg_asm_comm⁄_h_


	)

24 
	~<°dio.h
>

26 
	~"asm-ˇche.h
"

28 #i‚de‡
_ASM_LOCALPC


29 
	gasm_∑ss
;

30 
ö¢
 *
	gasm_pc
;

33 
	#ASMFAIL
(
MSG
Ë
	`asmFaû
(MSG, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
)

	)

35 #i‚de‡ 
_ASM_APP_1


36 
	#_ASM_APP_1
 { 
asm_∑ss
0; {

	)

38 #i‚de‡ 
_ASM_NOAPP_1


39 
	#_ASM_NOAPP_1
 }}

	)

41 #i‚de‡ 
_ASM_APP_2


42 
	#_ASM_APP_2
 { 
ö¢
 *
asm_lwm

asm_pc
; 
asm_∑ss
1; (◊sm_∑s†< 3Ë&& (asm_pcasm_lwm)); ++asm_∑ssË{

	)

44 #i‚de‡ 
_ASM_NOAPP_2


45 
	#_ASM_NOAPP_2
 }}

	)

48 #i‚de‡ 
_ASM_ORG


49 
	#_ASM_ORG
(
O
Ë(
asm_pc
(
ö¢
 *)(O))

	)

51 #i‚de‡ 
_ASM_LBL


52 
	#_ASM_LBL
(
V
Ë
ö¢
 *V0

	)

54 #i‚de‡ 
_ASM_DEF


55 
	#_ASM_DEF
(
V
Ë(V(((
asm_∑ss
==2)&&(
asm_pc
!=(V))Ë? (
ö¢
 *)
	`ASMFAIL
("pha£Éº‹"Ë:ásm_pc))

	)

58 
asmFaû
(*
msg
, *
fûe
, 
löe
, *
fun˘i⁄
)

60 
Ârötf
(
°dîr
, "%s: I¿fun˘i⁄ `%s':\n", 
fûe
, 
fun˘i⁄
);

61 
Ârötf
(
°dîr
, "%s:%d: %s\n", 
fûe
, 
löe
, 
msg
);

62 
ab‹t
();

68 
	#_MASK
(
N
Ë((
u_öt32_t
)((1<<(N)))-1)

	)

69 
	#_siP
(
N
,
I
Ë(!((((
u_öt32_t
)(I))^(((u_öt32_t)(I))<<1))&~
	`_MASK
(N)))

	)

70 
	#_uiP
(
N
,
I
Ë(!(((
u_öt32_t
)(I))&~
	`_MASK
(N)))

	)

	@src/generator68k/ccg/asm-i386.h

21 #i‚de‡
__ccg_asm_i386_h


22 
	#__ccg_asm_i386_h


	)

24 #i‚de‡
__i386__


26 #w¨nög: 
FOREIGN
 
ARCHITECTURE
 
SELECTED


30 
	~<sys/ty≥s.h
>

32 
u_öt8_t
 
	tö¢
;

34 
	~"asm-comm⁄.h
"

36 
	#_b00
 0

	)

37 
	#_b01
 1

	)

38 
	#_b10
 2

	)

39 
	#_b11
 3

	)

41 
	#_b000
 0

	)

42 
	#_b001
 1

	)

43 
	#_b010
 2

	)

44 
	#_b011
 3

	)

45 
	#_b100
 4

	)

46 
	#_b101
 5

	)

47 
	#_b110
 6

	)

48 
	#_b111
 7

	)

54 
	#_AL
 0x10

	)

55 
	#_CL
 0x11

	)

56 
	#_DL
 0x12

	)

57 
	#_BL
 0x13

	)

58 
	#_AH
 0x14

	)

59 
	#_CH
 0x15

	)

60 
	#_DH
 0x16

	)

61 
	#_BH
 0x17

	)

63 
	#_AX
 0x20

	)

64 
	#_CX
 0x21

	)

65 
	#_DX
 0x22

	)

66 
	#_BX
 0x23

	)

67 
	#_SP
 0x24

	)

68 
	#_BP
 0x25

	)

69 
	#_SI
 0x26

	)

70 
	#_DI
 0x27

	)

72 
	#_EAX
 0x40

	)

73 
	#_ECX
 0x41

	)

74 
	#_EDX
 0x42

	)

75 
	#_EBX
 0x43

	)

76 
	#_ESP
 0x44

	)

77 
	#_EBP
 0x45

	)

78 
	#_ESI
 0x46

	)

79 
	#_EDI
 0x47

	)

81 
	#_rS
(
R
Ë((R)>>4)

	)

82 
	#_rN
(
R
Ë((R)&0x7)

	)

84 
	#_r0P
(
R
Ë((R)==0)

	)

85 
	#_rLP
(
R
Ë(((R)>=
_AL
)&&((R)<=
_BL
))

	)

86 
	#_rHP
(
R
Ë(((R)>=
_AH
)&&((R)<=
_BH
))

	)

87 
	#_r1P
(
R
Ë(
	`_rS
(R)==1)

	)

88 
	#_r2P
(
R
Ë(
	`_rS
(R)==2)

	)

89 
	#_r4P
(
R
Ë(
	`_rS
(R)==4)

	)

91 
	#_rL
(
R
Ë(
	`_rLP
(RË? 
	`_rN
(RË: 
	`ASMFAIL
–"8-bô LÑegi°îÑequúed"))

	)

92 
	#_rH
(
R
Ë(
	`_rHP
(RË? 
	`_rN
(RË: 
	`ASMFAIL
–"8-bô HÑegi°îÑequúed"))

	)

93 
	#_r1
(
R
Ë(
	`_r1P
(RË? 
	`_rN
(RË: 
	`ASMFAIL
–"8-bôÑegi°îÑequúed"))

	)

94 
	#_r2
(
R
Ë(
	`_r2P
(RË? 
	`_rN
(RË: 
	`ASMFAIL
("16-bôÑegi°îÑequúed"))

	)

95 
	#_r4
(
R
Ë(
	`_r4P
(RË? 
	`_rN
(RË: 
	`ASMFAIL
("32-bôÑegi°îÑequúed"))

	)

97 
	#_rAL
(
R
Ë(((R)==
_AL
Ë? 
	`_rN
(RË: 
	`ASMFAIL
–"ALÑegi°îÑequúed"))

	)

98 
	#_rAX
(
R
Ë(((R)==
_AX
Ë? 
	`_rN
(RË: 
	`ASMFAIL
–"AXÑegi°îÑequúed"))

	)

99 
	#_rEAX
(
R
Ë(((R)==
_EAX
Ë? 
	`_rN
(RË: 
	`ASMFAIL
("EAXÑegi°îÑequúed"))

	)

105 
	#_s0P
(
I
Ë((I)==0)

	)

106 
	#_s1P
(
I
Ë
	`_siP
(8,I)

	)

107 
	#_s2P
(
I
Ë
	`_siP
(16,I)

	)

109 
	#_u1P
(
I
Ë(((IË& 0xffffff00Ë=0)

	)

110 
	#_u2P
(
I
Ë(((IË& 0xffff0000Ë=0)

	)

112 
	#_s1
(
I
Ë(
	`_s1P
(IË? ((
u_öt8_t
)(I)Ë: 
	`ASMFAIL
–"8-bô sig√d immedüãÑequúed"))

	)

113 
	#_s2
(
I
Ë(
	`_s2P
(IË? ((
u_öt16_t
)(I)Ë: 
	`ASMFAIL
("16-bô sig√d immedüãÑequúed"))

	)

115 
	#_u1
(
I
Ë(
	`_u1P
(IË? (IË: 
	`ASMFAIL
–"8-bô unsig√d immedüãÑequúed"))

	)

116 
	#_u2
(
I
Ë(
	`_u2P
(IË? (IË: 
	`ASMFAIL
("16-bô unsig√d immedüãÑequúed"))

	)

118 
	#_d1
(
I
Ë(
	`_s1P
(IË? ((
u_öt8_t
)(I)Ë: 
	`ASMFAIL
–"8-bô di•œ˚míàouào‡ønge"))

	)

124 #ifde‡
__STRICT_ANSI__


126 
	$_B
(
x
) {

127 
u_öt8_t
 *
pc
(u_öt8_à*)
asm_pc
;

128 *
pc
++(
u_öt8_t
)
x
;

129 
asm_pc
(
ö¢
 *)
pc
;

130  
x
;

131 
	}
}

133 
	$_W
(
x
) {

134 
u_öt16_t
 *
pc
(u_öt16_à*)
asm_pc
;

135 *
pc
++(
u_öt16_t
)
x
;

136 
asm_pc
(
ö¢
 *)
pc
;

137  
x
;

138 
	}
}

140 
	$_L
(
x
) {

141 
u_öt32_t
 *
pc
(u_öt32_à*)
asm_pc
;

142 *
pc
++(
u_öt32_t
)
x
;

143 
asm_pc
(
ö¢
 *)
pc
;

144  
x
;

145 
	}
}

147 
	#_OFF4
(
D
Ë((
u_öt32_t
)
d
 - (u_öt32_t)
asm_pc
)

	)

148 
	#_CKD1
(
D
Ë((
asm_∑ss
==1Ë? 
	`_OFF4
(DË: 
	`_d1
(_OFF4(D)))

	)

150 
öt8_t
 
	$_D1
(
d
) {

151 
öt8_t
 *
pc
(öt8_à*)
asm_pc
;

152 
öt8_t
 
off
= 0;

153 
	`_B
(0);

154 
off
(
öt8_t
)
	`_CKD1
(
d
);

155 *
pc

off
;

156  
off
;

157 
	}
}

159 
öt32_t
 
	$_D4
(
d
) {

160 
öt32_t
 *
pc
(öt32_à*)
asm_pc
;

161 
öt32_t
 
off
= 0;

162 
	`_L
(0);

163 
off

	`_OFF4
(
d
);

164 *
pc

off
;

165  
off
;

166 
	}
}

170 
	#_UC
(
X
Ë((
u_öt8_t
 )(X))

	)

171 
	#_PUC
(
X
Ë((
u_öt8_t
 *)(X))

	)

172 
	#_US
(
X
Ë((
u_öt16_t
 )(X))

	)

173 
	#_PUS
(
X
Ë((
u_öt16_t
 *)(X))

	)

174 
	#_UL
(
X
Ë((
u_öt32_t
 )(X))

	)

175 
	#_PUL
(
X
Ë((
u_öt32_t
 *)(X))

	)

177 #ifde‡
__˝lu•lus


178 
	#_RPUC
(
X
Ë((
u_öt8_t
 *&)(X))

	)

179 
	#_RPUS
(
X
Ë((
u_öt16_t
 *&)(X))

	)

180 
	#_RPUL
(
X
Ë((
u_öt32_t
 *&)(X))

	)

181 
	#_B
(
B
Ë((*
	`_RPUC
(
asm_pc
)++)
	`_UC
((B)& 0xff))

	)

182 
	#_W
(
W
Ë((*
	`_RPUS
(
asm_pc
)++)
	`_US
((W)&0xffff))

	)

183 
	#_L
(
L
Ë((*
	`_RPUL
(
asm_pc
)++)
	`_UL
((LË))

	)

185 
	#_B
(
B
Ë((*
	`_PUC
(
asm_pc
)++)
	`_UC
((B)& 0xff))

	)

186 
	#_W
(
W
Ë((*
	`_PUS
(
asm_pc
)++)
	`_US
((W)&0xffff))

	)

187 
	#_L
(
L
Ë((*
	`_PUL
(
asm_pc
)++)
	`_UL
((LË))

	)

190 
	#_OFF4
(
D
Ë(
	`_UL
(DË- _UL(
asm_pc
))

	)

191 
	#_CKD1
(
D
Ë((
asm_∑ss
==1Ë? 
	`_OFF4
(DË: 
	`_d1
(_OFF4(D)))

	)

193 
	#_D1
(
D
Ë(
	`_B
(0), ((*(
	`_PUC
(
asm_pc
)-1))
	`_CKD1
(D)))

	)

194 
	#_D4
(
D
Ë(
	`_L
(0), ((*(
	`_PUL
(
asm_pc
)-1))
	`_OFF4
(D)))

	)

198 #i‡(
_ASM_SAFETY
==0)

199 
	#_M
(
M
Ë(M)

	)

200 
	#_r
(
R
Ë(R)

	)

201 
	#_m
(
M
Ë(M)

	)

202 
	#_s
(
S
Ë(S)

	)

203 
	#_i
(
I
Ë(I)

	)

204 
	#_b
(
B
Ë(B)

	)

206 
	#_M
(
M
Ë(((M)>3Ë? 
	`ASMFAIL
("öã∫ÆÉº‹: mod = " #MË: (M))

	)

207 
	#_r
(
R
Ë(((R)>7Ë? 
	`ASMFAIL
("öã∫ÆÉº‹:Ñeg = " #RË: (R))

	)

208 
	#_m
(
M
Ë(((M)>7Ë? 
	`ASMFAIL
("öã∫ÆÉº‹:Ñ/m = " #MË: (M))

	)

209 
	#_s
(
S
Ë(((S)>3Ë? 
	`ASMFAIL
("öã∫ÆÉº‹: mem‹y sˇÀ = " #SË: (S))

	)

210 
	#_i
(
I
Ë(((I)>7Ë? 
	`ASMFAIL
("öã∫ÆÉº‹: mem‹y index = " #IË: (I))

	)

211 
	#_b
(
B
Ë(((B)>7Ë? 
	`ASMFAIL
("öã∫ÆÉº‹: mem‹y ba£ = " #BË: (B))

	)

214 
	#_Mrm
(
Md
,
R
,
M
Ë
	`_B
((
	`_M
(Md)<<6)|(
	`_r
(R)<<3)|
	`_m
(M))

	)

215 
	#_SIB
(
Sc
,
I
, 
B
Ë
	`_B
((
	`_s
(Sc)<<6)|(
	`_i
(I)<<3)|
	`_b
(B))

	)

217 
	#_SCL
(
S
Ë((((S)==1Ë? 
_b00
 : \

218 (((
S
)==2Ë? 
_b01
 : \

219 (((
S
)==4Ë? 
_b10
 : \

220 (((
S
)==8Ë? 
_b11
 : 
	`ASMFAIL
("ûÀgÆ sˇÀ: " #S))))))

	)

224 
	#__ALIGN
(
N
Ë(((N)==15Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x90)) : \

225 ((
N
)==14Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00)) : \

226 ((
N
)==13Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0xb6),_B(0x00),_B(0x00),_B(0x00),_B(0x00)) : \

227 ((
N
)==12Ë? (
	`_B
(0x8d),_B(0xb6),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0xb6),_B(0x00),_B(0x00),_B(0x00),_B(0x00)) : \

228 ((
N
)==11Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0x74),_B(0x26),_B(0x00)) : \

229 ((
N
)==10Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x8d),_B(0x76),_B(0x00)) : \

230 ((
N
)=9Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x89),_B(0xf6)) : \

231 ((
N
)=8Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00),_B(0x90)) : \

232 ((
N
)=7Ë? (
	`_B
(0x8d),_B(0xb4),_B(0x26),_B(0x00),_B(0x00),_B(0x00),_B(0x00)) : \

233 ((
N
)=6Ë? (
	`_B
(0x8d),_B(0xb6),_B(0x00),_B(0x00),_B(0x00),_B(0x00)) : \

234 ((
N
)=5Ë? (
	`_B
(0x90),_B(0x8d),_B(0x74),_B(0x26),_B(0x00)) : \

235 ((
N
)=4Ë? (
	`_B
(0x8d),_B(0x74),_B(0x26),_B(0x00)) : \

236 ((
N
)=3Ë? (
	`_B
(0x8d),_B(0x76),_B(0x00)) : \

237 ((
N
)=2Ë? (
	`_B
(0x89),_B(0xf6)) : \

238 ((
N
)=1Ë? (
	`_B
(0x90)) : \

239 ((
N
)== 0) ? 0 : \

240 
	`ASMFAIL
(".Æig¿¨gumíàtoÿœrge"))

	)

244 
	#_r_D
–
R
, 
D
 ) (
	`_Mrm
(
_b00
,
	`_rN
(R),
_b101
 ) ,
	`_L
(D))

	)

245 
	#_r_0B
–
R
, 
B
 ) (
	`_Mrm
(
_b00
,
	`_rN
(R),
	`_r4
(B)Ë)

	)

246 
	#_r_0BIS
(
R
, 
B
,
I
,
S
Ë(
	`_Mrm
(
_b00
,
	`_rN
(R),
_b100
 ),
	`_SIB
(
	`_SCL
(S),
	`_r4
(I),_r4(B)Ë)

	)

247 
	#_r_1B
–
R
, 
D
,
B
 ) (
	`_Mrm
(
_b01
,
	`_rN
(R),
	`_r4
(B)Ë,
	`_B
(D))

	)

248 
	#_r_1BIS
(
R
, 
D
,
B
,
I
,
S
Ë(
	`_Mrm
(
_b01
,
	`_rN
(R),
_b100
 ),
	`_SIB
(
	`_SCL
(S),
	`_r4
(I),_r4(B)),
	`_B
(D))

	)

249 
	#_r_4B
–
R
, 
D
,
B
 ) (
	`_Mrm
(
_b10
,
	`_rN
(R),
	`_r4
(B)Ë,
	`_L
(D))

	)

250 
	#_r_4BIS
(
R
, 
D
,
B
,
I
,
S
Ë(
	`_Mrm
(
_b10
,
	`_rN
(R),
_b100
 ),
	`_SIB
(
	`_SCL
(S),
	`_r4
(I),_r4(B)),
	`_L
(D))

	)

252 
	#_r_DB
–
R
, 
D
,
B
 ) (((
	`_s0P
(D)&&((B)!=
_EBP
)Ë? 
	`_r_0B
 (R, B ) : (
	`_s1P
(DË? 
	`_r_1B
–R,D,B ) : 
	`_r_4B
–R,D,B ))))

	)

253 
	#_r_DBIS
(
R
, 
D
,
B
,
I
,
S
Ë–(
	`_s0P
(DË? 
	`_r_0BIS
(R, B,I,SË: (
	`_s1P
(DË? 
	`_r_1BIS
(R,D,B,I,SË: 
	`_r_4BIS
(R,D,B,I,S))))

	)

255 
	#_r_X
–
R
, 
D
,
B
,
I
,
S
Ë(
	`_r0P
(IË? (_r0P(BË? 
	`_r_D
 (R,D ) : \

256 (
_ESP
==(
B
Ë? 
	`_r_DBIS
(
R
,
D
,_ESP,_ESP,1) : \

257 
	`_r_DB
 (
R
,
D
, 
B
 ))) : \

258 (((
I
)!=
_ESP
Ë? 
	`_r_DBIS
(
R
,
D
, 
B
, I,
S
) : \

259 
	`ASMFAIL
("ûÀgÆ indexÑegi°î: %e•")))

	)

265 
	#_d16
(Ë–
	`_B
(0x66 ) )

	)

266 
	#_O
–
OP
 ) ( 
	`_B
–OP ) )

	)

267 
	#_Or
–
OP
,
R
 ) ( 
	`_B
–(OP)|
	`_r
(R)Ë)

	)

268 
	#_OO
–
OP
 ) ( 
	`_B
((OP)>>8), _B–(OPËË)

	)

269 
	#_OOr
–
OP
,
R
 ) ( 
	`_B
((OP)>>8), _B–(OP)|
	`_r
(R)Ë)

	)

270 
	#_Os
–
OP
,
B
 ) ( 
	`_s1P
(BË? 
	`_B
(((OP)|
_b10
)Ë: _B(OPË)

	)

271 
	#_sW
–
W
 ) ( 
	`_s1P
(WË? 
	`_B
(W):
	`_W
(WË)

	)

272 
	#_sL
–
L
 ) ( 
	`_s1P
(LË? 
	`_B
(L):
	`_L
(LË)

	)

273 
	#_O_W
–
OP
 ,
W
 ) ( 
	`_O
 ( OP ) ,
	`_W
(WË)

	)

274 
	#_O_D1
–
OP
 ,
D
 ) ( 
	`_O
 ( OP ) ,
	`_D1
(DË)

	)

275 
	#_O_D4
–
OP
 ,
D
 ) ( 
	`_O
 ( OP ) ,
	`_D4
(DË)

	)

276 
	#_OO_D4
–
OP
 ,
D
 ) ( 
	`_OO
 ( OP ) ,
	`_D4
(DË)

	)

277 
	#_Os_sW
–
OP
 ,
W
 ) ( 
	`_Os
 ( OP,WË,
	`_sW
(WË)

	)

278 
	#_Os_sL
–
OP
 ,
L
 ) ( 
	`_Os
 ( OP,LË,
	`_sL
(LË)

	)

279 
	#_O_W_B
–
OP
 ,
W
,
B
Ë–
	`_O
 ( OP ) ,
	`_W
(W),
	`_B
(B))

	)

280 
	#_Or_B
–
OP
,
R
 ,
B
 ) ( 
	`_Or
 ( OP,RË,
	`_B
(BË)

	)

281 
	#_Or_W
–
OP
,
R
 ,
W
 ) ( 
	`_Or
 ( OP,RË,
	`_W
(WË)

	)

282 
	#_Or_L
–
OP
,
R
 ,
L
 ) ( 
	`_Or
 ( OP,RË,
	`_L
(LË)

	)

283 
	#_O_Mrm
–
OP
 ,
MO
,
R
,
M
 ) ( 
	`_O
 ( OP ),
	`_Mrm
(MO,R,M ) )

	)

284 
	#_OO_Mrm
–
OP
 ,
MO
,
R
,
M
 ) ( 
	`_OO
 ( OP ),
	`_Mrm
(MO,R,M ) )

	)

285 
	#_O_Mrm_B
–
OP
 ,
MO
,
R
,
M
 ,
B
 ) ( 
	`_O
 ( OP ),
	`_Mrm
(MO,R,M ) ,
	`_B
(BË)

	)

286 
	#_O_Mrm_W
–
OP
 ,
MO
,
R
,
M
 ,
W
 ) ( 
	`_O
 ( OP ),
	`_Mrm
(MO,R,M ) ,
	`_W
(WË)

	)

287 
	#_O_Mrm_L
–
OP
 ,
MO
,
R
,
M
 ,
L
 ) ( 
	`_O
 ( OP ),
	`_Mrm
(MO,R,M ) ,
	`_L
(LË)

	)

288 
	#_OO_Mrm_B
–
OP
 ,
MO
,
R
,
M
 ,
B
 ) ( 
	`_OO
 ( OP ),
	`_Mrm
(MO,R,M ) ,
	`_B
(BË)

	)

289 
	#_Os_Mrm_sW
(
OP
 ,
MO
,
R
,
M
 ,
W
 ) ( 
	`_Os
 ( OP,W),
	`_Mrm
(MO,R,M ),
	`_sW
(WË)

	)

290 
	#_Os_Mrm_sL
(
OP
 ,
MO
,
R
,
M
 ,
L
 ) ( 
	`_Os
 ( OP,L),
	`_Mrm
(MO,R,M ),
	`_sL
(LË)

	)

291 
	#_O_r_X
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
 ) ( 
	`_O
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË)

	)

292 
	#_OO_r_X
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
 ) ( 
	`_OO
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË)

	)

293 
	#_O_r_X_B
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
B
 ) ( 
	`_O
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË,
	`_B
(BË)

	)

294 
	#_O_r_X_W
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) ( 
	`_O
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË,
	`_W
(WË)

	)

295 
	#_O_r_X_L
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
L
 ) ( 
	`_O
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË,
	`_L
(LË)

	)

296 
	#_OO_r_X_B
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
B
 ) ( 
	`_OO
 ( OP ),
	`_r_X
–R ,MD,MB,MI,MSË,
	`_B
(BË)

	)

297 
	#_Os_r_X_sW
(
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) ( 
	`_Os
 ( OP,W),
	`_r_X
–R ,MD,MB,MI,MS),
	`_sW
(WË)

	)

298 
	#_Os_r_X_sL
(
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
L
 ) ( 
	`_Os
 ( OP,L),
	`_r_X
–R ,MD,MB,MI,MS),
	`_sL
(LË)

	)

299 
	#_O_X_B
–
OP
 ,
MD
,
MB
,
MI
,
MS
,
B
 ) ( 
	`_O_r_X_B
–OP ,0 ,MD,MB,MI,MS ,BË)

	)

300 
	#_O_X_W
–
OP
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) ( 
	`_O_r_X_W
–OP ,0 ,MD,MB,MI,MS ,WË)

	)

301 
	#_O_X_L
–
OP
 ,
MD
,
MB
,
MI
,
MS
,
L
 ) ( 
	`_O_r_X_L
–OP ,0 ,MD,MB,MI,MS ,LË)

	)

302 
	#_wO
–
OP
 ) (
	`_d16
(), 
	`_O
–OP ) )

	)

303 
	#_wOr
–
OP
,
R
 ) (
	`_d16
(), 
	`_Or
–OP,R ) )

	)

304 
	#_wOr_W
–
OP
,
R
 ,
W
 ) (
	`_d16
(), 
	`_Or_W
–OP,R ,WË)

	)

305 
	#_wOs_sW
–
OP
 ,
W
 ) (
	`_d16
(), 
	`_Os_sW
–OP ,WË)

	)

306 
	#_wO_Mrm
–
OP
 ,
MO
,
R
,
M
 ) (
	`_d16
(), 
	`_O_Mrm
–OP ,MO,R,M ) )

	)

307 
	#_wOO_Mrm
–
OP
 ,
MO
,
R
,
M
 ) (
	`_d16
(),
	`_OO_Mrm
–OP ,MO,R,M ) )

	)

308 
	#_wO_Mrm_B
–
OP
 ,
MO
,
R
,
M
 ,
B
 ) (
	`_d16
(), 
	`_O_Mrm_B
–OP ,MO,R,M ,BË)

	)

309 
	#_wOO_Mrm_B
–
OP
 ,
MO
,
R
,
M
 ,
B
 ) (
	`_d16
(),
	`_OO_Mrm_B
–OP ,MO,R,M ,BË)

	)

310 
	#_wO_Mrm_W
–
OP
 ,
MO
,
R
,
M
 ,
W
 ) (
	`_d16
(), 
	`_O_Mrm_W
–OP ,MO,R,M ,WË)

	)

311 
	#_wOs_Mrm_sW
(
OP
 ,
MO
,
R
,
M
 ,
W
 ) (
	`_d16
(), 
	`_Os_Mrm_sW
(OP ,MO,R,M ,WË)

	)

312 
	#_wO_X_W
–
OP
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) (
	`_d16
(), 
	`_O_X_W
–OP ,MD,MB,MI,MS ,WË)

	)

313 
	#_wO_r_X
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
 ) (
	`_d16
(), 
	`_O_r_X
–OP ,R ,MD,MB,MI,MS ) )

	)

314 
	#_wOO_r_X
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
 ) (
	`_d16
(),
	`_OO_r_X
–OP ,R ,MD,MB,MI,MS ) )

	)

315 
	#_wO_r_X_B
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
B
 ) (
	`_d16
(), 
	`_O_r_X_B
–OP ,R ,MD,MB,MI,MS ,BË)

	)

316 
	#_wOO_r_X_B
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
B
 ) (
	`_d16
(),
	`_OO_r_X_B
–OP ,R ,MD,MB,MI,MS ,BË)

	)

317 
	#_wO_r_X_W
–
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) (
	`_d16
(), 
	`_O_r_X_W
–OP ,R ,MD,MB,MI,MS ,WË)

	)

318 
	#_wOs_r_X_sW
(
OP
 ,
R
 ,
MD
,
MB
,
MI
,
MS
,
W
 ) (
	`_d16
(), 
	`_Os_r_X_sW
(OP ,R ,MD,MB,MI,MS ,WË)

	)

324 
	#ADCBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x10 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

325 
	#ADCBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x12 ,
	`_r1
(RDË,MD,MB,MI,MS )

	)

326 
	#ADCBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x10 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

327 
	#ADCBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b010
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

328 
	#ADCBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b010
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

330 
	#ADCWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x11 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

331 
	#ADCWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x13 ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

332 
	#ADCWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x11 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

333 
	#ADCWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b010
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

334 
	#ADCWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b010
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

336 
	#ADCLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x11 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

337 
	#ADCLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x13 ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

338 
	#ADCLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x11 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

339 
	#ADCLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b010
 ,
	`_r4
(RDË,IM )

	)

340 
	#ADCLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b010
 ,MD,MB,MI,MS ,IM )

	)

343 
	#ADDBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x00 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

344 
	#ADDBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x02 ,
	`_r1
(RDË,MD,MB,MI,MS )

	)

345 
	#ADDBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x00 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

346 
	#ADDBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b000
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

347 
	#ADDBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b000
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

349 
	#ADDWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x01 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

350 
	#ADDWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x03 ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

351 
	#ADDWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x01 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

352 
	#ADDWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b000
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

353 
	#ADDWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b000
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

355 
	#ADDLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x01 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

356 
	#ADDLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x03 ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

357 
	#ADDLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x01 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

358 
	#ADDLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b000
 ,
	`_r4
(RDË,IM )

	)

359 
	#ADDLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b000
 ,MD,MB,MI,MS ,IM )

	)

362 
	#ANDBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x20 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

363 
	#ANDBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x22 ,
	`_r1
(RDË,MD,MB,MI,MS )

	)

364 
	#ANDBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x20 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

365 
	#ANDBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b100
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

366 
	#ANDBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b100
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

368 
	#ANDWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x21 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

369 
	#ANDWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x23 ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

370 
	#ANDWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x21 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

371 
	#ANDWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b100
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

372 
	#ANDWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b100
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

374 
	#ANDLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x21 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

375 
	#ANDLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x23 ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

376 
	#ANDLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x21 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

377 
	#ANDLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b100
 ,
	`_r4
(RDË,IM )

	)

378 
	#ANDLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b100
 ,MD,MB,MI,MS ,IM )

	)

381 
	#BSWAPLr
(
R
Ë
	`_OOr
 (0x0fc8,
	`_r4
(RË)

	)

384 
	#BTWú
(
IM
,
RD
Ë
	`_wOO_Mrm_B
 (0x0fb®,
_b11
,
_b100
 ,
	`_r2
(RDË,
	`_u1
(IM))

	)

385 
	#BTWim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X_B
 (0x0fb®,
_b100
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

386 
	#BTWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0Á3 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

387 
	#BTWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0Á3 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

389 
	#BTLú
(
IM
,
RD
Ë
	`_OO_Mrm_B
 (0x0fb®,
_b11
,
_b100
 ,
	`_r4
(RDË,
	`_u1
(IM))

	)

390 
	#BTLim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X_B
 (0x0fb®,
_b100
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

391 
	#BTLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0Á3 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

392 
	#BTLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0Á3 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

395 
	#BTCWú
(
IM
,
RD
Ë
	`_wOO_Mrm_B
 (0x0fb®,
_b11
,
_b111
 ,
	`_r2
(RDË,
	`_u1
(IM))

	)

396 
	#BTCWim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X_B
 (0x0fb®,
_b111
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

397 
	#BTCWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0fbb ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

398 
	#BTCWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0fbb ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

400 
	#BTCLú
(
IM
,
RD
Ë
	`_OO_Mrm_B
 (0x0fb®,
_b11
,
_b111
 ,
	`_r4
(RDË,
	`_u1
(IM))

	)

401 
	#BTCLim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X_B
 (0x0fb®,
_b111
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

402 
	#BTCLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fbb ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

403 
	#BTCLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fbb ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

406 
	#BTRWú
(
IM
,
RD
Ë
	`_wOO_Mrm_B
 (0x0fb®,
_b11
,
_b110
 ,
	`_r2
(RDË,
	`_u1
(IM))

	)

407 
	#BTRWim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X_B
 (0x0fb®,
_b110
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

408 
	#BTRWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0fb3 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

409 
	#BTRWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0fb3 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

411 
	#BTRLú
(
IM
,
RD
Ë
	`_OO_Mrm_B
 (0x0fb®,
_b11
,
_b110
 ,
	`_r4
(RDË,
	`_u1
(IM))

	)

412 
	#BTRLim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X_B
 (0x0fb®,
_b110
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

413 
	#BTRLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fb3 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

414 
	#BTRLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fb3 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

417 
	#BTSWú
(
IM
,
RD
Ë
	`_wOO_Mrm_B
 (0x0fb®,
_b11
,
_b101
 ,
	`_r2
(RDË,
	`_u1
(IM))

	)

418 
	#BTSWim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X_B
 (0x0fb®,
_b101
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

419 
	#BTSWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0Áb ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

420 
	#BTSWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0Áb ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

422 
	#BTSLú
(
IM
,
RD
Ë
	`_OO_Mrm_B
 (0x0fb®,
_b11
,
_b101
 ,
	`_r4
(RDË,
	`_u1
(IM))

	)

423 
	#BTSLim
(
IM
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X_B
 (0x0fb®,
_b101
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

424 
	#BTSLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0Áb ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

425 
	#BTSLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0Áb ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

428 
	#CALLm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D4
 (0xe8 ,()(MD) ) : \

429 (–
	`_r0P
(
MI
)Ë? 
	`_O_Mrm
(0xff,
_b11
,
_b010
,
	`_r4
(
MB
) ) : \

430 
	`_O_r_X
(0xff, 
_b010
 ,()(
MD
),
MB
,
MI
,
MS
Ë))

	)

432 
	#CBW
(Ë
	`_O
 (0x98 )

	)

433 
	#CLC
(Ë
	`_O
 (0xf8 )

	)

434 
	#CLD
(Ë
	`_O
 (0xf¯)

	)

435 
	#CLTD
(Ë
	`_O
 (0x99 )

	)

436 
	#CMC
(Ë
	`_O
 (0xf5 )

	)

439 
	#CMPBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x38 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

440 
	#CMPBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x3®,
	`_r1
(RDË,MD,MB,MI,MS )

	)

441 
	#CMPBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x38 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

442 
	#CMPBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b111
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

443 
	#CMPBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b111
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

445 
	#CMPWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x39 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

446 
	#CMPWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x3b ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

447 
	#CMPWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x39 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

448 
	#CMPWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b111
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

449 
	#CMPWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b111
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

451 
	#CMPLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x39 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

452 
	#CMPLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x3b ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

453 
	#CMPLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x39 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

454 
	#CMPLú
(
IM
, 
RD
Ë
	`_O_Mrm_L
 (0x81 ,
_b11
,
_b111
 ,
	`_r4
(RDË,IM )

	)

455 
	#CMPLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_L
 (0x81 ,
_b111
 ,MD,MB,MI,MS ,IM )

	)

458 
	#CWD
(Ë
	`_O
 (0x99 )

	)

461 
	#CMPXCHGBº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fb0 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

462 
	#CMPXCHGBrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fb0 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

464 
	#CMPXCHGWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0fb1 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

465 
	#CMPXCHGWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0fb1 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

467 
	#CMPXCHGLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fb1 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

468 
	#CMPXCHGLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fb1 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

471 
	#DECBr
(
RD
Ë
	`_O_Mrm
 (0x„ ,
_b11
,
_b001
 ,
	`_r1
(RDË)

	)

472 
	#DECBm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0x„ ,
_b001
 ,MD,MB,MI,MS )

	)

474 
	#DECWr
(
RD
Ë
	`_wOr
 (0x48,
	`_r2
(RDË)

	)

475 
	#DECWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0xf‡,
_b001
 ,MD,MB,MI,MS )

	)

477 
	#DECLr
(
RD
Ë
	`_Or
 (0x48,
	`_r4
(RDË)

	)

478 
	#DECLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf‡,
_b001
 ,MD,MB,MI,MS )

	)

481 
	#DIVBº
(
RS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_Mrm
 (0xf6 ,
_b11
,
_b110
 ,
	`_r1
(RSËË)

	)

482 
	#DIVBmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_r_X
 (0xf6 ,
_b110
 ,MD,MB,MI,MS ) )

	)

484 
	#DIVWº
(
RS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_Mrm
(0xf7 ,
_b11
,
_b110
 ,
	`_r2
(RSËË)

	)

485 
	#DIVWmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_r_X
(0xf7 ,
_b110
 ,MD,MB,MI,MS ) )

	)

487 
	#DIVLº
(
RS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_Mrm
 (0xf7 ,
_b11
,
_b110
 ,
	`_r4
(RSËË)

	)

488 
	#DIVLmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_r_X
 (0xf7 ,
_b110
 ,MD,MB,MI,MS ) )

	)

491 
	#ENTERii
(
W
, 
B
Ë
	`_O_W_B
 (0xc8 ,
	`_s2
(W),
	`_s1
(B))

	)

492 
	#HLT
(Ë
	`_O
 (0xf4 )

	)

495 
	#IDIVBº
(
RS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_Mrm
 (0xf6 ,
_b11
,
_b111
 ,
	`_r1
(RSËË)

	)

496 
	#IDIVBmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_r_X
 (0xf6 ,
_b111
 ,MD,MB,MI,MS ) )

	)

498 
	#IDIVWº
(
RS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_Mrm
 (0xf7 ,
_b11
,
_b111
 ,
	`_r2
(RSËË)

	)

499 
	#IDIVWmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_r_X
 (0xf7 ,
_b111
 ,MD,MB,MI,MS ) )

	)

501 
	#IDIVLº
(
RS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_Mrm
 (0xf7 ,
_b11
,
_b111
 ,
	`_r4
(RSËË)

	)

502 
	#IDIVLmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_r_X
 (0xf7 ,
_b111
 ,MD,MB,MI,MS ) )

	)

505 
	#IMULWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0Á‡,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

506 
	#IMULWmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë
	`_wOO_r_X
 (0x0Á‡,
	`_r2
(RDË,MD,MB,MI,MS )

	)

507 
	#IMULWúr
(
IM
,
RS
,
RD
Ë
	`_wOs_Mrm_sW
 (0x69 ,
_b11
,
	`_r2
(RS),_r2(RDË,IM )

	)

508 
	#IMULWimr
(
IM
,
MD
,
MB
,
MI
,
MS
,
RD
Ë
	`_wOs_r_X_sW
 (0x69 ,
	`_r2
(RDË,MD,MB,MI,MS ,IM )

	)

510 
	#IMULLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0Á‡,
_b11
,
	`_r4
(RD),_r4(RSË)

	)

511 
	#IMULLmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë
	`_OO_r_X
 (0x0Á‡,
	`_r4
(RDË,MD,MB,MI,MS )

	)

512 
	#IMULLúr
(
IM
,
RS
,
RD
Ë
	`_Os_Mrm_sL
 (0x69 ,
_b11
,
	`_r4
(RS),_r4(RDË,IM )

	)

513 
	#IMULLimr
(
IM
,
MD
,
MB
,
MI
,
MS
,
RD
Ë
	`_Os_r_X_sL
 (0x69 ,
	`_r4
(RDË,MD,MB,MI,MS ,IM )

	)

516 
	#INCBr
(
RD
Ë
	`_O_Mrm
 (0x„ ,
_b11
,
_b000
 ,
	`_r1
(RDË)

	)

517 
	#INCBm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0x„ ,
_b000
 ,MD,MB,MI,MS )

	)

519 
	#INCWr
(
RD
Ë
	`_wOr
 (0x40,
	`_r2
(RDË)

	)

520 
	#INCWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0xf‡,
_b000
 ,MD,MB,MI,MS )

	)

522 
	#INCLr
(
RD
Ë
	`_Or
 (0x40,
	`_r4
(RDË)

	)

523 
	#INCLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf‡,
_b000
 ,MD,MB,MI,MS )

	)

526 
	#INVD
(Ë
	`_OO
 (0x0f08 )

	)

527 
	#INVLPGm
(
MD
, 
MB
, 
MI
, 
MS
Ë
	`_OO_r_X
 (0x0f01 ,
_b111
 ,MD,MB,MI,MS )

	)

529 
	#INTi
(
I
Ë(
	`_O
(0xcd), 
	`_B
(I))

	)

531 
	#JCXZm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe3 ,MD ) : \

532 
	`ASMFAIL
("ûÀgÆ modêö jcxz"))

	)

534 
	#JECXZm
 
JCXZm


	)

536 
	#JCCSim
(
CC
,
D
,
B
,
I
,
S
Ë((
	`_r0P
(BË&& _r0P(I)Ë? 
	`_O_D1
 (0x70|(CC) ,()(D) ) : \

537 
	`ASMFAIL
("ûÀgÆ modêö c⁄dôi⁄Æ jump"))

	)

539 
	#JOSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x0,D,B,I,S)

	)

540 
	#JNOSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x1,D,B,I,S)

	)

541 
	#JBSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x2,D,B,I,S)

	)

542 
	#JNAESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x2,D,B,I,S)

	)

543 
	#JNBSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x3,D,B,I,S)

	)

544 
	#JAESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x3,D,B,I,S)

	)

545 
	#JESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x4,D,B,I,S)

	)

546 
	#JZSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x4,D,B,I,S)

	)

547 
	#JNESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x5,D,B,I,S)

	)

548 
	#JNZSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x5,D,B,I,S)

	)

549 
	#JBESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x6,D,B,I,S)

	)

550 
	#JNASm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x6,D,B,I,S)

	)

551 
	#JNBESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x7,D,B,I,S)

	)

552 
	#JASm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x7,D,B,I,S)

	)

553 
	#JSSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x8,D,B,I,S)

	)

554 
	#JNSSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0x9,D,B,I,S)

	)

555 
	#JPSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xa,D,B,I,S)

	)

556 
	#JPESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xa,D,B,I,S)

	)

557 
	#JNPSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xb,D,B,I,S)

	)

558 
	#JPOSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xb,D,B,I,S)

	)

559 
	#JLSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xc,D,B,I,S)

	)

560 
	#JNGESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xc,D,B,I,S)

	)

561 
	#JNLSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xd,D,B,I,S)

	)

562 
	#JGESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xd,D,B,I,S)

	)

563 
	#JLESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xe,D,B,I,S)

	)

564 
	#JNGSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xe,D,B,I,S)

	)

565 
	#JNLESm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xf,D,B,I,S)

	)

566 
	#JGSm
(
D
,
B
,
I
,
S
Ë
	`JCCSim
(0xf,D,B,I,S)

	)

568 
	#JCCim
(
CC
,
D
,
B
,
I
,
S
Ë((
	`_r0P
(BË&& _r0P(I)Ë? 
	`_OO_D4
 (0x0f80|(CC) ,()(D) ) : \

569 
	`ASMFAIL
("ûÀgÆ modêö c⁄dôi⁄Æ jump"))

	)

571 
	#JOm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x0,D,B,I,S)

	)

572 
	#JNOm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x1,D,B,I,S)

	)

573 
	#JBm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x2,D,B,I,S)

	)

574 
	#JNAEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x2,D,B,I,S)

	)

575 
	#JNBm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x3,D,B,I,S)

	)

576 
	#JAEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x3,D,B,I,S)

	)

577 
	#JEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x4,D,B,I,S)

	)

578 
	#JZm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x4,D,B,I,S)

	)

579 
	#JNEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x5,D,B,I,S)

	)

580 
	#JNZm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x5,D,B,I,S)

	)

581 
	#JBEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x6,D,B,I,S)

	)

582 
	#JNAm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x6,D,B,I,S)

	)

583 
	#JNBEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x7,D,B,I,S)

	)

584 
	#JAm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x7,D,B,I,S)

	)

585 
	#JSm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x8,D,B,I,S)

	)

586 
	#JNSm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0x9,D,B,I,S)

	)

587 
	#JPm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xa,D,B,I,S)

	)

588 
	#JPEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xa,D,B,I,S)

	)

589 
	#JNPm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xb,D,B,I,S)

	)

590 
	#JPOm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xb,D,B,I,S)

	)

591 
	#JLm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xc,D,B,I,S)

	)

592 
	#JNGEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xc,D,B,I,S)

	)

593 
	#JNLm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xd,D,B,I,S)

	)

594 
	#JGEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xd,D,B,I,S)

	)

595 
	#JLEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xe,D,B,I,S)

	)

596 
	#JNGm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xe,D,B,I,S)

	)

597 
	#JNLEm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xf,D,B,I,S)

	)

598 
	#JGm
(
D
,
B
,
I
,
S
Ë
	`JCCim
(0xf,D,B,I,S)

	)

601 
	#JMPSm
(
D
,
B
,
I
,
S
Ë((
	`_r0P
(BË&& _r0P(I)Ë? 
	`_O_D1
 (0xeb ,()(D) ) : \

602 
	`ASMFAIL
("ûÀgÆ modêö sh‹àjump"))

	)

604 
	#JMPm
(
D
,
B
,
I
,
S
Ë((
	`_r0P
(BË&& _r0P(I)Ë? 
	`_O_D4
 (0xe9 ,()(D) ) : \

605 ((
	`_r0P
(
I
)Ë? 
	`_O_Mrm
 (0xf‡,
_b11
,
_b100
,
	`_r4
(
B
) ) : \

606 
	`_O_r_X
 (0xf‡,
_b100
 ,()(
D
),
B
,
I
,
S
 ) ))

	)

609 
	#LAHF
(Ë
	`_O
 (0x9‡)

	)

610 
	#LEALmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x8d ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

611 
	#LEAVE
(Ë
	`_O
 (0xc9 )

	)

614 
	#LMSWr
(
RS
Ë
	`_OO_Mrm
 (0x0f01 ,
_b11
,
_b110
,
	`_r4
(RSË)

	)

615 
	#LMSWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0f01 ,
_b110
 ,MD,MB,MI,MS )

	)

617 
	#LOOPm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe2 ,MD ) : \

618 
	`ASMFAIL
("ûÀgÆ modêöÜo›"))

	)

620 
	#LOOPEm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe1 ,MD ) : \

621 
	`ASMFAIL
("ûÀgÆ modêöÜo›e"))

	)

623 
	#LOOPZm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe1 ,MD ) : \

624 
	`ASMFAIL
("ûÀgÆ modêöÜo›z"))

	)

626 
	#LOOPNEm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe0 ,MD ) : \

627 
	`ASMFAIL
("ûÀgÆ modêöÜo›√"))

	)

629 
	#LOOPNZm
(
MD
,
MB
,
MI
,
MS
Ë((
	`_r0P
(MBË&& _r0P(MI)Ë? 
	`_O_D1
 (0xe0 ,MD ) : \

630 
	`ASMFAIL
("ûÀgÆ modêöÜo›nz"))

	)

633 
	#MOVBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x80 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

634 
	#MOVBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x8®,
	`_r1
(RDË,MD,MB,MI,MS )

	)

635 
	#MOVBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x88 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

636 
	#MOVBú
(
IM
, 
R
Ë
	`_Or_B
 (0xb0,
	`_r1
(RË,
	`_s1
(IM))

	)

637 
	#MOVBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_X_B
 (0xc6 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

639 
	#MOVSB
(Ë
	`_O
 (0xa4 )

	)

640 
	#MOVSL
(Ë
	`_O
 (0xa5 )

	)

642 
	#MOVWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x89 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

643 
	#MOVWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x8b ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

644 
	#MOVWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x89 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

645 
	#MOVWú
(
IM
, 
R
Ë
	`_wOr_W
 (0xb8,
	`_r2
(RË,
	`_s2
(IM))

	)

646 
	#MOVWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_X_W
 (0xc7 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

648 
	#MOVLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x89 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

649 
	#MOVLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x8b ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

650 
	#MOVLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x89 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

651 
	#MOVLú
(
IM
, 
R
Ë
	`_Or_L
 (0xb8,
	`_r4
(RË,IM )

	)

652 
	#MOVLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_X_L
 (0xc7 ,MD,MB,MI,MS ,IM )

	)

655 
	#MULBº
(
RS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_Mrm
 (0xf6 ,
_b11
,
_b100
 ,
	`_r1
(RSËË)

	)

656 
	#MULBmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAL
 (RDË+ 
	`_O_r_X
 (0xf6 ,
_b100
 ,MD,MB,MI,MS ) )

	)

658 
	#MULWº
(
RS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_Mrm
 (0xf7 ,
_b11
,
_b100
 ,
	`_r2
(RSËË)

	)

659 
	#MULWmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rAX
 (RDË+ 
	`_wO_r_X
 (0xf7 ,
_b100
 ,MD,MB,MI,MS ) )

	)

661 
	#MULLº
(
RS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_Mrm
 (0xf7 ,
_b11
,
_b100
 ,
	`_r4
(RSËË)

	)

662 
	#MULLmr
(
MD
,
MB
,
MI
,
MS
,
RD
Ë–
	`_rEAX
(RDË+ 
	`_O_r_X
 (0xf7 ,
_b100
 ,MD,MB,MI,MS ) )

	)

665 
	#NEGBr
(
RD
Ë
	`_O_Mrm
 (0xf6 ,
_b11
,
_b011
 ,
	`_r1
(RDË)

	)

666 
	#NEGBm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf6 ,
_b011
 ,MD,MB,MI,MS )

	)

668 
	#NEGWr
(
RD
Ë
	`_wO_Mrm
 (0xf7 ,
_b11
,
_b011
 ,
	`_r2
(RDË)

	)

669 
	#NEGWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0xf7 ,
_b011
 ,MD,MB,MI,MS )

	)

671 
	#NEGLr
(
RD
Ë
	`_O_Mrm
 (0xf7 ,
_b11
,
_b011
 ,
	`_r4
(RDË)

	)

672 
	#NEGLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf7 ,
_b011
 ,MD,MB,MI,MS )

	)

675 
	#NOP
(Ë
	`_O
 (0x90 )

	)

678 
	#NOTBr
(
RD
Ë
	`_O_Mrm
 (0xf6 ,
_b11
,
_b010
 ,
	`_r1
(RDË)

	)

679 
	#NOTBm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf6 ,
_b010
 ,MD,MB,MI,MS )

	)

681 
	#NOTWr
(
RD
Ë
	`_wO_Mrm
 (0xf7 ,
_b11
,
_b010
 ,
	`_r2
(RDË)

	)

682 
	#NOTWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0xf7 ,
_b010
 ,MD,MB,MI,MS )

	)

684 
	#NOTLr
(
RD
Ë
	`_O_Mrm
 (0xf7 ,
_b11
,
_b010
 ,
	`_r4
(RDË)

	)

685 
	#NOTLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf7 ,
_b010
 ,MD,MB,MI,MS )

	)

688 
	#ORBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x08 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

689 
	#ORBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x0®,
	`_r1
(RDË,MD,MB,MI,MS )

	)

690 
	#ORBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x08 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

691 
	#ORBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b001
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

692 
	#ORBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b001
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

694 
	#ORWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x09 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

695 
	#ORWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x0b ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

696 
	#ORWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x09 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

697 
	#ORWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b001
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

698 
	#ORWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b001
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

700 
	#ORLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x09 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

701 
	#ORLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x0b ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

702 
	#ORLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x09 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

703 
	#ORLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b001
 ,
	`_r4
(RDË,IM )

	)

704 
	#ORLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b001
 ,MD,MB,MI,MS ,IM )

	)

707 
	#POPWr
(
RD
Ë
	`_wOr
 (0x58,
	`_r2
(RDË)

	)

708 
	#POPWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0x8‡,
_b000
 ,MD,MB,MI,MS )

	)

710 
	#POPLr
(
RD
Ë
	`_Or
 (0x58,
	`_r4
(RDË)

	)

711 
	#POPLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0x8‡,
_b000
 ,MD,MB,MI,MS )

	)

714 
	#POPA
(Ë
	`_wO
 (0x61 )

	)

715 
	#POPAD
(Ë
	`_O
 (0x61 )

	)

717 
	#POPF
(Ë
	`_wO
 (0x9d )

	)

718 
	#POPFD
(Ë
	`_O
 (0x9d )

	)

721 
	#PUSHWr
(
R
Ë
	`_wOr
 (0x50,
	`_r2
(RË)

	)

722 
	#PUSHWm
(
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0xff, ,
_b110
 ,MD,MB,MI,MS )

	)

723 
	#PUSHWi
(
IM
Ë
	`_wOs_sW
 (0x68 ,IM )

	)

725 
	#PUSHLr
(
R
Ë
	`_Or
 (0x50,
	`_r4
(RË)

	)

726 
	#PUSHLm
(
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0xf‡,
_b110
 ,MD,MB,MI,MS )

	)

727 
	#PUSHLi
(
IM
Ë
	`_Os_sL
 (0x68 ,IM )

	)

730 
	#PUSHA
(Ë
	`_wO
 (0x60 )

	)

731 
	#PUSHAD
(Ë
	`_O
 (0x60 )

	)

733 
	#PUSHF
(Ë
	`_O
 (0x9¯)

	)

734 
	#PUSHFD
(Ë
	`_wO
 (0x9¯)

	)

736 
	#REP
(Ë
	`_O
 (0xf2 )

	)

737 
	#RET
(Ë
	`_O
 (0xc3 )

	)

738 
	#RETi
(
IM
Ë
	`_O_W
 (0xc2 ,
	`_s2
(IM))

	)

741 
	#ROLBú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd0 ,
_b11
,
_b000
,
	`_r1
(RD) ) : \

742 
	`_O_Mrm_B
 (0xc0 ,
_b11
,
_b000
,
	`_r1
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

743 
	#ROLBim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd0 ,
_b000
 ,MD,MB,MI,MS ) : \

744 
	`_O_r_X_B
 (0xc0 ,
_b000
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

745 
	#ROLBº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd2 ,
_b11
,
_b000
,
	`_r1
(RD) ) : \

746 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

747 
	#ROLBrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd2 ,
_b000
 ,MD,MB,MI,MS ) : \

748 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

750 
	#ROLWú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_wO_Mrm
 (0xd1 ,
_b11
,
_b000
,
	`_r2
(RD) ) : \

751 
	`_wO_Mrm_B
 (0xc1 ,
_b11
,
_b000
,
	`_r2
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

752 
	#ROLWim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_wO_r_X
 (0xd1 ,
_b000
 ,MD,MB,MI,MS ) : \

753 
	`_wO_r_X_B
 (0xc1 ,
_b000
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

754 
	#ROLWº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_wO_Mrm
 (0xd3 ,
_b11
,
_b000
,
	`_r2
(RD) ) : \

755 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

756 
	#ROLWrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_wO_r_X
 (0xd3 ,
_b000
 ,MD,MB,MI,MS ) : \

757 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

759 
	#ROLLú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd1 ,
_b11
,
_b000
,
	`_r4
(RD) ) : \

760 
	`_O_Mrm_B
 (0xc1 ,
_b11
,
_b000
,
	`_r4
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

761 
	#ROLLim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd1 ,
_b000
 ,MD,MB,MI,MS ) : \

762 
	`_O_r_X_B
 (0xc1 ,
_b000
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

763 
	#ROLLº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd3 ,
_b11
,
_b000
,
	`_r4
(RD) ) : \

764 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

765 
	#ROLLrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd3 ,
_b000
 ,MD,MB,MI,MS ) : \

766 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

769 
	#RORBú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd0 ,
_b11
,
_b001
,
	`_r1
(RD) ) : \

770 
	`_O_Mrm_B
 (0xc0 ,
_b11
,
_b001
,
	`_r1
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

771 
	#RORBim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd0 ,
_b001
 ,MD,MB,MI,MS ) : \

772 
	`_O_r_X_B
 (0xc0 ,
_b001
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

773 
	#RORBº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd2 ,
_b11
,
_b001
,
	`_r1
(RD) ) : \

774 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

775 
	#RORBrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd2 ,
_b001
 ,MD,MB,MI,MS ) : \

776 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

778 
	#RORWú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_wO_Mrm
 (0xd1 ,
_b11
,
_b001
,
	`_r2
(RD) ) : \

779 
	`_wO_Mrm_B
 (0xc1 ,
_b11
,
_b001
,
	`_r2
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

780 
	#RORWim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_wO_r_X
 (0xd1 ,
_b001
 ,MD,MB,MI,MS ) : \

781 
	`_wO_r_X_B
 (0xc1 ,
_b001
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

782 
	#RORWº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_wO_Mrm
 (0xd3 ,
_b11
,
_b001
,
	`_r2
(RD) ) : \

783 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

784 
	#RORWrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_wO_r_X
 (0xd3 ,
_b001
 ,MD,MB,MI,MS ) : \

785 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

787 
	#RORLú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd1 ,
_b11
,
_b001
,
	`_r4
(RD) ) : \

788 
	`_O_Mrm_B
 (0xc1 ,
_b11
,
_b001
,
	`_r4
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

789 
	#RORLim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd1 ,
_b001
 ,MD,MB,MI,MS ) : \

790 
	`_O_r_X_B
 (0xc1 ,
_b001
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

791 
	#RORLº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd3 ,
_b11
,
_b001
,
	`_r4
(RD) ) : \

792 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

793 
	#RORLrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd3 ,
_b001
 ,MD,MB,MI,MS ) : \

794 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

797 
	#SAHF
(Ë
	`_O
 (0x9ê)

	)

800 
	#SALBú
 
SHLBú


	)

801 
	#SALBim
 
SHLBim


	)

802 
	#SALBº
 
SHLBº


	)

803 
	#SALBrm
 
SHLBrm


	)

804 
	#SALWú
 
SHLWú


	)

805 
	#SALWim
 
SHLWim


	)

806 
	#SALWº
 
SHLWº


	)

807 
	#SALWrm
 
SHLWrm


	)

808 
	#SALLú
 
SHLLú


	)

809 
	#SALLim
 
SHLLim


	)

810 
	#SALLº
 
SHLLº


	)

811 
	#SALLrm
 
SHLLrm


	)

814 
	#SARBú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd0 ,
_b11
,
_b111
,
	`_r1
(RD) ) : \

815 
	`_O_Mrm_B
 (0xc0 ,
_b11
,
_b111
,
	`_r1
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

816 
	#SARBim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd0 ,
_b111
 ,MD,MB,MI,MS ) : \

817 
	`_O_r_X_B
 (0xc0 ,
_b111
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

818 
	#SARBº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd2 ,
_b11
,
_b111
,
	`_r1
(RD) ) : \

819 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

820 
	#SARBrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd2 ,
_b111
 ,MD,MB,MI,MS ) : \

821 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

823 
	#SARWú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_wO_Mrm
 (0xd1 ,
_b11
,
_b111
,
	`_r2
(RD) ) : \

824 
	`_wO_Mrm_B
 (0xc1 ,
_b11
,
_b111
,
	`_r2
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

825 
	#SARWim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_wO_r_X
 (0xd1 ,
_b111
 ,MD,MB,MI,MS ) : \

826 
	`_wO_r_X_B
 (0xc1 ,
_b111
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

827 
	#SARWº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_wO_Mrm
 (0xd3 ,
_b11
,
_b111
,
	`_r2
(RD) ) : \

828 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

829 
	#SARWrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_wO_r_X
 (0xd3 ,
_b111
 ,MD,MB,MI,MS ) : \

830 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

832 
	#SARLú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd1 ,
_b11
,
_b111
,
	`_r4
(RD) ) : \

833 
	`_O_Mrm_B
 (0xc1 ,
_b11
,
_b111
,
	`_r4
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

834 
	#SARLim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd1 ,
_b111
 ,MD,MB,MI,MS ) : \

835 
	`_O_r_X_B
 (0xc1 ,
_b111
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

836 
	#SARLº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd3 ,
_b11
,
_b111
,
	`_r4
(RD) ) : \

837 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

838 
	#SARLrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd3 ,
_b111
 ,MD,MB,MI,MS ) : \

839 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

842 
	#SBBBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x18 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

843 
	#SBBBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x1®,
	`_r1
(RDË,MD,MB,MI,MS )

	)

844 
	#SBBBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x18 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

845 
	#SBBBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b011
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

846 
	#SBBBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b011
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

848 
	#SBBWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x19 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

849 
	#SBBWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x1b ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

850 
	#SBBWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x19 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

851 
	#SBBWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b011
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

852 
	#SBBWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b011
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

854 
	#SBBLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x19 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

855 
	#SBBLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x1b ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

856 
	#SBBLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x19 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

857 
	#SBBLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b011
 ,
	`_r4
(RDË,IM )

	)

858 
	#SBBLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b011
 ,MD,MB,MI,MS ,IM )

	)

861 
	#SETCCú
(
CC
,
RD
Ë
	`_OO_Mrm
 (0x0f90|(CCË,
_b11
,
_b000
,
	`_r1
(RDË)

	)

863 
	#SETOr
(
RD
Ë
	`SETCCú
(0x0,RD)

	)

864 
	#SETNOr
(
RD
Ë
	`SETCCú
(0x1,RD)

	)

865 
	#SETBr
(
RD
Ë
	`SETCCú
(0x2,RD)

	)

866 
	#SETNAEr
(
RD
Ë
	`SETCCú
(0x2,RD)

	)

867 
	#SETNBr
(
RD
Ë
	`SETCCú
(0x3,RD)

	)

868 
	#SETAEr
(
RD
Ë
	`SETCCú
(0x3,RD)

	)

869 
	#SETEr
(
RD
Ë
	`SETCCú
(0x4,RD)

	)

870 
	#SETZr
(
RD
Ë
	`SETCCú
(0x4,RD)

	)

871 
	#SETNEr
(
RD
Ë
	`SETCCú
(0x5,RD)

	)

872 
	#SETNZr
(
RD
Ë
	`SETCCú
(0x5,RD)

	)

873 
	#SETBEr
(
RD
Ë
	`SETCCú
(0x6,RD)

	)

874 
	#SETNAr
(
RD
Ë
	`SETCCú
(0x6,RD)

	)

875 
	#SETNBEr
(
RD
Ë
	`SETCCú
(0x7,RD)

	)

876 
	#SETAr
(
RD
Ë
	`SETCCú
(0x7,RD)

	)

877 
	#SETSr
(
RD
Ë
	`SETCCú
(0x8,RD)

	)

878 
	#SETNSr
(
RD
Ë
	`SETCCú
(0x9,RD)

	)

879 
	#SETPr
(
RD
Ë
	`SETCCú
(0xa,RD)

	)

880 
	#SETPEr
(
RD
Ë
	`SETCCú
(0xa,RD)

	)

881 
	#SETNPr
(
RD
Ë
	`SETCCú
(0xb,RD)

	)

882 
	#SETPOr
(
RD
Ë
	`SETCCú
(0xb,RD)

	)

883 
	#SETLr
(
RD
Ë
	`SETCCú
(0xc,RD)

	)

884 
	#SETNGEr
(
RD
Ë
	`SETCCú
(0xc,RD)

	)

885 
	#SETNLr
(
RD
Ë
	`SETCCú
(0xd,RD)

	)

886 
	#SETGEr
(
RD
Ë
	`SETCCú
(0xd,RD)

	)

887 
	#SETLEr
(
RD
Ë
	`SETCCú
(0xe,RD)

	)

888 
	#SETNGr
(
RD
Ë
	`SETCCú
(0xe,RD)

	)

889 
	#SETNLEr
(
RD
Ë
	`SETCCú
(0xf,RD)

	)

890 
	#SETGr
(
RD
Ë
	`SETCCú
(0xf,RD)

	)

892 
	#SETCCim
(
CC
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0f90|(CCË,
_b000
 ,MD,MB,MI,MS )

	)

894 
	#SETOm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x0,D,B,I,S)

	)

895 
	#SETNOm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x1,D,B,I,S)

	)

896 
	#SETBm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x2,D,B,I,S)

	)

897 
	#SETNAEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x2,D,B,I,S)

	)

898 
	#SETNBm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x3,D,B,I,S)

	)

899 
	#SETAEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x3,D,B,I,S)

	)

900 
	#SETEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x4,D,B,I,S)

	)

901 
	#SETZm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x4,D,B,I,S)

	)

902 
	#SETNEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x5,D,B,I,S)

	)

903 
	#SETNZm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x5,D,B,I,S)

	)

904 
	#SETBEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x6,D,B,I,S)

	)

905 
	#SETNAm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x6,D,B,I,S)

	)

906 
	#SETNBEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x7,D,B,I,S)

	)

907 
	#SETAm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x7,D,B,I,S)

	)

908 
	#SETSm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x8,D,B,I,S)

	)

909 
	#SETNSm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0x9,D,B,I,S)

	)

910 
	#SETPm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xa,D,B,I,S)

	)

911 
	#SETPEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xa,D,B,I,S)

	)

912 
	#SETNPm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xb,D,B,I,S)

	)

913 
	#SETPOm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xb,D,B,I,S)

	)

914 
	#SETLm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xc,D,B,I,S)

	)

915 
	#SETNGEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xc,D,B,I,S)

	)

916 
	#SETNLm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xd,D,B,I,S)

	)

917 
	#SETGEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xd,D,B,I,S)

	)

918 
	#SETLEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xe,D,B,I,S)

	)

919 
	#SETNGm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xe,D,B,I,S)

	)

920 
	#SETNLEm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xf,D,B,I,S)

	)

921 
	#SETGm
(
D
,
B
,
I
,
S
Ë
	`SETCCim
(0xf,D,B,I,S)

	)

924 
	#SHLBú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd0 ,
_b11
,
_b100
,
	`_r1
(RD) ) : \

925 
	`_O_Mrm_B
 (0xc0 ,
_b11
,
_b100
,
	`_r1
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

926 
	#SHLBim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd0 ,
_b100
 ,MD,MB,MI,MS ) : \

927 
	`_O_r_X_B
 (0xc0 ,
_b100
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

928 
	#SHLBº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd2 ,
_b11
,
_b100
,
	`_r1
(RD) ) : \

929 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

930 
	#SHLBrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd2 ,
_b100
 ,MD,MB,MI,MS ) : \

931 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

933 
	#SHLWú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_wO_Mrm
 (0xd1 ,
_b11
,
_b100
,
	`_r2
(RD) ) : \

934 
	`_wO_Mrm_B
 (0xc1 ,
_b11
,
_b100
,
	`_r2
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

935 
	#SHLWim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_wO_r_X
 (0xd1 ,
_b100
 ,MD,MB,MI,MS ) : \

936 
	`_wO_r_X_B
 (0xc1 ,
_b100
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

937 
	#SHLWº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_wO_Mrm
 (0xd3 ,
_b11
,
_b100
,
	`_r2
(RD) ) : \

938 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

939 
	#SHLWrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_wO_r_X
 (0xd3 ,
_b100
 ,MD,MB,MI,MS ) : \

940 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

942 
	#SHLLú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd1 ,
_b11
,
_b100
,
	`_r4
(RD) ) : \

943 
	`_O_Mrm_B
 (0xc1 ,
_b11
,
_b100
,
	`_r4
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

944 
	#SHLLim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd1 ,
_b100
 ,MD,MB,MI,MS ) : \

945 
	`_O_r_X_B
 (0xc1 ,
_b100
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

946 
	#SHLLº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd3 ,
_b11
,
_b100
,
	`_r4
(RD) ) : \

947 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

948 
	#SHLLrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd3 ,
_b100
 ,MD,MB,MI,MS ) : \

949 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

952 
	#SHRBú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd0 ,
_b11
,
_b101
,
	`_r1
(RD) ) : \

953 
	`_O_Mrm_B
 (0xc0 ,
_b11
,
_b101
,
	`_r1
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

954 
	#SHRBim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd0 ,
_b101
 ,MD,MB,MI,MS ) : \

955 
	`_O_r_X_B
 (0xc0 ,
_b101
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

956 
	#SHRBº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd2 ,
_b11
,
_b101
,
	`_r1
(RD) ) : \

957 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

958 
	#SHRBrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd2 ,
_b101
 ,MD,MB,MI,MS ) : \

959 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

961 
	#SHRWú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_wO_Mrm
 (0xd1 ,
_b11
,
_b101
,
	`_r2
(RD) ) : \

962 
	`_wO_Mrm_B
 (0xc1 ,
_b11
,
_b101
,
	`_r2
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

963 
	#SHRWim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_wO_r_X
 (0xd1 ,
_b101
 ,MD,MB,MI,MS ) : \

964 
	`_wO_r_X_B
 (0xc1 ,
_b101
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

965 
	#SHRWº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_wO_Mrm
 (0xd3 ,
_b11
,
_b101
,
	`_r2
(RD) ) : \

966 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

967 
	#SHRWrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_wO_r_X
 (0xd3 ,
_b101
 ,MD,MB,MI,MS ) : \

968 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

970 
	#SHRLú
(
IM
,
RD
Ë(((IM)==1Ë? 
	`_O_Mrm
 (0xd1 ,
_b11
,
_b101
,
	`_r4
(RD) ) : \

971 
	`_O_Mrm_B
 (0xc1 ,
_b11
,
_b101
,
	`_r4
(
RD
Ë,
	`_u1
(
IM
ËË)

	)

972 
	#SHRLim
(
IM
,
MD
,
MB
,
MS
,
MI
Ë(((IM)==1Ë? 
	`_O_r_X
 (0xd1 ,
_b101
 ,MD,MB,MI,MS ) : \

973 
	`_O_r_X_B
 (0xc1 ,
_b101
 ,
MD
,
MB
,
MI
,
MS
 ,
	`_u1
(
IM
ËË)

	)

974 
	#SHRLº
(
RS
,
RD
Ë(((RS)==
_CL
Ë? 
	`_O_Mrm
 (0xd3 ,
_b11
,
_b101
,
	`_r4
(RD) ) : \

975 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

976 
	#SHRLrm
(
RS
,
MD
,
MB
,
MS
,
MI
Ë(((RS)==
_CL
Ë? 
	`_O_r_X
 (0xd3 ,
_b101
 ,MD,MB,MI,MS ) : \

977 
	`ASMFAIL
 ("sour˚Ñegi°î mu° bêCL" ) )

	)

980 
	#STC
(Ë
	`_O
 (0xf9 )

	)

981 
	#STD
(Ë
	`_O
 (0xfd )

	)

983 
	#SUBBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x28 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

984 
	#SUBBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x2®,
	`_r1
(RDË,MD,MB,MI,MS )

	)

985 
	#SUBBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x28 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

986 
	#SUBBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b101
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

987 
	#SUBBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b101
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

989 
	#SUBWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x29 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

990 
	#SUBWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x2b ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

991 
	#SUBWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x29 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

992 
	#SUBWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b101
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

993 
	#SUBWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b101
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

995 
	#SUBLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x29 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

996 
	#SUBLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x2b ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

997 
	#SUBLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x29 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

998 
	#SUBLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b101
 ,
	`_r4
(RDË,IM )

	)

999 
	#SUBLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b101
 ,MD,MB,MI,MS ,IM )

	)

1002 
	#TESTBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x84 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

1003 
	#TESTBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x84 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

1004 
	#TESTBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0xf6 ,
_b11
,
_b000
 ,
	`_r1
(RDË,
	`_u1
(IM))

	)

1005 
	#TESTBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0xf6 ,
_b000
 ,MD,MB,MI,MS ,
	`_u1
(IM))

	)

1007 
	#TESTWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x85 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

1008 
	#TESTWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x85 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

1009 
	#TESTWú
(
IM
, 
RD
Ë
	`_wO_Mrm_W
 (0xf7 ,
_b11
,
_b000
 ,
	`_r2
(RDË,
	`_u2
(IM))

	)

1010 
	#TESTWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X_W
 (0xf7 ,
_b000
 ,MD,MB,MI,MS ,
	`_u2
(IM))

	)

1012 
	#TESTLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x85 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

1013 
	#TESTLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x85 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

1014 
	#TESTLú
(
IM
, 
RD
Ë
	`_O_Mrm_L
 (0xf7 ,
_b11
,
_b000
 ,
	`_r4
(RDË,IM )

	)

1015 
	#TESTLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_L
 (0xf7 ,
_b000
 ,MD,MB,MI,MS ,IM )

	)

1018 
	#XADDBº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fc0 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

1019 
	#XADDBrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fc0 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

1021 
	#XADDWº
(
RS
,
RD
Ë
	`_wOO_Mrm
 (0x0fc1 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

1022 
	#XADDWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wOO_r_X
 (0x0fc1 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

1024 
	#XADDLº
(
RS
,
RD
Ë
	`_OO_Mrm
 (0x0fc1 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

1025 
	#XADDLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_OO_r_X
 (0x0fc1 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

1028 
	#XCHGBº
(
RS
,
RD
Ë
	`_O_Mrm
 (0x86 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

1029 
	#XCHGBrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0x86 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

1031 
	#XCHGWº
(
RS
,
RD
Ë
	`_wO_Mrm
 (0x87 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

1032 
	#XCHGWrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_wO_r_X
 (0x87 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

1034 
	#XCHGLº
(
RS
,
RD
Ë
	`_O_Mrm
 (0x87 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

1035 
	#XCHGLrm
(
RS
,
MD
,
MB
,
MI
,
MS
Ë
	`_O_r_X
 (0x87 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

1038 
	#XORBº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x30 ,
_b11
,
	`_r1
(RS),_r1(RDË)

	)

1039 
	#XORBmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x32 ,
	`_r1
(RDË,MD,MB,MI,MS )

	)

1040 
	#XORBrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x30 ,
	`_r1
(RSË,MD,MB,MI,MS )

	)

1041 
	#XORBú
(
IM
, 
RD
Ë
	`_O_Mrm_B
 (0x80 ,
_b11
,
_b110
 ,
	`_r1
(RDË,
	`_s1
(IM))

	)

1042 
	#XORBim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X_B
 (0x80 ,
_b110
 ,MD,MB,MI,MS ,
	`_s1
(IM))

	)

1044 
	#XORWº
(
RS
, 
RD
Ë
	`_wO_Mrm
 (0x31 ,
_b11
,
	`_r2
(RS),_r2(RDË)

	)

1045 
	#XORWmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_wO_r_X
 (0x33 ,
	`_r2
(RDË,MD,MB,MI,MS )

	)

1046 
	#XORWrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wO_r_X
 (0x31 ,
	`_r2
(RSË,MD,MB,MI,MS )

	)

1047 
	#XORWú
(
IM
, 
RD
Ë
	`_wOs_Mrm_sW
 (0x81 ,
_b11
,
_b110
 ,
	`_r2
(RDË,
	`_s2
(IM))

	)

1048 
	#XORWim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_wOs_r_X_sW
 (0x81 ,
_b110
 ,MD,MB,MI,MS ,
	`_s2
(IM))

	)

1050 
	#XORLº
(
RS
, 
RD
Ë
	`_O_Mrm
 (0x31 ,
_b11
,
	`_r4
(RS),_r4(RDË)

	)

1051 
	#XORLmr
(
MD
, 
MB
, 
MI
, 
MS
, 
RD
Ë
	`_O_r_X
 (0x33 ,
	`_r4
(RDË,MD,MB,MI,MS )

	)

1052 
	#XORLrm
(
RS
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_O_r_X
 (0x31 ,
	`_r4
(RSË,MD,MB,MI,MS )

	)

1053 
	#XORLú
(
IM
, 
RD
Ë
	`_Os_Mrm_sL
 (0x81 ,
_b11
,
_b110
 ,
	`_r4
(RDË,IM )

	)

1054 
	#XORLim
(
IM
, 
MD
, 
MB
, 
MI
, 
MS
Ë
	`_Os_r_X_sL
 (0x81 ,
_b110
 ,MD,MB,MI,MS ,IM )

	)

1060 
	#BSWAPr
(
R
Ë
	`BSWAPLr
(R)

	)

1061 
	#PUSHr
(
R
Ë((
	`_r4P
(RË? 
	`PUSHLr
(RË: 
	`_r2P
(RË? 
	`PUSHWr
(RË: 
	`ASMFAIL
("ûÀgÆÑegi°î size")))

	)

1062 
	#POPr
(
R
Ë((
	`_r4P
(RË? 
	`POPLr
(RË: 
	`_r2P
(RË? 
	`POPWr
(RË: 
	`ASMFAIL
("ûÀgÆÑegi°î size")))

	)

1069 
	#_ALIGNm
(
D
,
X
,
Y
,
Z
Ë(
	`__ALIGN
(((DË- (
	`_UL
(
asm_pc
Ë+ (DË- 1Ë/ (D)Ë* (D)), ((_UL◊sm_pcË% (D)Ë=0 ? 0 : 
	`ASMFAIL
("öã∫ÆÉº‹: .Æign")))

	)

	@src/generator68k/ccg/asm-ppc.h

21 #i‚de‡
__ccg_asm_µc_h


22 
	#__ccg_asm_µc_h


	)

55 #i‡!
deföed
(
__PPC__
Ë&& !deföed(
_POWER
Ë&& !deföed(
_IBMR2
)

57 #w¨nög: 
FOREIGN
 
ARCHITECTURE
 
SELECTED


61 
	tö¢
;

63 
	~"asm-comm⁄.h
"

65 
	#¸0
 0

	)

66 
	#¸1
 1

	)

67 
	#¸2
 2

	)

68 
	#¸3
 3

	)

69 
	#¸4
 4

	)

70 
	#¸5
 5

	)

71 
	#¸6
 6

	)

72 
	#¸7
 7

	)

74 
	#…
 0

	)

75 
	#gt
 1

	)

76 
	#eq
 2

	)

77 
	#so
 3

	)

80 
	#_suiP16
(
I
Ë(((()(I)Ë>-32768Ë&& ((()(I)Ë< 65536))

	)

82 
	#_UL
(
X
Ë(()(X))

	)

83 
	#_SL
(
X
Ë(()(X))

	)

85 
	#_ck_s
(
W
,
I
Ë(
	`_siP
(W,IË? (
	`_UL
(IË& 
	`_MASK
(W)Ë: 
	`ASMFAIL
–"sig√d i¡egî `"#I"'Åoÿœrgêf‹ "#W"-bô fõld"))

	)

86 
	#_ck_u
(
W
,
I
Ë(
	`_uiP
(W,IË? (
	`_UL
(IË& 
	`_MASK
(W)Ë: 
	`ASMFAIL
("unsig√d i¡egî `"#I"'Åoÿœrgêf‹ "#W"-bô fõld"))

	)

88 
	#_ck_su16
(
I
Ë(
	`_suiP16
(IË? (
	`_UL
(IË& 
	`_MASK
(16)Ë: 
	`ASMFAIL
("shi·ed i¡egî `"#I"'Åoÿœrgêf‹ 16-bô fõld"))

	)

90 
	#__ck_d
(
W
,
D
Ë(
	`_siP
(W,DË? (
	`_UL
(DË& (
	`_MASK
(W)-3)Ë: 
	`ASMFAIL
–"di•œ˚míà`"#D"'Åoÿœrgêf‹ "#W"-bô fõld"))

	)

91 
	#_ck_d
(
W
,
I
Ë((
asm_∑ss
==1Ë? ((
	`_UL
(I)-_UL(
asm_pc
)Ë& (
	`_MASK
(W)-3)Ë: 
	`__ck_d
(W,_UL(I)-_UL◊sm_pc)))

	)

93 
	#_s16
(
I
Ë
	`_ck_s
(16,I)

	)

95 
	#_su16
(
I
Ë
	`_ck_su16
(I)

	)

97 
	#_u1
(
I
Ë
	`_ck_u
–1,I)

	)

98 
	#_u5
(
I
Ë
	`_ck_u
–5,I)

	)

99 
	#_u6
(
I
Ë
	`_ck_u
–6,I)

	)

100 
	#_u9
(
I
Ë
	`_ck_u
–9,I)

	)

101 
	#_u10
(
I
Ë
	`_ck_u
(10,I)

	)

102 
	#_u16
(
I
Ë
	`_ck_u
(16,I)

	)

104 
	#_d16
(
D
Ë
	`_ck_d
(16,D)

	)

105 
	#_d26
(
D
Ë
	`_ck_d
(26,D)

	)

107 
	#_GEN
(
X
Ë((*
asm_pc
(X)), ++asm_pc)

	)

111 
	#_I
–
OP
, 
BD
,
AA
,
LK
 ) 
	`_GEN
((
	`_u6
(OP)<<26)| 
	`_d26
(BD)| (
	`_u1
(AA)<<1)|_u1(LK))

	)

112 
	#_B
–
OP
,
BO
,
BI
, 
BD
,
AA
,
LK
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(BO)<<21)|(_u5(BI)<<16)| 
	`_d16
(BD)| (
	`_u1
(AA)<<1)|_u1(LK))

	)

113 
	#_D
–
OP
,
RD
,
RA
, 
DD
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)|(_u5(RA)<<16)| 
	`_s16
(DDË)

	)

114 
	#_Du
–
OP
,
RD
,
RA
, 
DD
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)|(_u5(RA)<<16)| 
	`_u16
(DDË)

	)

115 
	#_Ds
–
OP
,
RD
,
RA
, 
DD
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)|(_u5(RA)<<16)| 
	`_su16
(DDË)

	)

116 
	#_X
–
OP
,
RD
,
RA
,
RB
, 
XO
,
RC
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)|(_u5(RA)<<16)|–_u5(RB)<<11)| (
	`_u10
(XO)<<1)|
	`_u1
(RC))

	)

117 
	#_XL
–
OP
,
BO
,
BI
, 
XO
,
LK
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(BO)<<21)|(_u5(BI)<<16)|–_u5(00)<<11)| (
	`_u10
(XO)<<1)|
	`_u1
(LK))

	)

118 
	#_XFX
–
OP
,
RD
, 
SR
,
XO
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)| (
	`_u10
(SR)<<11)| (_u10(XO)<<1)|
	`_u1
(00))

	)

119 
	#_XO
–
OP
,
RD
,
RA
,
RB
,
OE
,
XO
,
RC
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RD)<<21)|(_u5(RA)<<16)|–_u5(RB)<<11)|(
	`_u1
(OE)<<10)|–
	`_u9
(XO)<<1)|_u1(RC))

	)

120 
	#_M
–
OP
,
RS
,
RA
,
SH
,
MB
,
ME
,
RC
 ) 
	`_GEN
((
	`_u6
(OP)<<26)|(
	`_u5
(RS)<<21)|(_u5(RA)<<16)|–_u5(SH)<<11)|(_u5(MB)<< 6)|–_u5(ME)<<1)|
	`_u1
(RC))

	)

124 
	#SPR_LR
 ((8<<5)|(0))

	)

128 
	#ADDºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 266, 0)

	)

129 
	#ADDOºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 266, 0)

	)

130 
	#ADDIºi
(
RD
, 
RA
, 
IMM
Ë
	`_D
 (14, RD, RA, IMM)

	)

131 
	#ADDISºi
(
RD
, 
RA
, 
IMM
Ë
	`_Ds
 (15, RD, RA, IMM)

	)

133 
	#ANDºr
(
RA
, 
RS
, 
RB
Ë
	`_X
 (31, RS, RA, RB, 28, 0)

	)

134 
	#AND_ºr
(
RA
, 
RS
, 
RB
Ë
	`_X
 (31, RS, RA, RB, 28, 1)

	)

135 
	#ANDCºr
(
RA
, 
RS
, 
RB
Ë
	`_X
 (31, RS, RA, RB, 60, 0)

	)

136 
	#ANDC_ºr
(
RA
, 
RS
, 
RB
Ë
	`_X
 (31, RS, RA, RB, 60, 1)

	)

137 
	#ANDI_ºi
(
RA
, 
RS
, 
IMM
Ë
	`_Du
 (28, RS, RA, IMM)

	)

138 
	#ANDIS_ºi
(
RA
, 
RS
, 
IMM
Ë
	`_Du
 (29, RS, RA, IMM)

	)

140 
	#Bi
(
BD
Ë
	`_I
 (18, BD, 0, 0)

	)

141 
	#BAi
(
BD
Ë
	`_I
 (18, BD, 1, 0)

	)

142 
	#BLi
(
BD
Ë
	`_I
 (18, BD, 0, 1)

	)

143 
	#BLAi
(
BD
Ë
	`_I
 (18, BD, 1, 1)

	)

145 
	#BCiii
(
BO
,
BI
,
BD
Ë
	`_B
 (16, BO, BI, BD, 0, 0)

	)

146 
	#BCAiii
(
BO
,
BI
,
BD
Ë
	`_B
 (16, BO, BI, BD, 1, 0)

	)

147 
	#BCLiii
(
BO
,
BI
,
BD
Ë
	`_B
 (16, BO, BI, BD, 0, 1)

	)

148 
	#BCLAiii
(
BO
,
BI
,
BD
Ë
	`_B
 (16, BO, BI, BD, 1, 1)

	)

150 
	#BCCTRii
(
BO
,
BI
Ë
	`_XL
 (19, BO, BI, 528, 0)

	)

151 
	#BCCTRLii
(
BO
,
BI
Ë
	`_XL
 (19, BO, BI, 528, 1)

	)

153 
	#BCLRii
(
BO
,
BI
Ë
	`_XL
 (19, BO, BI, 16, 0)

	)

154 
	#BCLRLii
(
BO
,
BI
Ë
	`_XL
 (19, BO, BI, 16, 1)

	)

156 
	#CMPiúr
(
CR
, 
LL
, 
RA
, 
RB
Ë
	`_X
 (31, ((CR)<<2)|(LL), RA, RB, 0, 0)

	)

157 
	#CMPIiúi
(
CR
, 
LL
, 
RA
, 
IMM
Ë
	`_D
 (11, ((CR)<<2)|(LL), RA, IMM)

	)

159 
	#CMPLiúr
(
CR
, 
LL
, 
RA
, 
RB
Ë
	`_X
 (31, ((CR)<<2)|(LL), RA, RB, 32, 0)

	)

160 
	#CMPLIiúi
(
CR
, 
LL
, 
RA
, 
IMM
Ë
	`_D
 (10, ((CR)<<2)|(LL), RA, IMM)

	)

162 
	#CRANDiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 257, 0)

	)

163 
	#CRANDCiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 129, 0)

	)

164 
	#CREQViii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 289, 0)

	)

165 
	#CRNANDiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 225, 0)

	)

166 
	#CRNORiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 33, 0)

	)

167 
	#CRORiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 449, 0)

	)

168 
	#CRORCiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 417, 0)

	)

169 
	#CRXORiii
(
CRD
,
CRA
,
CRB
Ë
	`_X
 (19, CRD, CRA, CRB, 193, 0)

	)

171 
	#DCBSTº
(
RA
,
RB
Ë
	`_X
 (31, 00, RA, RB, 54, 0)

	)

173 
	#DIVWºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 491, 0)

	)

174 
	#DIVW_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 491, 1)

	)

175 
	#DIVWOºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 491, 0)

	)

176 
	#DIVWO_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 491, 1)

	)

178 
	#DIVWUºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 459, 0)

	)

179 
	#DIVWU_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 459, 1)

	)

180 
	#DIVWUOºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 459, 0)

	)

181 
	#DIVWUO_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 459, 1)

	)

183 
	#EQVºr
(
Ra
,
RS
,
RB
Ë
	`_X
 (31, RS, 
RA
, RB, 284, 0)

	)

184 
	#EQV_ºr
(
Ra
,
RS
,
RB
Ë
	`_X
 (31, RS, 
RA
, RB, 284, 1)

	)

186 
	#EXTSBº
(
RA
,
RS
Ë
	`_X
 (31, RS, RA, 0, 954, 0)

	)

187 
	#EXTSB_º
(
RA
,
RS
Ë
	`_X
 (31, RS, RA, 0, 954, 1)

	)

189 
	#EXTSHº
(
RA
,
RS
Ë
	`_X
 (31, RS, RA, 0, 922, 0)

	)

190 
	#EXTSH_º
(
RA
,
RS
Ë
	`_X
 (31, RS, RA, 0, 922, 1)

	)

192 
	#ICBIº
(
RA
,
RB
Ë
	`_X
 (31, 00, RA, RB, 982, 0)

	)

194 
	#ISYNC
(Ë
	`_X
 (19, 00, 00, 00, 150, 0)

	)

196 
	#LBZrm
(
RD
,
ID
,
RA
Ë
	`_D
 (34, RD, RA, ID)

	)

197 
	#LBZUrm
(
RD
,
ID
,
RA
Ë
	`_D
 (35, RD, RA, ID)

	)

198 
	#LBZUXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 119, 0)

	)

199 
	#LBZXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 87, 0)

	)

201 
	#LHArm
(
RD
,
ID
,
RA
Ë
	`_D
 (42, RD, RA, ID)

	)

202 
	#LHAUrm
(
RD
,
ID
,
RA
Ë
	`_D
 (43, RD, RA, ID)

	)

203 
	#LHAUXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 375, 0)

	)

204 
	#LHAXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 343, 0)

	)

205 
	#LHBRXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 790, 0)

	)

207 
	#LHZrm
(
RD
,
ID
,
RA
Ë
	`_D
 (40, RD, RA, ID)

	)

208 
	#LHZUrm
(
RD
,
ID
,
RA
Ë
	`_D
 (41, RD, RA, ID)

	)

209 
	#LHZUXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 311, 0)

	)

210 
	#LHZXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 279, 0)

	)

212 
	#LMWrm
(
RD
,
ID
,
RA
Ë
	`_D
 (46, RD, RA, ID)

	)

214 
	#LWBRXºr
(
RD
,
RA
,
RB
Ë
	`_X
 (31, RD, RA, RB, 534, 0)

	)

216 
	#LWZrm
(
RD
, 
DISP
, 
RA
Ë
	`_D
 (32, RD, RA, DISP)

	)

217 
	#LWZUrm
(
RD
, 
DISP
, 
RA
Ë
	`_D
 (33, RD, RA, DISP)

	)

218 
	#LWZUXºr
(
RD
, 
RA
, 
RB
Ë
	`_X
 (31, RD, RA, RB, 56, 0)

	)

219 
	#LWZXºr
(
RD
, 
RA
, 
RB
Ë
	`_X
 (31, RD, RA, RB, 23, 0)

	)

221 
	#MCRFii
(
CD
,
CS
Ë
	`_X
 (19, ((CD)<<2), ((CS)<<2), 0, 0, 0)

	)

223 
	#MFCRr
(
RD
Ë
	`_X
 (31, RD, 0, 0, 19, 0)

	)

225 
	#MFSPRri
(
RD
, 
SPR
Ë
	`_XFX
 (31, RD, (SPR)<<5, 339)

	)

226 
	#MTSPRú
(
SPR
, 
RS
Ë
	`_XFX
 (31, RS, (SPR)<<5, 467)

	)

228 
	#MULHWºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 75, 0)

	)

229 
	#MULHW_ºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 75, 1)

	)

230 
	#MULHWUºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 11, 0)

	)

231 
	#MULHWU_ºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 11, 1)

	)

233 
	#MULLIºi
(
RD
,
RA
,
IM
Ë
	`_D
 (07, RD, RA, IM)

	)

235 
	#MULLWºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 235, 0)

	)

236 
	#MULLW_ºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 235, 1)

	)

237 
	#MULLWOºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 235, 0)

	)

238 
	#MULLWO_ºr
(
RD
,
RA
,
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 235, 1)

	)

240 
	#NANDºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 476, 0)

	)

241 
	#NAND_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 476, 1)

	)

243 
	#NEGº
(
RD
,
RA
Ë
	`_XO
 (31, RD, RA, 0, 0, 104, 0)

	)

244 
	#NEG_º
(
RD
,
RA
Ë
	`_XO
 (31, RD, RA, 0, 0, 104, 1)

	)

245 
	#NEGOº
(
RD
,
RA
Ë
	`_XO
 (31, RD, RA, 0, 1, 104, 0)

	)

246 
	#NEGO_º
(
RD
,
RA
Ë
	`_XO
 (31, RD, RA, 0, 1, 104, 1)

	)

248 
	#NORºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 124, 0)

	)

249 
	#NOR_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 124, 1)

	)

251 
	#ORºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 444, 0)

	)

252 
	#OR_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 444, 1)

	)

253 
	#ORCºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 412, 0)

	)

254 
	#ORC_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 412, 1)

	)

255 
	#ORIºi
(
RA
,
RS
,
IM
Ë
	`_Du
 (24, RS, RA, IM)

	)

256 
	#ORISºi
(
RA
,
RS
,
IM
Ë
	`_Du
 (25, RS, RA, IM)

	)

258 
	#RLWIMIºiii
(
RA
,
RS
,
SH
,
MB
,
ME
Ë
	`_M
 (20, RS, RA, SH, MB, ME, 0)

	)

259 
	#RLWIMI_ºiii
(
RA
,
RS
,
SH
,
MB
,
ME
Ë
	`_M
 (20, RS, RA, SH, MB, ME, 1)

	)

261 
	#RLWINMºiii
(
RA
,
RS
,
SH
,
MB
,
ME
Ë
	`_M
 (21, RS, RA, SH, MB, ME, 0)

	)

262 
	#RLWINM_ºiii
(
RA
,
RS
,
SH
,
MB
,
ME
Ë
	`_M
 (21, RS, RA, SH, MB, ME, 1)

	)

264 
	#RLWNMºrii
(
RA
,
RS
,
RB
,
MB
,
ME
Ë
	`_M
 (23, RS, RA, RB, MB, ME, 0)

	)

265 
	#RLWNM_ºrii
(
RA
,
RS
,
RB
,
MB
,
ME
Ë
	`_M
 (23, RS, RA, RB, MB, ME, 1)

	)

267 
	#SLWºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 24, 0)

	)

268 
	#SLW_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 24, 1)

	)

270 
	#SRAWºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 792, 0)

	)

271 
	#SRAW_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 792, 1)

	)

273 
	#SRAWIºi
(
RD
, 
RS
, 
SH
Ë
	`_X
 (31, RS, RD, SH, 824, 0)

	)

274 
	#SRAWI_ºi
(
RD
, 
RS
, 
SH
Ë
	`_X
 (31, RS, RD, SH, 824, 1)

	)

276 
	#SRWºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 536, 0)

	)

277 
	#SRW_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 536, 1)

	)

279 
	#STBrm
(
RS
,
ID
,
RA
Ë
	`_D
 (38, RS, RA, ID)

	)

280 
	#STBUrm
(
RS
,
ID
,
RA
Ë
	`_D
 (39, RS, RA, ID)

	)

281 
	#STBUXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 247, 0)

	)

282 
	#STBXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 215, 0)

	)

284 
	#STHrm
(
RS
,
ID
,
RA
Ë
	`_D
 (44, RS, RA, ID)

	)

285 
	#STHUrm
(
RS
,
ID
,
RA
Ë
	`_D
 (45, RS, RA, ID)

	)

286 
	#STHBRXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 918, 0)

	)

287 
	#STHUXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 439, 0)

	)

288 
	#STHXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 407, 0)

	)

290 
	#STMWrm
(
RD
,
ID
,
RA
Ë
	`_D
 (47, RD, RA, ID)

	)

292 
	#STWrm
(
RS
,
ID
,
RA
Ë
	`_D
 (36, RS, RA, ID)

	)

293 
	#STWBRXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 662, 0)

	)

294 
	#STWCXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 150, 0)

	)

295 
	#STWCX_ºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 150, 1)

	)

296 
	#STWUrm
(
RS
,
ID
,
RA
Ë
	`_D
 (37, RS, RA, ID)

	)

297 
	#STWUXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 183, 0)

	)

298 
	#STWXºr
(
RS
,
RA
,
RB
Ë
	`_X
 (31, RS, RA, RB, 151, 0)

	)

300 
	#SUBFºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 40, 0)

	)

301 
	#SUBF_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 0, 40, 1)

	)

302 
	#SUBFOºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 40, 0)

	)

303 
	#SUBFO_ºr
(
RD
, 
RA
, 
RB
Ë
	`_XO
 (31, RD, RA, RB, 1, 40, 1)

	)

305 
	#SYNC
(Ë
	`_X
 (31, 00, 00, 00, 598, 0)

	)

307 
	#TWúr
(
TO
,
RA
,
RB
Ë
	`_X
 (31, TO, RA, RB, 4, 0)

	)

308 
	#TWIúi
(
TO
,
RA
,
IM
Ë
	`_D
 (03, TO, RA, IM)

	)

310 
	#XORºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 316, 0)

	)

311 
	#XOR_ºr
(
RA
,
RS
,
RB
Ë
	`_X
 (31, RS, RA, RB, 316, 1)

	)

312 
	#XORIºi
(
RA
,
RS
,
IM
Ë
	`_Du
 (26, RS, RA, IM)

	)

313 
	#XORISºi
(
RA
,
RS
,
IM
Ë
	`_Du
 (27, RS, RA, IM)

	)

317 
	#SUBIºi
(
RD
,
RA
,
IM
Ë
	`ADDIºi
(RD,RA,-(IM)Ë

	)

318 
	#SUBISºi
(
RD
,
RA
,
IM
Ë
	`ADDISºi
(RD,RA,-(IM))

	)

319 
	#SUBICºi
(
RD
,
RA
,
IM
Ë
	`ADDICºi
(RD,RA,-(IM))

	)

320 
	#SUBIC_ºi
(
RD
,
RA
,
IM
Ë
	`ADDIC_ºi
(RD,RA,-(IM))

	)

322 
	#SUBºr
(
RD
,
RA
,
RB
Ë
	`SUBFºr
(RD,RB,RAË

	)

323 
	#SUBOºr
(
RD
,
RA
,
RB
Ë
	`SUBFOºr
(RD,RB,RA)

	)

324 
	#SUB_ºr
(
RD
,
RA
,
RB
Ë
	`SUBF_ºr
(RD,RB,RA)

	)

325 
	#SUBCºr
(
RD
,
RA
,
RB
Ë
	`SUBFCºr
(RD,RB,RA)

	)

326 
	#SUBCOºr
(
RD
,
RA
,
RB
Ë
	`SUBFCOºr
(RD,RB,RA)

	)

327 
	#SUBC_ºr
(
RD
,
RA
,
RB
Ë
	`SUBFC_ºr
(RD,RB,RA)

	)

329 
	#CMPWIúi
(
C
,
RA
,
IM
Ë
	`CMPIiúi
(C,0,RA,IMË

	)

330 
	#CMPWúr
(
C
,
RA
,
RB
Ë
	`CMPiúr
(C,0,RA,RB)

	)

331 
	#CMPLWIúi
(
C
,
RA
,
IM
Ë
	`CMPLIiúi
(C,0,RA,IM)

	)

332 
	#CMPLWúr
(
C
,
RA
,
RB
Ë
	`CMPLiúr
(C,0,RA,RB)

	)

334 
	#CMPWIri
(
RA
,
IM
Ë
	`CMPWIúi
(0,RA,IMË

	)

335 
	#CMPWº
(
RA
,
RB
Ë
	`CMPWúr
(0,RA,RB)

	)

336 
	#CMPLWIri
(
RA
,
IM
Ë
	`CMPLWIúi
(0,RA,IM)

	)

337 
	#CMPLWº
(
RA
,
RB
Ë
	`CMPLWúr
(0,RA,RB)

	)

339 
	#EXTLWIºii
(
RA
,
RS
,
N
,
B
Ë
	`RLWINMºiii
(RA, RS, B, 0, (N)-1Ë

	)

340 
	#EXTRWIºii
(
RA
,
RS
,
N
,
B
Ë
	`RLWINMºiii
(RA, RS, (B)+(N), 32-(N), 31)

	)

341 
	#INSLWIºii
(
RA
,
RS
,
N
,
B
Ë
	`RLWIMIºiii
(RA, RS, 32-(B), B, (B)+(N)-1)

	)

342 
	#INSRWIºii
(
RA
,
RS
,
N
,
B
Ë
	`RLWIMIºiii
(RA, RS, 32-((B)+(N)), B, (B)+(N)-1)

	)

343 
	#ROTLWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, N, 0, 31)

	)

344 
	#ROTRWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, 32-(N), 0, 31)

	)

345 
	#ROTLWºr
(
RA
,
RS
,
RB
Ë
	`RLWNMºrii
–RA, RS, RB, 0, 31)

	)

346 
	#SLWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, N, 0, 31-(N))

	)

347 
	#SRWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, 32-(N), N, 31)

	)

348 
	#CLRLWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, 0, N, 31)

	)

349 
	#CLRRWIºi
(
RA
,
RS
,
N
Ë
	`RLWINMºiii
(RA, RS, 0, 0, 31-(N))

	)

350 
	#CLRLSLWIºii
(
RA
,
RS
,
B
,
N
Ë
	`RLWINMºiii
(RA, RS, N, (B)-(N), 31-(N))

	)

352 
	#BTii
(
C
,
D
Ë
	`BC
(12, C, DË

	)

353 
	#BFii
(
C
,
D
Ë
	`BC
–4, C, D)

	)

354 
	#BDNZi
(
D
Ë
	`BC
(16, 0, D)

	)

355 
	#BDNZTii
(
C
,
D
Ë
	`BC
–8, C, D)

	)

356 
	#BDNZFii
(
C
,
D
Ë
	`BC
–0, C, D)

	)

357 
	#BDZi
(
D
Ë
	`BC
(18, 0, D)

	)

358 
	#BDZTii
(
C
,
D
Ë
	`BC
(10, C, D)

	)

359 
	#BDZFii
(
C
,
D
Ë
	`BC
–2, C, D)

	)

361 
	#BCTR
(Ë
	`BCCTRii
(20, 0Ë

	)

362 
	#BCTRL
(Ë
	`BCCTRLii
(20, 0)

	)

364 
	#BLR
(Ë
	`BCLRii
(20, 0Ë

	)

365 
	#BLRL
(Ë
	`BCLRLii
(20, 0)

	)

368 
	#BLTLRi
(
CR
Ë
	`BCLRii
(12, ((CR)<<2)+0Ë

	)

369 
	#BLELRi
(
CR
Ë
	`BCLRii
–4 ((CR)<<2)+1)

	)

370 
	#BEQLRi
(
CR
Ë
	`BCLRii
(12, ((CR)<<2)+2)

	)

371 
	#BGELRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+0)

	)

372 
	#BGTLRi
(
CR
Ë
	`BCLRii
(12, ((CR)<<2)+1)

	)

373 
	#BNLLRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+0)

	)

374 
	#BNELRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+2)

	)

375 
	#BNGLRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+1)

	)

376 
	#BSOLRi
(
CR
Ë
	`BCLRii
(12, ((CR)<<2)+3)

	)

377 
	#BNSLRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+3)

	)

378 
	#BUNLRi
(
CR
Ë
	`BCLRii
(12, ((CR)<<2)+3)

	)

379 
	#BNULRi
(
CR
Ë
	`BCLRii
–4, ((CR)<<2)+3)

	)

381 
	#BLTLRLi
(
CR
Ë
	`BCLRLii
(12, ((CR)<<2)+0Ë

	)

382 
	#BLELRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+1)

	)

383 
	#BEQLRLi
(
CR
Ë
	`BCLRLii
(12, ((CR)<<2)+2)

	)

384 
	#BGELRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+0)

	)

385 
	#BGTLRLi
(
CR
Ë
	`BCLRLii
(12, ((CR)<<2)+1)

	)

386 
	#BNLLRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+0)

	)

387 
	#BNELRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+2)

	)

388 
	#BNGLRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+1)

	)

389 
	#BSOLRLi
(
CR
Ë
	`BCLRLii
(12, ((CR)<<2)+3)

	)

390 
	#BNSLRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+3)

	)

391 
	#BUNLRLi
(
CR
Ë
	`BCLRLii
(12, ((CR)<<2)+3)

	)

392 
	#BNULRLi
(
CR
Ë
	`BCLRLii
–4, ((CR)<<2)+3)

	)

394 
	#BLTCTRi
(
CR
Ë
	`BCCTRii
(12, ((CR)<<2)+0Ë

	)

395 
	#BLECTRi
(
CR
Ë
	`BCCTRii
–4 ((CR)<<2)+1)

	)

396 
	#BEQCTRi
(
CR
Ë
	`BCCTRii
(12, ((CR)<<2)+2)

	)

397 
	#BGECTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+0)

	)

398 
	#BGTCTRi
(
CR
Ë
	`BCCTRii
(12, ((CR)<<2)+1)

	)

399 
	#BNLCTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+0)

	)

400 
	#BNECTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+2)

	)

401 
	#BNGCTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+1)

	)

402 
	#BSOCTRi
(
CR
Ë
	`BCCTRii
(12, ((CR)<<2)+3)

	)

403 
	#BNSCTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+3)

	)

404 
	#BUNCTRi
(
CR
Ë
	`BCCTRii
(12, ((CR)<<2)+3)

	)

405 
	#BNUCTRi
(
CR
Ë
	`BCCTRii
–4, ((CR)<<2)+3)

	)

407 
	#BLTCTRLi
(
CR
Ë
	`BCCTRLii
(12, ((CR)<<2)+0Ë

	)

408 
	#BLECTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+1)

	)

409 
	#BEQCTRLi
(
CR
Ë
	`BCCTRLii
(12, ((CR)<<2)+2)

	)

410 
	#BGECTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+0)

	)

411 
	#BGTCTRLi
(
CR
Ë
	`BCCTRLii
(12, ((CR)<<2)+1)

	)

412 
	#BNLCTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+0)

	)

413 
	#BNECTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+2)

	)

414 
	#BNGCTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+1)

	)

415 
	#BSOCTRLi
(
CR
Ë
	`BCCTRLii
(12, ((CR)<<2)+3)

	)

416 
	#BNSCTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+3)

	)

417 
	#BUNCTRLi
(
CR
Ë
	`BCCTRLii
(12, ((CR)<<2)+3)

	)

418 
	#BNUCTRLi
(
CR
Ë
	`BCCTRLii
–4, ((CR)<<2)+3)

	)

421 
	#BLTLR
(Ë
	`BLTLRi
(0Ë

	)

422 
	#BLELR
(Ë
	`BLELRi
(0)

	)

423 
	#BEQLR
(Ë
	`BEQLRi
(0)

	)

424 
	#BGELR
(Ë
	`BGELRi
(0)

	)

425 
	#BGTLR
(Ë
	`BGTLRi
(0)

	)

426 
	#BNLLR
(Ë
	`BNLLRi
(0)

	)

427 
	#BNELR
(Ë
	`BNELRi
(0)

	)

428 
	#BNGLR
(Ë
	`BNGLRi
(0)

	)

429 
	#BSOLR
(Ë
	`BSOLRi
(0)

	)

430 
	#BNSLR
(Ë
	`BNSLRi
(0)

	)

431 
	#BUNLR
(Ë
	`BUNLRi
(0)

	)

432 
	#BNULR
(Ë
	`BNULRi
(0)

	)

434 
	#BLTLRL
(Ë
	`BLTLRLi
(0)

	)

435 
	#BLELRL
(Ë
	`BLELRLi
(0)

	)

436 
	#BEQLRL
(Ë
	`BEQLRLi
(0)

	)

437 
	#BGELRL
(Ë
	`BGELRLi
(0)

	)

438 
	#BGTLRL
(Ë
	`BGTLRLi
(0)

	)

439 
	#BNLLRL
(Ë
	`BNLLRLi
(0)

	)

440 
	#BNELRL
(Ë
	`BNELRLi
(0)

	)

441 
	#BNGLRL
(Ë
	`BNGLRLi
(0)

	)

442 
	#BSOLRL
(Ë
	`BSOLRLi
(0)

	)

443 
	#BNSLRL
(Ë
	`BNSLRLi
(0)

	)

444 
	#BUNLRL
(Ë
	`BUNLRLi
(0)

	)

445 
	#BNULRL
(Ë
	`BNULRLi
(0)

	)

447 
	#BLTCTR
(Ë
	`BLTCTRi
(0)

	)

448 
	#BLECTR
(Ë
	`BLECTRi
(0)

	)

449 
	#BEQCTR
(Ë
	`BEQCTRi
(0)

	)

450 
	#BGECTR
(Ë
	`BGECTRi
(0)

	)

451 
	#BGTCTR
(Ë
	`BGTCTRi
(0)

	)

452 
	#BNLCTR
(Ë
	`BNLCTRi
(0)

	)

453 
	#BNECTR
(Ë
	`BNECTRi
(0)

	)

454 
	#BNGCTR
(Ë
	`BNGCTRi
(0)

	)

455 
	#BSOCTR
(Ë
	`BSOCTRi
(0)

	)

456 
	#BNSCTR
(Ë
	`BNSCTRi
(0)

	)

457 
	#BUNCTR
(Ë
	`BUNCTRi
(0)

	)

458 
	#BNUCTR
(Ë
	`BNUCTRi
(0)

	)

460 
	#BLTCTRL
(Ë
	`BLTCTRLi
(0)

	)

461 
	#BLECTRL
(Ë
	`BLECTRLi
(0)

	)

462 
	#BEQCTRL
(Ë
	`BEQCTRLi
(0)

	)

463 
	#BGECTRL
(Ë
	`BGECTRLi
(0)

	)

464 
	#BGTCTRL
(Ë
	`BGTCTRLi
(0)

	)

465 
	#BNLCTRL
(Ë
	`BNLCTRLi
(0)

	)

466 
	#BNECTRL
(Ë
	`BNECTRLi
(0)

	)

467 
	#BNGCTRL
(Ë
	`BNGCTRLi
(0)

	)

468 
	#BSOCTRL
(Ë
	`BSOCTRLi
(0)

	)

469 
	#BNSCTRL
(Ë
	`BNSCTRLi
(0)

	)

470 
	#BUNCTRL
(Ë
	`BUNCTRLi
(0)

	)

471 
	#BNUCTRL
(Ë
	`BNUCTRLi
(0)

	)

474 
	#BLTii
(
C
,
D
Ë
	`BCiii
(12, ((C)<<2)+0, DË

	)

475 
	#BLEii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+1, D)

	)

476 
	#BEQii
(
C
,
D
Ë
	`BCiii
(12, ((C)<<2)+2, D)

	)

477 
	#BGEii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+0, D)

	)

478 
	#BGTii
(
C
,
D
Ë
	`BCiii
(12, ((C)<<2)+1, D)

	)

479 
	#BNLii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+0, D)

	)

480 
	#BNEii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+2, D)

	)

481 
	#BNGii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+1, D)

	)

482 
	#BSOii
(
C
,
D
Ë
	`BCiii
(12, ((C)<<2)+3, D)

	)

483 
	#BNSii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+3, D)

	)

484 
	#BUNii
(
C
,
D
Ë
	`BCiii
(12, ((C)<<2)+3, D)

	)

485 
	#BNUii
(
C
,
D
Ë
	`BCiii
–4, ((C)<<2)+3, D)

	)

487 
	#BLTi
(
D
Ë
	`BLTii
(0,DË

	)

488 
	#BLEi
(
D
Ë
	`BLEii
(0,D)

	)

489 
	#BEQi
(
D
Ë
	`BEQii
(0,D)

	)

490 
	#BGEi
(
D
Ë
	`BGEii
(0,D)

	)

491 
	#BGTi
(
D
Ë
	`BGTii
(0,D)

	)

492 
	#BNLi
(
D
Ë
	`BNLii
(0,D)

	)

493 
	#BNEi
(
D
Ë
	`BNEii
(0,D)

	)

494 
	#BNGi
(
D
Ë
	`BNGii
(0,D)

	)

495 
	#BSOi
(
D
Ë
	`BSOii
(0,D)

	)

496 
	#BNSi
(
D
Ë
	`BNSii
(0,D)

	)

497 
	#BUNi
(
D
Ë
	`BUNii
(0,D)

	)

498 
	#BNUi
(
D
Ë
	`BNUii
(0,D)

	)

500 
	#BLTLii
(
C
,
D
Ë
	`BCLiii
(12, ((C)<<2)+0, DË

	)

501 
	#BLELii
(
C
,
D
Ë
	`BCLiii
–4 ((C)<<2)+1, D)

	)

502 
	#BEQLii
(
C
,
D
Ë
	`BCLiii
(12, ((C)<<2)+2, D)

	)

503 
	#BGELii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+0, D)

	)

504 
	#BGTLii
(
C
,
D
Ë
	`BCLiii
(12, ((C)<<2)+1, D)

	)

505 
	#BNLLii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+0, D)

	)

506 
	#BNELii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+2, D)

	)

507 
	#BNGLii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+1, D)

	)

508 
	#BSOLii
(
C
,
D
Ë
	`BCLiii
(12, ((C)<<2)+3, D)

	)

509 
	#BNSLii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+3, D)

	)

510 
	#BUNLii
(
C
,
D
Ë
	`BCLiii
(12, ((C)<<2)+3, D)

	)

511 
	#BNULii
(
C
,
D
Ë
	`BCLiii
–4, ((C)<<2)+3, D)

	)

513 
	#BLTLi
(
D
Ë
	`BLTLii
(0,DË

	)

514 
	#BLELi
(
D
Ë
	`BLELii
(0,D)

	)

515 
	#BEQLi
(
D
Ë
	`BEQLii
(0,D)

	)

516 
	#BGELi
(
D
Ë
	`BGELii
(0,D)

	)

517 
	#BGTLi
(
D
Ë
	`BGTLii
(0,D)

	)

518 
	#BNLLi
(
D
Ë
	`BNLLii
(0,D)

	)

519 
	#BNELi
(
D
Ë
	`BNELii
(0,D)

	)

520 
	#BNGLi
(
D
Ë
	`BNGLii
(0,D)

	)

521 
	#BSOLi
(
D
Ë
	`BSOLii
(0,D)

	)

522 
	#BNSLi
(
D
Ë
	`BNSLii
(0,D)

	)

523 
	#BUNLi
(
D
Ë
	`BUNLii
(0,D)

	)

524 
	#BNULi
(
D
Ë
	`BNULii
(0,D)

	)

528 
	#CRSETi
(
BX
Ë
	`CREQViii
(BX, BX, BXË

	)

529 
	#CRCLRi
(
BX
Ë
	`CRXORiii
(BX, BX, BX)

	)

530 
	#CRMOVEii
(
BX
,
BY
Ë
	`CRORiii
(BX, BY, BY)

	)

531 
	#CRNOTii
(
BX
,
BY
Ë
	`CRNORiii
(BX, BY, BY)

	)

533 
	#MTLRr
(
RS
Ë
	`MTSPRú
(8, RSË

	)

534 
	#MFLRr
(
RD
Ë
	`MFSPRri
(RD, 8)

	)

535 
	#MTCTRr
(
RS
Ë
	`MTSPRú
(9, RS)

	)

536 
	#MFCTRr
(
RD
Ë
	`MFSPRri
(RD, 9)

	)

537 
	#MTXERr
(
RS
Ë
	`MTSPRú
(1, RS)

	)

538 
	#MFXERr
(
RD
Ë
	`MFSPRri
(RD, 1)

	)

540 
	#NOP
(Ë
	`ORIºi
(0, 0, 0Ë

	)

541 
	#LIri
(
RD
,
IM
Ë
	`ADDIºi
(RD, 0, IM)

	)

542 
	#LISri
(
RD
,
IM
Ë
	`ADDISºi
(RD, 0, IM)

	)

543 
	#LArm
(
RD
,
D
,
RA
Ë
	`ADDIºi
(RD, RA, D)

	)

544 
	#LAºr
(
RD
,
RB
,
RA
Ë
	`ADDIºr
(RD, RA, RB)

	)

545 
	#MRº
(
RA
,
RS
Ë
	`ORºr
(RA, RS, RS)

	)

546 
	#NOTº
(
RA
,
RS
Ë
	`NORºr
(RA, RS, RS)

	)

550 
	#LBZUrx
(
RD
,
RA
,
RB
Ë
	`LBZUXºr
(RD,RA,RB)

	)

551 
	#LBZrx
(
RD
,
RA
,
RB
Ë
	`LBZXºr
(RD,RA,RB)

	)

552 
	#LHAUrx
(
RD
,
RA
,
RB
Ë
	`LHAUXºr
(RD,RA,RB)

	)

553 
	#LHArx
(
RD
,
RA
,
RB
Ë
	`LHAXºr
(RD,RA,RB)

	)

554 
	#LHBRrx
(
RD
,
RA
,
RB
Ë
	`LHBRXºr
(RD,RA,RB)

	)

555 
	#LHZUrx
(
RD
,
RA
,
RB
Ë
	`LHZUXºr
(RD,RA,RB)

	)

556 
	#LHZrx
(
RD
,
RA
,
RB
Ë
	`LHZXºr
(RD,RA,RB)

	)

557 
	#LWBRrx
(
RD
,
RA
,
RB
Ë
	`LWBRXºr
(RD,RA,RB)

	)

558 
	#LWZUrx
(
RD
, 
RA
, 
RB
Ë
	`LWZUXºr
(RD, RA, RB)

	)

559 
	#LWZrx
(
RD
, 
RA
, 
RB
Ë
	`LWZXºr
(RD, RA, RB)

	)

560 
	#STBUrx
(
RD
,
RA
,
RB
Ë
	`STBUXºr
(RD,RA,RB)

	)

561 
	#STBrx
(
RD
,
RA
,
RB
Ë
	`STBXºr
(RD,RA,RB)

	)

562 
	#STHBRrx
(
RS
,
RA
,
RB
Ë
	`STHBRXºr
(RS,RA,RB)

	)

563 
	#STHUrx
(
RS
,
RA
,
RB
Ë
	`STHUXºr
(RS,RA,RB)

	)

564 
	#STHrx
(
RS
,
RA
,
RB
Ë
	`STHXºr
(RS,RA,RB)

	)

565 
	#STWBRrx
(
RS
,
RA
,
RB
Ë
	`STWBRXºr
(RS,RA,RB)

	)

566 
	#STWCrx
(
RS
,
RA
,
RB
Ë
	`STWCXºr
(RS,RA,RB)

	)

567 
	#STWCX_rx
(
RS
,
RA
,
RB
Ë
	`STWCX_ºr
(RS,RA,RB)

	)

568 
	#STWUrx
(
RS
,
RA
,
RB
Ë
	`STWUXºr
(RS,RA,RB)

	)

569 
	#STWrx
(
RS
,
RA
,
RB
Ë
	`STWXºr
(RS,RA,RB)

	)

570 
	#LArx
(
RD
,
RB
,
RA
Ë
	`LAºr
(RD,RB,RA)

	)

575 
	#_LO
(
I
Ë(
	`_UL
(IË& 
	`_MASK
(16))

	)

576 
	#_HI
(
I
Ë(
	`_UL
(IË>> (16))

	)

578 
	#_L
(
V
Ë(()(()(&V)))

	)

579 
	#_HA
(
V
Ë–((()&VË>> 16Ë+ (((()&VË>> 15Ë& 1Ë)

	)

	@src/generator68k/ccg/asm-sparc.h

23 #i‚de‡
__ccg_asm_•¨c_h


24 
	#__ccg_asm_•¨c_h


	)

26 #i‡!
deföed
(
__•¨c__
)

28 #w¨nög: 
FOREIGN
 
ARCHITECTURE
 
SELECTED


34 
	tö¢
;

36 
	~"asm-comm⁄.h
"

38 
	#_UL
(
X
Ë(()(X))

	)

40 
	#_ck_s
(
W
,
I
Ë(
	`_siP
(W,IË? (
	`_UL
(IË& 
	`_MASK
(W)Ë: 
	`ASMFAIL
–"sig√d i¡egî "#I"Åoÿœrgêf‹ "#W"-bô fõld"))

	)

41 
	#_ck_u
(
W
,
I
Ë(
	`_uiP
(W,IË? (
	`_UL
(IË& 
	`_MASK
(W)Ë: 
	`ASMFAIL
("unsig√d i¡egî "#I"Åoÿœrgêf‹ "#W"-bô fõld"))

	)

42 
	#_ck_d
(
W
,
I
Ë(
	`_siP
(W,IË? (
	`_UL
(IË& 
	`_MASK
(W)Ë: 
	`ASMFAIL
–"di•œ˚míà"#I"Åoÿœrgêf‹ "#W"-bô fõld"))

	)

44 
	#_s13
(
I
Ë
	`_ck_s
(13,I)

	)

46 
	#_u1
(
I
Ë
	`_ck_u
–1,I)

	)

47 
	#_u2
(
I
Ë
	`_ck_u
–2,I)

	)

48 
	#_u3
(
I
Ë
	`_ck_u
–3,I)

	)

49 
	#_u4
(
I
Ë
	`_ck_u
–4,I)

	)

50 
	#_u5
(
I
Ë
	`_ck_u
–5,I)

	)

51 
	#_u6
(
I
Ë
	`_ck_u
–6,I)

	)

52 
	#_u8
(
I
Ë
	`_ck_u
–8,I)

	)

53 
	#_u9
(
I
Ë
	`_ck_u
–9,I)

	)

54 
	#_u22
(
I
Ë
	`_ck_u
(22,I)

	)

56 
	#_d30
(
BD
Ë((
	`_UL
(BDË- _UL(
asm_pc
))>>2)

	)

57 
	#_d22
(
BD
Ë((
asm_∑ss
==2Ë? 
	`_ck_d
(22,
	`_d30
(BD)Ë: (_d30(BDË& 
	`_MASK
(22)))

	)

59 
	#_HI
(
I
Ë(
	`_UL
(IË>> (10))

	)

60 
	#_LO
(
I
Ë(
	`_UL
(IË& 
	`_MASK
(10))

	)

62 
	#_O7
 15

	)

64 
	#_GEN
(
X
Ë((*
asm_pc
(X)), ++asm_pc)

	)

68 
	#_Rr
(
N
Ë–0+(N))

	)

69 
	#_Rg
(
N
Ë–0+(N))

	)

70 
	#_Ro
(
N
Ë–8+(N))

	)

71 
	#_Rl
(
N
Ë(16+(N))

	)

72 
	#_Ri
(
N
Ë(24+(N))

	)

76 
	#_1
–
OP
, 
DSP
Ë
	`_GEN
((
	`_u2
(OP)<<30)| 
	`_d30
(DSP))

	)

78 
	#_2i
–
OP
, 
RD
, 
OP2
, 
IMM
Ë
	`_GEN
((
	`_u2
(OP)<<30)| (
	`_u5
(RD)<<25)|(
	`_u3
(OP2)<<22)| 
	`_u22
(IMM))

	)

79 
	#_2
–
OP
, 
A
, 
CC
, 
OP2
, 
DSP
Ë
	`_GEN
((
	`_u2
(OP)<<30)|(
	`_u1
(A)<<29)|(
	`_u4
(CC)<<25)|(
	`_u3
(OP2)<<22)| 
	`_d22
(DSP))

	)

81 
	#_3
–
OP
, 
RD
, 
OP3
, 
RS1
, 
I
, 
ASI
, 
RS2
Ë
	`_GEN
((
	`_u2
(OP)<<30)| (
	`_u5
(RD)<<25)| (
	`_u6
(OP3)<<19)|(_u5(RS1)<<14)|(
	`_u1
(I)<<13)|(
	`_u8
(ASI)<<5)|_u5(RS2))

	)

82 
	#_3i
–
OP
, 
RD
, 
OP3
, 
RS1
, 
I
, 
IMM
Ë
	`_GEN
((
	`_u2
(OP)<<30)| (
	`_u5
(RD)<<25)| (
	`_u6
(OP3)<<19)|(_u5(RS1)<<14)|(
	`_u1
(I)<<13)| 
	`_s13
(IMM))

	)

83 
	#_3f
–
OP
, 
RD
, 
OP3
, 
RS1
, 
OPF
, 
RS2
Ë
	`_GEN
((
	`_u2
(OP)<<30)| (
	`_u5
(RD)<<25)| (
	`_u6
(OP3)<<19)|(_u5(RS1)<<14)| (
	`_u9
(OPF)<<5)|_u5(RS2))

	)

87 
	#ADDºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 0, RS1, 0, 0, RS2)

	)

88 
	#ADDrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 0, RS1, 1, IMM)

	)

90 
	#ADDCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 16, RS1, 0, 0, RS2)

	)

91 
	#ADDCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 16, RS1, 1, IMM)

	)

93 
	#ANDºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 1, RS1, 0, 0, RS2)

	)

94 
	#ANDrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 1, RS1, 1, IMM)

	)

95 
	#ANDCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 17, RS1, 0, 0, RS2)

	)

96 
	#ANDCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 17, RS1, 1, IMM)

	)

98 
	#ANDNºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 5, RS1, 0, 0, RS2)

	)

99 
	#ANDNrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 5, RS1, 1, IMM)

	)

100 
	#ANDNCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 21, RS1, 0, 0, RS2)

	)

101 
	#ANDNCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 21, RS1, 1, IMM)

	)

103 
	#BNi
(
DISP
Ë
	`_2
 (0, 0, 0, 2, DISP)

	)

104 
	#BN_Ai
(
DISP
Ë
	`_2
 (0, 1, 0, 2, DISP)

	)

105 
	#BEi
(
DISP
Ë
	`_2
 (0, 0, 1, 2, DISP)

	)

106 
	#BE_Ai
(
DISP
Ë
	`_2
 (0, 1, 1, 2, DISP)

	)

107 
	#BLEi
(
DISP
Ë
	`_2
 (0, 0, 2, 2, DISP)

	)

108 
	#BLE_Ai
(
DISP
Ë
	`_2
 (0, 1, 2, 2, DISP)

	)

109 
	#BLi
(
DISP
Ë
	`_2
 (0, 0, 3, 2, DISP)

	)

110 
	#BL_Ai
(
DISP
Ë
	`_2
 (0, 1, 3, 2, DISP)

	)

111 
	#BLEUi
(
DISP
Ë
	`_2
 (0, 0, 4, 2, DISP)

	)

112 
	#BLEU_Ai
(
DISP
Ë
	`_2
 (0, 1, 4, 2, DISP)

	)

113 
	#BCSi
(
DISP
Ë
	`_2
 (0, 0, 5, 2, DISP)

	)

114 
	#BCS_Ai
(
DISP
Ë
	`_2
 (0, 1, 5, 2, DISP)

	)

115 
	#BNEGi
(
DISP
Ë
	`_2
 (0, 0, 6, 2, DISP)

	)

116 
	#BNEG_Ai
(
DISP
Ë
	`_2
 (0, 1, 6, 2, DISP)

	)

117 
	#BVSi
(
DISP
Ë
	`_2
 (0, 0, 7, 2, DISP)

	)

118 
	#BVS_Ai
(
DISP
Ë
	`_2
 (0, 1, 7, 2, DISP)

	)

120 
	#BAi
(
DISP
Ë
	`_2
 (0, 0, 8, 2, DISP)

	)

121 
	#BA_Ai
(
DISP
Ë
	`_2
 (0, 1, 8, 2, DISP)

	)

122 
	#BNEi
(
DISP
Ë
	`_2
 (0, 0, 9, 2, DISP)

	)

123 
	#BNE_Ai
(
DISP
Ë
	`_2
 (0, 1, 9, 2, DISP)

	)

124 
	#BGi
(
DISP
Ë
	`_2
 (0, 0, 10, 2, DISP)

	)

125 
	#BG_Ai
(
DISP
Ë
	`_2
 (0, 1, 10, 2, DISP)

	)

126 
	#BGEi
(
DISP
Ë
	`_2
 (0, 0, 11, 2, DISP)

	)

127 
	#BGE_Ai
(
DISP
Ë
	`_2
 (0, 1, 11, 2, DISP)

	)

128 
	#BGUi
(
DISP
Ë
	`_2
 (0, 0, 12, 2, DISP)

	)

129 
	#BGU_Ai
(
DISP
Ë
	`_2
 (0, 1, 12, 2, DISP)

	)

130 
	#BCCi
(
DISP
Ë
	`_2
 (0, 0, 13, 2, DISP)

	)

131 
	#BCC_Ai
(
DISP
Ë
	`_2
 (0, 1, 13, 2, DISP)

	)

132 
	#BPOSi
(
DISP
Ë
	`_2
 (0, 0, 14, 2, DISP)

	)

133 
	#BPOS_Ai
(
DISP
Ë
	`_2
 (0, 1, 14, 2, DISP)

	)

134 
	#BVCi
(
DISP
Ë
	`_2
 (0, 0, 15, 2, DISP)

	)

135 
	#BVC_Ai
(
DISP
Ë
	`_2
 (0, 1, 15, 2, DISP)

	)

137 
	#CALLi
(
DISP
Ë
	`_1
 (1, DISP)

	)

139 
	#FLUSHº
(
RS1
, 
RS2
Ë
	`_3
 (2, 0, 0x3b, RS1, 0, 0, RS2)

	)

140 
	#FLUSHú
(
IMM
, 
RS1
Ë
	`_3i
 (2, 0, 0x3b, RS1, 1, IMM)

	)

142 
	#JMPLxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 56, RS1, 0, 0, RS2)

	)

143 
	#JMPLmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 56, RS1, 1, IMM)

	)

145 
	#LDxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 0, RS1, 0, 0, RS2)

	)

146 
	#LDmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 0, RS1, 1, IMM)

	)

147 
	#LDUBxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 1, RS1, 0, 0, RS2)

	)

148 
	#LDUBmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 1, RS1, 1, IMM)

	)

149 
	#LDUHxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 2, RS1, 0, 0, RS2)

	)

150 
	#LDUHmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 2, RS1, 1, IMM)

	)

151 
	#LDDxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 3, RS1, 0, 0, RS2)

	)

152 
	#LDDmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 3, RS1, 1, IMM)

	)

153 
	#LDSBxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 9, RS1, 0, 0, RS2)

	)

154 
	#LDSBmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 9, RS1, 1, IMM)

	)

155 
	#LDSHxr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (3, RD, 10, RS1, 0, 0, RS2)

	)

156 
	#LDSHmr
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (3, RD, 10, RS1, 1, IMM)

	)

158 
	#ORºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 2, RS1, 0, 0, RS2)

	)

159 
	#ORrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 2, RS1, 1, IMM)

	)

160 
	#ORCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 18, RS1, 0, 0, RS2)

	)

161 
	#ORCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 18, RS1, 1, IMM)

	)

163 
	#ORNºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 6, RS1, 0, 0, RS2)

	)

164 
	#ORNrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 6, RS1, 1, IMM)

	)

165 
	#ORNCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 22, RS1, 0, 0, RS2)

	)

166 
	#ORNCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 22, RS1, 1, IMM)

	)

168 
	#RESTOREºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 61, RS1, 0, 0, RS2)

	)

169 
	#RESTORErú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 61, RS1, 1, IMM)

	)

171 
	#SAVEºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 60, RS1, 0, 0, RS2)

	)

172 
	#SAVErú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 60, RS1, 1, IMM)

	)

174 
	#SETHIú
(
IMM
, 
RD
Ë
	`_2i
 (0, RD, 4, IMM)

	)

176 
	#SDIVºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 15, RS1, 0, 0, RS2)

	)

177 
	#SDIVrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 15, RS1, 1, IMM)

	)

178 
	#SDIVCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 31, RS1, 0, 0, RS2)

	)

179 
	#SDIVCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 31, RS1, 1, IMM)

	)

181 
	#SLLºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 37, RS1, 0, 0, RS2)

	)

182 
	#SLLrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 37, RS1, 1, IMM)

	)

184 
	#SMULºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 11, RS1, 0, 0, RS2)

	)

185 
	#SMULrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 11, RS1, 1, IMM)

	)

186 
	#SMULCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 27, RS1, 0, 0, RS2)

	)

187 
	#SMULCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 27, RS1, 1, IMM)

	)

189 
	#SRAºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 39, RS1, 0, 0, RS2)

	)

190 
	#SRArú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 39, RS1, 1, IMM)

	)

192 
	#SRLºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 38, RS1, 0, 0, RS2)

	)

193 
	#SRLrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 38, RS1, 1, IMM)

	)

195 
	#STrx
(
RS
, 
RD1
, 
RD2
Ë
	`_3
 (3, RS, 4, RD1, 0, 0, RD2)

	)

196 
	#STrm
(
RS
, 
RD
, 
IMM
Ë
	`_3i
 (3, RS, 4, RD, 1, IMM)

	)

197 
	#STBrx
(
RS
, 
RD1
, 
RD2
Ë
	`_3
 (3, RS, 5, RD1, 0, 0, RD2)

	)

198 
	#STBrm
(
RS
, 
RD
, 
IMM
Ë
	`_3i
 (3, RS, 5, RD, 1, IMM)

	)

199 
	#STHrx
(
RS
, 
RD1
, 
RD2
Ë
	`_3
 (3, RS, 6, RD1, 0, 0, RD2)

	)

200 
	#STHrm
(
RS
, 
RD
, 
IMM
Ë
	`_3i
 (3, RS, 6, RD, 1, IMM)

	)

201 
	#STDrx
(
RS
, 
RD1
, 
RD2
Ë
	`_3
 (3, RS, 7, RD1, 0, 0, RD2)

	)

202 
	#STDrm
(
RS
, 
RD
, 
IMM
Ë
	`_3i
 (3, RS, 7, RD, 1, IMM)

	)

204 
	#STBAR
(Ë
	`_3i
 (2, 0, 0x28, 15, 0, 0)

	)

206 
	#SUBºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 4, RS1, 0, 0, RS2)

	)

207 
	#SUBrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 4, RS1, 1, IMM)

	)

208 
	#SUBCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 20, RS1, 0, 0, RS2)

	)

209 
	#SUBCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 20, RS1, 1, IMM)

	)

211 
	#TADDCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 32, RS1, 0, 0, RS2)

	)

212 
	#TADDCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 32, RS1, 1, IMM)

	)

213 
	#TADDCCTVºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 34, RS1, 0, 0, RS2)

	)

214 
	#TADDCCTVrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 34, RS1, 1, IMM)

	)

216 
	#TSUBCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 33, RS1, 0, 0, RS2)

	)

217 
	#TSUBCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 33, RS1, 1, IMM)

	)

218 
	#TSUBCCTVºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 35, RS1, 0, 0, RS2)

	)

219 
	#TSUBCCTVrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 35, RS1, 1, IMM)

	)

221 
	#XORºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 3, RS1, 0, 0, RS2)

	)

222 
	#XORrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 3, RS1, 1, IMM)

	)

223 
	#XNORºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 7, RS1, 0, 0, RS2)

	)

224 
	#XNORrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 7, RS1, 1, IMM)

	)

225 
	#XORCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 19, RS1, 0, 0, RS2)

	)

226 
	#XORCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 19, RS1, 1, IMM)

	)

227 
	#XNORCCºr
(
RS1
, 
RS2
, 
RD
Ë
	`_3
 (2, RD, 23, RS1, 0, 0, RS2)

	)

228 
	#XNORCCrú
(
RS1
, 
IMM
, 
RD
Ë
	`_3i
 (2, RD, 23, RS1, 1, IMM)

	)

232 
	#Bi
(
DISP
Ë
	`BAi
(DISP)

	)

233 
	#B_Ai
(
DISP
Ë
	`BA_Ai
(DISP)

	)

234 
	#BNZi
(
DISP
Ë
	`BNEi
(DISP)

	)

235 
	#BNZ_Ai
(
DISP
Ë
	`BNE_Ai
(DISP)

	)

236 
	#BZi
(
DISP
Ë
	`BEi
(DISP)

	)

237 
	#BZ_Ai
(
DISP
Ë
	`BE_Ai
(DISP)

	)

238 
	#BGEUi
(
DISP
Ë
	`BCCi
(DISP)

	)

239 
	#BGEU_Ai
(
DISP
Ë
	`BCC_Ai
(DISP)

	)

240 
	#BLUi
(
DISP
Ë
	`BCSi
(DISP)

	)

241 
	#BLU_Ai
(
DISP
Ë
	`BCS_Ai
(DISP)

	)

245 
	#NOP
(Ë
	`SETHIú
(0, 0)

	)

247 
	#CMPº
(
RS1
, 
RS2
Ë
	`SUBCCºr
(RS1, RS2, 0)

	)

248 
	#CMPri
(
RS1
, 
IMM
Ë
	`SUBCCrú
(RS1, IMM, 0)

	)

250 
	#JMPm
(
R
,
I
Ë
	`JMPLmr
(R,I, 0)

	)

251 
	#JMPx
(
R
,
S
Ë
	`JMPLxr
(R,S, 0)

	)

253 
	#CALLm
(
R
,
I
Ë
	`JMPLmr
(R,I, 
_O7
)

	)

254 
	#CALLx
(
R
,
S
Ë
	`JMPLxr
(R,S, 
_O7
)

	)

256 
	#TSTr
(
R
Ë
	`ORCCºr
(0, R, 0)

	)

258 
	#RET
(Ë
	`JMPLmr
(31,8 ,0)

	)

259 
	#RETL
(Ë
	`JMPLmr
(15,8 ,0)

	)

261 
	#RESTORE
(Ë
	`RESTOREºr
(0, 0, 0)

	)

262 
	#SAVE
(Ë
	`SAVEºr
(0, 0, 0)

	)

264 
	#SETú
(
I
,
R
Ë(
	`_siP
(13,IË? 
	`MOVú
(I,RË: (
	`SETHIú
(
	`_HI
(I),R), 
	`ORrú
(R,
	`_LO
(I),R)))

	)

266 
	#NOTº
(
R
,
S
Ë
	`XNORºr
(R, 0, S)

	)

267 
	#NOTr
(
R
Ë
	`XNORºr
(R, 0, R)

	)

269 
	#NEGº
(
R
,
S
Ë
	`SUBºr
(0, R, S)

	)

270 
	#NEGr
(
R
Ë
	`SUBºr
(0, R, R)

	)

272 
	#INCr
(
R
Ë
	`ADDrú
(R, 1, R)

	)

273 
	#INCú
(
I
,
R
Ë
	`ADDrú
(R, I, R)

	)

274 
	#INCCCr
(
R
Ë
	`ADDCCrú
(R, 1, R)

	)

275 
	#INCCCú
(
I
,
R
Ë
	`ADDCCrú
(R, I, R)

	)

277 
	#DECr
(
R
Ë
	`SUBrú
(R, 1, R)

	)

278 
	#DECú
(
I
,
R
Ë
	`SUBrú
(R, I, R)

	)

279 
	#DECCCr
(
R
Ë
	`SUBCCrú
(R, 1, R)

	)

280 
	#DECCCú
(
I
,
R
Ë
	`SUBCCrú
(R, I, R)

	)

282 
	#BTSTº
(
R
,
S
Ë
	`ANDCCºr
(R, S, 0)

	)

283 
	#BTSTú
(
R
,
I
Ë
	`ANDCCrú
(R, I, 0)

	)

285 
	#BSETº
(
R
,
S
Ë
	`ORºr
(R, S, S)

	)

286 
	#BSETú
(
R
,
I
Ë
	`ORrú
(R, I, R)

	)

288 
	#BCLRº
(
R
,
S
Ë
	`ANDNºr
(R, S, S)

	)

289 
	#BCLRú
(
R
,
I
Ë
	`ANDNrú
(R, I, R)

	)

291 
	#BTOGº
(
R
,
S
Ë
	`XORºr
(R, S, S)

	)

292 
	#BTOGú
(
R
,
I
Ë
	`XORrú
(R, I, R)

	)

294 
	#CLRr
(
R
Ë
	`ORºr
(0, 0, R)

	)

295 
	#CLRBm
(
R
,
I
Ë
	`STBrm
(0, R,I)

	)

296 
	#CLRBx
(
R
,
S
Ë
	`STBrm
(0, R,S)

	)

297 
	#CLRHm
(
R
,
I
Ë
	`STHrm
(0, R,I)

	)

298 
	#CLRHx
(
R
,
S
Ë
	`STHrm
(0, R,S)

	)

299 
	#CLRm
(
R
,
I
Ë
	`STrm
(0, R,I)

	)

300 
	#CLRx
(
R
,
S
Ë
	`STrm
(0, R,S)

	)

302 
	#MOVº
(
R
,
S
Ë
	`ORºr
(0, R, S)

	)

303 
	#MOVú
(
I
, 
R
Ë
	`ORrú
(0, I, R)

	)

	@src/generator68k/ccg/ccg.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°d¨g.h
>

24 
	~<˘y≥.h
>

25 
	~<°rög.h
>

27 #ifde‡
__STRICT_ANSI__


29 
°rˇ£cmp
();

32 #i‡
deföed
(
sun
Ë&& deföed(
__•¨c__
)

33 
	~<î∫o.h
>

34 #i‡!
deföed
(
ECHRNG
)

36 
vÂrötf
();

37 
bc›y
();

38 
°rˇ£cmp
();

39 
	#memmove
(
d
,
s
,
l
Ë
	`bc›y
(s,d,l)

	)

43 
	#REWRITE_PSEUDO_ARGS


	)

45 
	#HEADER_PREFIX
 "ccg/asm-"

	)

46 
	#LABEL_CHARS
 "_A-Za-z0-9"

	)

48 
	#ASM_1_OPEN
 "#["

	)

49 
	#ASM_1_CLOSE
 "]#"

	)

50 
	#ASM_2_OPEN
 "#{"

	)

51 
	#ASM_2_CLOSE
 "}#"

	)

53 
	#REG_OPEN
 "#("

	)

54 
	#REG_CLOSE
 ")#"

	)

56 
	gcommítCh¨
= '#';

57 
	gesˇ≥Ch¨
= '!';

59 
	#ASM_1_BEGIN
 "_ASM_APP_1"

	)

60 
	#ASM_1_END
 "_ASM_NOAPP_1"

	)

61 
	#ASM_2_BEGIN
 "_ASM_APP_2"

	)

62 
	#ASM_2_END
 "_ASM_NOAPP_2"

	)

64 
	#ASM_ORG
 "_ASM_ORG"

	)

65 
	#ASM_LBL
 "_ASM_LBL"

	)

66 
	#ASM_DEF
 "_ASM_DEF"

	)

68 *
	gfûeName
= 0;

69 
	glöeNo
= 0;

70 
	glöe
[256];

72 
	gquõt
= 0;

73 
	gdodŸ
= 1;

74 
	gcheck_ö¢s
= 1;

76 
	gasmFwdW¨√d
= 0;

78 **
	gö¢_èb
= 0;

80 *(*
	tªwrôî
)(
	tcode
);

82 
ªwrôî
 
ªwrôe
;

84 
	$w¨nög
(*
fmt
, ...)

86 i‡(!
quõt
) {

87 
va_li°
 
≠
;

88 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
, "%s:%d: w¨nög: ", fûeName, 
löeNo
);

89 
	`va_°¨t
(
≠
, 
fmt
); 
	`vÂrötf
(
°dîr
, fmt,áp); 
	`va_íd
(ap);

90 
	`Ârötf
(
°dîr
, "\n");

91 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
, "%s:%d: %s\n", fûeName, 
löeNo
, 
löe
);

93 
	}
}

95 
	$îr‹
(*
fmt
, ...)

97 
va_li°
 
≠
;

98 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
, "%s:%d:Éº‹: ", fûeName, 
löeNo
);

99 
	`va_°¨t
(
≠
, 
fmt
); 
	`vÂrötf
(
°dîr
, fmt,áp); 
	`va_íd
(ap);

100 
	`Ârötf
(
°dîr
, "\n");

101 i‡(
fûeName
Ë
	`Ârötf
(
°dîr
, "%s:%d: %s\n", fûeName, 
löeNo
, 
löe
);

102 
	`exô
(1);

103 
	}
}

105 
	$ußge
(*
¥ogName
)

107 
	`Ârötf
(
°dîr
,

108 
CCGVERSION
" Copyright (C) 1999, 2000 Ian Piumarta <ian.piumarta@inria.fr>\n"

118 
¥ogName
, 
commítCh¨
, 
esˇ≥Ch¨
);

119 
	`exô
(1);

120 
	}
}

122 
	göAsm
= 0;

124 
	glb
[256];

125 
	g›
[256];

126 
	gox
[256], *
	goxp
;

127 
	ga1
[256];

128 
	ga2
[256];

129 
	ga3
[256];

130 
	ga4
[256];

131 
	ga5
[256];

137 
	$check_ö¢
(*
ö¢
)

139 **
i
;

140 
i

ö¢_èb
; *i != (*)0; ++i)

141 i‡(!
	`°rcmp
(*
i
, 
ö¢
)) ;

142 
	`îr‹
("uƒecogni£d in°ru˘i⁄: %s", 
ö¢
);

143 
	}
}

145 
	$upˇ£
(*
±r
, 
n
)

147 
n
--) {

148 *
±r

	`touµî
(*ptr);

149 ++
±r
;

151 
	}
}

153 *
	$ö£π
(*
de°
, *
§c
)

155 
de°Lí

	`°æí
(
de°
);

156 
§cLí

	`°æí
(
§c
);

157 
	`memmove
(
de°
 + 
§cLí
, de°, 
de°Lí
 + 1);

158 
	`mem˝y
(
de°
, 
§c
, 
§cLí
);

159  
de°
 + 
§cLí
;

160 
	}
}

162 
	$dñëe
(*
de°
, 
n
)

164 
	`mem˝y
(
de°
, de° + 
n
, 
	`°æí
(dest) -Ç + 1);

165 
	}
}

167 *
	$skùP¨ís
(*
¨g
)

169 
√°
= 0;

171 
c
*
¨g
++;

172 i‡(
c
 == 0) {

173 i‡(
√°
 > 0Ë
	`îr‹
("mismatchedÖarentheses");

174  
¨g
 - 1;

176 i‡((
c
 == '(') || (c == '['))

177 ++
√°
;

179 i‡((
c
 == ')') || (c == ']')) {

180 i‡(
√°
 == 0)

181  
¨g
 - 1;

183 i‡(--
√°
 == 0)

184  
¨g
;

187  
¨g
;

188 
	}
}

190 *
	$skùDigôs
(*
¨g
)

192 
	`isdigô
(*
¨g
)) ++arg;

193  
¨g
;

194 
	}
}

196 
	$is_Ænum
(
c
Ë{  
	`iß um
(cË|| c ='_'; 
	}
}

197 
	$is›ch¨
(
c
Ë{  
	`is_Ænum
(cË|| c =',' || c ='.'; 
	}
}

207 *
	$ªwrôe_i386_ªg
(*
¨g
)

209 i‡(*
¨g
 ='('Ë 
	`skùP¨ís
(arg);

214 i‡(!
	`°∫cmp
(
¨g
, "óx", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_EAX"); }

215 i‡(!
	`°∫cmp
(
¨g
, "ecx", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_ECX"); }

216 i‡(!
	`°∫cmp
(
¨g
, "edx", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_EDX"); }

217 i‡(!
	`°∫cmp
(
¨g
, "ebx", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_EBX"); }

218 i‡(!
	`°∫cmp
(
¨g
, "e•", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_ESP"); }

219 i‡(!
	`°∫cmp
(
¨g
, "ebp", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_EBP"); }

220 i‡(!
	`°∫cmp
(
¨g
, "esi", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_ESI"); }

221 i‡(!
	`°∫cmp
(
¨g
, "edi", 3)Ë{ 
	`dñëe
◊rg, 3);árg
	`ö£π
(arg, "_EDI"); }

223 i‡(!
	`°∫cmp
(
¨g
, "Æ", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_AL"); }

224 i‡(!
	`°∫cmp
(
¨g
, "˛", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_CL"); }

225 i‡(!
	`°∫cmp
(
¨g
, "dl", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_DL"); }

226 i‡(!
	`°∫cmp
(
¨g
, "bl", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_BL"); }

227 i‡(!
	`°∫cmp
(
¨g
, "ah", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_AH"); }

228 i‡(!
	`°∫cmp
(
¨g
, "ch", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_CH"); }

229 i‡(!
	`°∫cmp
(
¨g
, "dh", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_DH"); }

230 i‡(!
	`°∫cmp
(
¨g
, "bh", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_BH"); }

232 i‡(!
	`°∫cmp
(
¨g
, "ax", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_AX"); }

233 i‡(!
	`°∫cmp
(
¨g
, "cx", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_CX"); }

234 i‡(!
	`°∫cmp
(
¨g
, "dx", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_DX"); }

235 i‡(!
	`°∫cmp
(
¨g
, "bx", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_BX"); }

236 i‡(!
	`°∫cmp
(
¨g
, "•", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_SP"); }

237 i‡(!
	`°∫cmp
(
¨g
, "bp", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_BP"); }

238 i‡(!
	`°∫cmp
(
¨g
, "si", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_SI"); }

239 i‡(!
	`°∫cmp
(
¨g
, "di", 2)Ë{ 
	`dñëe
◊rg, 2);árg
	`ö£π
(arg, "_DI"); }

242 
	`îr‹
("unknow¿ªgi°îÇame: %s", 
¨g
);

243  
¨g
;

244 
	}
}

246 *
	$ªwrôe_i386_mem
(*
¨g
)

249 i‡(
¨g
[0] == '*') {

250 i‡(
¨g
[1] !'%'Ë
	`îr‹
("badÑegister in *%%reg");

251 *
¨g
++= '0';

252 *
¨g
++= ',';

253 
¨g

	`ªwrôe_i386_ªg
(arg);

254 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junkáfter *%%reg");

255  
	`ö£π
(
¨g
, ",0,0");

258 i‡(*
¨g
 == '(') {

259 i‡(
¨g
[1] == '%') {

261 
¨g

	`ö£π
(arg, "0");

264 
¨g

	`skùP¨ís
(arg);

268 *
¨g
 != '\0' && *arg != '(') ++arg;

270 i‡(*
¨g
 == '\0') {

272  
	`ö£π
(
¨g
, ",0,0,0");

274 i‡(*
¨g
 !'('Ë
	`îr‹
("junkáfterábsoluteáddress");

275 
	`dñëe
(
¨g
, 1);

276 
¨g

	`ö£π
(arg, ",");

277 i‡(*
¨g
 != '%') {

278 *
¨g
 != '\0' && *arg != ',' && *arg != ')') ++arg;

280 
	`dñëe
(
¨g
, 1);

281 
¨g

	`ªwrôe_i386_ªg
(arg);

283 i‡(*
¨g
 ='\0'Ë
	`îr‹
("missing closeÖarenthesis in disp(base))");

284 i‡(*
¨g
 == ')') {

285 
	`dñëe
(
¨g
, 1);

286 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junkáfter disp(base)");

287  
	`ö£π
(
¨g
, ",0,0");

289 i‡(*
¨g
 !','Ë
	`îr‹
("missing comma in disp(base,index)");

290 ++
¨g
;

291 i‡(*
¨g
 ='\0'Ë
	`îr‹
("missing index in disp(base,index)");

292 i‡(*
¨g
 != '%') {

293 *
¨g
 != '\0' && *arg != ',' && *arg != ')') ++arg;

295 
	`dñëe
(
¨g
, 1);

296 
¨g

	`ªwrôe_i386_ªg
(arg);

298 i‡(*
¨g
 ='\0'Ë
	`îr‹
("missing closeÖarenthesis in disp(base,index)");

299 i‡(*
¨g
 == ')') {

300 
	`dñëe
(
¨g
, 1);

301 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junkáfter disp(base)");

302  
	`ö£π
(
¨g
, ",1");

304 i‡(*
¨g
 !','Ë
	`îr‹
("missing comma in disp(base,index,scale)");

305 ++
¨g
;

306 i‡(*
¨g
 ='\0'Ë
	`îr‹
("missing scale in disp(base,index,scale)");

307 i‡(*
¨g
 != '%') {

308 *
¨g
 != '\0' && *arg != ',' && *arg != ')') ++arg;

310 
	`dñëe
(
¨g
, 1);

311 
¨g

	`ªwrôe_i386_ªg
(arg);

313 i‡(*
¨g
 !')'Ë
	`îr‹
("missing closeÖarenthesis in disp(base,index,scale)");

314 
	`dñëe
(
¨g
, 1);

315  
¨g
;

316 
	}
}

318 *
	$ªwrôe_i386_¨g
(*
¨g
, 
¨göd
)

320 i‡(*
¨g
 == '\0') árg;

322 i‡(
¨g
[0] == '$') {

323 
oxp
+
	`•rötf
(oxp, "i");

324 
	`dñëe
(
¨g
, 1);

325  
¨g
;

328 i‡(
¨g
[0] == '%') {

329 
oxp
+
	`•rötf
(oxp, "r");

330 
	`dñëe
(
¨g
, 1);

331 
	`ªwrôe_i386_ªg
(
¨g
);

332  
¨g
;

335 
oxp
+
	`•rötf
(oxp, "m");

336 
	`ªwrôe_i386_mem
(
¨g
);

337  
¨g
;

338 
	}
}

340 *(
	gi386_ö¢s
[])= {

341 
	~"ö¢s-i386.h
"

345 *
	$ªwrôe_i386
(
code
)

347 i‡(
code
 == 0) {

348 
ö¢_èb

i386_ö¢s
;

351 i‡(
code
 == 1) {

352 i‡(
a1
[0] !'%'Ë
	`îr‹
("malformedÑegisterÉxpression");

353 
	`dñëe
(
a1
, 1);

354  
	`ªwrôe_i386_ªg
(
a1
);

356 
	`ªwrôe_i386_¨g
(
a1
, 1);

357 
	`ªwrôe_i386_¨g
(
a2
, 2);

358 
	`ªwrôe_i386_¨g
(
a3
, 3);

360 
	}
}

373 
	$is_µc_ªg
(*
¨g
)

375  ((
¨g
[0] ='r'Ë&& (◊rg[1] ='('Ë|| 
	`isdigô
(arg[1])));

376 
	}
}

378 *
	$ªwrôe_µc_imm
(*
¨g
, 
¨göd
)

380 
c
*
¨g
;

381 i‡(
	`isdigô
(
c
Ë|| (¯='-' && isdigô(
¨g
[1]))) {

383 
	`isdigô
(*++
¨g
));

384 } i‡(
	`ißÕha
(
c
) || (c == '_')) {

386 
	`iß um
(*
¨g
) || (*arg == '_')) ++arg;

387 i‡(*
¨g
 == '(') {

388 i‡(
	`is_µc_ªg
(
¨g
 + 1)) árg;

390 
¨g

	`skùP¨ís
(arg);

392 } i‡(*
¨g
 == '(') {

394 
¨g

	`skùP¨ís
(arg);

396 
	`îr‹
("uƒecogni£d o≥ønd,Öosôi⁄ %d", 
¨göd
);

398  
¨g
;

399 
	}
}

401 *
	$ªwrôe_µc_ªg
(*
¨g
, 
¨göd
)

403 i‡(!
	`is_µc_ªg
(
¨g
)Ë
	`îr‹
("mÆf‹medÑegi°î o≥ønd,Öosôi⁄ %d", 
¨göd
);

404 
	`dñëe
(
¨g
, 1);

405  
	`ªwrôe_µc_imm
(
¨g
, 
¨göd
);

406 
	}
}

408 *
	$ªwrôe_µc_¨g
(*
¨g
, 
¨göd
)

410 
immedüã
= 0;

411 i‡(*
¨g
 == '\0') árg;

412 i‡(
	`is_µc_ªg
(
¨g
)) {

414 
¨g

	`ªwrôe_µc_ªg
◊rg, 
¨göd
);

417 *
ba£

¨g
;

418 
immedüã
= 1;

419 
¨g

	`ªwrôe_µc_imm
◊rg, 
¨göd
);

420 *
¨g
 == '@') {

421 
‚Name
[64];

422 *
ö

¨g
 + 1, *
out

‚Name
;

423 *
out
++= '_';

424 
	`ißÕha
(*
ö
) || *in == '_')

425 *
out
++
	`touµî
(*
ö
++);

426 *
out
= '\0';

428 
Àn

out
 - 
‚Name
;

429 i‡(
Àn
 < 2)

430 
	`îr‹
("mÆf‹med immedüã modifõr,Öosôi⁄ %d", 
¨göd
);

431 
	`dñëe
(
¨g
, 
Àn
);

432 
	`ö£π
(
ba£
, "(");

433 
¨g
+= 1;

434 
	`ö£π
(
ba£
, 
‚Name
);

435 
¨g
+
Àn
;

436 
¨g

	`ö£π
(arg, ")");

440 i‡(*
¨g
 != '(') {

442 i‡(*
¨g
 != '\0') {

443 
	`îr‹
("junkáfter %s operand,Öosition %d",

444 (
immedüã
 ? "immedüã" : "ªgi°î"), 
¨göd
);

446 i‡(
immedüã
) {

447 
oxp
+
	`•rötf
(oxp, "i");

448  
¨g
;

450 
oxp
+
	`•rötf
(oxp, "r");

451  
¨g
;

454 *
¨g
++= ',';

455 
¨g

	`ªwrôe_µc_ªg
◊rg, 
¨göd
);

456 i‡(*
¨g
 !')'Ë
	`îr‹
("junká·î indexÑegi°î,Öosôi⁄ %d", 
¨göd
);

457 
	`dñëe
(
¨g
, 1);

458 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junká·î mem‹y o≥ønd,Öosôi⁄ %d", 
¨göd
);

459 i‡(
immedüã
) {

460 
oxp
+
	`•rötf
(oxp, "m");

462 
oxp
+
	`•rötf
(oxp, "x");

464  
¨g
;

465 
	}
}

467 *(
	gµc_ö¢s
[])= {

468 
	~"ö¢s-µc.h
"

472 *
	$ªwrôe_µc
(
code
)

474 i‡(
code
 == 0) {

475 
ö¢_èb

µc_ö¢s
;

478 i‡(
code
 == 1) {

479  
	`ªwrôe_µc_ªg
(
a1
, 1);

481 
	`ªwrôe_µc_¨g
(
a1
, 1);

482 
	`ªwrôe_µc_¨g
(
a2
, 2);

483 
	`ªwrôe_µc_¨g
(
a3
, 3);

484 
	`ªwrôe_µc_¨g
(
a4
, 4);

485 
	`ªwrôe_µc_¨g
(
a5
, 5);

487 
	}
}

499 
	$is_•¨c_r
(
c
)

501  
c
 == 'r' || c == 'g' || c == 'o' || c == 'l' || c == 'i';

502 
	}
}

504 *
	$ªwrôe_•¨c_ªg
(*
¨g
)

506 i‡(!
	`°∫cmp
(
¨g
, "fp",2)) {

507 
	`dñëe
(
¨g
, 2);

508  
	`ö£π
(
¨g
, "30");

510 i‡(!
	`°∫cmp
(
¨g
, "sp",2)) {

511 
	`dñëe
(
¨g
, 2);

512  
	`ö£π
(
¨g
, "14");

514 i‡(
	`is_•¨c_r
(
¨g
[0]) && (((arg[1] >= '0') && (arg[1] <= '7')) || (arg[1] == '('))) {

515 *
¨g
) {

516 'r': 
	`dñëe
(
¨g
, 1);árg
	`ö£π
(arg, "0+"); ;

517 'g': 
	`dñëe
(
¨g
, 1);árg
	`ö£π
(arg, "0+"); ;

518 'o': 
	`dñëe
(
¨g
, 1);árg
	`ö£π
(arg, "8+"); ;

519 'l': 
	`dñëe
(
¨g
, 1);árg
	`ö£π
(arg, "16+"); ;

520 'i': 
	`dñëe
(
¨g
, 1);árg
	`ö£π
(arg, "24+"); ;

522 
	`îr‹
("THIS CANNOT HAPPEN");

525 i‡(*
¨g
 ='('Ë 
	`skùP¨ís
(arg);

526 
	`isdigô
(*
¨g
)) ++arg;

527  
¨g
;

528 
	}
}

530 *
	$ªwrôe_•¨c_mem
(*
¨g
)

534 i‡(
¨g
[0] !'%'Ë
	`îr‹
("missing baseÑegister in memory operand");

535 
	`dñëe
(
¨g
, 1);

536 
¨g

	`ªwrôe_•¨c_ªg
(arg);

537 i‡(*
¨g
 == ']') {

539 
oxp
+
	`•rötf
(oxp, "m");

540 
¨g

	`ö£π
(arg, ",0");

541  
¨g
;

543 i‡(*
¨g
 == '+' &&árg[1] == '%') {

545 
oxp
+
	`•rötf
(oxp, "x");

546 *
¨g
++= ',';

547 
	`dñëe
(
¨g
, 1);

548  
	`ªwrôe_•¨c_ªg
(
¨g
);

550 i‡(*
¨g
 == '+' || *arg == '-') {

552 
oxp
+
	`•rötf
(oxp, "m");

553 
¨g

	`ö£π
(arg, ",");

554  
	`skùP¨ís
(
¨g
);

556  
¨g
;

557 
	}
}

559 *
	$ªwrôe_•¨c_¨g
(*
¨g
)

561 i‡(*
¨g
 == '\0') árg;

563 i‡(!
	`°∫cmp
(
¨g
, "%hi(", 4)) {

564 *
¨g
++= '_';

565 *
¨g
++= 'H';

566 *
¨g
++= 'I';

567 
immedüã
;

569 i‡(!
	`°∫cmp
(
¨g
, "%lo(", 4)) {

570 *
¨g
++= '_';

571 *
¨g
++= 'L';

572 *
¨g
++= 'O';

573 
immedüã
;

576 i‡(*
¨g
 == '%') {

577 
oxp
+
	`•rötf
(oxp, "r");

578 
	`dñëe
(
¨g
, 1);

579 
¨g

	`ªwrôe_•¨c_ªg
(arg);

580 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junkáfterÑegister operand");

581  
¨g
;

584 i‡(*
¨g
 == '[') {

585 
	`dñëe
(
¨g
, 1);

586 
¨g

	`ªwrôe_•¨c_mem
(arg);

587 i‡(*
¨g
 !']'Ë
	`îr‹
("malformed memory operand");

588 
	`dñëe
(
¨g
, 1);

589 i‡(*
¨g
 !'\0'Ë
	`îr‹
("junkáfter memory operand");

590  
¨g
;

593 
immedüã
:

594 
oxp
+
	`•rötf
(oxp, "i");

595 *
¨g
 != '\0') ++arg;

596  
¨g
;

597 
	}
}

599 *(
	g•¨c_ö¢s
[])= {

600 
	~"ö¢s-•¨c.h
"

604 *
	$ªwrôe_•¨c
(
code
)

606 i‡(
code
 == 0) {

607 
ö¢_èb

•¨c_ö¢s
;

610 i‡(
code
 == 1) {

611 i‡(
a1
[0] !'%'Ë
	`îr‹
("malformedÑegisterÉxpression");

612 
	`dñëe
(
a1
, 1);

613  
	`ªwrôe_•¨c_ªg
(
a1
);

615 
	`ªwrôe_•¨c_¨g
(
a1
);

616 
	`ªwrôe_•¨c_¨g
(
a2
);

617 
	`ªwrôe_•¨c_¨g
(
a3
);

619 
	}
}

625 *
	$ªwrôe_nuŒ
(
code
)

627 
	`îr‹
("missing #cpu declaration");

629 
	}
}

631 
ªwrôî
 
	gªwrôe_Æpha

ªwrôe_nuŒ
;

632 
ªwrôî
 
	gªwrôe_hµa

ªwrôe_nuŒ
;

633 
ªwrôî
 
	gªwrôe_mùs

ªwrôe_nuŒ
;

634 
ªwrôî
 
	gªwrôe_m68k

ªwrôe_nuŒ
;

636 
ªwrôî
 
	gªwrôe

ªwrôe_nuŒ
;

638 #i‡
deföed
(
PPC
Ë|| deföed(
_POWER
Ë|| deföed(
_IBMR2
)

639 
	#loˇlRewrôe
 
ªwrôe_µc


	)

640 #ñi‡
deföed
(
__•¨c__
)

641 
	#loˇlRewrôe
 
ªwrôe_•¨c


	)

642 #ñi‡
deföed
(
__Æpha__
)

643 
	#loˇlRewrôe
 
ªwrôe_Æpha


	)

644 #ñi‡
deföed
(
__hµa__
)

645 
	#loˇlRewrôe
 
ªwrôe_hµa


	)

646 #ñi‡
deföed
(
__mùs__
)

647 
	#loˇlRewrôe
 
ªwrôe_mùs


	)

648 #ñi‡
deföed
(
__mc68000__
)

649 
	#loˇlRewrôe
 
ªwrôe_m68k


	)

650 #ñi‡
deföed
(
__i386__
)

651 
	#loˇlRewrôe
 
ªwrôe_i386


	)

653 
	#loˇlRewrôe
 
ªwrôe_nuŒ


	)

661 *
	$ótS∑˚s
(*
ö
)

663 
	`is•a˚
(*
ö
)) ++in;

664 i‡(*
ö
 =
commítCh¨
) {

665 i‡(!
	`is•a˚
(
ö
[1]))

666 
	`w¨nög
("POSSIBLE UNINTENTIONAL COMMENT");

667 *
ö
= '\0';

669  
ö
;

670 
	}
}

672 *
	$ótOpcode
(*
ö
, *
›p
)

674 
c
;

675 
ö

	`ótS∑˚s
(in);

676 
	`is›ch¨
(
c
*
ö
++)) {

677 i‡(
c
 == ',') c= '_';

678 i‡(
c
 == '.') c= '_';

679 *
›p
++
c
;

681 --
ö
;

682 
	`upˇ£
(
›
, 
›p
 - op);

683 *
›p
= '\0';

684  
	`ótS∑˚s
(
ö
);

685 
	}
}

687 *
	$ótArg
(*
ö
, *
out
)

689 
√°
= 0;

690 
öSåög
= 0;

691 
ö

	`ótS∑˚s
(in);

693 
c
*
ö
++;

694 i‡(
c
 =0 || c ='\n'Ë{ --
ö
; ; }

695 i‡(
c
 =
commítCh¨
 && 
√°
 =0Ë{ --
ö
; ; }

696 i‡(
c
 <' ' && !
öSåög
) ;

697 i‡(
c
 ='\"'Ë
öSåög
= !inString;

698 i‡(
c
 ='(' || c ='['Ë++
√°
;

699 i‡(
c
 =')' || c =']'Ë--
√°
;

700 i‡(
c
 =',' && 
√°
 == 0) ;

701 i‡(
c
 ='.' && 
dodŸ
)

702 
out
+
	`•rötf
(out, "asm_pc");

704 *
out
++
c
;

706 i‡(
√°
 !0Ë
	`îr‹
("mismatchedÖarentheses");

707 *
out
= '\0';

708  
	`ótS∑˚s
(
ö
);

709 
	}
}

711 *
	$as£mbÀ
(*
löe
)

713 
buf
[256];

714 
¨g
[256];

715 
tmp
[256];

716 *
out

buf
;

717 
width
= 0;

718 
c⁄töued
= 0;

720 i‡(
	`°æí
(
löe
) == 0) Üine;

721 
löe

	`ótS∑˚s
(line);

722 i‡(*
löe
 =
esˇ≥Ch¨
) {

723  
löe
 + 1;

725 i‡(
löe
[
	`°æí
(line) - 1] == '\\') {

726 
c⁄töued
= 1;

727 
löe
[
	`°æí
(line) - 1]= '\0';

729 
löe

	`ótS∑˚s
(line);

730 *
out
= '\0';

731 i‡(
löe
[0] ='\0'Ë (
c⁄töued
 ? "\\" : "");

732 2 =
	`ssˇnf
(
löe
, "%["
LABEL_CHARS
"]%[:]%n", 
¨g
, 
tmp
, &
width
)) {

733 
out
+
	`•rötf
(out, " "
ASM_DEF
"(%s);", 
¨g
);

734 
löe

	`ótS∑˚s
÷öê+ 
width
);

737 i‡((!
	`°∫cmp
(
löe
, ".‹g", 4)Ë&& 
	`is•a˚
(line[4])) {

738 
löe

	`ótArg
÷öê+ 5, 
a1
);

739 i‡(*
löe
 !'\0'Ë
	`îr‹
("junkáfter originÉxpression");

740 
out
+
	`•rötf
(out, " "
ASM_ORG
"(%s);", 
a1
);

741 i‡(
c⁄töued
Ë
out
+
	`•rötf
(out, "\\");

742  
buf
;

744 i‡((!
	`°∫cmp
(
löe
, ".œbñ", 6)Ë&& 
	`is•a˚
(line[6])) {

745 
löe

	`ótS∑˚s
(line + 7);

746 i‡(*
löe
 ='\0'Ë
	`îr‹
("missingÜabelÜist");

747 (*
¨g
= '\0'),

748 
	`ssˇnf
(
löe
, "%["
LABEL_CHARS
"]%n", 
¨g
, &
width
),

749 (*
¨g
 != '\0')) {

750 
out
+
	`•rötf
(out, " "
ASM_LBL
"(%s);", 
¨g
);

751 
löe

	`ótS∑˚s
÷öê+ 
width
);

752 i‡(*
löe
 == '\0') {

753 i‡(
c⁄töued
Ë
out
+
	`•rötf
(out, "\\");

754  
buf
;

756 i‡(*
löe
 !','Ë
	`îr‹
("junk inÜabelÜist");

757 
löe

	`ótS∑˚s
(line + 1);

759 
	`îr‹
("illegalÜabelÇame");

762 
löe

	`ótOpcode
÷öe, 
›
);

763 
löe

	`ótArg
÷öe, 
a1
);

764 
löe

	`ótArg
÷öe, 
a2
);

765 
löe

	`ótArg
÷öe, 
a3
);

766 
löe

	`ótArg
÷öe, 
a4
);

767 
löe

	`ótArg
÷öe, 
a5
);

768 i‡(
›
[0]) {

769 *(
oxp

ox
)= '\0';

770 #ifde‡
REWRITE_PSEUDO_ARGS


771 
	`ªwrôe
(2);

774 i‡(
›
[0] == '_') {

775 i‡(
a1
[0]Ë*
oxp
++= 'o';

776 i‡(
a2
[0]Ë*
oxp
++= 'o';

777 i‡(
a3
[0]Ë*
oxp
++= 'o';

778 i‡(
a4
[0]Ë*
oxp
++= 'o';

779 i‡(
a5
[0]Ë*
oxp
++= 'o';

781 
	`ªwrôe
(2);

784 
	`°rˇt
(
›
, 
ox
);

785 i‡(
check_ö¢s
 && 
›
[0] !'_'Ë
	`check_ö¢
(op);

786 
out
+
	`•rötf
(out, "\t%s", 
›
);

787 
out
+
	`•rötf
(out, "\t(");

788 i‡(
a1
[0]Ë
out
+
	`•rötf
(out, "%s",á1);

789 i‡(
a2
[0]Ë
out
+
	`•rötf
(out, ", %s",á2);

790 i‡(
a3
[0]Ë
out
+
	`•rötf
(out, ", %s",á3);

791 i‡(
a4
[0]Ë
out
+
	`•rötf
(out, ", %s",á4);

792 i‡(
a5
[0]Ë
out
+
	`•rötf
(out, ", %s",á5);

793 
out
+
	`•rötf
(out, "); ");

795 i‡(
c⁄töued
Ë
out
+
	`•rötf
(out, "\\");

796  
buf
;

797 
	}
}

803 
	$£À˘CPU
(*
¨ch
, 
ªwrôî
 
rw
)

805 i‡(
rw
 =
ªwrôe_nuŒ
Ë
	`îr‹
("%†i†nŸ suµ‹ãd", 
¨ch
);

806 i‡(
ªwrôe
 !
ªwrôe_nuŒ
 &&Ñewrôê!
rw
)

807 
	`îr‹
("conflicting #cpu declarations");

808 i‡(
rw
 !
loˇlRewrôe
)

809 
	`w¨nög
("foreign cpuÅype selected");

810 
ªwrôe

rw
;

811 
	}
}

813 
	$choo£CPU
(*
¨g
)

816 (!
	`°rˇ£cmp
(
¨g
, "deÁu…")Ë
	`£À˘CPU
("deÁu…", 
loˇlRewrôe
);

818 (!
	`°rˇ£cmp
(
¨g
, "ppc") ||

819 !
	`°rˇ£cmp
(
¨g
, "power") ||

820 !
	`°rˇ£cmp
(
¨g
, "powerpc") ||

821 !
	`°rˇ£cmp
(
¨g
, "rs6000")Ë
	`£À˘CPU
("PowîPC", 
ªwrôe_µc
);

823 (!
	`°rˇ£cmp
(
¨g
, "•¨c")Ë
	`£À˘CPU
("S∑rc", 
ªwrôe_•¨c
);

825 (!
	`°rˇ£cmp
(
¨g
, "alpha") ||

826 !
	`°rˇ£cmp
(
¨g
, "axp")Ë
	`£À˘CPU
("AÕha", 
ªwrôe_Æpha
);

828 (!
	`°rˇ£cmp
(
¨g
, "hµa")Ë
	`£À˘CPU
("HP-PA", 
ªwrôe_hµa
);

830 (!
	`°rˇ£cmp
(
¨g
, "mùs")Ë
	`£À˘CPU
("MIPS", 
ªwrôe_mùs
);

832 (!
	`°rˇ£cmp
(
¨g
, "68k") ||

833 !
	`°rˇ£cmp
(
¨g
, "m68k") ||

834 !
	`°rˇ£cmp
(
¨g
, "mc68k") ||

835 !
	`°rˇ£cmp
(
¨g
, "68000") ||

836 !
	`°rˇ£cmp
(
¨g
, "m68000") ||

837 !
	`°rˇ£cmp
(
¨g
, "mc68000")Ë
	`£À˘CPU
("M68K", 
ªwrôe_m68k
);

839 (!
	`°rˇ£cmp
(
¨g
, "i386") || !strcasecmp(arg, "386") ||

840 !
	`°rˇ£cmp
(
¨g
, "i486") || !strcasecmp(arg, "486") ||

841 !
	`°rˇ£cmp
(
¨g
, "i586") || !strcasecmp(arg, "586") ||

842 !
	`°rˇ£cmp
(
¨g
, "pentium") ||

843 !
	`°rˇ£cmp
(
¨g
, "intel") ||

844 !
	`°rˇ£cmp
(
¨g
, "ü32")Ë
	`£À˘CPU
("i386", 
ªwrôe_i386
);

846 
	`îr‹
("unknownárchitecture");

847 
	}
}

849 
	$¥o˚ss
(*
löe
, 
FILE
 *
out
)

851 
¨g
[256];

852 i‡(*
löe
 == '\0') ;

853 i‡(*
löe
 == '\n') {

854 
	`Ârötf
(
out
, 
löe
);

857 
löe
[
	`°æí
(line) - 1]= '\0';

858 i‡(!
öAsm
 && (
löe
[0] == '#')) {

859 i‡(!
	`°∫cmp
(
löe
, "#cpu", 4)) {

860 i‡(
	`ssˇnf
(
löe
, "#˝u %s", 
¨g
) != 1)

861 
	`îr‹
("missingárchitectureÇame");

862 
	`choo£CPU
(
¨g
);

863 
	`Ârötf
(
out
, "#ö˛udê\""
HEADER_PREFIX
"%s.h\" /* #cpu %s */\n",

864 
	`ªwrôe
(0), 
¨g
);

867 i‡(!
	`°∫cmp
(
löe
, "#quiet", 6)) {

868 i‡(
öAsm
Ë
quõt
= 2; quiet= 1;

869 
	`Ârötf
(
out
, "/* #quiet */\n");

872 i‡(!
	`°∫cmp
(
löe
, "#nodot", 6)) {

873 
dodŸ
= 0;

874 
	`Ârötf
(
out
, "/* #nodot */\n");

877 i‡(!
	`°∫cmp
(
löe
, "#localpc", 8)) {

878 
	`Ârötf
(
out
, "#define _ASM_LOCALPC /* #localpc */\n");

881 i‡(
	`ssˇnf
(
löe
, "#commíà%s", 
¨g
)) {

882 
commítCh¨
*
¨g
;

883 
	`Ârötf
(
out
, "/* #commíà%¯*/\n", 
commítCh¨
);

886 i‡(
	`ssˇnf
(
löe
, "#esˇ≥ %s", 
¨g
)) {

887 
esˇ≥Ch¨
*
¨g
;

888 
	`Ârötf
(
out
, "/* #esˇ≥ %¯*/\n", 
esˇ≥Ch¨
);

893 i‡(!
öAsm
) {

894 *
dñim
0, 
ßve
= 0;

895 i‡((
dñim

	`°r°r
(
löe
, 
REG_OPEN
)) != 0) {

896 *
dñim2
= 0;

897 
ßve
*
dñim
;

898 *
dñim
= '\0';

899 
	`Ârötf
(
out
, "%s", 
löe
);

900 *
dñim

ßve
;

901 
löe

dñim
 + 
	`°æí
(
REG_OPEN
);

902 i‡((
dñim2

	`°r°r
(
löe
, 
REG_CLOSE
)) == 0)

903 
	`îr‹
("missing closing delimiter inÑegisterÉxpression");

904 
ßve
*
dñim2
;

905 *
dñim2
= '\0';

906 
löe

	`ótArg
÷öe, 
a1
);

907 *
dñim2

ßve
;

908 
oxp

›
;

909 
	`ªwrôe
(1);

910 
	`Ârötf
(
out
, "(%s)", 
a1
);

911 i‡(
löe
 !
	`°r°r
÷öe, 
REG_CLOSE
)Ë
	`îr‹
("badÑegisterÉxpression");

912 
löe
+
	`°æí
(
REG_CLOSE
);

915 i‡((
dñim

	`°r°r
(
löe
, 
ASM_1_OPEN
)) != 0) {

916 
öAsm
= 1;

918 i‡((
dñim

	`°r°r
(
löe
, 
ASM_2_OPEN
)) != 0) {

919 
öAsm
= 2;

921 
	`Ârötf
(
out
, "%s\n", 
löe
);

925 
ßve
*
dñim
;

926 *
dñim
= '\0';

927 
	`Ârötf
(
out
, "%† %†", 
löe
,

928 ((
öAsm
 =2Ë? 
ASM_2_BEGIN
 : 
ASM_1_BEGIN
));

929 
asmFwdW¨√d
= 0;

930 
löe

dñim
 + 2;

931 *
dñim

ßve
;

935 *
dñim
0, 
ßve
= 0;

936 i‡((
dñim

	`°r°r
(
löe
, 
ASM_1_CLOSE
)) != 0) {

937 i‡(
öAsm
 !1Ë
	`îr‹
("mismatchedássembler delimiters");

939 i‡((
dñim

	`°r°r
(
löe
, 
ASM_2_CLOSE
)) != 0) {

940 i‡(
öAsm
 !2Ë
	`îr‹
("mismatchedássembler delimiters");

942 
	`Ârötf
(
out
, "%s\n", 
	`as£mbÀ
(
löe
));

946 
ßve
*
dñim
;

947 *
dñim
= '\0';

948 
	`Ârötf
(
out
, " %s%s", 
	`as£mbÀ
(
löe
),

949 ((
öAsm
 =1Ë? 
ASM_1_END
 : 
ASM_2_END
));

950 
löe

dñim
+2;

951 *
dñim

ßve
;

952 
öAsm
= 0;

955 
	}
}

957 
	$√wOuçut
(
FILE
 *
out
)

960 
	`Ârötf
(
out
,

965 
	}
}

971 
	$maö
(
¨gc
, **
¨gv
)

973 *
¥ogName
*
¨gv
++;

974 
FILE
 *
ö
0, *
out
= 0;

977 *
±r

¥ogName
;

979 i‡(*
±r
++ ='/'Ë
¥ogName
=Ötr;

980 *
±r
);

983 i‡(
¨gc
 < 2Ë
	`ußge
(
¥ogName
);

985 --
¨gc
) {

986 
löeNo
= 0;

987 
fûeName
= 0;

989 i‡(!
	`°rcmp
(*
¨gv
, "-o")) {

990 *
outFûe
;

991 i‡(
out
Ë
	`f˛o£
(out);

992 i‡(!
¨gc
--Ë
	`îr‹
("fileÇame missingáfter \"-o\"");

993 
outFûe
*++
¨gv
;

994 i‡(!
	`°rcmp
(
outFûe
, "-"))

995 
out
= 0;

997 
out

	`f›í
(
outFûe
, "w");

998 i‡(!
out
Ë
	`îr‹
("ˇn'à›í ouçuàfûe: %s", 
outFûe
);

999 
	`√wOuçut
(
out
);

1001 ++
¨gv
;

1005 i‡(!
	`°rcmp
(*
¨gv
, "-c")) {

1006 i‡(!
¨gc
--Ë
	`îr‹
("character missingáfter \"-c\"");

1007 
commítCh¨
**++
¨gv
;

1008 ++
¨gv
;

1012 i‡(!
	`°rcmp
(*
¨gv
, "-e")) {

1013 i‡(!
¨gc
--Ë
	`îr‹
("character missingáfter \"-v\"");

1014 
esˇ≥Ch¨
**++
¨gv
;

1015 ++
¨gv
;

1019 i‡(!
	`°rcmp
(*
¨gv
, "-q")) {

1020 
quõt
= 1;

1021 ++
¨gv
;

1025 i‡(!
	`°rcmp
(*
¨gv
, "-n")) {

1026 
check_ö¢s
= 0;

1027 ++
¨gv
;

1031 i‡(**
¨gv
 ='-'Ë
	`ußge
(
¥ogName
);

1033 
fûeName
*
¨gv
++;

1034 
ö

	`f›í
(
fûeName
, "r");

1035 i‡(
ö
 == 0) {

1036 
	`Ârötf
(
°dîr
, "%s: fûênŸ found: %s\n", 
¥ogName
, 
fûeName
);

1037 
	`exô
(1);

1039 i‡(
out
 == 0) {

1040 
out

°dout
;

1041 
	`√wOuçut
(
out
);

1044 
	`Ârötf
(
out
, "# \"%s\" %d\n", 
fûeName
, 1);

1046 !
	`„of
(
ö
)) {

1047 i‡(0 =
	`fgës
(
löe
, ÷öeË- 1, 
ö
)) ;

1048 ++
löeNo
;

1049 
	`¥o˚ss
(
löe
, 
out
);

1051 
	`f˛o£
(
ö
);

1055 
	}
}

	@src/generator68k/ccg/insns-i386.h

	@src/generator68k/ccg/insns-ppc.h

	@src/generator68k/ccg/insns-sparc.h

	@src/generator68k/compile.h

8 #i‚de‡
_COMPILE_H_


9 
	#_COMPILE_H_


	)

10 
	~"gíî©‹.h
"

11 
	~"˝u68k.h
"

14 (*
	$compûe_make
(
t_ù˛i°
 *
li°
))(
_t_ùc
 *
ùc
);

	@src/generator68k/cpu68k-inline.h

4 
	~"gíî©‹.h
"

5 
	~"ªgi°îs.h
"

7 
	~<°dio.h
>

9 
	~"˝u68k.h
"

10 
	~"mem68k.h
"

11 
	~"ªg68k.h
"

13 
	#DATAREG
(
a
Ë(
ªgs
.ªgs[a])

	)

14 
	#ADDRREG
(
a
Ë(
ªgs
.ªgs[8+◊)])

	)

15 
	#PC
 (
ªgs
.
pc
)

	)

16 
	#SR
 (
ªgs
.
§
.
§_öt
)

	)

17 
	#SP
 (
ªgs
.
•
)

	)

18 
	#STOP
 (
ªgs
.
°›
)

	)

19 
	#TFLAG
 (
ªgs
.
§
.
§_°ru˘
.
t
)

	)

20 
	#SFLAG
 (
ªgs
.
§
.
§_°ru˘
.
s
)

	)

21 
	#XFLAG
 (
ªgs
.
§
.
§_°ru˘
.
x
)

	)

22 
	#NFLAG
 (
ªgs
.
§
.
§_°ru˘
.
n
)

	)

23 
	#ZFLAG
 (
ªgs
.
§
.
§_°ru˘
.
z
)

	)

24 
	#VFLAG
 (
ªgs
.
§
.
§_°ru˘
.
v
)

	)

25 
	#CFLAG
 (
ªgs
.
§
.
§_°ru˘
.
c
)

	)

27 
__ölöe__
 
söt32
 
	$idxvÆ_d°
(
t_ùc
 *
ùc
) {

28  ((
ùc
->
d°
>>27) & 1) | ((ipc->dst>>30) & 2) ) {

30  ((
söt16
)
	`DATAREG
((
ùc
->
d°
>>28)&7))+((((
söt32
)(ipc->dst<<8)))>>8);

32  ((
söt32
)
	`DATAREG
((
ùc
->
d°
>>28)&7))+((((sint32)(ipc->dst<<8)))>>8);

34  ((
söt16
)
	`ADDRREG
((
ùc
->
d°
>>28)&7))+((((
söt32
)(ipc->dst<<8)))>>8);

36  ((
söt32
)
	`ADDRREG
((
ùc
->
d°
>>28)&7))+((((sint32)(ipc->dst<<8)))>>8);

39 
	}
}

41 
__ölöe__
 
söt32
 
	$idxvÆ_§c
(
t_ùc
 *
ùc
) {

42  ((
ùc
->
§c
>>27) & 1) | ((ipc->src>>30) & 2) ) {

44  ((
söt16
)
	`DATAREG
((
ùc
->
§c
>>28)&7))+((((
söt32
)(ipc->src<<8)))>>8);

46  ((
söt32
)
	`DATAREG
((
ùc
->
§c
>>28)&7))+((((sint32)(ipc->src<<8)))>>8);

48  ((
söt16
)
	`ADDRREG
((
ùc
->
§c
>>28)&7))+((((
söt32
)(ipc->src<<8)))>>8);

50  ((
söt32
)
	`ADDRREG
((
ùc
->
§c
>>28)&7))+((((sint32)(ipc->src<<8)))>>8);

53 
	}
}

	@src/generator68k/cpu68k.c

3 
	~<°dio.h
>

4 
	~<°rög.h
>

5 
	~<°dlib.h
>

7 
	~"gíî©‹.h
"

8 
	~"˝u68k.h
"

9 
	~"mem68k.h
"

10 
	~"def68k-iibs.h
"

11 
	~"def68k-¥Ÿo.h
"

12 
	~"def68k-funcs.h
"

14 
diss68k_gëãxt
(
t_ùc
 * 
ùc
, *
ãxt
);

18 
uöt8
 *
	g˝u68k_rom
 = 
NULL
;

19 
	g˝u68k_romÀn
 = 0;

20 
uöt8
 *
	g˝u68k_øm
 = 
NULL
;

21 
t_iib
 *
	g˝u68k_iibèbÀ
[65536];

22 (*
˝u68k_fun˘abÀ
[65536 * 2]Ë(
t_ùc
 * 
ùc
);

23 
˝u68k_tŸÆö°r
;

24 
˝u68k_tŸÆfuncs
;

26 
˝u68k_˛ocks
;

27 
˝u68k_‰ames
;

28 
˝u68k_‰ozí
;

29 
t_ªgs
 
ªgs
;

30 
uöt8
 
movem_bô
[256];

31 
t_ù˛i°
 *
ù˛i°
[
LEN_IPCLISTTABLE
];

34 
uöt32
 
b™kaddªss
;

40 
	`˝u68k_ª£t
();

42 
	$˝u68k_öô
()

44 
t_iib
 *
iib
;

45 
uöt16
 
bôm≠
;

46 
i
, 
j
, 
sbô
, 
dbô
, 
sbôs
, 
dbôs
;

48 
	`mem£t
(
˝u68k_iibèbÀ
, 0, (cpu68k_iibtable));

49 
	`mem£t
(
˝u68k_fun˘abÀ
, 0, (cpu68k_functable));

50 
	`mem£t
(&
ªgs
, 0, (regs));

52 
˝u68k_‰ozí
 = 0;

53 
˝u68k_tŸÆö°r
 = 0;

55 
i
 = 0; i < 
iibs_num
; i++) {

56 
iib
 = &
iibs
[
i
];

58 
bôm≠
 = 
iib
->
mask
;

59 
sbôs
 = 0;

60 
dbôs
 = 0;

62 
j
 = 0; j < 2; j++) {

63 
j
 ? 
iib
->
°y≥
 : iib->
dty≥
) {

64 
dt_Dªg
:

65 
dt_Aªg
:

66 
dt_Aöd
:

67 
dt_Aöc
:

68 
dt_Adec
:

69 
dt_Adis
:

70 
dt_Aidx
:

71 i‡(
j
) {

72 
bôm≠
 ^7 << 
iib
->
sbôpos
;

73 
sbôs
 = 3;

75 
bôm≠
 ^7 << 
iib
->
dbôpos
;

76 
dbôs
 = 3;

79 
dt_AbsW
:

80 
dt_AbsL
:

81 
dt_Pdis
:

82 
dt_Pidx
:

84 
dt_ImmB
:

85 
dt_ImmW
:

86 
dt_ImmL
:

87 
dt_ImmS
:

89 
dt_Imm3
:

90 i‡(
j
) {

91 
bôm≠
 ^7 << 
iib
->
sbôpos
;

92 
sbôs
 = 3;

94 
bôm≠
 ^7 << 
iib
->
dbôpos
;

95 
dbôs
 = 3;

98 
dt_Imm4
:

99 i‡(
j
) {

100 
bôm≠
 ^15 << 
iib
->
sbôpos
;

101 
sbôs
 = 4;

103 
bôm≠
 ^15 << 
iib
->
dbôpos
;

104 
dbôs
 = 4;

107 
dt_Imm8
:

108 
dt_Imm8s
:

109 i‡(
j
) {

110 
bôm≠
 ^255 << 
iib
->
sbôpos
;

111 
sbôs
 = 8;

113 
bôm≠
 ^255 << 
iib
->
dbôpos
;

114 
dbôs
 = 8;

117 
dt_ImmV
:

118 
sbôs
 = 12;

119 
bôm≠
 ^= 0x0FFF;

121 
dt_IŒ
:

125 
	`LOG_CRITICAL
(("CPU deföôi⁄ #%d inc‹ª˘", 
i
));

129 i‡(
bôm≠
 != 0xFFFF) {

130 
	`LOG_CRITICAL
(("CPU deföôi⁄ #%d inc‹ª˘ (0x%x)", 
i
, 
bôm≠
));

133 
sbô
 = 0; sbô < (1 << 
sbôs
); sbit++) {

134 
dbô
 = 0; dbô < (1 << 
dbôs
); dbit++) {

135 
bôm≠
 = 
iib
->
bôs
 | (
sbô
 << iib->
sbôpos
Ë| (
dbô
 << iib->
dbôpos
);

136 i‡(
iib
->
°y≥
 =
dt_Imm3
 || iib->°y≥ =
dt_Imm4


137 || 
iib
->
°y≥
 =
dt_Imm8
) {

138 i‡(
sbô
 =0 && 
iib
->
Êags
.
imm_nŸzîo
) {

142 i‡(
˝u68k_iibèbÀ
[
bôm≠
] !
NULL
) {

143 
	`LOG_CRITICAL
(("CPU deföôi⁄ #%d c⁄Êi˘†(0x%x)", 
i
, 
bôm≠
));

146 
˝u68k_iibèbÀ
[
bôm≠
] = 
iib
;

148 
˝u68k_fun˘abÀ
[
bôm≠
 * 2] = 
˝u68k_funcödex
[
i
 * 2];

149 
˝u68k_fun˘abÀ
[
bôm≠
 * 2 + 1] = 
˝u68k_funcödex
[
i
 * 2 + 1];

150 
˝u68k_tŸÆö°r
++;

155 
j
 = 0;

157 
i
 = 0; i < 65536; i++) {

158 i‡(
˝u68k_iibèbÀ
[
i
]) {

159 
j
++;

162 i‡(
j
 !
˝u68k_tŸÆö°r
) {

163 
	`LOG_CRITICAL
(("Instruction countÇot verified (%d/%d)\n",

164 
˝u68k_tŸÆö°r
, 
i
));

168 
˝u68k_tŸÆfuncs
 = 
iibs_num
;

170 
i
 = 0; i < 256; i++) {

171 
j
 = 0; j < 8; j++) {

172 i‡(
i
 & (1 << 
j
))

175 
movem_bô
[
i
] = 
j
;

178 
	`LOG_VERBOSE
(("CPU: %d instructions supported by %dÑoutines",

179 
˝u68k_tŸÆö°r
, 
˝u68k_tŸÆfuncs
));

180 
iib
 = 
˝u68k_iibèbÀ
[0x2F39];

182 
	}
}

184 
	$˝u68k_¥ötùc
(
t_ùc
 * 
ùc
)

186 
dasmtxt
[256];

187 
	`¥ötf
("IPC @ 0x%p\n", 
ùc
);

188 
	`diss68k_gëãxt
(
ùc
,
dasmtxt
);

189 
	`¥ötf
("%s\n",
dasmtxt
);

190 
	`¥ötf
(" opcode: %04X, u£†%X së %X\n", 
ùc
->
›code
, ipc->
u£d
,

191 
ùc
->
£t
);

192 
	`¥ötf
(" sr¯%08X\n", ()
ùc
->
§c
);

193 
	`¥ötf
(" d° = %08X\n", ()
ùc
->
d°
);

194 
	}
}

198 
	$˝u68k_ùc
(
uöt32
 
addr68k
, 
uöt8
 *
addr
, 
t_iib
 * 
iib
, 
t_ùc
 * 
ùc
)

200 
t_ty≥
 
ty≥
;

201 
uöt32
 *
p
;

203 
ùc
->
›code
 = 
	`LOCENDIAN16
(*(
uöt16
 *)
addr
);

204 
ùc
->
w‹dÀn
 = 1;

205 i‡(!
iib
) {

210 
ùc
->
u£d
 = 
iib
->
Êags
.used;

211 
ùc
->
£t
 = 
iib
->
Êags
.set;

213 i‡((
iib
->
m√m⁄ic
 =
i_Bcc
Ë|| (iib->m√m⁄i¯=
i_BSR
)) {

216 
ùc
->
§c
 = (
söt32
)(*(
söt8
 *)(
addr
 + 1));

217 i‡(
ùc
->
§c
 == 0) {

218 
ùc
->
§c
 = (
söt32
)(
söt16
)
	`LOCENDIAN16
(*(
uöt16
 *)(
addr
 + 2));

219 
ùc
->
w‹dÀn
++;

221 
ùc
->
§c
 +
addr68k
 + 2;

224 i‡(
iib
->
m√m⁄ic
 =
i_DBcc
 || iib->m√m⁄i¯=
i_DBRA
) {

226 
ùc
->
§c
 = (
söt32
)(
söt16
)
	`LOCENDIAN16
(*(
uöt16
 *)(
addr
 + 2));

227 
ùc
->
§c
 +
addr68k
 + 2;

228 
ùc
->
w‹dÀn
++;

232 
addr
 += 2;

233 
addr68k
 += 2;

235 
ty≥
 = 0;Åype < 2;Åype++) {

236 i‡(
ty≥
 =
ç_§c
)

237 
p
 = &(
ùc
->
§c
);

239 
p
 = &(
ùc
->
d°
);

241 
ty≥
 =
ç_§c
 ? 
iib
->
°y≥
 : iib->
dty≥
) {

242 
dt_Adis
:

243 *
p
 = (
söt32
)(
söt16
)
	`LOCENDIAN16
(*(
uöt16
 *)
addr
);

244 
ùc
->
w‹dÀn
++;

245 
addr
 += 2;

246 
addr68k
 += 2;

248 
dt_Aidx
:

249 *
p
 = (
söt32
)(
söt8
)
addr
[1];

250 *
p
 = (*∞& 0xFFFFFFË| (*
addr
) << 24;

251 
ùc
->
w‹dÀn
++;

252 
addr
 += 2;

253 
addr68k
 += 2;

255 
dt_AbsW
:

256 *
p
 = (
söt32
)(
söt16
)
	`LOCENDIAN16
(*(
uöt16
 *)
addr
);

257 
ùc
->
w‹dÀn
++;

258 
addr
 += 2;

259 
addr68k
 += 2;

261 
dt_AbsL
:

262 *
p
 = (
uöt32
)((
	`LOCENDIAN16
(*(
uöt16
 *)
addr
) << 16) +

263 
	`LOCENDIAN16
(*(
uöt16
 *)(
addr
 + 2)));

264 
ùc
->
w‹dÀn
 += 2;

265 
addr
 += 4;

266 
addr68k
 += 4;

268 
dt_Pdis
:

269 *
p
 = (
söt32
)(
söt16
)
	`LOCENDIAN16
(*(
uöt16
 *)
addr
);

270 *
p
 +
addr68k
;

271 
ùc
->
w‹dÀn
++;

272 
addr
 += 2;

273 
addr68k
 += 2;

275 
dt_Pidx
:

276 *
p
 = ((
söt32
)(
söt8
)
addr
[1]Ë+ 
addr68k
;

277 *
p
 = (*∞& 0xFFFFFFË| (*
addr
) << 24;

278 
ùc
->
w‹dÀn
++;

279 
addr
 += 2;

280 
addr68k
 += 2;

282 
dt_ImmB
:

284 *
p
 = (
uöt32
)(*(
uöt8
 *)(
addr
 + 1));

285 
ùc
->
w‹dÀn
++;

286 
addr
 += 2;

287 
addr68k
 += 2;

289 
dt_ImmW
:

290 *
p
 = (
uöt32
)
	`LOCENDIAN16
(*(
uöt16
 *)
addr
);

291 
ùc
->
w‹dÀn
++;

292 
addr
 += 2;

293 
addr68k
 += 2;

295 
dt_ImmL
:

296 *
p
 = (
uöt32
)((
	`LOCENDIAN16
(*(
uöt16
 *)
addr
) << 16) +

297 
	`LOCENDIAN16
(*(
uöt16
 *)(
addr
 + 2)));

298 
ùc
->
w‹dÀn
 += 2;

299 
addr
 += 4;

300 
addr68k
 += 4;

302 
dt_Imm3
:

303 i‡(
ty≥
 =
ç_§c
)

304 *
p
 = (
ùc
->
›code
 >> 
iib
->
sbôpos
) & 7;

306 *
p
 = (
ùc
->
›code
 >> 
iib
->
dbôpos
) & 7;

308 
dt_Imm4
:

309 i‡(
ty≥
 =
ç_§c
)

310 *
p
 = (
ùc
->
›code
 >> 
iib
->
sbôpos
) & 15;

312 *
p
 = (
ùc
->
›code
 >> 
iib
->
dbôpos
) & 15;

314 
dt_Imm8
:

315 i‡(
ty≥
 =
ç_§c
)

316 *
p
 = (
ùc
->
›code
 >> 
iib
->
sbôpos
) & 255;

318 *
p
 = (
ùc
->
›code
 >> 
iib
->
dbôpos
) & 255;

320 
dt_Imm8s
:

321 i‡(
ty≥
 =
ç_§c
)

322 *
p
 = (
söt32
)(
söt8
)((
ùc
->
›code
 >> 
iib
->
sbôpos
) & 255);

324 *
p
 = (
söt32
)(
söt8
)((
ùc
->
›code
 >> 
iib
->
dbôpos
) & 255);

330 
	}
}

332 
t_ù˛i°
 *
	$˝u68k_makeù˛i°
(
uöt32
 
pc
)

334 
size
 = 16;

335 
t_ù˛i°
 *
li°
 = 
	`mÆloc
(—_ù˛i°Ë+ 16 * (
t_ùc
) + 8);

336 
t_ùc
 *
ùc
 = (t_ù¯*Ë(
li°
 + 1);

337 
t_iib
 *
iib
;

338 
ö°rs
 = 0;

339 
uöt16
 
ªquúed
;

340 
i
;

342 i‡(
li°
 =
NULL
) {

343 
	`¥ötf
("Out of memory");

344 
	`exô
(1);

347 
pc
 &= 0xffffff;

348 
li°
->
pc
 =Öc;

349 
li°
->
˛ocks
 = 0;

350 
li°
->
n‹ïót
 = 0;

352 i‡((
pc
&0xF00000)==0x200000)

353 
li°
->
b™k
 = 
b™kaddªss
;

355 
li°
->
b™k
 = 0;

359 
ö°rs
++;

360 i‡(
ö°rs
 > 
size
) {

361 i‡(
size
 > 10000) {

362 
	`¥ötf
("Somëhög ha†g⁄ê£riou¶y wr⁄g @ %08X", ()
pc
);

363 
	`exô
(1);

365 
size
 += 16;

366 
li°
 = 
	`ªÆloc
÷i°, (
t_ù˛i°
Ë+ 
size
 * (
t_ùc
) + 8);

367 i‡(
li°
 =
NULL
) {

368 
	`¥ötf
("Out of memory whilst making ipcÜist @ %08X",

369 ()
pc
);

370 
	`exô
(1);

372 
ùc
 = ((
t_ùc
 *Ë(
li°
 + 1)Ë+ 
ö°rs
 - 1;

374 i‡(!(
iib
 = 
˝u68k_iibèbÀ
[
	`„tchw‹d
(
pc
)])) {

375 
	`¥ötf
("InvÆid in°ru˘i⁄ @ %08X [%04X]", ()
pc
,

376 
	`„tchw‹d
(
pc
));

377 
	`exô
(1);

379 
	`˝u68k_ùc
(
pc
, 
mem68k_mem±r
[p¯>> 12] (pc), 
iib
, 
ùc
);

380 
li°
->
˛ocks
 +
iib
->clocks;

381 
pc
 +(
iib
->
w‹dÀn
) << 1;

382 
ùc
++;

384 !
iib
->
Êags
.
ídblk
);

385 *(*)
ùc
 = 0;

387 i‡(
ö°rs
 == 2) {

388 
ùc
--;

389 i‡(
iib
->
m√m⁄ic
 =
i_Bcc
 && 
ùc
->
§c
 =
li°
->
pc
) {

391 
ùc
 = (
t_ùc
 *Ë(
li°
 + 1);

392 
iib
 = 
˝u68k_iibèbÀ
[
ùc
->
›code
];

393 i‡(
iib
->
m√m⁄ic
 =
i_TST
 || iib->m√m⁄i¯=
i_CMP
) {

395 i‡(!(
iib
->
°y≥
 =
dt_Aöc
 || iib->°y≥ =
dt_Adec
)) {

397 
li°
->
n‹ïót
 = 1;

403 
ùc
 = ((
t_ùc
 *Ë(
li°
 + 1)Ë+ 
ö°rs
 - 1;

404 
ªquúed
 = 0x1F;

405 
i
 = 0; i < 
ö°rs
; i++) {

406 
ùc
->
£t
 &
ªquúed
;

407 
ªquúed
 &~
ùc
->
£t
;

408 
ªquúed
 |
ùc
->
u£d
;

409 i‡(
ùc
->
£t
) {

410 
ùc
->
fun˘i⁄
 = 
˝u68k_fun˘abÀ
[(ùc->
›code
 << 1) + 1];

412 
ùc
->
fun˘i⁄
 = 
˝u68k_fun˘abÀ
[ùc->
›code
 << 1];

414 
ùc
--;

417  
li°
;

418 
	}
}

420 
	$˝u68k_˛órˇche
()

422 
i
;

423 
t_ù˛i°
 *
p
, *
n
;

425 
i
 = 0; i < 
LEN_IPCLISTTABLE
; i++) {

426 i‡(
ù˛i°
[
i
]) {

427 
p
=
ù˛i°
[
i
];

428 
p
){

429 
n
=
p
->
√xt
;

430 
	`‰ì
(
p
);

431 
p
=
n
;

433 
ù˛i°
[
i
] = 
NULL
;

436 
	}
}

438 
	$˝u68k_ª£t
()

440 
i
;

441 
t_ù˛i°
 *
p
, *
n
;

443 i‡(!
˝u68k_øm
) {

445 i‡((
˝u68k_øm
 = 
	`mÆloc
(0x10000 + 4)Ë=
NULL
)

446 
	`ui_îr
("Out of memory");

448 
	`mem£t
(
˝u68k_øm
, 0, 0x10000);

451 
ªgs
.
pc
 = 
	`„tchl⁄g
(4);

452 
ªgs
.ªgs[15] = 
	`„tchl⁄g
(0);

453 
ªgs
.
§
.
§_öt
 = 0;

454 
ªgs
.
§
.
§_°ru˘
.
s
 = 1;

455 
ªgs
.
°›
 = 0;

456 
˝u68k_˛ocks
 = 0;

457 
˝u68k_‰ames
 = 0;

459 
i
 = 0; i < 
LEN_IPCLISTTABLE
; i++) {

460 i‡(
ù˛i°
[
i
]) {

461 
p
=
ù˛i°
[
i
];

462 
p
){

463 
n
=
p
->
√xt
;

464 
	`‰ì
(
p
);

465 
p
=
n
;

467 
ù˛i°
[
i
] = 
NULL
;

470 
	}
}

472 
	$˝u68k_ídfõld
()

474 
˝u68k_˛ocks
 = 0;

475 
	}
}

	@src/generator68k/cpu68k.h

1 #i‚de‡
_CPU68K_H_


2 
	#_CPU68K_H_


	)

4 
	s_t_ùc
 {

5 (*
	mfun˘i⁄
)(
_t_ùc
 *
	mùc
);

6 
uöt8
 
	mu£d
;

7 
uöt8
 
	m£t
;

8 
uöt16
 
	m›code
;

9 
uöt16
 
	mw‹dÀn
;

11 
uöt32
 
	m§c
;

12 
uöt32
 
	md°
;

13 } 
	tt_ùc
;

15 
	s_t_ù˛i°
 {

16 
_t_ù˛i°
 *
	m√xt
;

17 
uöt8
 
	mn‹ïót
;

18 
uöt32
 
	mpc
;

19 
uöt32
 
	m∑ss
;

20 
uöt32
 
	mb™k
;

21 
uöt32
 
	m˛ocks
;

22 (*
	mcompûed
)(
_t_ùc
 *
	mùc
);

23 } 
	tt_ù˛i°
;

25 
uöt8
 *
˝u68k_rom
;

26 
˝u68k_romÀn
;

27 
uöt8
 *
˝u68k_øm
;

28 
t_iib
 *
˝u68k_iibèbÀ
[65536];

29 (*
˝u68k_fun˘abÀ
[65536*2])(
t_ùc
 *
ùc
);

30 
˝u68k_tŸÆö°r
;

31 
˝u68k_tŸÆfuncs
;

32 
˝u68k_˛ocks
;

33 
˝u68k_˛ocks_cuªvít
;

34 
˝u68k_‰ames
;

35 
˝u68k_löe
;

36 
t_ªgs
 
ªgs
;

37 
t_ù˛i°
 *
ù˛i°
[
LEN_IPCLISTTABLE
];

38 
uöt8
 
movem_bô
[256];

39 
˝u68k_ad≠tive
;

40 
˝u68k_‰ozí
;

42 
t_iib
 
iibs
[];

43 
iibs_num
;

46 
	`˝u68k_öô
();

47 
	`˝u68k_¥ötùc
(
t_ùc
 *
ùc
);

48 
	`˝u68k_ùc
(
uöt32
 
addr68k
, 
uöt8
 *
addr
, 
t_iib
 *
iib
, 
t_ùc
 *
ùc
);

49 
	`˝u68k_ª£t
();

50 
	`˝u68k_°ï
();

51 
	`˝u68k_‰ame°ï
();

52 
t_ù˛i°
 *
	`˝u68k_makeù˛i°
(
uöt32
 
pc
);

53 
	`˝u68k_ídfõld
();

54 
	`˝u68k_˛órˇche
();

56 
	#V_RESETSSP
 0

	)

57 
	#V_RESETPC
 1

	)

58 
	#V_BUSERR
 2

	)

59 
	#V_ADDRESS
 3

	)

60 
	#V_ILLEGAL
 4

	)

61 
	#V_ZERO
 5

	)

62 
	#V_CHK
 6

	)

63 
	#V_TRAPV
 7

	)

64 
	#V_PRIVILEGE
 8

	)

65 
	#V_TRACE
 9

	)

66 
	#V_LINE10
 10

	)

67 
	#V_LINE15
 11

	)

68 
	#V_UNINIT
 15

	)

69 
	#V_SPURIOUS
 24

	)

70 
	#V_AUTO
 25

	)

71 
	#V_TRAP
 32

	)

72 
	#V_USER
 64

	)

	@src/generator68k/def68k.c

3 
	~<î∫o.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

9 
	~"gíî©‹.h
"

13 
	#BUFLEN
 1024

	)

14 
	#FNAME_CPUDEF
 "def68k.def"

	)

15 
	#FNAME_OUTIIBS
 "def68k-iibs.h"

	)

16 
	#FNAME_OUTFUNCS
 "def68k-funcs.h"

	)

17 
	#FNAME_OUTPROTO
 "def68k-¥Ÿo.h"

	)

20 
	mbô0
, 
	mbô1
, 
	mbôz
, 
	mbôe
, 
	mbôE
, 
	mbôf
, 
	mbôF
, 
	mbôi
, 
	mbôn
, 
	mbôN
, 
	mbôc
, 
	mbôv


21 } 
	tt_bô
;

25 
	gtŸÆ
 = 0;

26 
	g˛ocks_movëabÀ
[];

30 
¥o˛öe
(*
löe
, 
löío
, 
FILE
 *
outiibs
, FILE *
outfuncs
,

31 
FILE
 *
ouçrŸo
);

32 
˛ocks_ó
(
t_d©©y≥
 
ty≥
);

33 
˛ocks_óˇlc
(
t_d©©y≥
 
ty≥
, 
t_size
 
size
);

34 
˛ocks_6‹8
(
t_d©©y≥
 
ty≥
);

35 
˛ocks_ty≥toödex
(
t_d©©y≥
 
ty≥
);

39 
	$maö
(
¨gc
, *
¨gv
[])

41 
FILE
 *
öput
, *
outiibs
, *
outfuncs
, *
ouçrŸo
;

42 
buf
[
BUFLEN
], *
p
;

43 
löío
 = 0;

45 ()
¨gc
;

46 ()
¨gv
;

50 i‡((
outiibs
 = 
	`f›í
(
FNAME_OUTIIBS
, "w")Ë=
NULL
) {

51 
	`≥º‹
("fopen outiibs");

52 
	`exô
(1);

54 
	`Ârötf
(
outiibs
, "/*áutomatically generated by def68k.c */\n\n");

55 
	`Ârötf
(
outiibs
, "t_iib iibs[] = {\n");

56 
	`Ârötf
(
outiibs
, " /* mask, bits, mnemonic, {Öriv,Éndblk, zero, ");

57 
	`Ârötf
(
outiibs
, "used, set },\n");

58 
	`Ârötf
(
outiibs
, " size, stype, dtype, sbitpos, dbitpos, immvalue, ");

59 
	`Ârötf
(
outiibs
, "cc, funcnum */\n");

61 i‡((
outfuncs
 = 
	`f›í
(
FNAME_OUTFUNCS
, "w")Ë=
NULL
) {

62 
	`≥º‹
("fopen outfuncs");

63 
	`exô
(1);

65 
	`Ârötf
(
outfuncs
, "/*áutomatically generated by def68k.c */\n\n");

66 
	`Ârötf
(
outfuncs
, "void (*cpu68k_funcindex[])(t_ipc *ipc) = {\n");

67 
	`Ârötf
(
outfuncs
, " /* function */\n");

69 i‡((
ouçrŸo
 = 
	`f›í
(
FNAME_OUTPROTO
, "w")Ë=
NULL
) {

70 
	`≥º‹
("fopen outproto");

71 
	`exô
(1);

73 
	`Ârötf
(
ouçrŸo
, "/*áutomatically generated by def68k.c */\n\n");

77 i‡((
öput
 = 
	`f›í
(
FNAME_CPUDEF
, "r")Ë=
NULL
) {

78 
	`≥º‹
("fopen input");

79 
	`exô
(1);

84 
	`¥ötf
("Writing CPU definitions... ");

85 
	`fÊush
(
°dout
);

87 !
	`„of
(
öput
)) {

89 
löío
++;

91 i‡(
	`„º‹
(
öput
)) {

94 i‡(
	`fgës
(
buf
, 
BUFLEN
, 
öput
Ë=
NULL
) {

97 
	`≥º‹
("fgets");

98 
	`exô
(1);

101 
buf
[
	`°æí
(buf)-1] = '\0';

103 i‡((
p
 = 
	`°rchr
(
buf
, ';')Ë!
NULL
) {

104 *
p
 = '\0';

107 
p
 = 
buf
;

108 *
p
 == ' ')

109 
p
++;

111 i‡(!*
p
)

114 
	`¥o˛öe
(
buf
, 
löío
, 
outiibs
, 
outfuncs
, 
ouçrŸo
);

119 i‡(
	`f˛o£
(
öput
)) {

120 
	`≥º‹
("fclose input");

121 
	`exô
(1);

126 
	`Ârötf
(
outiibs
, " { 0, 0, 0, { 0, 0, 0, 0, 0 }, "

128 
	`Ârötf
(
outiibs
, "};\n");

129 
	`Ârötf
(
outiibs
, "öàiibs_num = %d;\n", 
tŸÆ
);

131 
	`Ârötf
(
outfuncs
, "};\n");

135 i‡(
	`f˛o£
(
outiibs
)) {

136 
	`≥º‹
("fclose outiibs");

137 
	`exô
(1);

139 i‡(
	`f˛o£
(
outfuncs
)) {

140 
	`≥º‹
("fclose outfuncs");

141 
	`exô
(1);

143 i‡(
	`f˛o£
(
ouçrŸo
)) {

144 
	`≥º‹
("fclose outproto");

145 
	`exô
(1);

148 
	`¥ötf
("done.\n");

149 
	`fÊush
(
°dout
);

152 
	}
}

156 
	$¥o˛öe
(*
löe
, 
löío
, 
FILE
 *
outiibs
, FILE *
outfuncs
,

157 
FILE
 *
ouçrŸo
) {

158 
i
;

159 *
p
;

160 
t_bô
 
bô
 = 
bô0
, 
œ°bô
 = bit0;

161 
°¨t
[16] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

162 
num
[16] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

163 
m√m⁄ic
[16], *
m
;

164 
£âög
;

165 
˛ocks
;

168 
m√m⁄ic_num
;

169 
uöt16
 
mask
 = 0, 
bôs
 = 0;

170 
¥iv
 = 0, 
ídblk
 = 0;

171 
imm_nŸzîo
 = 0;

172 
u£d
 = 0, 
£t
 = 0;

173 
t_size
 
isize
 = 
sz_n⁄e
;

174 
ex∑nd_s_immsize
 = 0, 
ex∑nd_s_ó_e
 = 0;

175 
ex∑nd_d_ó_e
 = 0, 
ex∑nd_d_ó_f
 = 0;

176 
t_d©©y≥
 
dty≥
 = 
dt_IŒ
;

177 
t_d©©y≥
 
°y≥
 = 
dt_IŒ
;

178 
e
[16] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

179 
f
[16] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

180 
immvÆue
 = 0;

181 
sbôpos
 = 0, 
dbôpos
 = 0;

183 
p
 = 
löe
;

187 
i
 = 15; i >= 0; i--) {

188 *
p
 == ' ')

189 
p
++;

191 *
p
) {

192 '0': 
bô
 = 
bô0
; 
mask
 |1<<
i
; ;

193 '1': 
bô
 = 
bô1
; 
mask
 |1<<
i
; 
bôs
 |= 1<<i; ;

194 'z': 
bô
 = 
bôz
; ;

195 'e': 
bô
 = 
bôe
; ;

196 'E': 
bô
 = 
bôE
; ;

197 'f': 
bô
 = 
bôf
; ;

198 'F': 
bô
 = 
bôF
; ;

199 'n': 
bô
 = 
bôn
; ;

200 'N': 
bô
 = 
bôN
; ;

201 'i': 
bô
 = 
bôi
; ;

202 'c': 
bô
 = 
bôc
; ;

203 'V': 
bô
 = 
bôv
; ;

205 
	`Ârötf
(
°dîr
, "%d: unknow¿ch¨ %¯ö bô∑âîn\n", 
löío
, *
p
);

206 
	`exô
(1);

209 i‡(*
p
 != '0' && *p != '1') {

210 i‡(
num
[
bô
]) {

212 i‡(
bô
 < 15 && bô !
œ°bô
) {

213 
	`Ârötf
(
°dîr
, "%d: N⁄ c⁄tiguou†bô†o‡%c\n", 
löío
, *
p
);

214 
	`exô
(1);

218 
°¨t
[
bô
] = 
i
;

220 
num
[
bô
]++;

222 
p
++;

223 
œ°bô
 = 
bô
;

226 *
p
 == ' ')

227 
p
++;

228 i‡(*
p
++ != '\t') {

229 
	`Ârötf
(
°dîr
, "%d: TabÇŸ foundáàíd o‡bô∑âîn\n", 
löío
);

230 
	`exô
(1);

235 i‡(*
p
 == '0') {

236 
¥iv
 = 0;

237 } i‡(*
p
 == '1') {

238 
¥iv
 = 1;

240 
	`Ârötf
(
°dîr
, "%d: Priv fœgÇŸ 0 o∏1\n", 
löío
);

241 
	`exô
(1);

243 
p
++;

245 *
p
 == ' ')

246 
p
++;

247 i‡(*
p
 == '0') {

248 
ídblk
 = 0;

249 } i‡(*
p
 == '1') {

250 
ídblk
 = 1;

252 
	`Ârötf
(
°dîr
, "%d: End-block fœgÇŸ 0 o∏1\n", 
löío
);

253 
	`exô
(1);

255 
p
++;

257 *
p
 == ' ')

258 
p
++;

259 i‡(*
p
++ != '\t') {

260 
	`Ârötf
(
°dîr
, "%d: TabÇŸ foundáàíd o‡Êags\n", 
löío
);

261 
	`exô
(1);

266 
i
 = 0; i < 5; i++) {

267 *
p
 == ' ')

268 
p
++;

269 *
p
++) {

272 'X': 
u£d
 |1<<
i
; ;

273 'N': 
u£d
 |1<<
i
; ;

274 'Z': 
u£d
 |1<<
i
; ;

275 'V': 
u£d
 |1<<
i
; ;

276 'C': 
u£d
 |1<<
i
; ;

277 '0': 
u£d
 |1<<
i
; ;

278 '1': 
u£d
 |1<<
i
; ;

280 
	`Ârötf
(
°dîr
, "%d: DidÇŸ undî°™d u£d fœg %d\n", 
löío
, 
i
);

281 
	`exô
(1);

285 *
p
 == ' ')

286 
p
++;

287 i‡(*
p
++ != '\t') {

288 
	`Ârötf
(
°dîr
, "%d: TabÇŸ foundáàíd o‡u£d fœgs\n", 
löío
);

289 
	`exô
(1);

294 
i
 = 0; i < 5; i++) {

295 *
p
 == ' ')

296 
p
++;

297 *
p
++) {

300 'X': 
£t
 |1<<
i
; ;

301 'N': 
£t
 |1<<
i
; ;

302 'Z': 
£t
 |1<<
i
; ;

303 'V': 
£t
 |1<<
i
; ;

304 'C': 
£t
 |1<<
i
; ;

305 '0': 
£t
 |1<<
i
; ;

306 '1': 
£t
 |1<<
i
; ;

308 
	`Ârötf
(
°dîr
, "%d: DidÇŸ undî°™d së fœg %d\n", 
löío
, 
i
);

309 
	`exô
(1);

313 *
p
 == ' ')

314 
p
++;

315 i‡(*
p
++ != '\t') {

316 
	`Ârötf
(
°dîr
, "%d: TabÇŸ foundáàíd o‡£àÊags\n", 
löío
);

317 
	`exô
(1);

322 
m
 = 
m√m⁄ic
;

323 *
p
 && (*p != '.') && (*p != ' ') && (*p != '\t')) {

324 *
m
++ = *
p
++;

326 i‡(*
p
 == '\t') {

327 
	`Ârötf
(
°dîr
, "%d: IncorrectÇumber of fields -ÉxtraÅab found\n",

328 
löío
);

329 
	`exô
(1);

331 *
m
 = '\0';

332 
m√m⁄ic_num
 = 0; *
m√m⁄ic_èbÀ
[m√m⁄ic_num].
«me
; mnemonic_num++)

333 i‡(!
	`°rcmp
(
m√m⁄ic_èbÀ
[
m√m⁄ic_num
].
«me
, 
m√m⁄ic
))

335 i‡(!*
m√m⁄ic_èbÀ
[
m√m⁄ic_num
].
«me
) {

336 
	`Ârötf
(
°dîr
, "%d: Unknow¿m√m⁄i¯'%s'\n", 
löío
, 
m√m⁄ic
);

337 
	`exô
(1);

340 
isize
 = 
sz_n⁄e
;

341 i‡(*
p
 == '.') {

342 *++
p
) {

343 'B': 
isize
 = 
sz_byã
; ;

344 'W': 
isize
 = 
sz_w‹d
; ;

345 'L': 
isize
 = 
sz_l⁄g
; ;

347 i‡(!
num
[
bôz
]) {

348 
	`Ârötf
(
°dîr
, "%d: 'z' givenás size butÇo 'z' in bitÖattern\n",

349 
löío
);

350 
	`exô
(1);

355 
	`Ârötf
(
°dîr
, "%d: Unknown size '%c'áfter mnemonic\n",

356 
löío
, *
p
);

357 
	`exô
(1);

359 
p
++;

362 i‡(
num
[
bôz
]) {

364 
	`Ârötf
(
°dîr
, "%d: 'z's in bitÖattern butÇo .záfter mnemonic\n",

365 
löío
);

366 
	`exô
(1);

369 *
p
 == ' ')

370 
p
++;

371 i‡(*
p
 == '\0') {

373 i‡(
num
[
bôe
] ||Çum[
bôE
] ||Çum[
bôf
] ||Çum[
bôF
] ||

374 
num
[
bôi
] ||Çum[
bôn
] ||Çum[
bôN
] ||Çum[
bôv
]) {

375 
	`Ârötf
(
°dîr
, "%d: Nÿöf‹m©i⁄ givíá·î m√m⁄ic\n", 
löío
);

376 
	`exô
(1);

379 *
p
++) {

382 i‡(*(
p
-1) == 'n') {

383 
sbôpos
 = 
°¨t
[
bôn
];

385 
sbôpos
 = 
°¨t
[
bôN
];

387 i‡(*
p
++ != '(') {

388 
	`Ârötf
(
°dîr
, "%d: missög quÆifõ∏f‹Ç()\n", 
löío
);

389 
	`exô
(1);

391 i‡(!
	`°∫cmp
(
p
, "Dªg", 4)Ë{ 
°y≥
 = 
dt_Dªg
;Ö =Ö+4;

392 } i‡(!
	`°∫cmp
(
p
, "Aªg", 4)Ë{ 
°y≥
 = 
dt_Aªg
;Ö =Ö+4;

393 } i‡(!
	`°∫cmp
(
p
, "Aöd", 4)Ë{ 
°y≥
 = 
dt_Aöd
;Ö =Ö+4;

394 } i‡(!
	`°∫cmp
(
p
, "Aöc", 4)Ë{ 
°y≥
 = 
dt_Aöc
;Ö =Ö+4;

395 } i‡(!
	`°∫cmp
(
p
, "Adec", 4)Ë{ 
°y≥
 = 
dt_Adec
;Ö =Ö+4;

396 } i‡(!
	`°∫cmp
(
p
, "Adis", 4)Ë{ 
°y≥
 = 
dt_Adis
;Ö =Ö+4;

397 } i‡(!
	`°∫cmp
(
p
, "Aidx", 4)Ë{ 
°y≥
 = 
dt_Aidx
;Ö =Ö+4;

398 } i‡(!
	`°∫cmp
(
p
, "AbsW", 4)Ë{ 
°y≥
 = 
dt_AbsW
;Ö =Ö+4;

399 } i‡(!
	`°∫cmp
(
p
, "AbsL", 4)Ë{ 
°y≥
 = 
dt_AbsL
;Ö =Ö+4;

400 } i‡(!
	`°∫cmp
(
p
, "Pdis", 4)Ë{ 
°y≥
 = 
dt_Pdis
;Ö =Ö+4;

401 } i‡(!
	`°∫cmp
(
p
, "Pidx", 4)Ë{ 
°y≥
 = 
dt_Pidx
;Ö =Ö+4;

403 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹Ç()\n", 
löío
);

404 
	`exô
(1);

406 i‡(*
p
++ != ')') {

407 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹Ç()\n", 
löío
);

408 
	`exô
(1);

412 *
p
++) {

413 'B': 
°y≥
 = 
dt_ImmB
; ;

414 'W': 
°y≥
 = 
dt_ImmW
; ;

415 'L': 
°y≥
 = 
dt_ImmL
; ;

416 'z': 
ex∑nd_s_immsize
 = 1; ;

418 i‡(
num
[
bôi
] != 8) {

419 
	`Ârötf
(
°dîr
, "%d: sig¿exãndÇŸ from 8 bôs\n", 
löío
);

420 
	`exô
(1);

422 
°y≥
 = 
dt_Imm8s
;

425 
num
[
bôi
]) {

426 3: 
°y≥
 = 
dt_Imm3
; ;

427 4: 
°y≥
 = 
dt_Imm4
; ;

428 8: 
°y≥
 = 
dt_Imm8
; ;

430 
	`Ârötf
(
°dîr
, "%d: unknown immediate data size or bad dimension\n",

431 
löío
);

432 
	`exô
(1);

434 
sbôpos
 = 
°¨t
[
bôi
];

437 
imm_nŸzîo
 = 1;

438 
num
[
bôi
]) {

439 3: 
°y≥
 = 
dt_Imm3
; ;

440 4: 
°y≥
 = 
dt_Imm4
; ;

441 8: 
°y≥
 = 
dt_Imm8
; ;

443 
	`Ârötf
(
°dîr
, "%d: unknown immediate data size or bad dimension\n",

444 
löío
);

445 
	`exô
(1);

447 
sbôpos
 = 
°¨t
[
bôi
];

450 
°y≥
 = 
dt_ImmV
;

451 
sbôpos
 = 
°¨t
[
bôv
];

454 
p
--;

455 i‡(
	`isdigô
(()*
p
)) {

456 
immvÆue
 = 
	`°πﬁ
(
p
, &p, 10);

457 
°y≥
 = 
dt_ImmS
;

459 
	`Ârötf
(
°dîr
, "%d: unknown source immediateÅype #%c\n",

460 
löío
, *(
p
-1));

461 
	`exô
(1);

466 
ex∑nd_s_ó_e
 = 1;

468 i‡(*
p
++ != '(') {

469 
	`Ârötf
(
°dîr
, "%d: missög quÆifõ∏f‹ EA\n", 
löío
);

470 
	`exô
(1);

473 
£âög
 = 1;

474 i‡(*
p
 == '-') {

475 
p
++;

476 
£âög
 = 0;

478 i‡(!
	`°∫cmp
(
p
, "*", 1)) {

479 
e
[
ó_Dªg
] =É[
ó_Aªg
] =É[
ó_Aöd
] =É[
ó_Aöc
] = 
£âög
;

480 
e
[
ó_Adec
] =É[
ó_Adis
] =É[
ó_Aidx
] =É[
ó_AbsW
] = 
£âög
;

481 
e
[
ó_AbsL
] =É[
ó_Pdis
] =É[
ó_Pidx
] =É[
ó_Imm
] = 
£âög
;

482 
p
 =Ö+1;

483 } i‡(!
	`°∫cmp
(
p
, "Regs", 4)) {

484 
e
[
ó_Dªg
] =É[
ó_Aªg
] = 
£âög
;

485 
p
 =Ö+4;

486 } i‡(!
	`°∫cmp
(
p
, "PC", 2)) {

487 
e
[
ó_Pdis
] =É[
ó_Pidx
] = 
£âög
;

488 
p
 =Ö+2;

489 } i‡(!
	`°∫cmp
(
p
, "Amod", 4)) {

490 
e
[
ó_Aöc
] =É[
ó_Adec
] = 
£âög
;

491 
p
 =Ö+4;

492 } i‡(!
	`°∫cmp
(
p
, "Dªg", 4)Ë{ 
e
[
ó_Dªg
] = 
£âög
;Ö =Ö+4;

493 } i‡(!
	`°∫cmp
(
p
, "Aªg", 4)Ë{ 
e
[
ó_Aªg
] = 
£âög
;Ö =Ö+4;

494 } i‡(!
	`°∫cmp
(
p
, "Aöd", 4)Ë{ 
e
[
ó_Aöd
] = 
£âög
;Ö =Ö+4;

495 } i‡(!
	`°∫cmp
(
p
, "Aöc", 4)Ë{ 
e
[
ó_Aöc
] = 
£âög
;Ö =Ö+4;

496 } i‡(!
	`°∫cmp
(
p
, "Adec", 4)Ë{ 
e
[
ó_Adec
] = 
£âög
;Ö =Ö+4;

497 } i‡(!
	`°∫cmp
(
p
, "Adis", 4)Ë{ 
e
[
ó_Adis
] = 
£âög
;Ö =Ö+4;

498 } i‡(!
	`°∫cmp
(
p
, "Aidx", 4)Ë{ 
e
[
ó_Aidx
] = 
£âög
;Ö =Ö+4;

499 } i‡(!
	`°∫cmp
(
p
, "AbsW", 4)Ë{ 
e
[
ó_AbsW
] = 
£âög
;Ö =Ö+4;

500 } i‡(!
	`°∫cmp
(
p
, "AbsL", 4)Ë{ 
e
[
ó_AbsL
] = 
£âög
;Ö =Ö+4;

501 } i‡(!
	`°∫cmp
(
p
, "Pdis", 4)Ë{ 
e
[
ó_Pdis
] = 
£âög
;Ö =Ö+4;

502 } i‡(!
	`°∫cmp
(
p
, "Pidx", 4)Ë{ 
e
[
ó_Pidx
] = 
£âög
;Ö =Ö+4;

503 } i‡(!
	`°∫cmp
(
p
, "Imm", 3)Ë{ 
e
[
ó_Imm
] = 
£âög
;Ö =Ö+3;

505 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

506 
	`exô
(1);

508 } *
p
++ == ',');

509 i‡(*(
p
-1) != ')') {

510 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

511 
	`exô
(1);

515 
	`Ârötf
(
°dîr
, "%d: didÇŸ undî°™d sour˚ o≥ønd\n", 
löío
);

516 
	`exô
(1);

518 i‡(*
p
 == ',') {

520 
p
++;

521 *
p
++) {

524 i‡(*(
p
-1) == 'n') {

525 
dbôpos
 = 
°¨t
[
bôn
];

527 
dbôpos
 = 
°¨t
[
bôN
];

529 i‡(*
p
++ != '(') {

530 
	`Ârötf
(
°dîr
, "%d: missög quÆifõ∏f‹Ç()\n", 
löío
);

531 
	`exô
(1);

533 i‡(!
	`°∫cmp
(
p
, "Dªg", 4)Ë{ 
dty≥
 = 
dt_Dªg
;Ö =Ö+4;

534 } i‡(!
	`°∫cmp
(
p
, "Aªg", 4)Ë{ 
dty≥
 = 
dt_Aªg
;Ö =Ö+4;

535 } i‡(!
	`°∫cmp
(
p
, "Aöd", 4)Ë{ 
dty≥
 = 
dt_Aöd
;Ö =Ö+4;

536 } i‡(!
	`°∫cmp
(
p
, "Aöc", 4)Ë{ 
dty≥
 = 
dt_Aöc
;Ö =Ö+4;

537 } i‡(!
	`°∫cmp
(
p
, "Adec", 4)Ë{ 
dty≥
 = 
dt_Adec
;Ö =Ö+4;

538 } i‡(!
	`°∫cmp
(
p
, "Adis", 4)Ë{ 
dty≥
 = 
dt_Adis
;Ö =Ö+4;

539 } i‡(!
	`°∫cmp
(
p
, "Aidx", 4)Ë{ 
dty≥
 = 
dt_Aidx
;Ö =Ö+4;

540 } i‡(!
	`°∫cmp
(
p
, "AbsW", 4)Ë{ 
dty≥
 = 
dt_AbsW
;Ö =Ö+4;

541 } i‡(!
	`°∫cmp
(
p
, "AbsL", 4)Ë{ 
dty≥
 = 
dt_AbsL
;Ö =Ö+4;

542 } i‡(!
	`°∫cmp
(
p
, "Pdis", 4)Ë{ 
dty≥
 = 
dt_Pdis
;Ö =Ö+4;

543 } i‡(!
	`°∫cmp
(
p
, "Pidx", 4)Ë{ 
dty≥
 = 
dt_Pidx
;Ö =Ö+4;

545 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹Ç()\n", 
löío
);

546 
	`exô
(1);

548 i‡(*
p
++ != ')') {

549 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹Ç()\n", 
löío
);

550 
	`exô
(1);

554 
ex∑nd_d_ó_e
 = 1;

556 i‡(*
p
++ != '(') {

557 
	`Ârötf
(
°dîr
, "%d: missög quÆifõ∏f‹ EA\n", 
löío
);

558 
	`exô
(1);

561 
£âög
 = 1;

562 i‡(*
p
 == '-') {

563 
p
++;

564 
£âög
 = 0;

566 i‡(!
	`°∫cmp
(
p
, "*", 1)) {

567 
e
[
ó_Dªg
] =É[
ó_Aªg
] =É[
ó_Aöd
] =É[
ó_Aöc
] = 
£âög
;

568 
e
[
ó_Adec
] =É[
ó_Adis
] =É[
ó_Aidx
] =É[
ó_AbsW
] = 
£âög
;

569 
e
[
ó_AbsL
] =É[
ó_Pdis
] =É[
ó_Pidx
] =É[
ó_Imm
] = 
£âög
;

570 
p
 =Ö+1;

571 } i‡(!
	`°∫cmp
(
p
, "Regs", 4)) {

572 
e
[
ó_Dªg
] =É[
ó_Aªg
] = 
£âög
;

573 
p
 =Ö+4;

574 } i‡(!
	`°∫cmp
(
p
, "PC", 2)) {

575 
e
[
ó_Pdis
] =É[
ó_Pidx
] = 
£âög
;

576 
p
 =Ö+2;

577 } i‡(!
	`°∫cmp
(
p
, "Amod", 4)) {

578 
e
[
ó_Aöc
] =É[
ó_Adec
] = 
£âög
;

579 
p
 =Ö+4;

580 } i‡(!
	`°∫cmp
(
p
, "Dªg", 4)Ë{ 
e
[
ó_Dªg
] = 
£âög
;Ö =Ö+4;

581 } i‡(!
	`°∫cmp
(
p
, "Aªg", 4)Ë{ 
e
[
ó_Aªg
] = 
£âög
;Ö =Ö+4;

582 } i‡(!
	`°∫cmp
(
p
, "Aöd", 4)Ë{ 
e
[
ó_Aöd
] = 
£âög
;Ö =Ö+4;

583 } i‡(!
	`°∫cmp
(
p
, "Aöc", 4)Ë{ 
e
[
ó_Aöc
] = 
£âög
;Ö =Ö+4;

584 } i‡(!
	`°∫cmp
(
p
, "Adec", 4)Ë{ 
e
[
ó_Adec
] = 
£âög
;Ö =Ö+4;

585 } i‡(!
	`°∫cmp
(
p
, "Adis", 4)Ë{ 
e
[
ó_Adis
] = 
£âög
;Ö =Ö+4;

586 } i‡(!
	`°∫cmp
(
p
, "Aidx", 4)Ë{ 
e
[
ó_Aidx
] = 
£âög
;Ö =Ö+4;

587 } i‡(!
	`°∫cmp
(
p
, "AbsW", 4)Ë{ 
e
[
ó_AbsW
] = 
£âög
;Ö =Ö+4;

588 } i‡(!
	`°∫cmp
(
p
, "AbsL", 4)Ë{ 
e
[
ó_AbsL
] = 
£âög
;Ö =Ö+4;

589 } i‡(!
	`°∫cmp
(
p
, "Pdis", 4)Ë{ 
e
[
ó_Pdis
] = 
£âög
;Ö =Ö+4;

590 } i‡(!
	`°∫cmp
(
p
, "Pidx", 4)Ë{ 
e
[
ó_Pidx
] = 
£âög
;Ö =Ö+4;

591 } i‡(!
	`°∫cmp
(
p
, "Imm", 3)Ë{ 
e
[
ó_Imm
] = 
£âög
;Ö =Ö+3;

593 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

594 
	`exô
(1);

596 } *
p
++ == ',');

597 i‡(*(
p
-1) != ')') {

598 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

599 
	`exô
(1);

603 
ex∑nd_d_ó_f
 = 1;

605 i‡(*
p
++ != '(') {

606 
	`Ârötf
(
°dîr
, "%d: missög quÆifõ∏f‹ EA\n", 
löío
);

607 
	`exô
(1);

610 
£âög
 = 1;

611 i‡(*
p
 == '-') {

612 
p
++;

613 
£âög
 = 0;

615 i‡(!
	`°∫cmp
(
p
, "*", 1)) {

616 
f
[
ó_Dªg
] = f[
ó_Aªg
] = f[
ó_Aöd
] = f[
ó_Aöc
] = 
£âög
;

617 
f
[
ó_Adec
] = f[
ó_Adis
] = f[
ó_Aidx
] = f[
ó_AbsW
] = 
£âög
;

618 
f
[
ó_AbsL
] = f[
ó_Pdis
] = f[
ó_Pidx
] = f[
ó_Imm
] = 
£âög
;

619 
p
 =Ö+1;

620 } i‡(!
	`°∫cmp
(
p
, "Regs", 4)) {

621 
f
[
ó_Dªg
] = f[
ó_Aªg
] = 
£âög
;

622 
p
 =Ö+4;

623 } i‡(!
	`°∫cmp
(
p
, "PC", 2)) {

624 
f
[
ó_Pdis
] = f[
ó_Pidx
] = 
£âög
;

625 
p
 =Ö+2;

626 } i‡(!
	`°∫cmp
(
p
, "Amod", 4)) {

627 
f
[
ó_Aöc
] = f[
ó_Adec
] = 
£âög
;

628 
p
 =Ö+4;

629 } i‡(!
	`°∫cmp
(
p
, "Dªg", 4)Ë{ 
f
[
ó_Dªg
] = 
£âög
;Ö =Ö+4;

630 } i‡(!
	`°∫cmp
(
p
, "Aªg", 4)Ë{ 
f
[
ó_Aªg
] = 
£âög
;Ö =Ö+4;

631 } i‡(!
	`°∫cmp
(
p
, "Aöd", 4)Ë{ 
f
[
ó_Aöd
] = 
£âög
;Ö =Ö+4;

632 } i‡(!
	`°∫cmp
(
p
, "Aöc", 4)Ë{ 
f
[
ó_Aöc
] = 
£âög
;Ö =Ö+4;

633 } i‡(!
	`°∫cmp
(
p
, "Adec", 4)Ë{ 
f
[
ó_Adec
] = 
£âög
;Ö =Ö+4;

634 } i‡(!
	`°∫cmp
(
p
, "Adis", 4)Ë{ 
f
[
ó_Adis
] = 
£âög
;Ö =Ö+4;

635 } i‡(!
	`°∫cmp
(
p
, "Aidx", 4)Ë{ 
f
[
ó_Aidx
] = 
£âög
;Ö =Ö+4;

636 } i‡(!
	`°∫cmp
(
p
, "AbsW", 4)Ë{ 
f
[
ó_AbsW
] = 
£âög
;Ö =Ö+4;

637 } i‡(!
	`°∫cmp
(
p
, "AbsL", 4)Ë{ 
f
[
ó_AbsL
] = 
£âög
;Ö =Ö+4;

638 } i‡(!
	`°∫cmp
(
p
, "Pdis", 4)Ë{ 
f
[
ó_Pdis
] = 
£âög
;Ö =Ö+4;

639 } i‡(!
	`°∫cmp
(
p
, "Pidx", 4)Ë{ 
f
[
ó_Pidx
] = 
£âög
;Ö =Ö+4;

640 } i‡(!
	`°∫cmp
(
p
, "Imm", 3)Ë{ 
f
[
ó_Imm
] = 
£âög
;Ö =Ö+3;

642 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

643 
	`exô
(1);

645 } *
p
++ == ',');

646 i‡(*(
p
-1) != ')') {

647 
	`Ârötf
(
°dîr
, "%d: unknow¿quÆifõ∏f‹ EA\n", 
löío
);

648 
	`exô
(1);

652 
	`Ârötf
(
°dîr
, "%d: didÇŸ undî°™d de° o≥ønd\n", 
löío
);

653 
	`exô
(1);

657 i‡(*
p
 != '\0') {

658 
	`Ârötf
(
°dîr
, "%d:Çÿíd-of-löêfoundáàíd o‡löe\n", 
löío
);

659 
	`exô
(1);

664 i‡(
ex∑nd_d_ó_e
) {

667 i‡(
e
[
ó_Imm
] && 
m√m⁄ic_num
 !
i_BTST
 ) {

668 
	`Ârötf
(
°dîr
, "%d: Immedüã d©®nŸáŒowedá†de°\n", 
löío
);

669 
	`exô
(1);

673 i‡(
ex∑nd_d_ó_f
) {

674 i‡(
f
[
ó_Imm
]) {

675 
	`Ârötf
(
°dîr
, "%d: Immedüã d©®nŸáŒowedá†de°\n", 
löío
);

676 
	`exô
(1);

680 i‡((
num
[
bôe
] && !num[
bôE
]) || (num[bitE] && !num[bite])) {

681 
	`Ârötf
(
°dîr
, "%d: Thîêmu° bêbŸhÉìánd EEE\n", 
löío
);

682 
	`exô
(1);

685 i‡((
num
[
bôf
] && !num[
bôF
]) || (num[bitF] && !num[bitf])) {

686 
	`Ârötf
(
°dîr
, "%d: Thîêmu° bêbŸh ff‡™d FFF\n", 
löío
);

687 
	`exô
(1);

690 i‡(
num
[
bôf
] && !
ex∑nd_d_ó_f
) {

691 
	`Ârötf
(
°dîr
, "%d: EA 'f' found buànŸ u£d i¿des¸ùti⁄!\n", 
löío
);

692 
	`exô
(1);

695 i‡(
num
[
bôe
] && 
ex∑nd_d_ó_e
 && 
ex∑nd_s_ó_e
) {

696 
	`Ârötf
(
°dîr
, "%d: EA u£dá†bŸh sour˚ánd de°ö©i⁄!\n", 
löío
);

697 
	`exô
(1);

709 
t_size
 
size
;

710 
t_d©©y≥
 
ó_e
;

711 
t_d©©y≥
 
ó_f
;

712 
cc
;

713 
w‹dÀn
, 
ty≥
;

714 
idx
;

718 
size
 = 
isize
;

719 (
size
 =
isize
Ë|| (
num
[
bôz
] && (sizê<
sz_l⁄g
)); size++) {

723 
ó_e
 = 
ó_Dªg
;

724 (
ó_e
 =
ó_Dªg
Ë|| (
num
[
bôe
] && (ó_ê<
ó_Imm
));Éa_e++) {

728 
ó_f
 = 
ó_Dªg
;

729 (
ó_f
 =
ó_Dªg
Ë|| (
num
[
bôf
] && (ó_‡<
ó_Imm
));Éa_f++) {

731 
cc
 = 0; (c¯=0Ë|| (
num
[
bôc
] && (cc < 16)); cc++) {

733 i‡(
cc
 == 1)

736 i‡((
size
 =
sz_n⁄e
Ë&& 
num
[
bôz
])

741 i‡(
num
[
bôz
]) {

743 
mask
 |(3<<
°¨t
[
bôz
]);

745 
bôs
 &~(3<<
°¨t
[
bôz
]);

747 
size
) {

748 
sz_byã
: ;

749 
sz_w‹d
: 
bôs
 |(1<<
°¨t
[
bôz
]); ;

750 
sz_l⁄g
: 
bôs
 |(2<<
°¨t
[
bôz
]); ;

752 
	`¥ötf
("%d: InvÆid size\n", 
löío
);

755 i‡(
ex∑nd_s_immsize
) {

757 
size
) {

758 
sz_byã
: 
°y≥
 = 
dt_ImmB
; ;

759 
sz_w‹d
: 
°y≥
 = 
dt_ImmW
; ;

760 
sz_l⁄g
: 
°y≥
 = 
dt_ImmL
; ;

762 
	`¥ötf
("%d: InvÆid size\n", 
löío
);

763 
	`exô
(1);

770 i‡(
num
[
bôc
]) {

772 
mask
 |(15<<
°¨t
[
bôc
]);

774 
bôs
 &~(15<<
°¨t
[
bôc
]);

776 
bôs
 |
cc
<<
°¨t
[
bôc
];

781 i‡(
num
[
bôe
] && 
ex∑nd_s_ó_e
) {

782 i‡(!
e
[
ó_e
]) {

787 
mask
 |(7<<
°¨t
[
bôe
]);

788 
mask
 &~(7<<
°¨t
[
bôE
]);

789 
bôs
 &~(7<<
°¨t
[
bôe
]);

790 
bôs
 &~(7<<
°¨t
[
bôE
]);

791 i‡(
ó_e
 <
ó_Aidx
) {

793 
bôs
 |(
ó_e
<<
°¨t
[
bôe
]);

794 
ó_e
) {

795 
ó_Dªg
: 
°y≥
 = 
dt_Dªg
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

796 
ó_Aªg
: 
°y≥
 = 
dt_Aªg
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

797 
ó_Aöd
: 
°y≥
 = 
dt_Aöd
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

798 
ó_Aöc
: 
°y≥
 = 
dt_Aöc
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

799 
ó_Adec
: 
°y≥
 = 
dt_Adec
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

800 
ó_Adis
: 
°y≥
 = 
dt_Adis
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

801 
ó_Aidx
: 
°y≥
 = 
dt_Aidx
; 
sbôpos
 = 
°¨t
[
bôE
]; ;

802 : 
	`ab‹t
();

805 
bôs
 |(7<<
°¨t
[
bôe
]);

806 
mask
 |(7<<
°¨t
[
bôE
]);

807 
ó_e
) {

808 
ó_AbsW
: 
°y≥
 = 
dt_AbsW
; 
bôs
 |(0<<
°¨t
[
bôE
]); ;

809 
ó_AbsL
: 
°y≥
 = 
dt_AbsL
; 
bôs
 |(1<<
°¨t
[
bôE
]); ;

810 
ó_Pdis
: 
°y≥
 = 
dt_Pdis
; 
bôs
 |(2<<
°¨t
[
bôE
]); ;

811 
ó_Pidx
: 
°y≥
 = 
dt_Pidx
; 
bôs
 |(3<<
°¨t
[
bôE
]); ;

812 
ó_Imm
:

813 
bôs
 |(4<<
°¨t
[
bôE
]);

814 
size
) {

815 
sz_byã
: 
°y≥
 = 
dt_ImmB
; ;

816 
sz_w‹d
: 
°y≥
 = 
dt_ImmW
; ;

817 
sz_l⁄g
: 
°y≥
 = 
dt_ImmL
; ;

819 
	`¥ötf
("%d: InvÆid size\n", 
löío
);

820 
	`exô
(1);

823 : 
	`ab‹t
();

830 i‡(
num
[
bôe
] && 
ex∑nd_d_ó_e
) {

831 i‡(!
e
[
ó_e
]) {

836 
mask
 |(7<<
°¨t
[
bôe
]);

837 
mask
 &~(7<<
°¨t
[
bôE
]);

838 
bôs
 &~(7<<
°¨t
[
bôe
]);

839 
bôs
 &~(7<<
°¨t
[
bôE
]);

840 i‡(
ó_e
 <
ó_Aidx
) {

842 
bôs
 |(
ó_e
<<
°¨t
[
bôe
]);

843 
ó_e
) {

844 
ó_Dªg
: 
dty≥
 = 
dt_Dªg
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

845 
ó_Aªg
: 
dty≥
 = 
dt_Aªg
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

846 
ó_Aöd
: 
dty≥
 = 
dt_Aöd
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

847 
ó_Aöc
: 
dty≥
 = 
dt_Aöc
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

848 
ó_Adec
: 
dty≥
 = 
dt_Adec
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

849 
ó_Adis
: 
dty≥
 = 
dt_Adis
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

850 
ó_Aidx
: 
dty≥
 = 
dt_Aidx
; 
dbôpos
 = 
°¨t
[
bôE
]; ;

851 : 
	`ab‹t
();

854 
bôs
 |(7<<
°¨t
[
bôe
]);

855 
mask
 |(7<<
°¨t
[
bôE
]);

856 
ó_e
) {

857 
ó_AbsW
: 
dty≥
 = 
dt_AbsW
; 
bôs
 |(0<<
°¨t
[
bôE
]); ;

858 
ó_AbsL
: 
dty≥
 = 
dt_AbsL
; 
bôs
 |(1<<
°¨t
[
bôE
]); ;

859 
ó_Pdis
: 
dty≥
 = 
dt_Pdis
; 
bôs
 |(2<<
°¨t
[
bôE
]); ;

860 
ó_Pidx
: 
dty≥
 = 
dt_Pidx
; 
bôs
 |(3<<
°¨t
[
bôE
]); ;

861 
ó_Imm
:

862 
bôs
 |(4<<
°¨t
[
bôE
]);

863 
size
) {

864 
sz_byã
: 
dty≥
 = 
dt_ImmB
; ;

865 
sz_w‹d
: 
dty≥
 = 
dt_ImmW
; ;

866 
sz_l⁄g
: 
dty≥
 = 
dt_ImmL
; ;

868 
	`¥ötf
("%d: InvÆid size\n", 
löío
);

869 
	`exô
(1);

872 : 
	`ab‹t
();

879 i‡(
num
[
bôf
] && 
ex∑nd_d_ó_f
) {

880 i‡(!
f
[
ó_f
]) {

885 
mask
 |(7<<
°¨t
[
bôf
]);

886 
mask
 &~(7<<
°¨t
[
bôF
]);

887 
bôs
 &~(7<<
°¨t
[
bôf
]);

888 
bôs
 &~(7<<
°¨t
[
bôF
]);

889 i‡(
ó_f
 <
ó_Aidx
) {

891 
bôs
 |(
ó_f
<<
°¨t
[
bôf
]);

892 
ó_f
) {

893 
ó_Dªg
: 
dty≥
 = 
dt_Dªg
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

894 
ó_Aªg
: 
dty≥
 = 
dt_Aªg
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

895 
ó_Aöd
: 
dty≥
 = 
dt_Aöd
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

896 
ó_Aöc
: 
dty≥
 = 
dt_Aöc
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

897 
ó_Adec
: 
dty≥
 = 
dt_Adec
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

898 
ó_Adis
: 
dty≥
 = 
dt_Adis
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

899 
ó_Aidx
: 
dty≥
 = 
dt_Aidx
; 
dbôpos
 = 
°¨t
[
bôF
]; ;

900 : 
	`ab‹t
();

903 
bôs
 |(7<<
°¨t
[
bôf
]);

904 
mask
 |(7<<
°¨t
[
bôF
]);

905 
ó_f
) {

906 
ó_AbsW
: 
dty≥
 = 
dt_AbsW
; 
bôs
 |(0<<
°¨t
[
bôF
]); ;

907 
ó_AbsL
: 
dty≥
 = 
dt_AbsL
; 
bôs
 |(1<<
°¨t
[
bôF
]); ;

908 
ó_Pdis
: 
dty≥
 = 
dt_Pdis
; 
bôs
 |(2<<
°¨t
[
bôF
]); ;

909 
ó_Pidx
: 
dty≥
 = 
dt_Pidx
; 
bôs
 |(3<<
°¨t
[
bôF
]); ;

910 
ó_Imm
:

911 
bôs
 |(4<<
°¨t
[
bôF
]);

912 
size
) {

913 
sz_byã
: 
dty≥
 = 
dt_ImmB
; ;

914 
sz_w‹d
: 
dty≥
 = 
dt_ImmW
; ;

915 
sz_l⁄g
: 
dty≥
 = 
dt_ImmL
; ;

917 
	`¥ötf
("%d: InvÆid size\n", 
löío
);

918 
	`exô
(1);

921 : 
	`ab‹t
();

926 
w‹dÀn
 = 1;

927 
ty≥
 = 0;Åype < 2;Åype++) {

928 
ty≥
 ? 
°y≥
 : 
dty≥
) {

929 
dt_IŒ
:

930 
dt_Dªg
:

931 
dt_Aªg
:

932 
dt_Aöd
:

933 
dt_Aöc
:

934 
dt_Adec
:

936 
dt_Adis
:

937 
dt_Aidx
:

938 
dt_AbsW
:

939 
dt_Pdis
:

940 
dt_Pidx
:

941 
dt_ImmB
:

942 
dt_ImmW
:

943 
w‹dÀn
++;

945 
dt_AbsL
:

946 
dt_ImmL
:

947 
w‹dÀn
+= 2;

949 
dt_ImmS
:

950 
dt_Imm3
:

951 
dt_Imm4
:

952 
dt_Imm8
:

953 
dt_Imm8s
:

954 
dt_ImmV
:

957 
	`¥ötf
("%d: InvÆidÅy≥\n", 
löío
);

958 
	`exô
(1);

965 
˛ocks
 = -1;

967 
m√m⁄ic_num
) {

968 
i_EOR
:

969 i‡(
dty≥
 =
dt_Dªg
) {

970 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 8;

971 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

972 } i‡(
°y≥
 =
dt_Dªg
) {

973 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 12;

974 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

976 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 20 : 12;

977 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

980 
i_OR
:

981 
i_AND
:

982 i‡(
dty≥
 =
dt_Dªg
) {

983 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 
	`˛ocks_6‹8
(
°y≥
);

984 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

985 } i‡(
°y≥
 =
dt_Dªg
) {

986 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 12;

987 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

989 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 20 : 12;

990 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

993 
i_ADDA
:

994 
i_SUBA
:

995 i‡(
dty≥
 =
dt_Aªg
) {

996 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 
	`˛ocks_6‹8
(
°y≥
);

997 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

999 
	`¥ötf
("%d: clock cou¡ invÆidÅy≥\n", 
löío
);

1000 
	`exô
(1);

1003 
i_ADD
:

1004 
i_SUB
:

1005 i‡(
dty≥
 =
dt_Dªg
) {

1006 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 
	`˛ocks_6‹8
(
°y≥
);

1007 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1008 } i‡(
°y≥
 =
dt_Dªg
) {

1009 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 12;

1010 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

1012 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 20 : 12;

1013 
˛ocks
+
	`˛ocks_óˇlc
(
dty≥
, 
size
);

1016 
i_CMP
:

1017 
i_CMPA
:

1018 i‡(
dty≥
 =
dt_Aªg
) {

1019 
˛ocks
 = 6;

1020 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1021 } i‡(
dty≥
 =
dt_Dªg
) {

1022 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 6;

1023 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1025 
˛ocks
 = 12 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
) +

1026 
	`˛ocks_óˇlc
(
dty≥
, 
size
);

1029 
i_DIVS
:

1030 
˛ocks
 = 158 - 8 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1032 
i_DIVU
:

1033 
˛ocks
 = 140 - 8 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1035 
i_MULS
:

1036 
˛ocks
 = 38 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1038 
i_MULU
:

1039 
˛ocks
 = 38 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1041 
i_MOVE
:

1042 
i_MOVEA
:

1043 i‡((
idx
 = 
	`˛ocks_ty≥toödex
(
dty≥
)) == -1) {

1044 
	`¥ötf
("%d: clock cou¡ invÆid MOVEÅy≥\n", 
löío
);

1045 
	`exô
(1);

1047 
˛ocks
 = 
˛ocks_movëabÀ
[
	`˛ocks_ty≥toödex
(
°y≥
)*9+
idx
];

1049 
i_CLR
:

1050 
i_NEG
:

1051 
i_NEGX
:

1052 
i_NOT
:

1053 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1054 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 6;

1056 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 12;

1057 
˛ocks
+
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1060 
i_NBCD
:

1061 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1062 
˛ocks
 = 6;

1064 
˛ocks
 = 8 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1067 
i_Scc
:

1068 
i_SF
:

1069 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1070 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 6;

1072 
˛ocks
 = 8 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1075 
i_TAS
:

1076 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1077 
˛ocks
 = 4;

1079 
˛ocks
 = 10 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1082 
i_TST
:

1083 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1084 
˛ocks
 = 4;

1086 
˛ocks
 = 4 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1089 
i_ASR
:

1090 
i_ASL
:

1091 
i_LSR
:

1092 
i_LSL
:

1093 
i_ROR
:

1094 
i_ROL
:

1095 
i_ROXR
:

1096 
i_ROXL
:

1097 i‡(
°y≥
 =
dt_Dªg
 || sty≥ =
dt_Aªg
) {

1098 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 8 : 10;

1100 
˛ocks
 = 8 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1103 
i_BCHG
:

1104 
i_BSET
:

1105 i‡(
°y≥
 =
dt_Dªg
) {

1106 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 8 : 8 +

1107 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1109 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 14 : 12 +

1110 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1112 
i_BCLR
:

1113 i‡(
°y≥
 =
dt_Dªg
) {

1114 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 10 : 8 +

1115 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1117 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 14 : 12 +

1118 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1121 
i_BTST
:

1122 i‡(
°y≥
 =
dt_Dªg
) {

1123 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 6 : 4 +

1124 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1126 
˛ocks
 = (
dty≥
 =
dt_Dªg
) ? 10 : 8 +

1127 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1130 
i_JMP
:

1131 
°y≥
) {

1132 
dt_Aöd
: 
˛ocks
 = 8; ;

1133 
dt_Adis
: 
˛ocks
 = 10; ;

1134 
dt_Aidx
: 
˛ocks
 = 14; ;

1135 
dt_AbsW
: 
˛ocks
 = 10; ;

1136 
dt_AbsL
: 
˛ocks
 = 12; ;

1137 
dt_Pdis
: 
˛ocks
 = 10; ;

1138 
dt_Pidx
: 
˛ocks
 = 14; ;

1140 
	`¥ötf
("%d: clock cou¡ invÆidÅy≥\n", 
löío
);

1141 
	`exô
(1);

1144 
i_JSR
:

1145 
°y≥
) {

1146 
dt_Aöd
: 
˛ocks
 = 16; ;

1147 
dt_Adis
: 
˛ocks
 = 18; ;

1148 
dt_Aidx
: 
˛ocks
 = 22; ;

1149 
dt_AbsW
: 
˛ocks
 = 18; ;

1150 
dt_AbsL
: 
˛ocks
 = 20; ;

1151 
dt_Pdis
: 
˛ocks
 = 18; ;

1152 
dt_Pidx
: 
˛ocks
 = 22; ;

1154 
	`¥ötf
("%d: clock cou¡ invÆidÅy≥\n", 
löío
);

1155 
	`exô
(1);

1158 
i_LEA
:

1159 
°y≥
) {

1160 
dt_Aöd
: 
˛ocks
 = 4; ;

1161 
dt_Adis
: 
˛ocks
 = 8; ;

1162 
dt_Aidx
: 
˛ocks
 = 12; ;

1163 
dt_AbsW
: 
˛ocks
 = 8; ;

1164 
dt_AbsL
: 
˛ocks
 = 12; ;

1165 
dt_Pdis
: 
˛ocks
 = 8; ;

1166 
dt_Pidx
: 
˛ocks
 = 12; ;

1168 
	`¥ötf
("%d: clock cou¡ invÆidÅy≥\n", 
löío
);

1169 
	`exô
(1);

1172 
i_PEA
:

1173 
°y≥
) {

1174 
dt_Aöd
: 
˛ocks
 = 12; ;

1175 
dt_Adis
: 
˛ocks
 = 16; ;

1176 
dt_Aidx
: 
˛ocks
 = 20; ;

1177 
dt_AbsW
: 
˛ocks
 = 16; ;

1178 
dt_AbsL
: 
˛ocks
 = 20; ;

1179 
dt_Pdis
: 
˛ocks
 = 16; ;

1180 
dt_Pidx
: 
˛ocks
 = 20; ;

1182 
	`¥ötf
("%d: clock cou¡ invÆidÅy≥\n", 
löío
);

1183 
	`exô
(1);

1186 
i_MOVEMMR
:

1187 
˛ocks
 = 20;

1189 
i_MOVEMRM
:

1190 
˛ocks
 = 16;

1192 
i_SUBX
:

1193 
i_ADDX
:

1194 i‡(
°y≥
 =
dt_Dªg
) {

1195 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 4 : 8;

1197 
˛ocks
 = 
size
 !
sz_l⁄g
 ? 18 : 30;

1200 
i_ABCD
:

1201 
i_SBCD
:

1202 
˛ocks
 = (
°y≥
 =
dt_Dªg
) ? 6 : 18;

1204 
i_ORSR
:

1205 
i_ANDSR
:

1206 
i_EORSR
:

1207 
˛ocks
 = 20;

1209 
i_CHK
:

1210 
˛ocks
 = 10 + 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1212 
i_EXG
:

1213 
˛ocks
 = 6;

1215 
i_EXT
:

1216 
˛ocks
 = 4;

1218 
i_LINK
:

1219 
˛ocks
 = 16;

1221 
i_MOVEFSR
:

1222 
˛ocks
 = (
°y≥
 =
dt_Dªg
Ë? 6 : 8 + 
	`˛ocks_óˇlc
(°y≥, 
size
);

1224 
i_MOVETSR
:

1225 
˛ocks
 = (
°y≥
 =
dt_Dªg
) ? 12 : 12 +

1226 
	`˛ocks_óˇlc
(
°y≥
, 
size
);

1228 
i_MOVETUSP
:

1229 
i_MOVEFUSP
:

1230 
˛ocks
 = 4;

1232 
i_NOP
:

1233 
˛ocks
 = 4;

1235 
i_RESET
:

1236 
˛ocks
 = 132;

1238 
i_RTE
:

1239 
i_RTR
:

1240 
˛ocks
 = 20;

1242 
i_RTS
:

1243 
˛ocks
 = 20;

1245 
i_STOP
:

1246 
˛ocks
 = 4;

1248 
i_SWAP
:

1249 
˛ocks
 = 4;

1251 
i_TRAPV
:

1252 
˛ocks
 = 4;

1254 
i_TRAP
:

1255 
˛ocks
 = 4;

1257 
i_UNLK
:

1258 
˛ocks
 = 12;

1260 
i_DBcc
:

1261 
i_DBRA
:

1262 
i_Bcc
:

1263 
˛ocks
 = 10;

1265 
i_BSR
:

1266 
˛ocks
 = 18;

1268 
i_MOVEPRM
:

1269 
i_MOVEPMR
:

1270 
˛ocks
 = (
size
 !
sz_l⁄g
) ? 16 : 24;

1272 
i_ILLG
:

1273 
˛ocks
 = 0;

1275 
i_LINE10
:

1276 
i_LINE15
:

1277 
˛ocks
 = 4;

1280 
	`¥ötf
("%d: InvÆid m√m⁄i¯ty≥\n", 
löío
);

1281 
	`exô
(1);

1284 i‡(
˛ocks
 == -1) {

1285 
	`¥ötf
("%d: Clock†nŸ found\n", 
löío
);

1286 
	`exô
(1);

1291 
	`Ârötf
(
outiibs
, " { 0x%x, 0x%x, %d, { %d, %d, %d, %d, %d }, ",

1292 
mask
, 
bôs
, 
m√m⁄ic_num
, 
¥iv
, 
ídblk
, 
imm_nŸzîo
, 
u£d
,

1293 
£t
);

1294 
	`Ârötf
(
outiibs
, "%d, %d, %d, %d, %d, %d, %d, %d, %d, %d},\n",

1295 
size
, 
°y≥
, 
dty≥
, 
sbôpos
, 
dbôpos
, 
immvÆue
,

1296 
cc
, 
tŸÆ
, 
w‹dÀn
, 
˛ocks
);

1297 
	`Ârötf
(
outiibs
, "%60s/* %†*/\n", "", 
m√m⁄ic
);

1298 i‡(
£t
 == 0) {

1299 
	`Ârötf
(
outfuncs
, " cpu_›_%ü, /* %†*/\n", 
tŸÆ
, 
m√m⁄ic
);

1300 
	`Ârötf
(
outfuncs
, " cpu_›_%ü, /* %†*/\n", 
tŸÆ
, 
m√m⁄ic
);

1301 
	`Ârötf
(
ouçrŸo
, "extern void cpu_op_%ia("

1302 "t_ù¯*ùc); /* %†*/\n", 
tŸÆ
, 
m√m⁄ic
);

1304 
	`Ârötf
(
outfuncs
, " cpu_›_%ü, /* %†-Ç‹mÆ */\n", 
tŸÆ
,

1305 
m√m⁄ic
);

1306 
	`Ârötf
(
outfuncs
, " cpu_›_%ib, /* %†-ÇÿÊag†*/\n", 
tŸÆ
,

1307 
m√m⁄ic
);

1308 
	`Ârötf
(
ouçrŸo
, "extern void cpu_op_%ia("

1309 "t_ù¯*ùc); /* %†*/\n", 
tŸÆ
, 
m√m⁄ic
);

1310 
	`Ârötf
(
ouçrŸo
, "extern void cpu_op_%ib("

1311 "t_ù¯*ùc); /* %†*/\n", 
tŸÆ
, 
m√m⁄ic
);

1315 
tŸÆ
++;

1322 
	}
}

1324 
	g˛ocks_movëabÀ
[] = {

1339 
	$˛ocks_ty≥toödex
(
t_d©©y≥
 
ty≥
)

1341 
ty≥
) {

1342 
dt_Dªg
:  0;

1343 
dt_Aªg
:  1;

1344 
dt_Aöd
:  2;

1345 
dt_Aöc
:  3;

1346 
dt_Adec
:  4;

1347 
dt_Adis
:  5;

1348 
dt_Aidx
:  6;

1349 
dt_AbsW
:  7;

1350 
dt_AbsL
:  8;

1351 
dt_Pdis
:  9;

1352 
dt_Pidx
:  10;

1353 
dt_ImmB
:

1354 
dt_ImmW
:

1355 
dt_ImmL
:

1356 
dt_ImmS
:

1357 
dt_Imm3
:

1358 
dt_Imm4
:

1359 
dt_Imm8
:

1360 
dt_Imm8s
:  11;

1364 
	`¥ötf
("InvalidÅype for clocks\n");

1365 
	`exô
(1);

1366 
	}
}

1368 
	$˛ocks_óˇlc
(
t_d©©y≥
 
ty≥
, 
t_size
 
size
)

1370 
ty≥
) {

1371 
dt_Dªg
:

1372 
dt_Aªg
:  0;

1373 
dt_Aöd
:  (
size
 !
sz_l⁄g
) ? 4 : 8;

1374 
dt_Aöc
:  (
size
 !
sz_l⁄g
) ? 6 : 10;

1375 
dt_Adec
:  (
size
 !
sz_l⁄g
) ? 6 : 10;

1376 
dt_Adis
:  (
size
 !
sz_l⁄g
) ? 8 : 12;

1377 
dt_Aidx
:  (
size
 !
sz_l⁄g
) ? 10 : 14;

1378 
dt_AbsW
:  (
size
 !
sz_l⁄g
) ? 8 : 12;

1379 
dt_AbsL
:  (
size
 !
sz_l⁄g
) ? 12 : 16;

1380 
dt_Pdis
:  (
size
 !
sz_l⁄g
) ? 8 : 12;

1381 
dt_Pidx
:  (
size
 !
sz_l⁄g
) ? 10 : 14;

1382 
dt_ImmB
:

1383 
dt_ImmW
:

1384 
dt_ImmL
:  (
size
 !
sz_l⁄g
) ? 4 : 8;

1385 
dt_ImmS
:

1386 
dt_Imm3
:

1387 
dt_Imm4
:

1388 
dt_Imm8
:

1389 
dt_Imm8s
:

1390 
dt_ImmV
:

1391 
dt_IŒ
:  0;

1393 
	`¥ötf
("InvalidÅype for clocks\n");

1394 
	`exô
(1);

1395 
	}
}

1397 
	$˛ocks_6‹8
(
t_d©©y≥
 
ty≥
)

1399 
ty≥_imm
 = (
ty≥
 =
dt_ImmB
Ë|| (ty≥ =
dt_ImmW
) ||

1400 (
ty≥
 =
dt_ImmL
Ë|| (ty≥ =
dt_Imm3
Ë|| (ty≥ =
dt_Imm4
) ||

1401 (
ty≥
 =
dt_Imm8
Ë|| (ty≥ =
dt_Imm8s
Ë|| (ty≥ =
dt_ImmS
);

1403  (
ty≥_imm
 || 
ty≥
 =
dt_Dªg
 ||Åy≥ =
dt_Aªg
) ? 8 : 6;

1404 
	}
}

	@src/generator68k/diss68k.c

3 
	~<°dio.h
>

4 
	~<°rög.h
>

5 
	~<˘y≥.h
>

7 
	~"gíî©‹.h
"

8 
	~"˝u68k.h
"

12 
diss68k_gë›î™d
(*
ãxt
, 
t_ùc
 * 
ùc
, 
t_iib
 * 
iib
, 
t_ty≥
 
ty≥
);

16 
	$diss68k_gëãxt
(
t_ùc
 * 
ùc
, *
ãxt
)

18 
t_iib
 *
iib
;

19 *
p
;

20 c⁄° *
c
;

21 
§c
[64], 
d°
[64];

22 
m√m⁄ic
[64];

24 *
ãxt
 = '\0';

26 
iib
 = 
˝u68k_iibèbÀ
[
ùc
->
›code
];

28 i‡(
iib
 =
NULL
)

31 
	`diss68k_gë›î™d
(
d°
, 
ùc
, 
iib
, 
ç_d°
);

32 
	`diss68k_gë›î™d
(
§c
, 
ùc
, 
iib
, 
ç_§c
);

34 i‡((
iib
->
m√m⁄ic
 =
i_Bcc
Ë|| (iib->m√m⁄i¯=
i_BSR
) ||

35 (
iib
->
m√m⁄ic
 =
i_DBcc
)) {

36 
	`•rötf
(
§c
, "$%08x", ()
ùc
->src);

39 
	`°r˝y
(
m√m⁄ic
, 
m√m⁄ic_èbÀ
[
iib
->m√m⁄ic].
«me
);

41 i‡((
p
 = 
	`°r°r
(
m√m⁄ic
, "cc")Ë!
NULL
) {

42 i‡(
iib
->
m√m⁄ic
 =
i_Bcc
 && iib->
cc
 == 0) {

43 
p
[0] = 'R';

44 
p
[1] = 'A';

46 
c
 = 
c⁄dôi⁄_èbÀ
[
iib
->
cc
];

47 
	`°r˝y
(
p
, 
c
);

51 
iib
->
size
) {

52 
sz_byã
:

53 
	`°rˇt
(
m√m⁄ic
, ".B");

55 
sz_w‹d
:

56 
	`°rˇt
(
m√m⁄ic
, ".W");

58 
sz_l⁄g
:

59 
	`°rˇt
(
m√m⁄ic
, ".L");

65 
	`•rötf
(
ãxt
, "%-10†%s%s%†%d", 
m√m⁄ic
, 
§c
, 
d°
[0] ? "," : "", d°,
iib
->
fun˙um
);

68 
	}
}

70 
	$diss68k_gë›î™d
(*
ãxt
, 
t_ùc
 * 
ùc
, 
t_iib
 * 
iib
, 
t_ty≥
 
ty≥
)

72 
bôpos
;

73 
uöt32
 
vÆ
;

75 i‡(
ty≥
 =
ç_§c
) {

76 
bôpos
 = 
iib
->
sbôpos
;

77 
vÆ
 = 
ùc
->
§c
;

79 
bôpos
 = 
iib
->
dbôpos
;

80 
vÆ
 = 
ùc
->
d°
;

83 
ty≥
 =
ç_§c
 ? 
iib
->
°y≥
 : iib->
dty≥
) {

84 
dt_Dªg
:

85 
	`•rötf
(
ãxt
, "D%d", (
ùc
->
›code
 >> 
bôpos
) & 7);

87 
dt_Aªg
:

88 
	`•rötf
(
ãxt
, "A%d", (
ùc
->
›code
 >> 
bôpos
) & 7);

90 
dt_Aöd
:

91 
	`•rötf
(
ãxt
, "(A%d)", (
ùc
->
›code
 >> 
bôpos
) & 7);

93 
dt_Aöc
:

94 
	`•rötf
(
ãxt
, "(A%d)+", (
ùc
->
›code
 >> 
bôpos
) & 7);

96 
dt_Adec
:

97 
	`•rötf
(
ãxt
, "-(A%d)", (
ùc
->
›code
 >> 
bôpos
) & 7);

99 
dt_Adis
:

100 
	`•rötf
(
ãxt
, "$%04x(A%d)", (
uöt16
)
vÆ
, (
ùc
->
›code
 >> 
bôpos
) & 7);

102 
dt_Aidx
:

103 
	`•rötf
(
ãxt
, "$%02x(A%d,Rx.X)", (
uöt8
)
vÆ
, (
ùc
->
›code
 >> 
bôpos
) & 7);

105 
dt_AbsW
:

106 
	`•rötf
(
ãxt
, "$%08x", ()
vÆ
);

108 
dt_AbsL
:

109 
	`•rötf
(
ãxt
, "$%08x", ()
vÆ
);

111 
dt_Pdis
:

112 
	`•rötf
(
ãxt
, "$%08x’c)", ()
vÆ
);

114 
dt_Pidx
:

115 
	`•rötf
(
ãxt
, "$%08x’c, Rx.X)", ()
vÆ
);

117 
dt_ImmB
:

118 
	`•rötf
(
ãxt
, "#$%02x", ()
vÆ
);

120 
dt_ImmW
:

121 
	`•rötf
(
ãxt
, "#$%04x", ()
vÆ
);

123 
dt_ImmL
:

124 
	`•rötf
(
ãxt
, "#$%08x", ()
vÆ
);

126 
dt_ImmS
:

127 
	`•rötf
(
ãxt
, "#%d", 
iib
->
immvÆue
);

129 
dt_Imm3
:

130 
	`•rötf
(
ãxt
, "#%d", (
ùc
->
›code
 >> 
bôpos
) & 7);

132 
dt_Imm4
:

133 
	`•rötf
(
ãxt
, "#%d", (
ùc
->
›code
 >> 
bôpos
) & 15);

135 
dt_Imm8
:

136 
	`•rötf
(
ãxt
, "#%d", (
ùc
->
›code
 >> 
bôpos
) & 255);

138 
dt_Imm8s
:

139 
	`•rötf
(
ãxt
, "#%d", (sig√d )
vÆ
);

142 
	`°r˝y
(
ãxt
, "");

145 
	}
}

147 
	$diss68k_gëdum∂öe
(
uöt32
 
addr68k
, 
uöt8
 *
addr
, *
dum∂öe
)

149 
t_ùc
 
ùc
;

150 
t_iib
 *
iibp
 = 
˝u68k_iibèbÀ
[
	`LOCENDIAN16
(*(
uöt16
 *)
addr
)];

151 
w‹ds
, 
i
;

152 
dis¶öe
[64], *
p
;

154 i‡(
addr68k
 < 256) {

155 
	`•rötf
(
dis¶öe
, "dc.»$%08x", ()
	`LOCENDIAN32
(*(
uöt32
 *)
addr
));

156 
w‹ds
 = 2;

158 
	`˝u68k_ùc
(
addr68k
, 
addr
, 
iibp
, &
ùc
);

159 i‡(!
	`diss68k_gëãxt
(&
ùc
, 
dis¶öe
))

160 
	`°r˝y
(
dis¶öe
, "Illegal Instruction");

161 
w‹ds
 = 
ùc
.
w‹dÀn
;

164 
p
 = 
dum∂öe
;

165 
p
 +
	`•rötf
’, "%6x : %04x ", ()
addr68k
, (
addr
[0] << 8) +áddr[1]);

166 
i
 = 1; i < 
w‹ds
; i++) {

167 
p
 +
	`•rötf
’, "%04x ", (
addr
[
i
 * 2] << 8) +áddr[i * 2 + 1]);

169 
i
 = 29 - 
	`°æí
(
dum∂öe
); i > 0; i--) {

170 *
p
++ = ' ';

172 
p
 +
	`•rötf
(p, ": ");

173 
i
 = 0; i < 
w‹ds
; i++) {

174 i‡(
	`iß um
(
addr
[
i
 * 2])) {

175 *
p
++ = 
addr
[
i
 * 2];

177 *
p
++ = '.';

178 i‡(
	`iß um
(
addr
[
i
 * 2 + 1])) {

179 *
p
++ = 
addr
[
i
 * 2 + 1];

181 *
p
++ = '.';

183 *
p
 = '\0';

184 
i
 = 39 - 
	`°æí
(
dum∂öe
); i > 0; i--) {

185 *
p
++ = ' ';

187 i‡(
iibp
) {

188 
	`•rötf
(
p
, " : %4d : %s\n", 
iibp
->
fun˙um
, 
dis¶öe
);

190 
	`•rötf
(
p
, " : : %s\n", 
dis¶öe
);

193  
w‹ds
;

194 
	}
}

	@src/generator68k/gen68k.c

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

6 
	~"gíî©‹.h
"

8 
	~"def68k-iibs.h
"

14 
gíî©e
(
FILE
 *
ouçut
, 
t›nibbÀ
);

15 
gíî©e_ó
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
, 
upd©e
);

16 
gíî©e_óvÆ
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
);

17 
gíî©e_ó°‹e
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
);

18 
gíî©e_outd©a
(
FILE
 *
o
, 
t_iib
 *
iib
, c⁄° *
öô
);

19 
gíî©e_cc
(
FILE
 *
o
, 
t_iib
 *
iib
);

20 
gíî©e_°dÊag_n
(
FILE
 *
o
, 
t_iib
 *
iib
);

21 
gíî©e_°dÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
);

22 
gíî©e_˛rÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

23 
gíî©e_˛rÊag_c
(
FILE
 *
o
, 
t_iib
 *
iib
);

24 
gíî©e_˛rÊag_n
(
FILE
 *
o
, 
t_iib
 *
iib
);

25 
gíî©e_£tÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
);

26 
gíî©e_subÊag_c
(
FILE
 *
o
, 
t_iib
 *
iib
);

27 
gíî©e_subÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

28 
gíî©e_subxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

29 
gíî©e_subÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

30 
gíî©e_cm∑Êag_c
(
FILE
 *
o
, 
t_iib
 *
iib
);

31 
gíî©e_cm∑Êag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

32 
gíî©e_addÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

33 
gíî©e_addÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

34 
gíî©e_addxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

35 
gíî©e_°dxÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
);

36 
gíî©e_√gÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

37 
gíî©e_√gÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

38 
gíî©e_√gxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
);

39 
gíî©e_√gxÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
);

40 
gíî©e_bôs
(
FILE
 *
o
, 
t_iib
 *
iib
);

44 
	#HEADER
 "/*****************************************************************************/\n/* Gíî©‹ - Seg®Gíesi†emuœti⁄ - (cËJame†P⁄dî 1997-2001 */\n/*****************************************************************************/\n/* */\n/* cpu68k-%x.¯ */\n/* */\n/*****************************************************************************/\n\n"

	)

46 
	#OUT
(
x
Ë
	`Âuts
(x,
ouçut
);

	)

47 
	#FNAME_GEN68K_CPU_OUT
 "˝u68k-%x.c"

	)

51 
	$maö
(
¨gc
, *
¨gv
[])

53 
FILE
 *
ouçut
;

54 
i
;

55 
tmp
[256];

57 ()
¨gc
;

58 ()
¨gv
;

60 
	`¥ötf
("Writing C files... ");

61 
	`fÊush
(
°dout
);

63 
i
 = 0; i < 16; i++) {

65 
	`¥ötf
("%d. ", 
i
);

66 
	`fÊush
(
°dout
);

69 
	`•rötf
(
tmp
, 
FNAME_GEN68K_CPU_OUT
, 
i
);

72 i‡((
ouçut
 = 
	`f›í
(
tmp
, "w")Ë=
NULL
) {

73 
	`≥º‹
("fopen output");

74 
	`exô
(1);

78 
	`Ârötf
(
ouçut
, 
HEADER
, 
i
);

79 
	`Ârötf
(
ouçut
, "#include \"cpu68k-inline.h\"\n\n");

81 
	`gíî©e
(
ouçut
, 
i
);

84 i‡(
	`f˛o£
(
ouçut
)) {

85 
	`≥º‹
("fclose output");

86 
	`exô
(1);

91 
	`¥ötf
("done.\n");

92 
	`fÊush
(
°dout
);

96 
	}
}

98 
	$gíî©e
(
FILE
 *
ouçut
, 
t›nibbÀ
)

100 
t_iib
 *
iib
;

101 
i
, 
Êags
, 
pcöc
;

102 
DEBUG_BRANCH
 = 0;

103 
DEBUG_SR
 = 0;

104 
DEBUG_RTE
 = 0;

106 
i
 = 0; i < 
iibs_num
; i++) {

107 
iib
 = &
iibs
[
i
];

109 i‡((
iib
->
mask
 & 0xF000) != 0xF000) {

110 
	`Ârötf
(
°dîr
, "îr‹: Så™gêmask %x\n", 
iib
->
mask
);

111 
	`exô
(1);

113 i‡(((
iib
->
bôs
 & 0xF000)>>12Ë!
t›nibbÀ
) {

117 
Êags
 = 0; flags < 2; flags++) {

119 i‡(
Êags
 =1 && 
iib
->Êags.
£t
 == 0) {

125 
	`Ârötf
(
ouçut
, "void cpu_op_%i%s(t_ipc *ipc) /* %s */ {\n",

126 
i
, 
Êags
 ? "b" : "a", 
m√m⁄ic_èbÀ
[
iib
->
m√m⁄ic
].
«me
);

127 
	`Ârötf
(
ouçut
, " /* mask %04x, bits %04x, mnemonic %d,Öriv %d, ",

128 
iib
->
mask
, iib->
bôs
, iib->
m√m⁄ic
, iib->
Êags
.
¥iv
);

129 
	`Ârötf
(
ouçut
, "endblk %d, imm_notzero %d, used %d",

130 
iib
->
Êags
.
ídblk
, iib->Êags.
imm_nŸzîo
, iib->Êags.
u£d
);

131 
	`Ârötf
(
ouçut
, " set %d, size %d, stype %d, dtype %d, sbitpos %d, ",

132 
iib
->
Êags
.
£t
, iib->
size
, iib->
°y≥
, iib->
dty≥
, iib->
sbôpos
);

133 
	`Ârötf
(
ouçut
, "dbôpo†%d, immvÆuê%d */\n", 
iib
->
dbôpos
,

134 
iib
->
immvÆue
);

136 
pcöc
 = 1;

138 
iib
->
m√m⁄ic
) {

140 
i_OR
:

141 
i_AND
:

142 
i_EOR
:

144 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

145 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

146 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

147 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

148 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata");

149 
	`OUT
("\n");

150 
iib
->
m√m⁄ic
) {

151 
i_OR
:

152 
	`OUT
(" outdata|= srcdata;\n");

154 
i_AND
:

155 
	`OUT
(" outdata&= srcdata;\n");

157 
i_EOR
:

158 
	`OUT
(" outdata^= srcdata;\n");

161 
	`OUT
("ERROR\n");

164 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

165 i‡(
Êags
)

166 
	`OUT
("\n");

167 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

168 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

169 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

170 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

171 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

172 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

173 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

174 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

177 
i_ORSR
:

178 
i_ANDSR
:

179 
i_EORSR
:

181 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

182 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

183 
	`OUT
(" unsigned int sr =Ñegs.sr.sr_struct.s;\n");

184 
	`OUT
("\n");

185 i‡(
DEBUG_SR
)

186 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

187 
ouçut
);

188 i‡(
iib
->
size
 =
sz_w‹d
) {

189 
	`OUT
(" if (!SFLAG)\n");

190 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

191 (
iib
->
w‹dÀn
)*2);

192 
	`OUT
("\n");

194 
iib
->
m√m⁄ic
) {

195 
i_ORSR
:

196 
	`OUT
(" SR|= srcdata;\n");

198 
i_ANDSR
:

199 i‡(
iib
->
size
 =
sz_byã
) {

200 
	`OUT
(" SR = (SR & 0xFF00) | (SR & srcdata);\n");

202 
	`OUT
(" SR&= srcdata;\n");

205 
i_EORSR
:

206 
	`OUT
(" SR^= srcdata;\n");

209 
	`OUT
("ERROR\n");

212 
	`OUT
(" if (sr != (uint8)regs.sr.sr_struct.s) {\n");

213 
	`OUT
(" /* mode change, swap SPánd A7 */\n");

214 
	`OUT
(" ADDRREG(7)^= SP; SP^= ADDRREG(7); ADDRREG(7)^= SP;\n");

215 
	`OUT
(" }\n");

216 i‡(
DEBUG_SR
)

217 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

218 
ouçut
);

221 
i_SUB
:

223 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

224 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

225 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

226 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

227 
iib
->
size
) {

228 
sz_byã
:

229 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint8)dstdata - (sint8)srcdata");

231 
sz_w‹d
:

232 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)dstdata - (sint16)srcdata");

234 
sz_l⁄g
:

235 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)dstdata - (sint32)srcdata");

238 
	`OUT
("ERROR size\n");

241 
	`OUT
("\n");

242 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

243 i‡(
Êags
)

244 
	`OUT
("\n");

245 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

246 
	`gíî©e_subÊag_v
(
ouçut
, 
iib
);

247 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

248 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

249 
	`gíî©e_subÊag_cx
(
ouçut
, 
iib
);

250 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

251 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

252 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

253 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

256 
i_SUBA
:

258 i‡(
iib
->
dty≥
 !
dt_Aªg
)

259 
	`OUT
("Error\n");

260 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

261 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

262 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

263 
	`OUT
(" uint32 dstdata = ADDRREG(dstreg);\n");

264 
iib
->
size
) {

265 
sz_byã
:

266 
	`OUT
(" uint32 outdata = (sint32)dstdata - (sint8)srcdata;\n");

268 
sz_w‹d
:

269 
	`OUT
(" uint32 outdata = (sint32)dstdata - (sint16)srcdata;\n");

271 
sz_l⁄g
:

272 
	`OUT
(" uint32 outdata = (sint32)dstdata - (sint32)srcdata;\n");

275 
	`OUT
("ERROR size\n");

278 
	`OUT
("\n");

279 
	`OUT
(" ADDRREG(dstreg) = outdata;\n");

282 
i_SUBX
:

284 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

285 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

286 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

287 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

288 
iib
->
size
) {

289 
sz_byã
:

290 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint8)dstdata - (sint8)srcdata "

293 
sz_w‹d
:

294 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)dstdata - (sint16)srcdata"

297 
sz_l⁄g
:

298 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)dstdata - (sint32)srcdata"

302 
	`OUT
("ERROR size\n");

305 
	`OUT
("\n");

306 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

307 i‡(
Êags
)

308 
	`OUT
("\n");

309 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

310 
	`gíî©e_subÊag_v
(
ouçut
, 
iib
);

311 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

312 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

313 
	`gíî©e_subxÊag_cx
(
ouçut
, 
iib
);

314 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

315 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

316 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

317 
	`gíî©e_°dxÊag_z
(
ouçut
, 
iib
);

320 
i_ADD
:

322 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

323 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

324 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

325 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

326 
iib
->
size
) {

327 
sz_byã
:

328 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint8)dstdata + (sint8)srcdata");

330 
sz_w‹d
:

331 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)dstdata + (sint16)srcdata");

333 
sz_l⁄g
:

334 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)dstdata + (sint32)srcdata");

337 
	`OUT
("ERROR size\n");

340 
	`OUT
("\n");

341 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

342 i‡(
Êags
)

343 
	`OUT
("\n");

344 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

345 
	`gíî©e_addÊag_v
(
ouçut
, 
iib
);

346 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

347 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

348 
	`gíî©e_addÊag_cx
(
ouçut
, 
iib
);

349 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

350 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

351 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

352 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

355 
i_ADDA
:

357 i‡(
iib
->
dty≥
 !
dt_Aªg
)

358 
	`OUT
("Error\n");

359 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

360 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

361 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

362 
	`OUT
(" uint32 dstdata = ADDRREG(dstreg);\n");

363 
iib
->
size
) {

364 
sz_byã
:

365 
	`OUT
(" uint32 outdata = (sint32)dstdata + (sint8)srcdata;\n");

367 
sz_w‹d
:

368 
	`OUT
(" uint32 outdata = (sint32)dstdata + (sint16)srcdata;\n");

370 
sz_l⁄g
:

371 
	`OUT
(" uint32 outdata = (sint32)dstdata + (sint32)srcdata;\n");

374 
	`OUT
("ERROR size\n");

377 
	`OUT
("\n");

378 
	`OUT
(" ADDRREG(dstreg) = outdata;\n");

381 
i_ADDX
:

383 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

384 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

385 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

386 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

387 
iib
->
size
) {

388 
sz_byã
:

389 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint8)dstdata + (sint8)srcdata "

392 
sz_w‹d
:

393 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)dstdata + (sint16)srcdata"

396 
sz_l⁄g
:

397 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)dstdata + (sint32)srcdata"

401 
	`OUT
("ERROR size\n");

404 
	`OUT
("\n");

405 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

406 i‡(
Êags
)

407 
	`OUT
("\n");

408 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

409 
	`gíî©e_addÊag_v
(
ouçut
, 
iib
);

410 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

411 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

412 
	`gíî©e_addxÊag_cx
(
ouçut
, 
iib
);

413 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

414 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

415 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

416 
	`gíî©e_°dxÊag_z
(
ouçut
, 
iib
);

419 
i_MULU
:

421 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

422 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

423 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

424 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

425 
	`OUT
("\n");

426 
	`OUT
(" uint32 outdata = (uint32)srcdata * (uint32)dstdata;\n");

427 i‡(
iib
->
dty≥
 !
dt_Dªg
)

428 
	`OUT
("ERROR dtype\n");

429 
	`OUT
(" DATAREG(dstreg) = outdata;\n");

430 i‡(
Êags
)

431 
	`OUT
("\n");

432 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

433 
	`OUT
(" NFLAG = ((sint32)outdata) < 0;\n");

434 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

435 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

436 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

437 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

438 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

439 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

442 
i_MULS
:

444 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

445 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

446 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

447 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

448 
	`OUT
("\n");

449 
	`OUT
(" uint32 outdata = (sint32)(sint16)srcdata * "

451 i‡(
iib
->
dty≥
 !
dt_Dªg
)

452 
	`OUT
("ERROR dtype\n");

453 
	`OUT
(" DATAREG(dstreg) = outdata;\n");

454 i‡(
Êags
)

455 
	`OUT
("\n");

456 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

457 
	`OUT
(" NFLAG = ((sint32)outdata) < 0;\n");

458 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

459 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

460 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

461 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

462 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

463 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

466 
i_CMP
:

468 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

469 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

470 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

471 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

472 
iib
->
size
) {

473 
sz_byã
:

474 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint8)dstdata - (sint8)srcdata");

476 
sz_w‹d
:

477 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)dstdata - (sint16)srcdata");

479 
sz_l⁄g
:

480 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)dstdata - (sint32)srcdata");

483 
	`OUT
("ERROR size\n");

486 i‡(
Êags
)

487 
	`OUT
("\n");

488 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

489 
	`gíî©e_subÊag_v
(
ouçut
, 
iib
);

490 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

491 
	`gíî©e_subÊag_c
(
ouçut
, 
iib
);

492 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

493 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

494 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

495 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

498 
i_CMPA
:

500 i‡(
iib
->
dty≥
 !
dt_Aªg
 || iib->
size
 !
sz_w‹d
)

501 
	`OUT
("Error\n");

502 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

503 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

504 
iib
->
size
 = 
sz_l⁄g
;

505 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

506 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

507 
	`OUT
(" uint32 outdata = (sint32)dstdata - (sint32)(sint16)srcdata;\n");

508 i‡(
Êags
)

509 
	`OUT
("\n");

510 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

511 
	`gíî©e_cm∑Êag_v
(
ouçut
, 
iib
);

512 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

513 
	`gíî©e_cm∑Êag_c
(
ouçut
, 
iib
);

514 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

515 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

516 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

517 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

518 
iib
->
size
 = 
sz_w‹d
;

521 
i_BTST
:

522 
i_BCHG
:

523 
i_BCLR
:

524 
i_BSET
:

526 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

527 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

528 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

529 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

530 
iib
->
size
) {

531 
sz_byã
:

532 
	`OUT
(" uint32 bitpos = 1<<(srcdata & 7);");

534 
sz_l⁄g
:

535 
	`OUT
(" uint32 bitpos = 1<<(srcdata & 31);");

538 
	`OUT
("ERROR size\n");

541 
	`OUT
("\n");

542 
iib
->
m√m⁄ic
) {

543 
i_BTST
:

545 
i_BCHG
:

546 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata ^ bitpos");

547 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

549 
i_BCLR
:

550 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata & ~bitpos");

551 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

553 
i_BSET
:

554 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata | bitpos");

555 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

558 
	`OUT
("ERROR\n");

561 
	`OUT
("\n");

562 
	`OUT
(" ZFLAG = !(dstdata & bitpos);\n");

565 
i_MOVE
:

567 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

568 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

569 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

570 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "srcdata");

571 
	`OUT
("\n");

572 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

573 i‡(
Êags
)

574 
	`OUT
("\n");

575 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

576 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

577 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

578 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

579 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

580 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

581 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

582 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

585 
i_MOVEA
:

587 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

588 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

589 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

590 i‡(
iib
->
dty≥
 !
dt_Aªg
 || iib->
size
 !
sz_w‹d
)

591 
	`OUT
("Error\n");

592 
	`OUT
("\n");

593 
	`OUT
(" ADDRREG(dstreg) = (sint32)(sint16)srcdata;\n");

596 
i_MOVEPMR
:

598 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

599 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

600 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

601 
iib
->
size
) {

602 
sz_w‹d
:

603 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(fetchbyte(srcaddr) << 8) + "

606 
sz_l⁄g
:

607 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(fetchbyte(srcaddr) << 24) | "

613 
	`OUT
("ERROR size\n");

616 
	`OUT
("\n");

617 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

620 
i_MOVEPRM
:

622 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

623 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

624 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

625 
	`OUT
("\n");

626 
iib
->
size
) {

627 
sz_w‹d
:

628 
	`OUT
(" storebyte(dstaddr, (srcdata >> 8) & 0xFF);\n");

629 
	`OUT
(" storebyte(dstaddr+2, srcdata & 0xFF);\n");

631 
sz_l⁄g
:

632 
	`OUT
(" storebyte(dstaddr, (srcdata >> 24) & 0xFF);\n");

633 
	`OUT
(" storebyte(dstaddr+2, (srcdata >> 16) & 0xFF);\n");

634 
	`OUT
(" storebyte(dstaddr+4, (srcdata >> 8) & 0xFF);\n");

635 
	`OUT
(" storebyte(dstaddr+6, srcdata & 0xFF);\n");

638 
	`OUT
("ERROR size\n");

643 
i_MOVEFSR
:

645 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

646 
	`gíî©e_outd©a
(
ouçut
, 
iib
, 
NULL
);

647 
	`OUT
("\n");

648 
	`OUT
(" outdata = SR;\n");

649 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

652 
i_MOVETSR
:

654 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

655 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

656 
	`OUT
(" unsigned int sr =Ñegs.sr.sr_struct.s;\n");

657 
	`OUT
("\n");

658 i‡(
DEBUG_SR
)

659 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

660 
ouçut
);

661 
iib
->
size
) {

662 
sz_byã
:

663 
	`OUT
(" SR = (SR & ~0xFF) | srcdata;\n");

665 
sz_w‹d
:

666 
	`OUT
(" if (!SFLAG)\n");

667 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

668 (
iib
->
w‹dÀn
)*2);

669 
	`OUT
("\n");

670 
	`OUT
(" SR = srcdata;\n");

673 
	`OUT
("ERROR size\n");

676 
	`OUT
(" if (sr != (uint8)regs.sr.sr_struct.s) {\n");

677 
	`OUT
(" /* mode change, swap SPánd A7 */\n");

678 
	`OUT
(" ADDRREG(7)^= SP; SP^= ADDRREG(7); ADDRREG(7)^= SP;\n");

679 
	`OUT
(" }\n");

680 i‡(
DEBUG_SR
)

681 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

682 
ouçut
);

685 
i_MOVEMRM
:

687 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

688 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

689 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 0);

690 i‡(
iib
->
dty≥
 =
dt_Adec
) {

691 
	`OUT
(" uint8 datamask = (srcdata & 0xFF00) >> 8;\n");

692 
	`OUT
(" uint8áddrmask = srcdata & 0xFF;");

693 
	`OUT
("\n");

694 
iib
->
size
) {

695 
sz_w‹d
:

696 
	`OUT
(" while (addrmask) {\n");

697 
	`OUT
(" dstaddr-= 2;\n");

698 
	`OUT
(" storeword(dstaddr, ADDRREG((7-movem_bit[addrmask])));\n");

699 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

700 
	`OUT
(" }\n");

701 
	`OUT
(" while (datamask) {\n");

702 
	`OUT
(" dstaddr-= 2;\n");

703 
	`OUT
(" storeword(dstaddr, DATAREG((7-movem_bit[datamask])));\n");

704 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

705 
	`OUT
(" }\n");

707 
sz_l⁄g
:

708 
	`OUT
(" while (addrmask) {\n");

709 
	`OUT
(" dstaddr-= 4;\n");

710 
	`OUT
(" storelong(dstaddr, ADDRREG((7-movem_bit[addrmask])));\n");

711 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

712 
	`OUT
(" }\n");

713 
	`OUT
(" while (datamask) {\n");

714 
	`OUT
(" dstaddr-= 4;\n");

715 
	`OUT
(" storelong(dstaddr, ");

716 
	`OUT
("DATAREG((7-movem_bit[datamask])));\n");

717 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

718 
	`OUT
(" }\n");

721 
	`OUT
("ERROR\n");

724 
	`OUT
(" ADDRREG(dstreg) = dstaddr;");

726 
	`OUT
(" uint8áddrmask = (srcdata & 0xFF00) >> 8;\n");

727 
	`OUT
(" uint8 datamask = srcdata & 0xFF;");

728 
	`OUT
("\n");

729 
iib
->
size
) {

730 
sz_w‹d
:

731 
	`OUT
(" while (datamask) {\n");

732 
	`OUT
(" storeword(dstaddr, DATAREG(movem_bit[datamask]));\n");

733 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

734 
	`OUT
(" dstaddr+= 2;\n");

735 
	`OUT
(" }\n");

736 
	`OUT
(" while (addrmask) {\n");

737 
	`OUT
(" storeword(dstaddr, ADDRREG(movem_bit[addrmask]));\n");

738 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

739 
	`OUT
(" dstaddr+= 2;\n");

740 
	`OUT
(" }\n");

742 
sz_l⁄g
:

743 
	`OUT
(" while (datamask) {\n");

744 
	`OUT
(" storelong(dstaddr, DATAREG(movem_bit[datamask]));\n");

745 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

746 
	`OUT
(" dstaddr+= 4;\n");

747 
	`OUT
(" }\n");

748 
	`OUT
(" while (addrmask) {\n");

749 
	`OUT
(" storelong(dstaddr, ADDRREG(movem_bit[addrmask]));\n");

750 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

751 
	`OUT
(" dstaddr+= 4;\n");

752 
	`OUT
(" }\n");

755 
	`OUT
("ERROR\n");

758 i‡(
iib
->
dty≥
 =
dt_Aöc
) {

760 
	`OUT
("ERROR\n");

765 
i_MOVEMMR
:

767 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

768 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

769 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 0);

770 
	`OUT
(" uint8áddrmask = (srcdata & 0xFF00) >> 8;\n");

771 
	`OUT
(" uint8 datamask = srcdata & 0xFF;");

772 
	`OUT
("\n");

773 
iib
->
size
) {

774 
sz_w‹d
:

775 
	`OUT
(" while (datamask) {\n");

776 
	`OUT
(" DATAREG(movem_bit[datamask]) = ");

777 
	`OUT
("(sint32)(sint16)fetchword(dstaddr);\n");

778 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

779 
	`OUT
(" dstaddr+= 2;\n");

780 
	`OUT
(" }\n");

781 
	`OUT
(" while (addrmask) {\n");

782 
	`OUT
(" ADDRREG(movem_bit[addrmask]) = ");

783 
	`OUT
("(sint32)(sint16)fetchword(dstaddr);\n");

784 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

785 
	`OUT
(" dstaddr+= 2;\n");

786 
	`OUT
(" }\n");

788 
sz_l⁄g
:

789 
	`OUT
(" while (datamask) {\n");

790 
	`OUT
(" DATAREG(movem_bit[datamask]) = fetchlong(dstaddr);\n");

791 
	`OUT
(" datamask&= ~(1<<movem_bit[datamask]);\n");

792 
	`OUT
(" dstaddr+= 4;\n");

793 
	`OUT
(" }\n");

794 
	`OUT
(" while (addrmask) {\n");

795 
	`OUT
(" ADDRREG(movem_bit[addrmask]) = fetchlong(dstaddr);\n");

796 
	`OUT
("áddrmask&= ~(1<<movem_bit[addrmask]);\n");

797 
	`OUT
(" dstaddr+= 4;\n");

798 
	`OUT
(" }\n");

801 
	`OUT
("ERROR\n");

804 i‡(
iib
->
dty≥
 =
dt_Aöc
) {

805 
	`OUT
(" ADDRREG(dstreg) = dstaddr;\n");

806 } i‡(
iib
->
dty≥
 =
dt_Adec
) {

808 
	`OUT
("ERROR\n");

812 
i_MOVETUSP
:

814 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

815 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

816 
	`OUT
("\n");

817 
	`OUT
(" if (!SFLAG)\n");

818 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

819 (
iib
->
w‹dÀn
)*2);

820 
	`OUT
("\n");

821 
	`OUT
(" SP = srcdata;\n");

824 
i_MOVEFUSP
:

826 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

827 
	`OUT
(" uint32 outdata;\n");

828 
	`OUT
("\n");

829 
	`OUT
(" if (!SFLAG)\n");

830 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

831 (
iib
->
w‹dÀn
)*2);

832 
	`OUT
("\n");

833 
	`OUT
(" outdata = SP;\n");

834 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

837 
i_NEG
:

839 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

840 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

841 
iib
->
size
) {

842 
sz_byã
:

843 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint8)srcdata");

845 
sz_w‹d
:

846 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint16)srcdata");

848 
sz_l⁄g
:

849 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint32)srcdata");

852 
	`OUT
("ERROR size\n");

855 
	`OUT
("\n");

856 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

857 i‡(
Êags
)

858 
	`OUT
("\n");

859 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

860 
	`gíî©e_√gÊag_v
(
ouçut
, 
iib
);

861 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

862 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

863 
	`gíî©e_√gÊag_cx
(
ouçut
, 
iib
);

864 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

865 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

866 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

867 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

870 
i_NEGX
:

872 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

873 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

874 
iib
->
size
) {

875 
sz_byã
:

876 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint8)srcdata - XFLAG");

878 
sz_w‹d
:

879 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint16)srcdata - XFLAG");

881 
sz_l⁄g
:

882 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0 - (sint32)srcdata - XFLAG");

885 
	`OUT
("ERROR size\n");

888 
	`OUT
("\n");

889 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

890 i‡(
Êags
)

891 
	`OUT
("\n");

892 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

893 
	`gíî©e_√gxÊag_v
(
ouçut
, 
iib
);

894 i‡(
Êags
 && ((
iib
->Êags.
£t
 & 
IIB_FLAG_C
) ||

895 (
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)))

896 
	`gíî©e_√gxÊag_cx
(
ouçut
, 
iib
);

897 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

898 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

899 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

900 
	`gíî©e_°dxÊag_z
(
ouçut
, 
iib
);

903 
i_CLR
:

905 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

906 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

907 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0");

908 
	`OUT
("\n");

909 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

910 i‡(
Êags
)

911 
	`OUT
("\n");

912 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

913 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

914 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

915 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

916 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

917 
	`gíî©e_˛rÊag_n
(
ouçut
, 
iib
);

918 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

919 
	`gíî©e_£tÊag_z
(
ouçut
, 
iib
);

922 
i_NOT
:

923 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

924 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

925 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "~srcdata");

926 
	`OUT
("\n");

927 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

928 i‡(
Êags
)

929 
	`OUT
("\n");

930 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

931 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

932 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

933 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

934 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

935 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

936 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

937 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

940 
i_ABCD
:

941 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

942 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

943 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

944 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

945 
	`gíî©e_outd©a
(
ouçut
, 
iib
, 
NULL
);

946 
	`OUT
("\n");

947 
	`OUT
(" uint8 outdata_low = (dstdata & 0xF) + (srcdata & 0xF) ");

948 
	`OUT
("+ XFLAG;\n");

949 
	`OUT
(" uint16Örecalc = dstdata + srcdata + XFLAG;\n");

950 
	`OUT
(" uint16 outdata_tmp =Örecalc;\n");

951 
	`OUT
("\n");

952 
	`OUT
(" if (outdata_low > 0x09)\n");

953 
	`OUT
(" outdata_tmp+= 0x06;\n");

954 
	`OUT
(" if (outdata_tmp > 0x90) {\n");

955 
	`OUT
(" outdata_tmp+= 0x60;\n");

956 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

957 
	`OUT
(" CFLAG = 1;\n");

958 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

959 
	`OUT
(" XFLAG = 1;\n");

960 
	`OUT
(" }Élse {\n");

961 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

962 
	`OUT
(" CFLAG = 0;\n");

963 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

964 
	`OUT
(" XFLAG = 0;\n");

965 
	`OUT
(" }\n");

966 
	`OUT
(" outdata = outdata_tmp;\n");

967 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

968 
	`OUT
(" if (outdata) ZFLAG = 0;\n");

969 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

970 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

971 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

972 
	`OUT
(" VFLAG = ((precalc & 1<<7) == 0) && (outdata & 1<<7);\n");

973 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

976 
i_SBCD
:

977 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

978 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

979 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

980 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

981 
	`gíî©e_outd©a
(
ouçut
, 
iib
, 
NULL
);

982 
	`OUT
("\n");

983 
	`OUT
(" sint8 outdata_low = (dstdata & 0xF) - (srcdata & 0xF) ");

984 
	`OUT
("- XFLAG;\n");

985 
	`OUT
(" sint16Örecalc = dstdata - srcdata - XFLAG;\n");

986 
	`OUT
(" sint16 outdata_tmp =Örecalc;\n");

987 
	`OUT
("\n");

988 
	`OUT
(" if (outdata_low < 0)\n");

989 
	`OUT
(" outdata_tmp-= 0x06;\n");

990 
	`OUT
(" if (outdata_tmp < 0) {\n");

991 
	`OUT
(" outdata_tmp-= 0x60;\n");

992 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

993 
	`OUT
(" CFLAG = 1;\n");

994 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

995 
	`OUT
(" XFLAG = 1;\n");

996 
	`OUT
(" }Élse {\n");

997 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

998 
	`OUT
(" CFLAG = 0;\n");

999 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

1000 
	`OUT
(" XFLAG = 0;\n");

1001 
	`OUT
(" }\n");

1002 
	`OUT
(" outdata = outdata_tmp;\n");

1003 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1004 
	`OUT
(" if (outdata) ZFLAG = 0;\n");

1005 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1006 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1007 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1008 
	`OUT
(" VFLAG = (precalc & 1<<7) && ((outdata & 1<<7) == 0);\n");

1009 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1012 
i_NBCD
:

1013 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1014 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1015 
	`gíî©e_outd©a
(
ouçut
, 
iib
, 
NULL
);

1016 
	`OUT
("\n");

1017 
	`OUT
(" sint8 outdata_low = - (srcdata & 0xF) - XFLAG;\n");

1018 
	`OUT
(" sint16Örecalc = - srcdata - XFLAG;\n");

1019 
	`OUT
(" sint16 outdata_tmp =Örecalc;\n");

1020 
	`OUT
("\n");

1021 
	`OUT
(" if (outdata_low < 0)\n");

1022 
	`OUT
(" outdata_tmp-= 0x06;\n");

1023 
	`OUT
(" if (outdata_tmp < 0) {\n");

1024 
	`OUT
(" outdata_tmp-= 0x60;\n");

1025 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1026 
	`OUT
(" CFLAG = 1;\n");

1027 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

1028 
	`OUT
(" XFLAG = 1;\n");

1029 
	`OUT
(" }Élse {\n");

1030 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1031 
	`OUT
(" CFLAG = 0;\n");

1032 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

1033 
	`OUT
(" XFLAG = 0;\n");

1034 
	`OUT
(" }\n");

1035 
	`OUT
(" outdata = outdata_tmp;\n");

1036 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1037 
	`OUT
(" if (outdata) ZFLAG = 0;\n");

1038 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1039 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1040 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1041 
	`OUT
(" VFLAG = (precalc & 1<<7) && ((outdata & 1<<7) == 0);\n");

1042 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1045 
i_SWAP
:

1046 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1047 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1048 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(srcdata>>16) | (srcdata<<16)");

1049 
	`OUT
("\n");

1050 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1051 i‡(
Êags
)

1052 
	`OUT
("\n");

1053 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1054 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1055 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1056 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

1057 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1058 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1059 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1060 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1063 
i_PEA
:

1064 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1065 
	`OUT
("\n");

1066 
	`OUT
(" ADDRREG(7)-= 4;\n");

1067 
	`OUT
(" storelong(ADDRREG(7), srcaddr);\n");

1070 
i_LEA
:

1071 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1072 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1073 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "srcaddr");

1074 
	`OUT
("\n");

1075 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1078 
i_EXT
:

1079 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1080 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1081 
	`OUT
("\n");

1082 
iib
->
size
) {

1083 
sz_w‹d
:

1084 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint16)(sint8)(srcdata)");

1086 
sz_l⁄g
:

1087 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "(sint32)(sint16)(srcdata)");

1090 
	`Ârötf
(
ouçut
, "ERROR size\n");

1093 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1094 i‡(
Êags
)

1095 
	`OUT
("\n");

1096 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1097 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1098 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1099 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

1100 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1101 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1102 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1103 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1106 
i_EXG
:

1107 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1108 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1109 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1110 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1111 
	`OUT
("\n");

1112 
iib
->
dty≥
) {

1113 
dt_Dªg
:

1114 
	`OUT
(" DATAREG(dstreg) = srcdata;\n");

1116 
dt_Aªg
:

1117 
	`OUT
(" ADDRREG(dstreg) = srcdata;\n");

1120 
	`OUT
("ERROR size\n");

1123 
iib
->
°y≥
) {

1124 
dt_Dªg
:

1125 
	`OUT
(" DATAREG(srcreg) = dstdata;\n");

1127 
dt_Aªg
:

1128 
	`OUT
(" ADDRREG(srcreg) = dstdata;\n");

1131 
	`OUT
("ERROR size\n");

1136 
i_TST
:

1137 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1138 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1139 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "srcdata");

1140 i‡(
Êags
)

1141 
	`OUT
("\n");

1142 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1143 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1144 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1145 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

1146 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1147 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1148 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1149 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1152 
i_TAS
:

1153 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1154 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1155 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "srcdata");

1156 i‡(
Êags
)

1157 
	`OUT
("\n");

1158 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1159 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1160 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1161 
	`gíî©e_˛rÊag_c
(
ouçut
, 
iib
);

1162 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1163 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1164 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1165 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1166 #i‚de‡
BROKEN_TAS


1167 
iib
->
size
) {

1168 
sz_byã
:

1169 
	`OUT
(" outdata|= 1<<7;\n");

1171 
sz_w‹d
:

1172 
	`OUT
(" outdata|= 1<<15;\n");

1174 
sz_l⁄g
:

1175 
	`OUT
(" outdata|= 1<<31;\n");

1178 
	`OUT
("ERROR size\n");

1181 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1185 
i_CHK
:

1186 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1187 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1188 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1189 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1190 
	`Ârötf
(
ouçut
, "\n");

1191 i‡(
iib
->
size
 !
sz_w‹d
)

1192 
	`OUT
("ERROR size\n");

1193 
	`Ârötf
(
ouçut
, " if ((sint16)srcdata < 0) {\n");

1194 i‡(
Êags
)

1195 
	`OUT
(" NFLAG = 1;\n");

1196 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_CHK, PC+%d);\n",

1197 (
iib
->
w‹dÀn
)*2);

1198 
	`OUT
(" }Élse if (dstdata > srcdata) {\n");

1199 i‡(
Êags
)

1200 
	`OUT
(" NFLAG = 0;\n");

1201 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_CHK, PC+%d);\n",

1202 (
iib
->
w‹dÀn
)*2);

1203 
	`OUT
(" }\n");

1206 
i_TRAPV
:

1207 
	`OUT
(" if (VFLAG) {\n");

1208 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_TRAPV, PC+%d);\n",

1209 (
iib
->
w‹dÀn
)*2);

1210 
	`OUT
(" }\n");

1213 
i_TRAP
:

1214 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1215 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1216 
	`OUT
("\n");

1217 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_TRAP+srcdata, PC+%d);\n",

1218 (
iib
->
w‹dÀn
)*2);

1219 
pcöc
 = 0;

1222 
i_RESET
:

1223 
	`OUT
("Örintf(\"RESET @ %x\\n\", PC);\n");

1224 
	`OUT
("Éxit(1);\n");

1227 
i_NOP
:

1231 
i_STOP
:

1232 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1233 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1234 
	`OUT
("\n");

1235 
	`OUT
(" if (regs.stop)\n");

1236 
	`OUT
("Ñeturn;\n");

1237 
	`OUT
(" if (!(SFLAG && (srcdata & 1<<13))) {\n");

1238 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

1239 (
iib
->
w‹dÀn
)*2);

1240 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1241 
	`OUT
(" }Élse {\n");

1242 
	`OUT
(" SR = srcdata;\n");

1243 
	`OUT
(" STOP = 1;\n");

1244 
	`OUT
(" }\n");

1245 
pcöc
 = 0;

1248 
i_LINK
:

1249 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1250 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1251 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1252 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1253 i‡(
iib
->
°y≥
 !
dt_ImmW
)

1254 
	`OUT
("ERROR stype\n");

1255 
	`OUT
("\n");

1256 
	`OUT
(" ADDRREG(7)-= 4;\n");

1257 
	`OUT
(" storelong(ADDRREG(7), dstdata);\n");

1258 
	`OUT
(" ADDRREG(dstreg) = ADDRREG(7);\n");

1259 
	`OUT
(" ADDRREG(7)+= (sint16)srcdata;\n");

1262 
i_UNLK
:

1263 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1264 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1265 
	`OUT
("\n");

1266 
	`OUT
(" ADDRREG(srcreg) = fetchlong(srcdata);\n");

1267 
	`OUT
(" ADDRREG(7) = srcdata+4;\n");

1270 
i_RTE
:

1271 i‡(
DEBUG_RTE
)

1272 
	`Âuts
("Örötf(\"RTE: 0x%X\\n\", PC);\n", 
ouçut
);

1273 i‡(
DEBUG_SR
)

1274 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

1275 
ouçut
);

1276 
	`OUT
(" if (!SFLAG)\n");

1277 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_PRIVILEGE, PC+%d);\n",

1278 (
iib
->
w‹dÀn
)*2);

1279 
	`OUT
("\n");

1280 
	`OUT
(" SR = fetchword(ADDRREG(7));\n");

1281 
	`OUT
(" PC = fetchlong(ADDRREG(7)+2);\n");

1282 
	`OUT
(" ADDRREG(7)+= 6;\n");

1283 
	`OUT
(" if (!regs.sr.sr_struct.s) {\n");

1284 
	`OUT
(" /* mode change, swap SPánd A7 */\n");

1285 
	`OUT
(" ADDRREG(7)^= SP; SP^= ADDRREG(7); ADDRREG(7)^= SP;\n");

1286 
	`OUT
(" }\n");

1287 i‡(
DEBUG_RTE
)

1288 
	`Âuts
("Örötf(\"RTE: ->0x%X\\n\", PC);\n", 
ouçut
);

1289 i‡(
DEBUG_SR
)

1290 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

1291 
ouçut
);

1292 
pcöc
 = 0;

1295 
i_RTS
:

1296 i‡(
DEBUG_BRANCH
)

1297 
	`Âuts
("Örötf(\"RTS: 0x%X\\n\", PC);", 
ouçut
);

1298 
	`OUT
(" PC = fetchlong(ADDRREG(7));\n");

1299 
	`OUT
(" ADDRREG(7)+= 4;\n");

1300 i‡(
DEBUG_BRANCH
)

1301 
	`Âuts
("Örötf(\"RTS: ->0x%X\\n\", PC);", 
ouçut
);

1302 
pcöc
 = 0;

1305 
i_RTR
:

1306 i‡(
DEBUG_BRANCH
)

1307 
	`Âuts
("Örötf(\"RTR: 0x%X\\n\", PC);\n", 
ouçut
);

1308 i‡(
DEBUG_SR
)

1309 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

1310 
ouçut
);

1311 
	`OUT
(" SR = (SR & ~0xFF) | (fetchword(ADDRREG(7)) & 0xFF);\n");

1312 
	`OUT
(" PC = fetchlong(ADDRREG(7)+2);\n");

1313 
	`OUT
(" ADDRREG(7)+= 6;\n");

1314 i‡(
DEBUG_BRANCH
)

1315 
	`Âuts
("Örötf(\"RTR: ->0x%X\\n\", PC);\n", 
ouçut
);

1316 i‡(
DEBUG_SR
)

1317 
	`Âuts
("Örintf(\"SR: %08X %04X\\n\", PC,Ñegs.sr.sr_int);\n",

1318 
ouçut
);

1319 
pcöc
 = 0;

1322 
i_JSR
:

1323 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1324 
	`OUT
("\n");

1325 i‡(
DEBUG_BRANCH
)

1326 
	`Âuts
("Örötf(\"JSR: 0x%X\\n\", PC);\n", 
ouçut
);

1327 
	`OUT
(" ADDRREG(7)-= 4;\n");

1328 
	`Ârötf
(
ouçut
, " st‹ñ⁄g(ADDRREG(7), PC+%d);\n", (
iib
->
w‹dÀn
)*2);

1329 
	`OUT
(" PC = srcaddr;\n");

1330 i‡(
DEBUG_BRANCH
)

1331 
	`Âuts
("Örötf(\"JSR: ->0x%X\\n\", PC);", 
ouçut
);

1332 
pcöc
 = 0;

1335 
i_JMP
:

1336 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1337 
	`OUT
("\n");

1338 i‡(
DEBUG_BRANCH
)

1339 
	`Âuts
("Örötf(\"JMP: 0x%X\\n\", PC);", 
ouçut
);

1340 
	`OUT
(" PC = srcaddr;\n");

1341 i‡(
DEBUG_BRANCH
)

1342 
	`Âuts
("Örötf(\"JMP: ->0x%X\\n\", PC);\n", 
ouçut
);

1343 
pcöc
 = 0;

1346 
i_Scc
:

1347 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1348 
	`gíî©e_cc
(
ouçut
, 
iib
);

1349 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "cc ? (uint8)(-1) : 0");

1350 
	`OUT
("\n");

1351 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1354 
i_SF
:

1355 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1356 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "0");

1357 
	`OUT
("\n");

1358 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_§c
);

1361 
i_DBcc
:

1363 
	`Ârötf
(
ouçut
, " uint32 srcdata = ipc->src;\n");

1364 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1365 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1366 
	`gíî©e_cc
(
ouçut
, 
iib
);

1367 
	`Ârötf
(
ouçut
, "\n");

1368 i‡(
iib
->
size
 !
sz_w‹d
) {

1369 
	`OUT
("ERROR size\n");

1371 
	`OUT
(" if (!cc) {\n");

1372 
	`OUT
(" dstdata-= 1;\n");

1373 
	`OUT
(" DATAREG(dstreg) = (DATAREG(dstreg) & ~0xFFFF)\n");

1374 
	`OUT
("| (dstdata & 0xFFFF);\n");

1375 
	`OUT
(" if ((sint16)dstdata != -1)\n");

1376 
	`OUT
(" PC = srcdata;\n");

1377 
	`OUT
("Élse\n");

1378 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1379 
	`OUT
(" }Élse\n");

1380 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1381 
pcöc
 = 0;

1384 
i_DBRA
:

1386 
	`Ârötf
(
ouçut
, " uint32 srcdata = ipc->src;\n");

1387 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1388 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1389 
	`OUT
("\n");

1390 i‡(
iib
->
size
 !
sz_w‹d
) {

1391 
	`OUT
("ERROR size\n");

1393 
	`OUT
(" dstdata-= 1;\n");

1394 
	`OUT
(" DATAREG(dstreg) = (DATAREG(dstreg) & ~0xFFFF) | ");

1395 
	`OUT
("(dstdata & 0xFFFF);\n");

1396 
	`OUT
(" if ((sint16)dstdata != -1)\n");

1397 
	`OUT
(" PC = srcdata;\n");

1398 
	`OUT
("Élse\n");

1399 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1400 
pcöc
 = 0;

1403 
i_Bcc
:

1405 
	`OUT
(" uint32 srcdata = ipc->src;\n");

1406 
	`gíî©e_cc
(
ouçut
, 
iib
);

1407 
	`OUT
("\n");

1408 i‡(
DEBUG_BRANCH
)

1409 
	`Âuts
("Örötf(\"Bcc: 0x%X\\n\", PC);\n", 
ouçut
);

1410 
	`OUT
(" if (cc)\n");

1411 
	`OUT
(" PC = srcdata;\n");

1412 
	`OUT
("Élse\n");

1413 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1414 i‡(
DEBUG_BRANCH
)

1415 
	`Âuts
("Örötf(\"Bcc: ->0x%X\\n\", PC);\n", 
ouçut
);

1416 
pcöc
 = 0;

1419 
i_BSR
:

1421 
	`OUT
(" uint32 srcdata = ipc->src;\n");

1422 
	`OUT
("\n");

1423 i‡(
DEBUG_BRANCH
)

1424 
	`Âuts
("Örötf(\"BSR: 0x%X\\n\", PC);\n", 
ouçut
);

1425 
	`OUT
(" ADDRREG(7)-= 4;\n");

1426 
	`Ârötf
(
ouçut
, " st‹ñ⁄g(ADDRREG(7), PC+%d);\n", (
iib
->
w‹dÀn
)*2);

1427 
	`OUT
(" PC = srcdata;\n");

1428 i‡(
DEBUG_BRANCH
)

1429 
	`Âuts
("Örötf(\"BSR: ->0x%X\\n\", PC);\n", 
ouçut
);

1430 
pcöc
 = 0;

1433 
i_DIVU
:

1436 i‡(
iib
->
dty≥
 !
dt_Dªg
)

1437 
	`OUT
("ERROR dtype\n");

1438 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1439 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1440 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1441 
	`OUT
(" uint32 dstdata = DATAREG(dstreg);\n");

1442 
	`OUT
(" uint32 quotient;\n");

1443 
	`OUT
("\n");

1444 
	`OUT
(" if (srcdata == 0) {\n");

1445 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_ZERO, PC+%d);\n",

1446 (
iib
->
w‹dÀn
)*2);

1447 
	`OUT
("Ñeturn;\n");

1448 
	`OUT
(" }\n");

1449 
	`OUT
(" quotient = dstdata / srcdata;\n");

1450 
	`OUT
(" if ((quotient & 0xffff0000) == 0) {\n");

1451 
	`OUT
(" DATAREG(dstreg) = quotient | ");

1452 
	`OUT
("(((uint16)(dstdata % srcdata))<<16);\n");

1453 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1454 
	`OUT
(" VFLAG = 0;\n");

1455 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1456 
	`OUT
(" NFLAG = ((sint16)quotient) < 0;\n");

1457 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1458 
	`OUT
(" ZFLAG = !((uint16)quotient);\n");

1459 i‡(
Êags
 && (
iib
->Êags.
£t
 & 
IIB_FLAG_V
 ||

1460 
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)) {

1461 
	`OUT
(" }Élse {\n");

1462 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1463 
	`OUT
(" VFLAG = 1;\n");

1464 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1465 
	`OUT
(" NFLAG = 1;\n");

1467 
	`OUT
(" }\n");

1468 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1469 
	`OUT
(" CFLAG = 0;\n");

1472 
i_DIVS
:

1475 i‡(
iib
->
dty≥
 !
dt_Dªg
)

1476 
	`OUT
("ERROR dtype\n");

1477 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1478 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1479 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1480 
	`OUT
(" sint32 dstdata = DATAREG(dstreg);\n");

1481 
	`OUT
(" sint32 quotient;\n");

1482 
	`OUT
(" sint16Ñemainder;\n");

1483 
	`OUT
("\n");

1484 
	`OUT
(" if (srcdata == 0) {\n");

1485 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_ZERO, PC+%d);\n",

1486 (
iib
->
w‹dÀn
)*2);

1487 
	`OUT
("Ñeturn;\n");

1488 
	`OUT
(" }\n");

1489 
	`OUT
(" quotient = dstdata / (sint16)srcdata;\n");

1490 
	`OUT
("Ñemainder = dstdata % (sint16)srcdata;\n");

1491 
	`OUT
(" if (((quotient & 0xffff8000) == 0) ||\n");

1492 
	`OUT
(" ((quotient & 0xffff8000) == 0xffff8000)) {\n");

1499 
	`OUT
(" if (((sint32)dstdata < 0) != (remainder < 0))\n");

1501 
	`OUT
("Ñemainder = -remainder;\n");

1502 
	`OUT
(" DATAREG(dstreg) = ((uint16)quotient) | ");

1503 
	`OUT
("(((uint16)(remainder))<<16);\n");

1504 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1505 
	`OUT
(" VFLAG = 0;\n");

1506 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1507 
	`OUT
(" NFLAG = ((sint16)quotient) < 0;\n");

1508 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1509 
	`OUT
(" ZFLAG = !((uint16)quotient);\n");

1510 i‡(
Êags
 && (
iib
->Êags.
£t
 & 
IIB_FLAG_V
 ||

1511 
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)) {

1512 
	`OUT
(" }Élse {\n");

1513 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1514 
	`OUT
(" VFLAG = 1;\n");

1515 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1516 
	`OUT
(" NFLAG = 1;\n");

1518 
	`OUT
(" }\n");

1519 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1520 
	`OUT
(" CFLAG = 0;\n");

1523 
i_ASR
:

1524 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1525 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1526 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1527 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1528 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1529 
	`OUT
(" uint8 count = srcdata & 63;\n");

1530 
iib
->
size
) {

1531 
sz_byã
:

1532 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "((sint8)dstdata) >> "

1535 
sz_w‹d
:

1536 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "((sint16)dstdata) >> "

1539 
sz_l⁄g
:

1540 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "((sint32)dstdata) >> "

1544 
	`OUT
("ERROR size\n");

1547 
	`OUT
("\n");

1548 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1549 i‡(
Êags
) {

1550 
	`OUT
("\n");

1551 
	`OUT
(" if (!srcdata)\n");

1552 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1553 
	`OUT
(" CFLAG = 0;\n");

1554 
	`OUT
("Élse if (srcdata >= bits) {\n");

1555 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1556 
	`OUT
(" CFLAG = dstdata>>(bits-1);\n");

1557 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1558 
	`OUT
(" XFLAG = dstdata>>(bits-1);\n");

1559 
	`OUT
(" }Élse {\n");

1560 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1561 
	`OUT
(" CFLAG = dstdata>>(count-1) & 1;\n");

1562 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1563 
	`OUT
(" XFLAG = dstdata>>(count-1) & 1;\n");

1564 
	`OUT
(" }\n");

1565 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_V
)

1566 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1567 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)

1568 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1569 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_Z
)

1570 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1574 
i_LSR
:

1575 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1576 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1577 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1578 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1579 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1580 
	`OUT
(" uint8 count = srcdata & 63;\n");

1581 
	`gíî©e_outd©a
(
ouçut
, 
iib
,

1583 
	`OUT
("\n");

1584 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1585 i‡(
Êags
) {

1586 
	`OUT
("\n");

1587 
	`OUT
(" if (!count)\n");

1588 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1589 
	`OUT
(" CFLAG = 0;\n");

1590 
	`OUT
("Élse if (count >= bits) {\n");

1591 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1592 
	`OUT
(" CFLAG = (count == bits) ? dstdata>>(bits-1) : 0;\n");

1593 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1594 
	`OUT
(" XFLAG = (count == bits) ? dstdata>>(bits-1) : 0;\n");

1595 
	`OUT
(" }Élse {\n");

1596 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1597 
	`OUT
(" CFLAG = dstdata>>(count-1) & 1;\n");

1598 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1599 
	`OUT
(" XFLAG = dstdata>>(count-1) & 1;\n");

1600 
	`OUT
(" }\n");

1601 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_V
)

1602 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1603 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)

1604 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1605 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_Z
)

1606 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1610 
i_ASL
:

1611 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1612 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1613 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1614 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1615 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1616 
	`OUT
(" uint8 count = srcdata & 63;\n");

1617 
	`gíî©e_outd©a
(
ouçut
, 
iib
,

1619 
	`OUT
("\n");

1620 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1621 i‡(
Êags
) {

1622 
	`OUT
("\n");

1623 
	`OUT
(" if (!count)\n");

1624 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1625 
	`OUT
(" CFLAG = 0;\n");

1626 
	`OUT
("Élse if (count >= bits) {\n");

1627 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1628 
	`OUT
(" CFLAG = (count == bits) ? dstdata & 1 : 0;\n");

1629 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1630 
	`OUT
(" XFLAG = (count == bits) ? dstdata & 1 : 0;\n");

1631 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_V
)

1632 
	`OUT
(" VFLAG = !dstdata;\n");

1633 
	`OUT
(" }Élse {\n");

1634 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1635 
	`OUT
(" CFLAG = dstdata>>(bits-count) & 1;\n");

1636 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1637 
	`OUT
(" XFLAG = dstdata>>(bits-count) & 1;\n");

1638 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_V
) {

1639 
	`OUT
(" {\n");

1640 
iib
->
size
) {

1641 
sz_byã
:

1642 
	`OUT
(" uint8 mask = 0xff << (7-count);\n")

1644 
sz_w‹d
:

1645 
	`OUT
(" uint16 mask = 0xffff << (15-count);\n");

1647 
sz_l⁄g
:

1648 
	`OUT
(" uint32 mask = 0xffffffff <<(31-count);\n");

1651 
	`OUT
("ERROR size\n");

1654 
	`OUT
(" VFLAG = ((dstdata & mask) != mask) && ");

1655 
	`OUT
("((dstdata & mask) != 0);\n");

1656 
	`OUT
(" }\n");

1657 
	`OUT
(" }\n");

1659 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)

1660 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1661 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_Z
)

1662 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1666 
i_LSL
:

1667 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1668 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1669 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1670 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1671 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1672 
	`OUT
(" uint8 count = srcdata & 63;\n");

1673 
	`gíî©e_outd©a
(
ouçut
, 
iib
,

1675 
	`OUT
("\n");

1676 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1677 i‡(
Êags
) {

1678 
	`OUT
("\n");

1679 
	`OUT
(" if (!count)\n");

1680 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1681 
	`OUT
(" CFLAG = 0;\n");

1682 
	`OUT
("Élse if (count >= bits) {\n");

1683 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1684 
	`OUT
(" CFLAG = (count == bits) ? dstdata & 1 : 0;\n");

1685 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1686 
	`OUT
(" XFLAG = (count == bits) ? dstdata & 1 : 0;\n");

1687 
	`OUT
(" }Élse {\n");

1688 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_C
)

1689 
	`OUT
(" CFLAG = dstdata>>(bits-count) & 1;\n");

1690 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_X
)

1691 
	`OUT
(" XFLAG = dstdata>>(bits-count) & 1;\n");

1692 
	`OUT
(" }\n");

1693 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_V
)

1694 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1695 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_N
)

1696 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1697 i‡(
iib
->
Êags
.
£t
 & 
IIB_FLAG_Z
)

1698 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1704 
i_ROXR
:

1705 
i_ROXL
:

1706 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1707 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1708 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1709 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1710 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1711 
	`OUT
(" uint8Üoop = srcdata & 63;\n");

1712 
	`OUT
(" uint8 cflag = CFLAG;\n");

1713 
	`OUT
(" uint8 xflag = XFLAG;\n");

1714 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata");

1715 
	`OUT
("\n");

1716 i‡(
iib
->
m√m⁄ic
 =
i_ROXR
) {

1717 
	`OUT
(" while(loop) {\n");

1718 
	`OUT
(" cflag = outdata & 1;\n");

1719 
	`OUT
(" outdata>>= 1;\n");

1720 
	`OUT
(" if (xflag)\n");

1721 
	`OUT
(" outdata |= 1<<(bits-1);\n");

1722 
	`OUT
(" xflag = cflag;\n");

1723 
	`OUT
("Üoop--;\n");

1724 
	`OUT
(" }\n");

1726 
	`OUT
(" while(loop) {\n");

1727 
	`OUT
(" cflag = outdata & 1<<(bits-1) ? 1 : 0;\n");

1728 
	`OUT
(" outdata<<= 1;\n");

1729 
	`OUT
(" outdata |= xflag;\n");

1730 
	`OUT
(" xflag = cflag;\n");

1731 
	`OUT
("Üoop--;\n");

1732 
	`OUT
(" }\n");

1734 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1735 i‡(
Êags
)

1736 
	`OUT
("\n");

1737 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_X
)

1738 
	`OUT
(" XFLAG = xflag;\n");

1739 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1740 
	`OUT
(" CFLAG = xflag;\n");

1741 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1742 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1743 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1744 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1745 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1746 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1749 
i_ROR
:

1750 
i_ROL
:

1751 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_§c
, 1);

1752 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_§c
);

1753 
	`gíî©e_ó
(
ouçut
, 
iib
, 
ç_d°
, 1);

1754 
	`gíî©e_óvÆ
(
ouçut
, 
iib
, 
ç_d°
);

1755 
	`gíî©e_bôs
(
ouçut
, 
iib
);

1756 
	`OUT
(" uint8Üoop = srcdata & 63;\n");

1757 
	`OUT
(" uint8 cflag = 0;\n");

1758 
	`gíî©e_outd©a
(
ouçut
, 
iib
, "dstdata");

1759 
	`OUT
("\n");

1760 i‡(
iib
->
m√m⁄ic
 =
i_ROR
) {

1761 
	`OUT
(" while(loop) {\n");

1762 
	`OUT
(" cflag = outdata & 1;\n");

1763 
	`OUT
(" outdata>>= 1;\n");

1764 
	`OUT
(" if (cflag)\n");

1765 
	`OUT
(" outdata |= 1<<(bits-1);\n");

1766 
	`OUT
("Üoop--;\n");

1767 
	`OUT
(" }\n");

1769 
	`OUT
(" while(loop) {\n");

1770 
	`OUT
(" cflag = outdata & 1<<(bits-1) ? 1 : 0;\n");

1771 
	`OUT
(" outdata<<= 1;\n");

1772 
	`OUT
(" if (cflag)\n");

1773 
	`OUT
(" outdata |= 1;\n");

1774 
	`OUT
("Üoop--;\n");

1775 
	`OUT
(" }\n");

1777 
	`gíî©e_ó°‹e
(
ouçut
, 
iib
, 
ç_d°
);

1778 i‡(
Êags
)

1779 
	`OUT
("\n");

1780 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_C
)

1781 
	`OUT
(" CFLAG = cflag;\n");

1782 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_N
)

1783 
	`gíî©e_°dÊag_n
(
ouçut
, 
iib
);

1784 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_Z
)

1785 
	`gíî©e_°dÊag_z
(
ouçut
, 
iib
);

1786 i‡(
Êags
 && 
iib
->Êags.
£t
 & 
IIB_FLAG_V
)

1787 
	`gíî©e_˛rÊag_v
(
ouçut
, 
iib
);

1790 
i_LINE10
:

1791 
	`OUT
("\n");

1792 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_LINE10, PC);\n");

1793 
pcöc
 = 0;

1796 
i_LINE15
:

1797 
	`OUT
("\n");

1798 
	`Ârötf
(
ouçut
, "Ñeg68k_internal_vector(V_LINE15, PC);\n");

1799 
pcöc
 = 0;

1802 
i_ILLG
:

1803 
	`OUT
("Örintf(\"Illegal instruction @ %x\\n\", PC);\n");

1804 
	`OUT
("Éxit(1);\n");

1808 i‡(
pcöc
) {

1809 
	`Ârötf
(
ouçut
, " PC+%d;\n", (
iib
->
w‹dÀn
)*2);

1811 
	`OUT
("}\n\n");

1815 
	}
}

1817 
	$gíî©e_ó
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
, 
upd©e
)

1819 
t_d©©y≥
 
d©©y≥
 = 
ty≥
 ? 
iib
->
dty≥
 : iib->
°y≥
;

1823 
d©©y≥
) {

1824 
dt_Dªg
:

1825 
dt_Aªg
:

1826 
dt_Aöd
:

1827 
dt_Aöc
:

1828 
dt_Adec
:

1829 
dt_Adis
:

1830 
dt_Aidx
:

1831 i‡(
ty≥
 =
ç_§c
)

1832 
	`Ârötf
(
o
, " i¡ sr¸eg = (ùc->›codê>> %dË& 7;\n", 
iib
->
sbôpos
);

1834 
	`Ârötf
(
o
, " i¡ d°ªg = (ùc->›codê>> %dË& 7;\n", 
iib
->
dbôpos
);

1840 i‡(
d©©y≥
 =
dt_Aöc
 && 
upd©e
) {

1844 
iib
->
size
) {

1845 
sz_byã
:

1846 i‡(
ty≥
 =
ç_§c
) {

1847 
	`Ârötf
(
o
, " uint32 srcaddr = ADDRREG(srcreg);\n");

1848 
	`Ârötf
(
o
, " uint32 srcaddr_tmp = (ADDRREG(srcreg)+= "

1851 
	`Ârötf
(
o
, " uint32 dstaddr = ADDRREG(dstreg);\n");

1852 
	`Ârötf
(
o
, " uint32 dstaddr_tmp = (ADDRREG(dstreg)+= "

1856 
sz_w‹d
:

1857 i‡(
ty≥
 =
ç_§c
)

1858 
	`Ârötf
(
o
, " uint32 srcaddr = (ADDRREG(srcreg)+=2, "

1861 
	`Ârötf
(
o
, " uint32 dstaddr = (ADDRREG(dstreg)+=2, "

1864 
sz_l⁄g
:

1865 i‡(
ty≥
 =
ç_§c
)

1866 
	`Ârötf
(
o
, " uint32 srcaddr = (ADDRREG(srcreg)+=4, "

1869 
	`Ârötf
(
o
, " uint32 dstaddr = (ADDRREG(dstreg)+=4, "

1873 
	`Ârötf
(
o
, "ERROR size\n");

1877 } i‡(
d©©y≥
 =
dt_Adec
 && 
upd©e
) {

1881 
iib
->
size
) {

1882 
sz_byã
:

1883 i‡(
ty≥
 =
ç_§c
) {

1884 
	`Ârötf
(
o
, " uint32 srcaddr = (ADDRREG(srcreg)-= "

1887 
	`Ârötf
(
o
, " uint32 dstaddr = (ADDRREG(dstreg)-= "

1891 
sz_w‹d
:

1892 i‡(
ty≥
 =
ç_§c
)

1893 
	`Ârötf
(
o
, " uint32 srcaddr = ADDRREG(srcreg)-=2;\n");

1895 
	`Ârötf
(
o
, " uint32 dstaddr = ADDRREG(dstreg)-=2;\n");

1897 
sz_l⁄g
:

1898 i‡(
ty≥
 =
ç_§c
)

1899 
	`Ârötf
(
o
, " uint32 srcaddr = ADDRREG(srcreg)-=4;\n");

1901 
	`Ârötf
(
o
, " uint32 dstaddr = ADDRREG(dstreg)-=4;\n");

1904 
	`Ârötf
(
o
, "ERROR size\n");

1912 
d©©y≥
) {

1913 
dt_Dªg
:

1914 
dt_Aªg
:

1916 
dt_Aöd
:

1917 
dt_Adec
:

1918 
dt_Aöc
:

1919 i‡(
ty≥
 =
ç_§c
)

1920 
	`Ârötf
(
o
, " uint32 srcaddr = ADDRREG(srcreg);\n");

1922 
	`Ârötf
(
o
, " uint32 dstaddr = ADDRREG(dstreg);\n");

1924 
dt_Adis
:

1925 i‡(
ty≥
 =
ç_§c
)

1926 
	`Ârötf
(
o
, " uint32 srcaddr = (sint32)ADDRREG(srcreg) + "

1929 
	`Ârötf
(
o
, " uint32 dstaddr = (sint32)ADDRREG(dstreg) + "

1932 
dt_Aidx
:

1933 i‡(
ty≥
 =
ç_§c
) {

1934 
	`Ârötf
(
o
, " uint32 srcaddr = (sint32)ADDRREG(srcreg) + "

1937 
	`Ârötf
(
o
, " uint32 dstaddr = (sint32)ADDRREG(dstreg) + "

1941 
dt_AbsW
:

1942 
dt_AbsL
:

1943 
dt_Pdis
:

1944 i‡(
ty≥
 =
ç_§c
)

1945 
	`Ârötf
(
o
, " uint32 srcaddr = ipc->src;\n");

1947 
	`Ârötf
(
o
, " uint32 dstaddr = ipc->dst;\n");

1949 
dt_Pidx
:

1950 i‡(
ty≥
 =
ç_§c
) {

1951 
	`Ârötf
(
o
, " uint32 srcaddr = idxval_src(ipc);\n");

1953 
	`Ârötf
(
o
, " uint32 dstaddr = idxval_dst(ipc);\n");

1956 
dt_ImmB
:

1957 
dt_ImmW
:

1958 
dt_ImmL
:

1959 
dt_ImmS
:

1960 
dt_Imm3
:

1961 
dt_Imm4
:

1962 
dt_Imm8
:

1963 
dt_Imm8s
:

1967 
	`Ârötf
(
o
, "ERROR\n");

1971 
	}
}

1973 
	$gíî©e_óvÆ
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
)

1975 
t_d©©y≥
 
d©©y≥
 = 
ty≥
 ? 
iib
->
dty≥
 : iib->
°y≥
;

1979 
d©©y≥
) {

1980 
dt_Dªg
:

1981 
iib
->
size
) {

1982 
sz_byã
:

1983 i‡(
ty≥
 =
ç_§c
)

1984 
	`Ârötf
(
o
, " uint8 srcdata = DATAREG(srcreg);\n");

1986 
	`Ârötf
(
o
, " uint8 dstdata = DATAREG(dstreg);\n");

1988 
sz_w‹d
:

1989 i‡(
ty≥
 =
ç_§c
)

1990 
	`Ârötf
(
o
, " uint16 srcdata = DATAREG(srcreg);\n");

1992 
	`Ârötf
(
o
, " uint16 dstdata = DATAREG(dstreg);\n");

1994 
sz_l⁄g
:

1995 i‡(
ty≥
 =
ç_§c
)

1996 
	`Ârötf
(
o
, " uint32 srcdata = DATAREG(srcreg);\n");

1998 
	`Ârötf
(
o
, " uint32 dstdata = DATAREG(dstreg);\n");

2001 
	`Ârötf
(
o
, "ERROR size\n");

2005 
dt_Aªg
:

2006 
iib
->
size
) {

2007 
sz_byã
:

2008 i‡(
ty≥
 =
ç_§c
)

2009 
	`Ârötf
(
o
, " uint8 srcdata = ADDRREG(srcreg);\n");

2011 
	`Ârötf
(
o
, " uint8 dstdata = ADDRREG(dstreg);\n");

2013 
sz_w‹d
:

2014 i‡(
ty≥
 =
ç_§c
)

2015 
	`Ârötf
(
o
, " uint16 srcdata = ADDRREG(srcreg);\n");

2017 
	`Ârötf
(
o
, " uint16 dstdata = ADDRREG(dstreg);\n");

2019 
sz_l⁄g
:

2020 i‡(
ty≥
 =
ç_§c
)

2021 
	`Ârötf
(
o
, " uint32 srcdata = ADDRREG(srcreg);\n");

2023 
	`Ârötf
(
o
, " uint32 dstdata = ADDRREG(dstreg);\n");

2026 
	`Ârötf
(
o
, "ERROR size\n");

2030 
dt_Aöd
:

2031 
dt_Adec
:

2032 
dt_Aöc
:

2033 
dt_Adis
:

2034 
dt_Aidx
:

2035 
dt_AbsW
:

2036 
dt_AbsL
:

2037 
dt_Pdis
:

2038 
dt_Pidx
:

2039 
iib
->
size
) {

2040 
sz_byã
:

2041 i‡(
ty≥
 =
ç_§c
)

2042 
	`Ârötf
(
o
, " uint8 srcdata = fetchbyte(srcaddr);\n");

2044 
	`Ârötf
(
o
, " uint8 dstdata = fetchbyte(dstaddr);\n");

2046 
sz_w‹d
:

2047 i‡(
ty≥
 =
ç_§c
)

2048 
	`Ârötf
(
o
, " uint16 srcdata = fetchword(srcaddr);\n");

2050 
	`Ârötf
(
o
, " uint16 dstdata = fetchword(dstaddr);\n");

2052 
sz_l⁄g
:

2053 i‡(
ty≥
 =
ç_§c
)

2054 
	`Ârötf
(
o
, " uint32 srcdata = fetchlong(srcaddr);\n");

2056 
	`Ârötf
(
o
, " uint32 dstdata = fetchlong(dstaddr);\n");

2059 
	`Ârötf
(
o
, "ERROR size\n");

2063 
dt_ImmB
:

2064 i‡(
ty≥
 =
ç_§c
)

2065 
	`Ârötf
(
o
, " uint8 srcdata = ipc->src;\n");

2067 
	`Ârötf
(
o
, " uint8 dstdata = ipc->dst;\n");

2069 
dt_ImmW
:

2070 i‡(
ty≥
 =
ç_§c
)

2071 
	`Ârötf
(
o
, " uint16 srcdata = ipc->src;\n");

2073 
	`Ârötf
(
o
, " uint16 dstdata = ipc->dst;\n");

2075 
dt_ImmL
:

2076 i‡(
ty≥
 =
ç_§c
)

2077 
	`Ârötf
(
o
, " uint32 srcdata = ipc->src;\n");

2079 
	`Ârötf
(
o
, " uint32 dstdata = ipc->dst;\n");

2081 
dt_ImmS
:

2082 i‡(
ty≥
 =
ç_§c
)

2083 
	`Ârötf
(
o
, " unsig√d i¡ srcd©®%d;\n", 
iib
->
immvÆue
);

2085 
	`Ârötf
(
o
, " unsig√d i¡ d°d©®%d;\n", 
iib
->
immvÆue
);

2087 
dt_Imm3
:

2088 
dt_Imm4
:

2089 
dt_Imm8
:

2090 i‡(
ty≥
 =
ç_§c
)

2091 
	`Ârötf
(
o
, " unsigned int srcdata = ipc->src;\n");

2093 
	`Ârötf
(
o
, " unsigned int dstdata = ipc->dst;\n");

2095 
dt_Imm8s
:

2096 i‡(
ty≥
 =
ç_§c
)

2097 
	`Ârötf
(
o
, " signed int srcdata = ipc->src;\n");

2099 
	`Ârötf
(
o
, " signed int dstdata = ipc->dst;\n");

2102 
	`Ârötf
(
o
, "ERROR\n");

2104 
	}
}

2106 
	$gíî©e_ó°‹e
(
FILE
 *
o
, 
t_iib
 *
iib
, 
t_ty≥
 
ty≥
)

2110 
ty≥
 =
ç_d°
 ? 
iib
->
dty≥
 : iib->
°y≥
) {

2111 
dt_Dªg
:

2112 
iib
->
size
) {

2113 
sz_byã
:

2114 i‡(
ty≥
 =
ç_§c
)

2115 
	`Ârötf
(
o
, " DATAREG(srcreg) = (DATAREG(srcreg) & ~0xff) | "

2118 
	`Ârötf
(
o
, " DATAREG(dstreg) = (DATAREG(dstreg) & ~0xff) | "

2121 
sz_w‹d
:

2122 i‡(
ty≥
 =
ç_§c
)

2123 
	`Ârötf
(
o
, " DATAREG(srcreg) = (DATAREG(srcreg) & ~0xffff) | "

2126 
	`Ârötf
(
o
, " DATAREG(dstreg) = (DATAREG(dstreg) & ~0xffff) | "

2129 
sz_l⁄g
:

2130 i‡(
ty≥
 =
ç_§c
)

2131 
	`Ârötf
(
o
, " DATAREG(srcreg) = outdata;\n");

2133 
	`Ârötf
(
o
, " DATAREG(dstreg) = outdata;\n");

2136 
	`Ârötf
(
o
, "ERROR size\n");

2140 
dt_Aªg
:

2141 
iib
->
size
) {

2142 
sz_byã
:

2143 i‡(
ty≥
 =
ç_§c
)

2144 
	`Ârötf
(
o
, " ADDRREG(srcreg) = (ADDRREG(srcreg) & ~0xff) | "

2147 
	`Ârötf
(
o
, " ADDRREG(dstreg) = (ADDRREG(dstreg) & ~0xff) | "

2150 
sz_w‹d
:

2151 i‡(
ty≥
 =
ç_§c
)

2152 
	`Ârötf
(
o
, " ADDRREG(srcreg) = (ADDRREG(srcreg) & ~0xffff) | "

2155 
	`Ârötf
(
o
, " ADDRREG(dstreg) = (ADDRREG(dstreg) & ~0xffff) | "

2158 
sz_l⁄g
:

2159 i‡(
ty≥
 =
ç_§c
)

2160 
	`Ârötf
(
o
, " ADDRREG(srcreg) = outdata;\n");

2162 
	`Ârötf
(
o
, " ADDRREG(dstreg) = outdata;\n");

2165 
	`Ârötf
(
o
, "ERROR size\n");

2169 
dt_Adec
:

2170 
iib
->
size
) {

2171 
sz_byã
:

2172 i‡(
ty≥
 =
ç_§c
)

2173 
	`Ârötf
(
o
, " storebyte(srcaddr, outdata);\n");

2175 
	`Ârötf
(
o
, " storebyte(dstaddr, outdata);\n");

2177 
sz_w‹d
:

2178 i‡(
ty≥
 =
ç_§c
)

2179 
	`Ârötf
(
o
, " storeword(srcaddr, outdata);\n");

2181 
	`Ârötf
(
o
, " storeword(dstaddr, outdata);\n");

2183 
sz_l⁄g
:

2184 
	`Ârötf
(
o
, " /*Öre-decrementÜong store must writeÜow 16 bits\n"

2186 i‡(
ty≥
 =
ç_§c
) {

2187 
	`Ârötf
(
o
, " storeword(srcaddr + 2, (uint16)outdata);\n");

2188 
	`Ârötf
(
o
, " storeword(srcaddr, (uint16)(outdata >> 16));\n");

2190 
	`Ârötf
(
o
, " storeword(dstaddr + 2, (uint16)outdata);\n");

2191 
	`Ârötf
(
o
, " storeword(dstaddr, (uint16)(outdata >> 16));\n");

2195 
	`Ârötf
(
o
, "ERROR size\n");

2198 
dt_Aöd
:

2199 
dt_Aöc
:

2200 
dt_Adis
:

2201 
dt_Aidx
:

2202 
dt_AbsW
:

2203 
dt_AbsL
:

2204 
dt_Pdis
:

2205 
dt_Pidx
:

2206 
iib
->
size
) {

2207 
sz_byã
:

2208 i‡(
ty≥
 =
ç_§c
)

2209 
	`Ârötf
(
o
, " storebyte(srcaddr, outdata);\n");

2211 
	`Ârötf
(
o
, " storebyte(dstaddr, outdata);\n");

2213 
sz_w‹d
:

2214 i‡(
ty≥
 =
ç_§c
)

2215 
	`Ârötf
(
o
, " storeword(srcaddr, outdata);\n");

2217 
	`Ârötf
(
o
, " storeword(dstaddr, outdata);\n");

2219 
sz_l⁄g
:

2220 i‡(
ty≥
 =
ç_§c
)

2221 
	`Ârötf
(
o
, " storelong(srcaddr, outdata);\n");

2223 
	`Ârötf
(
o
, " storelong(dstaddr, outdata);\n");

2226 
	`Ârötf
(
o
, "ERROR size\n");

2230 
	`Ârötf
(
o
, "ERRORÅype\n");

2232 
	}
}

2234 
	$gíî©e_outd©a
(
FILE
 *
o
, 
t_iib
 *
iib
, c⁄° *
öô
)

2236 
iib
->
size
) {

2237 
sz_byã
:

2238 
	`Ârötf
(
o
, " uint8 ");

2240 
sz_w‹d
:

2241 
	`Ârötf
(
o
, " uint16 ");

2243 
sz_l⁄g
:

2244 
	`Ârötf
(
o
, " uint32 ");

2247 
	`Ârötf
(
o
, "ERROR size\n");

2250 
	`Ârötf
(
o
, "outd©a%s%s;\n", (
öô
 && init[0]) ? " = " : "",

2251 
öô
 ? init : "");

2252 
	}
}

2254 
	$gíî©e_cc
(
FILE
 *
o
, 
t_iib
 *
iib
)

2256 
iib
->
cc
) {

2258 
	`Ârötf
(
o
, " uint8 cc = 1;\n");

2261 
	`Ârötf
(
o
, " uint8 cc = 0;\n");

2264 
	`Ârötf
(
o
, " uint8 cc = !(CFLAG || ZFLAG);\n");

2267 
	`Ârötf
(
o
, " uint8 cc = CFLAG || ZFLAG;\n");

2270 
	`Ârötf
(
o
, " uint8 cc = !CFLAG;\n");

2273 
	`Ârötf
(
o
, " uint8 cc = CFLAG;\n");

2276 
	`Ârötf
(
o
, " uint8 cc = !ZFLAG;\n");

2279 
	`Ârötf
(
o
, " uint8 cc = ZFLAG;\n");

2282 
	`Ârötf
(
o
, " uint8 cc = !VFLAG;\n");

2285 
	`Ârötf
(
o
, " uint8 cc = VFLAG;\n");

2288 
	`Ârötf
(
o
, " uint8 cc = !NFLAG;\n");

2291 
	`Ârötf
(
o
, " uint8 cc = NFLAG;\n");

2294 
	`Ârötf
(
o
, " uint8 cc = (NFLAG == VFLAG);\n");

2297 
	`Ârötf
(
o
, " uint8 cc = (NFLAG != VFLAG);\n");

2300 
	`Ârötf
(
o
, " uint8 cc = !ZFLAG && (NFLAG == VFLAG);\n");

2303 
	`Ârötf
(
o
, " uint8 cc = ZFLAG || (NFLAG != VFLAG);\n");

2306 
	`Ârötf
(
o
, "ERROR cc\n");

2309 
	}
}

2311 
	$gíî©e_°dÊag_n
(
FILE
 *
o
, 
t_iib
 *
iib
)

2313 
iib
->
size
) {

2314 
sz_byã
:

2315 
	`Ârötf
(
o
, " NFLAG = ((sint8)outdata) < 0;\n");

2317 
sz_w‹d
:

2318 
	`Ârötf
(
o
, " NFLAG = ((sint16)outdata) < 0;\n");

2320 
sz_l⁄g
:

2321 
	`Ârötf
(
o
, " NFLAG = ((sint32)outdata) < 0;\n");

2324 
	`Ârötf
(
o
, "ERROR size\n");

2327 
	}
}

2329 
	$gíî©e_°dÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
)

2331 ()
iib
;

2332 
	`Ârötf
(
o
, " ZFLAG = !outdata;\n");

2333 
	}
}

2335 
	$gíî©e_˛rÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2337 ()
iib
;

2338 
	`Ârötf
(
o
, " VFLAG = 0;\n");

2339 
	}
}

2341 
	$gíî©e_˛rÊag_c
(
FILE
 *
o
, 
t_iib
 *
iib
)

2343 ()
iib
;

2344 
	`Ârötf
(
o
, " CFLAG = 0;\n");

2345 
	}
}

2347 
	$gíî©e_˛rÊag_n
(
FILE
 *
o
, 
t_iib
 *
iib
)

2349 ()
iib
;

2350 
	`Ârötf
(
o
, " NFLAG = 0;\n");

2351 
	}
}

2353 
	$gíî©e_£tÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
)

2355 ()
iib
;

2356 
	`Ârötf
(
o
, " ZFLAG = 1;\n");

2357 
	}
}

2359 
	$gíî©e_subÊag_c
(
FILE
 *
o
, 
t_iib
 *
iib
)

2366 ()
iib
;

2367 
	`Ârötf
(
o
, " CFLAG = srcdata > dstdata;\n");

2368 
	}
}

2370 
	$gíî©e_subÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2377 ()
iib
;

2378 
	`Ârötf
(
o
, " XFLAG = CFLAG = srcdata > dstdata;\n");

2379 
	}
}

2381 
	$gíî©e_subxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2384 
	`Ârötf
(
o
, " {\n");

2385 
iib
->
size
) {

2386 
sz_byã
:

2387 
	`Ârötf
(
o
, " int Sm = (sint8)srcdata < 0;\n");

2388 
	`Ârötf
(
o
, " int Dm = (sint8)dstdata < 0;\n");

2389 
	`Ârötf
(
o
, " int Rm = (sint8)outdata < 0;\n");

2391 
sz_w‹d
:

2392 
	`Ârötf
(
o
, " int Sm = (sint16)srcdata < 0;\n");

2393 
	`Ârötf
(
o
, " int Dm = (sint16)dstdata < 0;\n");

2394 
	`Ârötf
(
o
, " int Rm = (sint16)outdata < 0;\n");

2396 
sz_l⁄g
:

2397 
	`Ârötf
(
o
, " int Sm = (sint32)srcdata < 0;\n");

2398 
	`Ârötf
(
o
, " int Dm = (sint32)dstdata < 0;\n");

2399 
	`Ârötf
(
o
, " int Rm = (sint32)outdata < 0;\n");

2402 
	`Ârötf
(
o
, "ERROR size\n");

2405 
	`Ârötf
(
o
, " XFLAG = CFLAG = (Sm && !Dm) || (Rm && (!Dm || Sm));\n");

2406 
	`Ârötf
(
o
, " }\n");

2407 
	}
}

2409 
	$gíî©e_cm∑Êag_c
(
FILE
 *
o
, 
t_iib
 *
iib
)

2413 ()
iib
;

2414 
	`Ârötf
(
o
, " CFLAG = (uint32)(sint32)(sint16)srcdata > dstdata;\n");

2415 
	}
}

2417 
	$gíî©e_subÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2427 
iib
->
size
) {

2428 
sz_byã
:

2429 
	`Ârötf
(
o
, " VFLAG = (((sint8)srcdata < 0) != ((sint8)dstdata < 0)) ");

2430 
	`Ârötf
(
o
, "&&\n (((sint8)dstdata < 0) != ((sint8)outdata < 0));\n");

2432 
sz_w‹d
:

2433 
	`Ârötf
(
o
, " VFLAG = (((sint16)srcdata < 0) != ((sint16)dstdata < 0)) ");

2434 
	`Ârötf
(
o
, "&&\n (((sint16)dstdata < 0) != ((sint16)outdata < 0));\n");

2436 
sz_l⁄g
:

2437 
	`Ârötf
(
o
, " VFLAG = (((sint32)srcdata < 0) != ((sint32)dstdata < 0)) ");

2438 
	`Ârötf
(
o
, "&&\n (((sint32)dstdata < 0) != ((sint32)outdata < 0));\n");

2441 
	`Ârötf
(
o
, "ERROR size\n");

2444 
	}
}

2446 
	$gíî©e_cm∑Êag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2450 ()
iib
;

2451 
	`Ârötf
(
o
, " VFLAG = (((sint32)(sint16)srcdata < 0) != ");

2452 
	`Ârötf
(
o
, "((sint32)dstdata < 0)) ");

2453 
	`Ârötf
(
o
, "&&\n (((sint32)dstdata < 0) != ((sint32)outdata < 0));\n");

2454 
	}
}

2456 
	$gíî©e_°dxÊag_z
(
FILE
 *
o
, 
t_iib
 *
iib
)

2458 ()
iib
;

2459 
	`Ârötf
(
o
, " if (outdata) ZFLAG = 0;\n");

2460 
	}
}

2462 
	$gíî©e_addÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2471 
iib
->
size
) {

2472 
sz_byã
:

2473 
	`Ârötf
(
o
, " XFLAG = CFLAG = srcdata > (0xFFu - (uint8)dstdata);\n");

2475 
sz_w‹d
:

2476 
	`Ârötf
(
o
, " XFLAG = CFLAG = srcdata > (0xFFFFu - (uint16)dstdata);\n");

2478 
sz_l⁄g
:

2479 
	`Ârötf
(
o
, " XFLAG = CFLAG = srcdata > (uint32)~(uint32)dstdata;\n");

2482 
	`Ârötf
(
o
, "ERROR size\n");

2487 
	}
}

2489 
	$gíî©e_addxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2492 
	`Ârötf
(
o
, " {\n");

2493 
iib
->
size
) {

2494 
sz_byã
:

2495 
	`Ârötf
(
o
, " int Sm = (sint8)srcdata < 0;\n");

2496 
	`Ârötf
(
o
, " int Dm = (sint8)dstdata < 0;\n");

2497 
	`Ârötf
(
o
, " int Rm = (sint8)outdata < 0;\n");

2499 
sz_w‹d
:

2500 
	`Ârötf
(
o
, " int Sm = (sint16)srcdata < 0;\n");

2501 
	`Ârötf
(
o
, " int Dm = (sint16)dstdata < 0;\n");

2502 
	`Ârötf
(
o
, " int Rm = (sint16)outdata < 0;\n");

2504 
sz_l⁄g
:

2505 
	`Ârötf
(
o
, " int Sm = (sint32)srcdata < 0;\n");

2506 
	`Ârötf
(
o
, " int Dm = (sint32)dstdata < 0;\n");

2507 
	`Ârötf
(
o
, " int Rm = (sint32)outdata < 0;\n");

2510 
	`Ârötf
(
o
, "ERROR size\n");

2513 
	`Ârötf
(
o
, " XFLAG = CFLAG = (Sm && Dm) || (!Rm && (Dm || Sm));\n");

2514 
	`Ârötf
(
o
, " }\n");

2515 
	}
}

2517 
	$gíî©e_addÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2525 
iib
->
size
) {

2526 
sz_byã
:

2527 
	`Ârötf
(
o
, " VFLAG = (((sint8)srcdata < 0) == ((sint8)dstdata < 0)) ");

2528 
	`Ârötf
(
o
, "&&\n (((sint8)dstdata < 0) != ((sint8)outdata < 0));\n");

2530 
sz_w‹d
:

2531 
	`Ârötf
(
o
, " VFLAG = (((sint16)srcdata < 0) == ((sint16)dstdata < 0)) ");

2532 
	`Ârötf
(
o
, "&&\n (((sint16)dstdata < 0) != ((sint16)outdata < 0));\n");

2534 
sz_l⁄g
:

2535 
	`Ârötf
(
o
, " VFLAG = (((sint32)srcdata < 0) == ((sint32)dstdata < 0)) ");

2536 
	`Ârötf
(
o
, "&&\n (((sint32)dstdata < 0) != ((sint32)outdata < 0));\n");

2539 
	`Ârötf
(
o
, "ERROR size\n");

2542 
	}
}

2544 
	$gíî©e_√gÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2546 ()
iib
;

2548 
	`Ârötf
(
o
, " XFLAG = CFLAG = srcdata ? 1 : 0;\n");

2549 
	}
}

2551 
	$gíî©e_√gÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2557 
iib
->
size
) {

2558 
sz_byã
:

2559 
	`Ârötf
(
o
, " VFLAG = (srcdata == (1u<<7));\n");

2561 
sz_w‹d
:

2562 
	`Ârötf
(
o
, " VFLAG = (srcdata == (1u<<15));\n");

2564 
sz_l⁄g
:

2565 
	`Ârötf
(
o
, " VFLAG = (srcdata == (1u<<31));\n");

2568 
	`Ârötf
(
o
, "ERROR size\n");

2571 
	}
}

2573 
	$gíî©e_√gxÊag_cx
(
FILE
 *
o
, 
t_iib
 *
iib
)

2577 
	`Ârötf
(
o
, " XFLAG = CFLAG ");

2578 
iib
->
size
) {

2579 
sz_byã
:

2580 
	`Ârötf
(
o
, "= ((sint8)srcdata < 0) || ((sint8)outdata < 0);\n");

2582 
sz_w‹d
:

2583 
	`Ârötf
(
o
, "= ((sint16)srcdata < 0) || ((sint16)outdata < 0);\n");

2585 
sz_l⁄g
:

2586 
	`Ârötf
(
o
, "= ((sint32)srcdata < 0) || ((sint32)outdata < 0);\n");

2589 
	`Ârötf
(
o
, "ERROR size\n");

2592 
	}
}

2594 
	$gíî©e_√gxÊag_v
(
FILE
 *
o
, 
t_iib
 *
iib
)

2598 
iib
->
size
) {

2599 
sz_byã
:

2600 
	`Ârötf
(
o
, " VFLAG = ((sint8)srcdata < 0) && ((sint8)outdata < 0);\n");

2602 
sz_w‹d
:

2603 
	`Ârötf
(
o
, " VFLAG = ((sint16)srcdata < 0) && ((sint16)outdata < 0);\n");

2605 
sz_l⁄g
:

2606 
	`Ârötf
(
o
, " VFLAG = ((sint32)srcdata < 0) && ((sint32)outdata < 0);\n");

2609 
	`Ârötf
(
o
, "ERROR size\n");

2612 
	}
}

2614 
	$gíî©e_bôs
(
FILE
 *
o
, 
t_iib
 *
iib
)

2616 
iib
->
size
) {

2617 
sz_byã
:

2618 
	`Ârötf
(
o
, " uint8 bits = 8;\n");

2620 
sz_w‹d
:

2621 
	`Ârötf
(
o
, " uint8 bits = 16;\n");

2623 
sz_l⁄g
:

2624 
	`Ârötf
(
o
, " uint8 bits = 32;\n");

2627 
	`Ârötf
(
o
, "ERROR size\n");

2630 
	}
}

	@src/generator68k/generator.h

1 #ifde‡
HAVE_CONFIG_H


2 
	~<c⁄fig.h
>

5 #i‚de‡
_GENERATOR_H_


6 
	#_GENERATOR_H_


	)

12 
	~"SDL_ty≥s.h
"

13 
	#uöt8
 
Uöt8


	)

14 
	#uöt16
 
Uöt16


	)

15 
	#uöt32
 
Uöt32


	)

16 
	#söt8
 
Söt8


	)

17 
	#söt16
 
Söt16


	)

18 
	#söt32
 
Söt32


	)

20 
	#GEN_RAMLENGTH
 64*1024

	)

22 
	#LEN_IPCLISTTABLE
 16*1024

	)

44 #ifde‡
WORDS_BIGENDIAN


45 
	#LOCENDIAN16
(
y
Ë(y)

	)

46 
	#LOCENDIAN32
(
y
Ë(y)

	)

47 
	#BYTES_HIGHFIRST


	)

49 
	#LOCENDIAN16
(
y
Ë((((y)>>8)&0x00FF)+((((y)<<8)&0xFF00)))

	)

50 
	#LOCENDIAN32
(
y
) ( (((y)>>24) & 0x000000FF) + \

51 (((
y
)>>8) & 0x0000FF00) + \

52 (((
y
)<<8) & 0x00FF0000) + \

53 (((
y
)<<24Ë& 0xFF000000Ë)

	)

57 
	mç_§c
, 
	mç_d°


58 } 
	tt_ty≥
;

61 
	msz_n⁄e
, 
	msz_byã
, 
	msz_w‹d
, 
	msz_l⁄g


62 } 
	tt_size
;

65 
	mdt_Dªg
, 
	mdt_Aªg
, 
	mdt_Aöd
, 
	mdt_Aöc
, 
	mdt_Adec
, 
	mdt_Adis
, 
	mdt_Aidx
,

66 
	mdt_AbsW
, 
	mdt_AbsL
, 
	mdt_Pdis
, 
	mdt_Pidx
,

67 
	mdt_ImmB
, 
	mdt_ImmW
, 
	mdt_ImmL
, 
	mdt_ImmS
,

68 
	mdt_Imm3
, 
	mdt_Imm4
, 
	mdt_Imm8
, 
	mdt_Imm8s
, 
	mdt_ImmV
,

69 
	mdt_IŒ


70 } 
	tt_d©©y≥
;

73 
	mó_Dªg
, 
	mó_Aªg
, 
	mó_Aöd
, 
	mó_Aöc
, 
	mó_Adec
, 
	mó_Adis
, 
	mó_Aidx
,

74 
	mó_AbsW
, 
	mó_AbsL
, 
	mó_Pdis
, 
	mó_Pidx
, 
	mó_Imm


75 } 
	tt_óty≥s
;

78 
	mi_ILLG
,

79 
	mi_OR
, 
	mi_ORSR
,

80 
	mi_AND
, 
	mi_ANDSR
,

81 
	mi_EOR
, 
	mi_EORSR
,

82 
	mi_SUB
, 
	mi_SUBA
, 
	mi_SUBX
,

83 
	mi_ADD
, 
	mi_ADDA
, 
	mi_ADDX
,

84 
	mi_MULU
, 
	mi_MULS
,

85 
	mi_CMP
, 
	mi_CMPA
,

86 
	mi_BTST
, 
	mi_BCHG
, 
	mi_BCLR
, 
	mi_BSET
,

87 
	mi_MOVE
, 
	mi_MOVEA
,

88 
	mi_MOVEPMR
, 
	mi_MOVEPRM
,

89 
	mi_MOVEFSR
, 
	mi_MOVETSR
,

90 
	mi_MOVEMRM
, 
	mi_MOVEMMR
,

91 
	mi_MOVETUSP
, 
	mi_MOVEFUSP
,

92 
	mi_NEG
, 
	mi_NEGX
, 
	mi_CLR
, 
	mi_NOT
,

93 
	mi_ABCD
, 
	mi_SBCD
, 
	mi_NBCD
,

94 
	mi_SWAP
,

95 
	mi_PEA
, 
	mi_LEA
,

96 
	mi_EXT
, 
	mi_EXG
,

97 
	mi_TST
, 
	mi_TAS
, 
	mi_CHK
,

98 
	mi_TRAPV
, 
	mi_TRAP
, 
	mi_RESET
, 
	mi_NOP
, 
	mi_STOP
,

99 
	mi_LINK
, 
	mi_UNLK
,

100 
	mi_RTE
, 
	mi_RTS
, 
	mi_RTR
,

101 
	mi_JSR
, 
	mi_JMP
, 
	mi_Scc
, 
	mi_SF
, 
	mi_DBcc
, 
	mi_DBRA
, 
	mi_Bcc
, 
	mi_BSR
,

102 
	mi_DIVU
, 
	mi_DIVS
,

103 
	mi_ASR
, 
	mi_LSR
, 
	mi_ROXR
, 
	mi_ROR
,

104 
	mi_ASL
, 
	mi_LSL
, 
	mi_ROXL
, 
	mi_ROL
,

105 
	mi_LINE10
, 
	mi_LINE15


106 } 
	tt_m√m⁄ic
;

109 
uöt16
 
	mmask
;

110 
uöt16
 
	mbôs
;

111 
t_m√m⁄ic
 
	mm√m⁄ic
;

113 
	m¥iv
:1;

114 
	mídblk
:1;

115 
	mimm_nŸzîo
:1;

116 
	mu£d
:5;

117 
	m£t
:5;

118 } 
	mÊags
;

119 
t_size
 
	msize
;

120 
t_d©©y≥
 
	m°y≥
;

121 
t_d©©y≥
 
	mdty≥
;

122 
	msbôpos
:4;

123 
	mdbôpos
:4;

124 
	mimmvÆue
;

125 
	mcc
;

126 
	mfun˙um
;

127 
	mw‹dÀn
;

128 
	m˛ocks
;

129 } 
	tt_iib
;

131 
	#IIB_FLAG_X
 1<<0

	)

132 
	#IIB_FLAG_N
 1<<1

	)

133 
	#IIB_FLAG_Z
 1<<2

	)

134 
	#IIB_FLAG_V
 1<<3

	)

135 
	#IIB_FLAG_C
 1<<4

	)

138 
t_m√m⁄ic
 
	mm√m⁄ic
;

139 c⁄° *
	m«me
;

140 } 
	tt_m√m⁄ic_èbÀ
;

142 
t_m√m⁄ic_èbÀ
 
m√m⁄ic_èbÀ
[];

144 c⁄° *
c⁄dôi⁄_èbÀ
[];

148 #i‚de‡
BYTES_HIGHFIRST


149 
	mc
:1;

150 
	mv
:1;

151 
	mz
:1;

152 
	mn
:1;

153 
	mx
:1;

155 
	mi0
:1;

156 
	mi1
:1;

157 
	mi2
:1;

159 
	ms
:1;

161 
	mt
:1;

163 
	mt
:1;

165 
	ms
:1;

167 
	mi2
:1;

168 
	mi1
:1;

169 
	mi0
:1;

171 
	mx
:1;

172 
	mn
:1;

173 
	mz
:1;

174 
	mv
:1;

175 
	mc
:1;

177 } 
	m§_°ru˘
;

178 
uöt16
 
	m§_öt
;

179 } 
	tt_§
;

182 
uöt32
 
	mpc
;

183 
uöt32
 
	m•
;

184 
t_§
 
	m§
;

185 
uöt16
 
	m°›
;

186 
uöt32
 
	mªgs
[16];

187 
uöt16
 
	m≥ndög
;

188 } 
	tt_ªgs
;

190 
	#SR_CFLAG
 (1<<0)

	)

191 
	#SR_VFLAG
 (1<<1)

	)

192 
	#SR_ZFLAG
 (1<<2)

	)

193 
	#SR_NFLAG
 (1<<3)

	)

194 
	#SR_XFLAG
 (1<<4)

	)

195 
	#SR_SFLAG
 (1<<13)

	)

196 
	#SR_TFLAG
 (1<<15)

	)

202 #i‚de‡
GENERATOR_LOGGING


203 
	#LOG_DEBUG3
(
x
Ë

	)

204 
	#LOG_DEBUG2
(
x
Ë

	)

205 
	#LOG_DEBUG1
(
x
Ë

	)

206 
	#LOG_USER
(
x
Ë

	)

207 
	#LOG_VERBOSE
(
x
Ë

	)

208 
	#LOG_NORMAL
(
x
Ë

	)

209 
	#LOG_CRITICAL
(
x
Ë

	)

210 
	#LOG_REQUEST
(
x
Ë

	)

212 
	#LOG_DEBUG3
(
x
Ë

	)

213 
	#LOG_DEBUG2
(
x
Ë

	)

214 
	#LOG_DEBUG1
(
x
Ë

	)

215 
	#LOG_USER
(
x
Ë
ui_log_u£r
 ## 
	)
x

216 
	#LOG_VERBOSE
(
x
Ë
ui_log_vîbo£
 ## 
	)
x

217 
	#LOG_NORMAL
(
x
Ë
ui_log_n‹mÆ
 ## 
	)
x

218 
	#LOG_CRITICAL
(
x
Ë
ui_log_¸ôiˇl
 ## 
	)
x

219 
	#LOG_REQUEST
(
x
Ë
ui_log_ªque°
 ## 
	)
x

222 c⁄° *
c⁄dôi⁄_èbÀ
[];

223 
t_m√m⁄ic_èbÀ
 
m√m⁄ic_èbÀ
[];

	@src/generator68k/mem68k.h

1 #i‚de‡
_MEM68K_H_


2 
	#_MEM68K_H_


	)

5 
	mmem_byã
, 
	mmem_w‹d
, 
	mmem_l⁄g


6 } 
	tt_memty≥
;

9 
uöt16
 
	m°¨t
;

10 
uöt16
 
	míd
;

11 
	muöt8
 *(*
	mmem±r
)(
uöt32
 
	maddr
);

12 
uöt8
 (*
„tch_byã
)(
uöt32
 
	maddr
);

13 
uöt16
 (*
„tch_w‹d
)(
uöt32
 
	maddr
);

14 
uöt32
 (*
„tch_l⁄g
)(uöt32 
	maddr
);

15 (*
	m°‹e_byã
)(
uöt32
 
	maddr
, 
uöt8
 
	md©a
);

16 (*
	m°‹e_w‹d
)(
uöt32
 
	maddr
, 
uöt16
 
	md©a
);

17 (*
	m°‹e_l⁄g
)(
uöt32
 
	maddr
, uöt32 
	md©a
);

18 } 
	tt_mem68k_def
;

21 
	ma
;

22 
	mb
;

23 
	mc
;

24 
	mup
;

25 
	mdown
;

26 
	mÀ·
;

27 
	mright
;

28 
	m°¨t
;

29 } 
	tt_keys
;

31 
t_mem68k_def
 
mem68k_def
[];

32 
t_keys
 
mem68k_c⁄t
[2];

34 
mem68k_öô
();

36 
uöt8
 *(*
mem68k_mem±r
[0x1000])(
uöt32
 
addr
);

37 
	$uöt8
 (*
mem68k_„tch_byã
[0x1000])(
uöt32
 
addr
);

38 
	$uöt16
 (*
mem68k_„tch_w‹d
[0x1000])(
uöt32
 
addr
);

39 
	$uöt32
 (*
mem68k_„tch_l⁄g
[0x1000])(
uöt32
 
addr
);

40 (*
mem68k_°‹e_byã
[0x1000])(
uöt32
 
addr
, 
uöt8
 
d©a
);

41 (*
mem68k_°‹e_w‹d
[0x1000])(
uöt32
 
addr
, 
uöt16
 
d©a
);

42 (*
mem68k_°‹e_l⁄g
[0x1000])(
uöt32
 
addr
, uöt32 
d©a
);

44 #ifde‡
DIRECTRAMEN


46 
__ölöe__
 
uöt8
 
	$„tchbyã
(
uöt32
 
addr
) {

47 
adup
=((
addr
) & 0xFFFFFF)>>12;

49 i‡(
adup
 >=0x100 &&ádup <=0x10F) {

50 
addr
&=0xffff;

51  (*(
uöt8
 *Ë(
mem‹y
.
øm
 + 
addr
));

53 i‡(
adup
 >=0x200 &&ádup <=0x2ff) {

54 
addr
&=0xfffff;

55  (*(
uöt8
 *Ë(
mem‹y
.
˝u
 + 
b™kaddªss
 + 
addr
));

57 i‡(
adup
 >=0x000 &&ádup <=0x0ff) {

58 
addr
&=0xfffff;

59  (*(
uöt8
 *Ë(
mem‹y
.
˝u
 + 
addr
));

61 i‡(
adup
 >=0xc00 &&ádup <=0xc1f) {

62 
addr
&=0x1ffff;

63  (*(
uöt8
 *Ë(
mem‹y
.
bios
 + 
addr
));

65  
mem68k_„tch_byã
[((
addr
) & 0xFFFFFF)>>12]((addr) & 0xFFFFFF);

66 
	}
}

67 
__ölöe__
 
uöt16
 
	$„tchw‹d
(
uöt32
 
addr
) {

68 
adup
=((
addr
) & 0xFFFFFF)>>12;

70 i‡(
adup
 >=0x100 &&ádup <=0x10F) {

71 
addr
&=0xffff;

72  
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
øm
 + 
addr
));

74 i‡(
adup
 >=0x200 &&ádup <=0x2ff) {

75 
addr
&=0xfffff;

76  
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
b™kaddªss
 + 
addr
));

78 i‡(
adup
 >=0x000 &&ádup <=0x0ff) {

79 
addr
&=0xfffff;

80  
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
addr
));

82 i‡(
adup
 >=0xc00 &&ádup <=0xc1f) {

83 
addr
&=0x1ffff;

84  
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
bios
 + 
addr
));

86  
mem68k_„tch_w‹d
[((
addr
) & 0xFFFFFF)>>12]((addr) & 0xFFFFFF);

87 
	}
}

88 
__ölöe__
 
uöt32
 
	$„tchl⁄g
(
uöt32
 
addr
) {

89 
adup
=((
addr
) & 0xFFFFFF)>>12;

90 #ifde‡
ALIGNLONGS


91 i‡(
adup
 >=0x100 &&ádup <=0x10F) {

92 
addr
&=0xffff;

93  (
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
øm
 + 
addr
))<< 16) |

94 
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
øm
 + 
addr
 + 2));

96 i‡(
adup
 >=0x200 &&ádup <=0x2ff) {

97 
addr
&=0xfffff;

98  (
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
b™kaddªss
 + 
addr
))<< 16) |

99 
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
b™kaddªss
 + 
addr
 + 2 ));

101 i‡(
adup
 >=0x000 &&ádup <=0x0ff) {

102 
addr
&=0xfffff;

103  (
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
addr
))<< 16) |

104 
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
˝u
 + 
addr
 + 2));

106 i‡(
adup
 >=0xc00 &&ádup <=0xc1f) {

107 
addr
&=0x1ffff;

108  (
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
bios
 + 
addr
))<< 16) |

109 
	`LOCENDIAN16
(*(
uöt16
 *Ë(
mem‹y
.
bios
 + 
addr
 + 2));

112 i‡(
adup
 >=0x100 &&ádup <=0x10F) {

113 
addr
&=0xffff;

114  
	`LOCENDIAN32
(*(
uöt32
 *Ë(
mem‹y
.
øm
 + 
addr
));

116 i‡(
adup
 >=0x200 &&ádup <=0x2ff) {

117 
addr
&=0xfffff;

118  
	`LOCENDIAN32
(*(
uöt32
 *Ë(
mem‹y
.
˝u
 + 
b™kaddªss
 + 
addr
));

120 i‡(
adup
 >=0x000 &&ádup <=0x0ff) {

121 
addr
&=0xfffff;

122  
	`LOCENDIAN32
(*(
uöt32
 *Ë(
mem‹y
.
˝u
 + 
addr
));

124 i‡(
adup
 >=0xc00 &&ádup <=0xc1f) {

125 
addr
&=0x1ffff;

126  
	`LOCENDIAN32
(*(
uöt32
 *Ë(
mem‹y
.
bios
 + 
addr
));

129  
mem68k_„tch_l⁄g
[((
addr
) & 0xFFFFFF)>>12]((addr) & 0xFFFFFF);

130 
	}
}

133 
	#„tchbyã
(
addr
Ë
mem68k_„tch_byã
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF)

	)

134 
	#„tchw‹d
(
addr
Ë
mem68k_„tch_w‹d
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF)

	)

135 
	#„tchl⁄g
(
addr
Ë
mem68k_„tch_l⁄g
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF)

	)

143 #ifde‡
DIRECTRAM


147 
__ölöe__
 
	$°‹ebyã
(
uöt32
 
addr
, 
uöt8
 
d©a
)

149 i‡((
addr
>>16) == 0x10) {

150 
addr
&= 0xffff;

151 *(
uöt8
 *)(
˝u68k_øm
 + 
addr
Ë
d©a
;

153 
mem68k_°‹e_byã
[((
addr
Ë& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,
d©a
);

155 
	}
}

157 
__ölöe__
 
	$°‹ew‹d
(
uöt32
 
addr
, 
uöt16
 
d©a
)

160 i‡((
addr
 >>16) == 0x10) {

161 
addr
&= 0xffff;

162 *(
uöt16
 *)(
˝u68k_øm
 + 
addr
Ë
	`LOCENDIAN16
(
d©a
);

164 
mem68k_°‹e_w‹d
[((
addr
Ë& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,
d©a
);

166 
	}
}

168 
__ölöe__
 
	$°‹ñ⁄g
(
uöt32
 
addr
, uöt32 
d©a
)

171 i‡((
addr
 >>16) == 0x10) {

172 
addr
&= 0xffff;

173 #ifde‡
ALIGNLONGS


174 *(
uöt16
 *)(
˝u68k_øm
 + 
addr
Ë
	`LOCENDIAN16
((uöt16)(
d©a
 >> 16));

175 *(
uöt16
 *)(
˝u68k_øm
 + 
addr
 + 2Ë
	`LOCENDIAN16
((uöt16)(
d©a
));

177 *(
uöt32
 *)(
˝u68k_øm
 + 
addr
Ë
	`LOCENDIAN32
(
d©a
);

180 
mem68k_°‹e_l⁄g
[((
addr
Ë& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,
d©a
);

182 
	}
}

186 
	#°‹ebyã
(
addr
,
d©a
Ë
mem68k_°‹e_byã
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,d©a)

	)

187 
	#°‹ew‹d
(
addr
,
d©a
Ë
mem68k_°‹e_w‹d
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,d©a)

	)

188 
	#°‹ñ⁄g
(
addr
,
d©a
Ë
mem68k_°‹e_l⁄g
[(◊ddrË& 0xFFFFFF)>>12](◊ddrË& 0xFFFFFF,d©a)

	)

	@src/generator68k/reg68k.c

3 
	~"gíî©‹.h
"

4 
	~"ªgi°îs.h
"

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<°dlib.h
>

11 
	~"ªg68k.h
"

12 
	~"˝u68k.h
"

13 
	~"mem68k.h
"

14 
	~"compûe.h
"

28 
uöt32
 
b™kaddªss
;

32 
	$ªg68k_¥öt°©
() {

33 
i
;

34 
t_ù˛i°
 *
li°
;

35 
i
=0;i<
LEN_IPCLISTTABLE
;i++) {

36 
li°
 = 
ù˛i°
[
i
];

37 
li°
) {

38 
	`¥ötf
("%08x %d\n", 
li°
->
pc
, (Ói°->
∑ss
);

39 
li°
 =Üi°->
√xt
;

42 
	}
}

49 
	$ªg68k_exã∫Æ_°ï
()

51 
t_ùc
 
ùc
;

52 
t_iib
 *
piib
;

53 
˛ks
;

57 i‡(
ªgs
.
≥ndög
 && (‘egs.
§
.
§_öt
 >> 8) & 7) <Ñegs.pending)

58 
	`ªg68k_öã∫Æ_autove˘‹
(
ªgs
.
≥ndög
);

60 i‡(!(
piib
 = 
˝u68k_iibèbÀ
[
	`„tchw‹d
(
ªgs
.
pc
)]))

61 
	`¥ötf
("InvÆid in°ru˘i⁄ @ %08X [%04X]\n", ()
ªgs
.
pc
,

62 
	`„tchw‹d
(
ªgs
.
pc
));

64 
	`˝u68k_ùc
(
ªgs
.
pc
,

65 
mem68k_mem±r
[(
ªgs
.
pc
 >> 12) & 0xfff] (regs.pc &

66 0xFFFFFF), 
piib
,

67 &
ùc
);

68 
˝u68k_fun˘abÀ
[
	`„tchw‹d
(
ªgs
.
pc
Ë* 2 + 1] (&
ùc
);

69 
˛ks
 = 
piib
->
˛ocks
;

71 
˝u68k_˛ocks
 +
˛ks
;

72  
˛ks
;

73 
	}
}

78 
	$ªg68k_exã∫Æ_execuã
(
˛ocks
)

80 
ödex
;

81 
t_ù˛i°
 *
li°
;

82 
t_ùc
 *
ùc
;

83 
uöt32
 
pc24
;

85 
uöt32
 
b™k
;

86 
t_ùc
 
°ï_ùc
;

87 
t_iib
 *
°ï_piib
;

88 
˛ks
;

91 
˛ks
 = 
˛ocks
;

93 i‡(
ªgs
.
≥ndög
 && (‘egs.
§
.
§_öt
 >> 8) & 7) <Ñegs.pending)

94 
	`ªg68k_öã∫Æ_autove˘‹
(
ªgs
.
≥ndög
);

97 
pc24
 = 
ªgs
.
pc
 & 0xffffff;

99 i‡((
pc24
&0xF00000)==0x200000)

100 
b™k
=
b™kaddªss
;

102 
b™k
=0;

103 i‡((
pc24
>>16) == 0x10) {

107 
°ï_piib
 = 
˝u68k_iibèbÀ
[
	`„tchw‹d
(
ªgs
.
pc
)];

108 i‡(!
°ï_piib
)

109 
	`¥ötf
("Invalid instruction (iibássert) @ %08X\n",

110 ()
ªgs
.
pc
);

111 
	`˝u68k_ùc
(
ªgs
.
pc
,

112 
mem68k_mem±r
[(
ªgs
.
pc
 >> 12) &

113 0xfff] (
ªgs
.
pc
 & 0xFFFFFF),

114 
°ï_piib
, &
°ï_ùc
);

115 
˝u68k_fun˘abÀ
[
	`„tchw‹d
(
ªgs
.
pc
Ë* 2 + 1] (&
°ï_ùc
);

116 
˛ks
 -
°ï_piib
->
˛ocks
;

117 
˝u68k_˛ocks
 +
°ï_piib
->
˛ocks
;

119 !
°ï_piib
->
Êags
.
ídblk
);

120 
li°
 = 
NULL
;

122 
ödex
 = (
pc24
 >> 1Ë& (
LEN_IPCLISTTABLE
 - 1);

123 
li°
 = 
ù˛i°
[
ödex
];

124 
li°
 && (li°->
pc
 !
pc24
 ||Üi°->
b™k
!=bank)) {

126 
li°
 =Üi°->
√xt
;

130 #i‡((
deföed
 
PROCESSOR_SPARC
Ë&& (deföed 
GENERATOR_JIT
))

131 i‡(!
li°
) {

132 
li°
 = 
	`˝u68k_makeù˛i°
(
pc24
);

133 
li°
->
∑ss
=0;

134 
li°
->
√xt
 = 
ù˛i°
[
ödex
];

135 
ù˛i°
[
ödex
] = 
li°
;

136 
li°
->
compûed
 = 
	`compûe_make
(list);

138 
li°
->
∑ss
++;

140 
li°
->
	`compûed
((
t_ùc
 *) (list + 1));

143 i‡(!
li°
) {

146 
li°
 = 
	`˝u68k_makeù˛i°
(
pc24
);

147 
li°
->
√xt
 = 
ù˛i°
[
ödex
];

148 
ù˛i°
[
ödex
] = 
li°
;

150 
ùc
 = (
t_ùc
 *Ë(
li°
 + 1);

153 
ùc
->
	`fun˘i⁄
(ipc);

154 
ùc
++;

156 *(*)
ùc
);

159 
˛ks
 -
li°
->
˛ocks
;

160 
˝u68k_˛ocks
 +
li°
->
˛ocks
;

164 
˛ks
 > 0);

166  -
˛ks
;

167 
	}
}

171 
	$ªg68k_exã∫Æ_autove˘‹
(
avno
)

174 
	`ªg68k_öã∫Æ_autove˘‹
(
avno
);

176 
	}
}

190 
	$ªg68k_öã∫Æ_autove˘‹
(
avno
)

192 
cuæevñ
 = (
ªgs
.
§
.
§_öt
 >> 8) & 7;

193 
uöt32
 
tm∑ddr
;

195 i‡((
cuæevñ
 < 
avno
 ||ávnÿ=7Ë&& !
˝u68k_‰ozí
) {

196 i‡(
ªgs
.
°›
) {

197 
	`LOG_DEBUG1
(("stop finished"));

199 
ªgs
.
pc
 += 4;

200 
ªgs
.
°›
 = 0;

202 i‡(!
ªgs
.
§
.
§_°ru˘
.
s
) {

203 
ªgs
.ªgs[15] ^ªgs.
•
;

204 
ªgs
.
•
 ^=Ñegs.regs[15];

205 
ªgs
.ªgs[15] ^ªgs.
•
;

206 
ªgs
.
§
.
§_°ru˘
.
s
 = 1;

208 
ªgs
.regs[15] -= 4;

209 
	`°‹ñ⁄g
(
ªgs
.ªgs[15],Ñegs.
pc
);

210 
ªgs
.regs[15] -= 2;

211 
	`°‹ew‹d
(
ªgs
.ªgs[15],Ñegs.
§
.
§_öt
);

212 
ªgs
.
§
.
§_°ru˘
.
t
 = 0;

213 
ªgs
.
§
.
§_öt
 &= ~0x0700;

214 
ªgs
.
§
.
§_öt
 |
avno
 << 8;

215 
tm∑ddr
 = 
ªgs
.
pc
;

216 
ªgs
.
pc
 = 
	`„tchl⁄g
((
V_AUTO
 + 
avno
 - 1) * 4);

217 
	`LOG_USER
(("AUTOVECTOR %d: %X -> %X", 
avno
, 
tm∑ddr
, 
ªgs
.
pc
));

218 
ªgs
.
≥ndög
 = 0;

220 
	`LOG_USER
(("%08Xáutove˘‹ %dÖídög", 
ªgs
.
pc
, 
avno
));

222 
ªgs
.
≥ndög
 = 
avno
;

224 
	}
}

229 
	$ªg68k_öã∫Æ_ve˘‹
(
vno
, 
uöt32
 
ﬁdpc
)

231 i‡(!
ªgs
.
§
.
§_°ru˘
.
s
) {

232 
ªgs
.ªgs[15] ^ªgs.
•
;

233 
ªgs
.
•
 ^=Ñegs.regs[15];

234 
ªgs
.ªgs[15] ^ªgs.
•
;

235 
ªgs
.
§
.
§_°ru˘
.
s
 = 1;

237 
ªgs
.regs[15] -= 4;

238 
	`°‹ñ⁄g
(
ªgs
.ªgs[15], 
ﬁdpc
);

239 
ªgs
.regs[15] -= 2;

240 
	`°‹ew‹d
(
ªgs
.ªgs[15],Ñegs.
§
.
§_öt
);

241 
ªgs
.
pc
 = 
	`„tchl⁄g
(
vno
 * 4);

243 
	}
}

	@src/generator68k/reg68k.h

9 
ªg68k_exã∫Æ_°ï
();

10 
ªg68k_exã∫Æ_execuã
(
˛ocks
);

11 
ªg68k_exã∫Æ_autove˘‹
(
avno
);

13 
ªg68k_öã∫Æ_autove˘‹
(
avno
);

14 
ªg68k_öã∫Æ_ve˘‹
(
vno
, 
uöt32
 
ﬁdpc
);

	@src/generator68k/registers.h

5 #i‚de‡
_REGISTER_H_


6 
	#_REGISTER_H_


	)

8 #ifde‡
PROCESSOR_ARM


9 
uöt32
 
ªg68k_pc
 
asm
 ("r7");

10 
uöt32
 *
ªg68k_ªgs
 
asm
 ("r8");

11 
t_§
 
ªg68k_§
 
asm
 ("r9");

21 #ifde‡
PROCESSOR_INTEL


22 
uöt32
 
ªg68k_pc
 
asm
 ("%ebx");

23 
uöt32
 *
ªg68k_ªgs
 
asm
 ("%edi");

24 
t_§
 
ªg68k_§
 
asm
 ("%esi");

27 
uöt32
 
ªg68k_pc
;

28 
uöt32
 *
ªg68k_ªgs
;

29 
t_§
 
ªg68k_§
;

36 
uöt32
 
ªg68k_pc
;

37 
uöt32
 *
ªg68k_ªgs
;

38 
t_§
 
ªg68k_§
;

	@src/generator68k/tab68k.c

2 #i‚de‡
_TAB68K_H_


3 
	#_TAB68K_H_


	)

5 
	~"gíî©‹.h
"

7 c⁄° *
	gc⁄dôi⁄_èbÀ
[] = {

18 
t_m√m⁄ic_èbÀ
 
	gm√m⁄ic_èbÀ
[] = {

19 { 
i_ILLG
, "ILLEGAL" },

20 { 
i_OR
, "OR" },

21 { 
i_ORSR
, "ORSR" },

22 { 
i_AND
, "AND" },

23 { 
i_ANDSR
, "ANDSR" },

24 { 
i_EOR
, "EOR" },

25 { 
i_EORSR
, "EORSR" },

26 { 
i_SUB
, "SUB" },

27 { 
i_SUBA
, "SUBA" },

28 { 
i_SUBX
, "SUBX" },

29 { 
i_ADD
, "ADD" },

30 { 
i_ADDA
, "ADDA" },

31 { 
i_ADDX
, "ADDX" },

32 { 
i_MULU
, "MULU" },

33 { 
i_MULS
, "MULS" },

34 { 
i_CMP
, "CMP" },

35 { 
i_CMPA
, "CMPA" },

36 { 
i_BTST
, "BTST" },

37 { 
i_BCHG
, "BCHG" },

38 { 
i_BCLR
, "BCLR" },

39 { 
i_BSET
, "BSET" },

40 { 
i_MOVE
, "MOVE" },

41 { 
i_MOVEA
, "MOVEA" },

42 { 
i_MOVEPMR
, "MOVEPMR" },

43 { 
i_MOVEPRM
, "MOVEPRM" },

44 { 
i_MOVEFSR
, "MOVEFSR" },

45 { 
i_MOVETSR
, "MOVETSR" },

46 { 
i_MOVEMRM
, "MOVEMRM" },

47 { 
i_MOVEMMR
, "MOVEMMR" },

48 { 
i_MOVETUSP
, "MOVETUSP" },

49 { 
i_MOVEFUSP
, "MOVEFUSP" },

50 { 
i_NEG
, "NEG" },

51 { 
i_NEGX
, "NEGX" },

52 { 
i_CLR
, "CLR" },

53 { 
i_NOT
, "NOT" },

54 { 
i_ABCD
, "ABCD" },

55 { 
i_SBCD
, "SBCD" },

56 { 
i_NBCD
, "NBCD" },

57 { 
i_SWAP
, "SWAP" },

58 { 
i_PEA
, "PEA" },

59 { 
i_LEA
, "LEA" },

60 { 
i_EXT
, "EXT" },

61 { 
i_EXG
, "EXG" },

62 { 
i_TST
, "TST" },

63 { 
i_TAS
, "TAS" },

64 { 
i_CHK
, "CHK" },

65 { 
i_TRAPV
, "TRAPV" },

66 { 
i_TRAP
, "TRAP" },

67 { 
i_RESET
, "RESET" },

68 { 
i_NOP
, "NOP" },

69 { 
i_STOP
, "STOP" },

70 { 
i_LINK
, "LINK" },

71 { 
i_UNLK
, "UNLK" },

72 { 
i_RTE
, "RTE" },

73 { 
i_RTS
, "RTS" },

74 { 
i_RTR
, "RTR" },

75 { 
i_JSR
, "JSR" },

76 { 
i_JMP
, "JMP" },

77 { 
i_Scc
, "Scc" },

78 { 
i_SF
, "SF" },

79 { 
i_DBcc
, "DBcc" },

80 { 
i_DBRA
, "DBRA" },

81 { 
i_Bcc
, "Bcc" },

82 { 
i_BSR
, "BSR" },

83 { 
i_DIVU
, "DIVU" },

84 { 
i_DIVS
, "DIVS" },

85 { 
i_ASR
, "ASR" },

86 { 
i_LSR
, "LSR" },

87 { 
i_ROXR
, "ROXR" },

88 { 
i_ROR
, "ROR" },

89 { 
i_ASL
, "ASL" },

90 { 
i_LSL
, "LSL" },

91 { 
i_ROXL
, "ROXL" },

92 { 
i_ROL
, "ROL" },

93 { 
i_LINE10
, "LINE10" },

94 { 
i_LINE15
, "LINE15" },

95 { 
i_ILLG
, "" },

	@src/generator68k/tab68k2.c

2 #i‚de‡
_TAB68K_H_


3 
	#_TAB68K_H_


	)

5 
	~"gíî©‹.h
"

7 c⁄° *
	gc⁄dôi⁄_èbÀ
[] = {

18 
t_m√m⁄ic_èbÀ
 
	gm√m⁄ic_èbÀ
[] = {

19 { 
i_ILLG
, "ILLEGAL" },

20 { 
i_OR
, "OR" },

21 { 
i_ORSR
, "ORSR" },

22 { 
i_AND
, "AND" },

23 { 
i_ANDSR
, "ANDSR" },

24 { 
i_EOR
, "EOR" },

25 { 
i_EORSR
, "EORSR" },

26 { 
i_SUB
, "SUB" },

27 { 
i_SUBA
, "SUBA" },

28 { 
i_SUBX
, "SUBX" },

29 { 
i_ADD
, "ADD" },

30 { 
i_ADDA
, "ADDA" },

31 { 
i_ADDX
, "ADDX" },

32 { 
i_MULU
, "MULU" },

33 { 
i_MULS
, "MULS" },

34 { 
i_CMP
, "CMP" },

35 { 
i_CMPA
, "CMPA" },

36 { 
i_BTST
, "BTST" },

37 { 
i_BCHG
, "BCHG" },

38 { 
i_BCLR
, "BCLR" },

39 { 
i_BSET
, "BSET" },

40 { 
i_MOVE
, "MOVE" },

41 { 
i_MOVEA
, "MOVEA" },

42 { 
i_MOVEPMR
, "MOVEPMR" },

43 { 
i_MOVEPRM
, "MOVEPRM" },

44 { 
i_MOVEFSR
, "MOVEFSR" },

45 { 
i_MOVETSR
, "MOVETSR" },

46 { 
i_MOVEMRM
, "MOVEMRM" },

47 { 
i_MOVEMMR
, "MOVEMMR" },

48 { 
i_MOVETUSP
, "MOVETUSP" },

49 { 
i_MOVEFUSP
, "MOVEFUSP" },

50 { 
i_NEG
, "NEG" },

51 { 
i_NEGX
, "NEGX" },

52 { 
i_CLR
, "CLR" },

53 { 
i_NOT
, "NOT" },

54 { 
i_ABCD
, "ABCD" },

55 { 
i_SBCD
, "SBCD" },

56 { 
i_NBCD
, "NBCD" },

57 { 
i_SWAP
, "SWAP" },

58 { 
i_PEA
, "PEA" },

59 { 
i_LEA
, "LEA" },

60 { 
i_EXT
, "EXT" },

61 { 
i_EXG
, "EXG" },

62 { 
i_TST
, "TST" },

63 { 
i_TAS
, "TAS" },

64 { 
i_CHK
, "CHK" },

65 { 
i_TRAPV
, "TRAPV" },

66 { 
i_TRAP
, "TRAP" },

67 { 
i_RESET
, "RESET" },

68 { 
i_NOP
, "NOP" },

69 { 
i_STOP
, "STOP" },

70 { 
i_LINK
, "LINK" },

71 { 
i_UNLK
, "UNLK" },

72 { 
i_RTE
, "RTE" },

73 { 
i_RTS
, "RTS" },

74 { 
i_RTR
, "RTR" },

75 { 
i_JSR
, "JSR" },

76 { 
i_JMP
, "JMP" },

77 { 
i_Scc
, "Scc" },

78 { 
i_SF
, "SF" },

79 { 
i_DBcc
, "DBcc" },

80 { 
i_DBRA
, "DBRA" },

81 { 
i_Bcc
, "Bcc" },

82 { 
i_BSR
, "BSR" },

83 { 
i_DIVU
, "DIVU" },

84 { 
i_DIVS
, "DIVS" },

85 { 
i_ASR
, "ASR" },

86 { 
i_LSR
, "LSR" },

87 { 
i_ROXR
, "ROXR" },

88 { 
i_ROR
, "ROR" },

89 { 
i_ASL
, "ASL" },

90 { 
i_LSL
, "LSL" },

91 { 
i_ROXL
, "ROXL" },

92 { 
i_ROL
, "ROL" },

93 { 
i_LINE10
, "LINE10" },

94 { 
i_LINE15
, "LINE15" },

95 { 
i_ILLG
, "" },

	@src/generator68k_interf.c

23 #ifde‡
HAVE_CONFIG_H


24 
	~<c⁄fig.h
>

27 #ifde‡
USE_GENERATOR68K


28 
	~<°dlib.h
>

30 
	~"gíî©‹68k/gíî©‹.h
"

31 
	~"gíî©‹68k/˝u68k.h
"

32 
	~"gíî©‹68k/ªg68k.h
"

33 
	~"gíî©‹68k/mem68k.h
"

34 
	~"mem‹y.h
"

35 
	~"emu.h
"

36 
	~"°©e.h
"

37 
	~"debug.h
"

38 
	~"c⁄f.h
"

39 
	~"gnutû.h
"

41 
˝u68k_˛ocks
;

42 
Uöt8
 *
˝u68k_rom
;

43 
˝u68k_romÀn
;

44 
Uöt8
 *
˝u68k_øm
;

46 
Uöt32
 
ªg68k_pc
;

47 
t_§
 
ªg68k_§
;

49 
Uöt8
 *
mem68k_mem±r_bad
(
Uöt32
 
addr
);

50 
Uöt8
 *
mem68k_mem±r_˝u
(
Uöt32
 
addr
);

51 
Uöt8
 *
mem68k_mem±r_bios
(
Uöt32
 
addr
);

52 
Uöt8
 *
mem68k_mem±r_˝u_bk
(
Uöt32
 
addr
);

53 
Uöt8
 *
mem68k_mem±r_øm
(
Uöt32
 
addr
);

55 
diss68k_gëdum∂öe
(
uöt32
 
addr68k
, 
uöt8
 *
addr
, *
dum∂öe
);

57 
t_mem68k_def
 
	gmem68k_def
[] = {

58 {0x000, 0x1000, 
mem68k_mem±r_bad
,

59 
mem68k_„tch_övÆid_byã
, 
mem68k_„tch_övÆid_w‹d
,

60 
mem68k_„tch_övÆid_l⁄g
,

61 
mem68k_°‹e_övÆid_byã
, 
mem68k_°‹e_övÆid_w‹d
,

62 
mem68k_°‹e_övÆid_l⁄g
},

65 {0x100, 0x1FF, 
mem68k_mem±r_øm
,

66 
mem68k_„tch_øm_byã
, 
mem68k_„tch_øm_w‹d
, 
mem68k_„tch_øm_l⁄g
,

67 
mem68k_°‹e_øm_byã
, 
mem68k_°‹e_øm_w‹d
, 
mem68k_°‹e_øm_l⁄g
},

70 {0x200, 0x2ff, 
mem68k_mem±r_˝u_bk
,

71 
NULL
, NULL, NULL, NULL, NULL, NULL},

74 {0x000, 0x0ff, 
mem68k_mem±r_˝u
,

75 
mem68k_„tch_˝u_byã
, 
mem68k_„tch_˝u_w‹d
, 
mem68k_„tch_˝u_l⁄g
,

76 
mem68k_°‹e_övÆid_byã
, 
mem68k_°‹e_övÆid_w‹d
,

77 
mem68k_°‹e_övÆid_l⁄g
},

80 {0xc00, 0xcFf, 
mem68k_mem±r_bios
,

81 
mem68k_„tch_bios_byã
, 
mem68k_„tch_bios_w‹d
,

82 
mem68k_„tch_bios_l⁄g
,

83 
mem68k_°‹e_övÆid_byã
, 
mem68k_°‹e_övÆid_w‹d
,

84 
mem68k_°‹e_övÆid_l⁄g
},

87 {0xd00, 0xdff, 
mem68k_mem±r_bad
,

88 
mem68k_„tch_§am_byã
, 
mem68k_„tch_§am_w‹d
,

89 
mem68k_„tch_§am_l⁄g
,

90 
mem68k_°‹e_§am_byã
, 
mem68k_°‹e_§am_w‹d
,

91 
mem68k_°‹e_§am_l⁄g
},

94 {0x400, 0x401, 
mem68k_mem±r_bad
,

95 
mem68k_„tch_∑l_byã
, 
mem68k_„tch_∑l_w‹d
, 
mem68k_„tch_∑l_l⁄g
,

96 
mem68k_°‹e_∑l_byã
, 
mem68k_°‹e_∑l_w‹d
, 
mem68k_°‹e_∑l_l⁄g
},

99 {0x3c0, 0x3c0, 
mem68k_mem±r_bad
,

100 
mem68k_„tch_video_byã
, 
mem68k_„tch_video_w‹d
,

101 
mem68k_„tch_video_l⁄g
,

102 
mem68k_°‹e_video_byã
, 
mem68k_°‹e_video_w‹d
,

103 
mem68k_°‹e_video_l⁄g
},

106 {0x300, 0x300, 
mem68k_mem±r_bad
,

107 
mem68k_„tch_˘l1_byã
, 
mem68k_„tch_˘l1_w‹d
,

108 
mem68k_„tch_˘l1_l⁄g
,

109 
mem68k_°‹e_övÆid_byã
, 
mem68k_°‹e_övÆid_w‹d
,

110 
mem68k_°‹e_övÆid_l⁄g
},

113 {0x340, 0x340, 
mem68k_mem±r_bad
,

114 
mem68k_„tch_˘l2_byã
, 
mem68k_„tch_˘l2_w‹d
,

115 
mem68k_„tch_˘l2_l⁄g
,

116 
mem68k_°‹e_övÆid_byã
, 
mem68k_°‹e_övÆid_w‹d
,

117 
mem68k_°‹e_övÆid_l⁄g
},

120 {0x380, 0x380, 
mem68k_mem±r_bad
,

121 
mem68k_„tch_˘l3_byã
, 
mem68k_„tch_˘l3_w‹d
,

122 
mem68k_„tch_˘l3_l⁄g
,

123 
mem68k_°‹e_pd4990_byã
, 
mem68k_°‹e_pd4990_w‹d
,

124 
mem68k_°‹e_pd4990_l⁄g
},

127 {0x320, 0x320, 
mem68k_mem±r_bad
,

128 
mem68k_„tch_coö_byã
, 
mem68k_„tch_coö_w‹d
,

129 
mem68k_„tch_coö_l⁄g
,

130 
mem68k_°‹e_z80_byã
, 
mem68k_°‹e_z80_w‹d
, 
mem68k_°‹e_z80_l⁄g
},

133 {0x800, 0x800, 
mem68k_mem±r_bad
,

134 
mem68k_„tch_mem¸d_byã
, 
mem68k_„tch_mem¸d_w‹d
,

135 
mem68k_„tch_mem¸d_l⁄g
,

136 
mem68k_°‹e_mem¸d_byã
, 
mem68k_°‹e_mem¸d_w‹d
,

137 
mem68k_°‹e_mem¸d_l⁄g
},

140 {0x3A0, 0x3a0, 
mem68k_mem±r_bad
,

141 
mem68k_„tch_övÆid_byã
, 
mem68k_„tch_övÆid_w‹d
,

142 
mem68k_„tch_övÆid_l⁄g
,

143 
mem68k_°‹e_£âög_byã
, 
mem68k_°‹e_£âög_w‹d
,

144 
mem68k_°‹e_£âög_l⁄g
},

146 {0, 0, 
NULL
, NULL, NULL, NULL, NULL, NULL, NULL}

150 
	gUöt8
 *(*
	gmem68k_mem±r
[0x1000]Ë(
Uöt32
 
	gaddr
);

151 
	$Uöt8
(*
mem68k_„tch_byã
[0x1000]Ë(
Uöt32
 
addr
);

152 
	$Uöt16
(*
mem68k_„tch_w‹d
[0x1000]Ë(
Uöt32
 
addr
);

153 
	$Uöt32
(*
mem68k_„tch_l⁄g
[0x1000]Ë(
Uöt32
 
addr
);

154 (*
mem68k_°‹e_byã
[0x1000]Ë(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

155 (*
mem68k_°‹e_w‹d
[0x1000]Ë(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

156 (*
mem68k_°‹e_l⁄g
[0x1000]Ë(
Uöt32
 
addr
, Uöt32 
d©a
);

158 
	$sw≠_mem‹y
(
Uöt8
 * 
mem
, 
Uöt32
 
Àngth
)

160 
i
, 
j
;

163 
i
 = 0; i < 
Àngth
; i += 2) {

164 
j
 = 
mem
[
i
];

165 
mem
[
i
] = mem[i + 1];

166 
mem
[
i
 + 1] = 
j
;

168 
	}
}

172 
	$b™kswôchî_öô
() {

173 
mem68k_def
[2].
„tch_byã
=
mem68k_„tch_bk_n‹mÆ_byã
;

174 
mem68k_def
[2].
„tch_w‹d
=
mem68k_„tch_bk_n‹mÆ_w‹d
;

175 
mem68k_def
[2].
„tch_l⁄g
=
mem68k_„tch_bk_n‹mÆ_l⁄g
;

176 
mem68k_def
[2].
°‹e_byã
=
mem68k_°‹e_bk_n‹mÆ_byã
;

177 
mem68k_def
[2].
°‹e_w‹d
=
mem68k_°‹e_bk_n‹mÆ_w‹d
;

178 
mem68k_def
[2].
°‹e_l⁄g
=
mem68k_°‹e_bk_n‹mÆ_l⁄g
;

179 
	}
}

181 
	$mem68k_öô
()

183 
i
 = 0;

184 
j
;

185 
	`b™kswôchî_öô
();

187 
j
 = 
mem68k_def
[
i
].
°¨t
; j <mem68k_def[i].
íd
; j++) {

188 
mem68k_mem±r
[
j
] = 
mem68k_def
[
i
].
mem±r
;

189 
mem68k_„tch_byã
[
j
] = 
mem68k_def
[
i
].
„tch_byã
;

190 
mem68k_„tch_w‹d
[
j
] = 
mem68k_def
[
i
].
„tch_w‹d
;

191 
mem68k_„tch_l⁄g
[
j
] = 
mem68k_def
[
i
].
„tch_l⁄g
;

192 
mem68k_°‹e_byã
[
j
] = 
mem68k_def
[
i
].
°‹e_byã
;

193 
mem68k_°‹e_w‹d
[
j
] = 
mem68k_def
[
i
].
°‹e_w‹d
;

194 
mem68k_°‹e_l⁄g
[
j
] = 
mem68k_def
[
i
].
°‹e_l⁄g
;

196 
i
++;

198 (
mem68k_def
[
i
].
°¨t
 !0Ë|| (mem68k_def[i].
íd
 != 0));

200 
	}
}

204 
Uöt8
 *
	$mem68k_mem±r_bad
(
Uöt32
 
addr
)

206  
mem‹y
.
rom
.
˝u_m68k
.
p
;

207 
	}
}

209 
Uöt8
 *
	$mem68k_mem±r_˝u
(
Uöt32
 
addr
)

211 i‡(
addr
 < 
˝u68k_romÀn
) {

212  (
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
);

215  
mem‹y
.
rom
.
˝u_m68k
.
p
;

216 
	}
}

218 
Uöt8
 *
	$mem68k_mem±r_bios
(
Uöt32
 
addr
)

220 
addr
 &= 0x1FFFF;

221  (
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
);

222 
	}
}

224 
Uöt8
 *
	$mem68k_mem±r_˝u_bk
(
Uöt32
 
addr
)

226 
addr
 &= 0xFFFFF;

228  (
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
 + 
b™kaddªss
);

229 
	}
}

231 
Uöt8
 *
	$mem68k_mem±r_øm
(
Uöt32
 
addr
)

233 
addr
 &= 0xffff;

234  (
mem‹y
.
øm
 + 
addr
);

235 
	}
}

238 
	$˝u_68k_b™kswôch
(
Uöt32
 
addªss
)

241 
b™kaddªss
 = 
addªss
;

243 
	}
};

245 
	$˝u_68k_ª£t
()

247 
	`˝u68k_ª£t
();

248 
	}
}

250 
Uöt32
 
	gpc
;

253 
	$˝u_68k_mk°©e
(
gzFûe
 
gzf
,
mode
) {

255 
	`mk°©e_d©a
(
gzf
, &
ªgs
, (
t_ªgs
), 
mode
);

257 
	}
}

259 
	$˝u_68k_öô
()

261 
	`¥ötf
("GEN68k CPU INIT\n");

264 
	`˝u68k_˛órˇche
();

266 i‡(!
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("dump"))) {

267 
	`sw≠_mem‹y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.˝u_m68k.
size
);

268 i‡(
mem‹y
.
rom
.
bios_m68k
.
p
[0]==0x10) {

269 
	`¥ötf
("BIOS BYTE1=%08x\n",
mem‹y
.
rom
.
bios_m68k
.
p
[0]);

270 
	`sw≠_mem‹y
(
mem‹y
.
rom
.
bios_m68k
.
p
, mem‹y.rom.bios_m68k.
size
);

272 
	`sw≠_mem‹y
(
mem‹y
.
game_ve˘‹
, 0x80);

276 
˝u68k_øm
 = 
mem‹y
.
øm
;

277 
˝u68k_rom
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

278 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 < 0x100000)

279 
˝u68k_romÀn
 = 
mem‹y
.
rom
.
˝u_m68k
.
size
;

281 
˝u68k_romÀn
 = 0x100000;

282 
	`mem68k_öô
();

283 
	`˝u68k_öô
();

284 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 > 0x100000) {

285 
	`˝u_68k_b™kswôch
(0);

288 
	}
}

291 
	$˝u_68k_run
(
Uöt32
 
nb_cy˛e
)

293 
n
;

294 
n
 = 
	`ªg68k_exã∫Æ_execuã
(
nb_cy˛e
);

302 
	`˝u68k_ídfõld
();

303  
n
;

304 
	}
}

307 
Uöt32
 
	$gí68k_dißs£mbÀ
(
pc
, 
nb_ö°r
)

309 
i
;

310 
buf
[512];

311 
Uöt8
 *
addr
;

313 
i
 = 0; i < 
nb_ö°r
; i++) {

314 
addr
 = 
mem68k_mem±r
[
pc
 >> 12] (pc);

315 
pc
 +
	`diss68k_gëdum∂öe
’c, 
addr
, 
buf
)*2;

316 
	`¥ötf
("%s", 
buf
);

318  
pc
;

319 
	}
}

321 
	$gí68k_dum¥eg
()

323 
i
;

324 
	`¥ötf
("d0=%08x d4=%08xá0=%08xá4=%08x %c%c%c%c%c %04x\n",

325 
ªgs
.regs[0],regs.regs[4],regs.regs[8],regs.regs[12],

326 ((
ªgs
.
§
.
§_öt
 >> 4) & 1 ? 'X' : '-'),

327 ((
ªgs
.
§
.
§_öt
 >> 3) & 1 ? 'N' : '-'),

328 ((
ªgs
.
§
.
§_öt
 >> 2) & 1 ? 'Z' : '-'),

329 ((
ªgs
.
§
.
§_öt
 >> 1) & 1 ? 'V' : '-'),

330 ((
ªgs
.
§
.
§_öt
 ) & 1 ? 'C' : '-'),regs.sr.sr_int);

331 
	`¥ötf
("d1=%08x d5=%08xá1=%08xá5=%08x\n",

332 
ªgs
.regs[1],regs.regs[5],regs.regs[9],regs.regs[13]);

333 
	`¥ötf
("d2=%08x d6=%08xá2=%08xá6=%08x\n",

334 
ªgs
.regs[2],regs.regs[6],regs.regs[10],regs.regs[14]);

335 
	`¥ötf
("d3=%08x d7=%08xá3=%08xá7=%08x usp=%08x\n",

336 
ªgs
.ªgs[3],ªgs.ªgs[7],ªgs.ªgs[11],ªgs.ªgs[15],ªgs.
•
);

338 
	}
}

340 
	$hexdump
(
Uöt32
 
addr
) {

341 
Uöt8
 
c
, 
tmpch¨
[16];

342 
Uöt32
 
tm∑ddr
;

343 
i
, 
j
, 
k
;

344 
tm∑ddr
 = 
addr
 & 0xFFFFFFF0;

345 
i
 = 0; i < 8; i++) {

346 
	`¥ötf
("%08X: %c", 
tm∑ddr
,(
addr
 ==Åmpaddr) ? '>' : ' ' );

347 
j
 = 0; j < 16; j += 2) {

348 
k
 = 
	`„tchw‹d
(
tm∑ddr
) & 0xFFFF;

349 #ifde‡
WORDS_BIGENDIAN


350 
tmpch¨
[
j
 + 1] = 
k
 >> 8;

351 
tmpch¨
[
j
 ] = 
k
 & 0xFF;

353 
tmpch¨
[
j
 ] = 
k
 >> 8;

354 
tmpch¨
[
j
 + 1] = 
k
 & 0xFF;

356 
tm∑ddr
 += 2;

357 
	`¥ötf
("%02X%02X%c",

358 
tmpch¨
[
j
],Åmpchar[j + 1],

359 (–
addr
 =
tm∑ddr
 )&&(
j
!=14))?'>':

360 (((
addr
&0xFFFFFFFE)==(
tm∑ddr
-2))?'<':' ')

363 
	`¥ötf
(" ");

364 
j
 = 0; j < 16; j++) {

365 
c
 = 
tmpch¨
[
j
];

366 if((
c
<32)||(c>126))c='.';

367 
	`¥ötf
("%c", 
c
);

369 
	`¥ötf
("\n");

372 
	}
}

374 
Uöt32
 
	$˝u_68k_gëpc
()

376  
ªgs
.
pc
;

377 
	}
}

379 
	$˝u_68k_run_°ï
()

381  
	`ªg68k_exã∫Æ_°ï
();

382 
	}
}

384 
	$˝u_68k_debugî
((*
exec°ï
)(),(*
dump
)()) {

385 
buf
[200];

386 *
ªs
;

387 *
¨gs
,*
¨g£nd
;

388 
Uöt8
 
debug_íd
=0;

389 
Uöt32
 
hex
=0;

390 
Uöt32
 
asmpc
=0;

391 
i
;

394 
	`¥ötf
("˝u1> ");
	`fÊush
(
°dout
);

395 
ªs
=
	`fgës
(
buf
, 200, 
°dö
);

397 
¨gs
 = 
buf
 + 1;

398 (*
¨gs
) && ((*args) < 32))árgs++;

400 
buf
[0]) {

402 
	`¥ötf
("B [address] Addá breakpointát [address]\n"

417 
	`show_bt
();

420 i‡(
¨gs
) {

421 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

422 i‡(
¨gs
 !
¨g£nd
)

423 
	`add_bp
(
pc
);

425 
	`¥ötf
("Invalid input\n");

429 i‡(
¨gs
) {

430 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

431 i‡(
¨gs
 !
¨g£nd
)

432 
	`dñ_bp
(
pc
);

434 
	`¥ötf
("Invalid input\n");

438 
	`check_bp
(
	`˝u_68k_gëpc
())!=
GN_TRUE
 && 
dbg_°ï
==0) {

439 
	`˝u_68k_dpg_°ï
();

441 i‡(
dbg_°ï
) dbg_step=0;

442 
	`gí68k_dum¥eg
();

443 
	`gí68k_dißs£mbÀ
(
ªgs
.
pc
,1);

446 i‡(
¨gs
) {

447 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

448 i‡(
¨gs
 !
¨g£nd
) {

449 
	`˝u_68k_dpg_°ï
();

450 
	`˝u_68k_gëpc
()!=
pc
 && 
dbg_°ï
==0) {

451 
	`˝u_68k_dpg_°ï
();

454 i‡(
dbg_°ï
) dbg_step=0;

455 
	`gí68k_dum¥eg
();

456 
	`gí68k_dißs£mbÀ
(
ªgs
.
pc
,1);

458 
	`¥ötf
("Invalid input\n");

462 i‡(
¨gs
) {

463 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

464 i‡(
¨gs
 !
¨g£nd
)

465 
ªgs
.
pc
=pc;

467 
	`¥ötf
("Invalid input\n");

471 
	`gí68k_dum¥eg
();

472 
	`gí68k_dißs£mbÀ
(
ªgs
.
pc
,1);

475 i‡(
¨gs
) {

476 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

477 i‡(
¨gs
 !
¨g£nd
) {

478 
i
=0;i<
pc
 && 
dbg_°ï
==0;i++)

479 
	`˝u_68k_dpg_°ï
();

480 i‡(
dbg_°ï
) dbg_step=0;

481 
	`gí68k_dum¥eg
();

482 
	`gí68k_dißs£mbÀ
(
ªgs
.
pc
,1);

484 
	`¥ötf
("Invalid input\n");

488 i‡(
¨gs
) {

489 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

490 i‡(
¨gs
 !
¨g£nd
) {

491 
hex
=
pc
;

493 
	`hexdump
(
hex
);

494 
hex
+=0x80;

499 i‡(
¨gs
) {

500 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

501 i‡(
¨gs
 !
¨g£nd
) {

502 
asmpc
=
pc
;

504 
asmpc
=
	`gí68k_dißs£mbÀ
(asmpc,16);

511 
debug_íd
=1;

514 }
debug_íd
==0);

517 
	}
}

522 
	$˝u_68k_öãºu±
(
a
)

525 
	`ªg68k_exã∫Æ_autove˘‹
(
a
);

526 
	}
}

528 
	$˝u_68k_gëcy˛e
()

530  
˝u68k_˛ocks
;

531 
	}
}

	@src/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #ifdef 
__˝lu•lus


47 *
›èrg
;

61 
›töd
;

66 
›ãº
;

70 
›t›t
;

72 #i‚de‡
__√ed_gë›t


94 
	s›ti⁄


96 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


97 c⁄° *
	g«me
;

99 *
	g«me
;

103 
	ghas_¨g
;

104 *
	gÊag
;

105 
	gvÆ
;

110 
	#no_¨gumít
 0

	)

111 
	#ªquúed_¨gumít
 1

	)

112 
	#›ti⁄Æ_¨gumít
 2

	)

140 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


141 #ifde‡
__GNU_LIBRARY__


145 
gë›t
 (
__¨gc
, *c⁄° *
__¨gv
, c⁄° *
__sh‹t›ts
);

147 
gë›t
 ();

150 #i‚de‡
__√ed_gë›t


151 
gë›t_l⁄g
 (
__¨gc
, *c⁄° *
__¨gv
, c⁄° *
__sh‹t›ts
,

152 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

153 
gë›t_l⁄g_⁄ly
 (
__¨gc
, *c⁄° *
__¨gv
,

154 c⁄° *
__sh‹t›ts
,

155 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

158 
_gë›t_öã∫Æ
 (
__¨gc
, *c⁄° *
__¨gv
,

159 c⁄° *
__sh‹t›ts
,

160 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
,

161 
__l⁄g_⁄ly
);

164 
gë›t
 ();

165 #i‚de‡
__√ed_gë›t


166 
gë›t_l⁄g
 ();

167 
gë›t_l⁄g_⁄ly
 ();

169 
_gë›t_öã∫Æ
 ();

173 #ifdef 
__˝lu•lus


178 #unde‡
__√ed_gë›t


	@src/gngeo_icon.h

4 
	mwidth
;

5 
	mheight
;

6 
	mbyãs_≥r_pixñ
;

7 
	mpixñ_d©a
[32 * 32 * 3 + 1];

8 } 
	ggngeo_ic⁄
 = {

	@src/gnutil.c

9 #ifde‡
HAVE_CONFIG_H


10 
	~<c⁄fig.h
>

12 
	~"SDL.h
"

13 
	~<sys/°©.h
>

14 
	~<sys/ty≥s.h
>

15 
	~<dúít.h
>

16 
	~<î∫o.h
>

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"gnutû.h
"

23 
	gg√º‹
[1024];

25 
	$chomp
(*
°r
) {

26 
i
 = 0;

27 i‡(
°r
) {

28 
°r
[
i
] != 0) {

29 
	`¥ötf
(" %d ", 
°r
[
i
]);

30 
i
++;

32 
	`¥ötf
("\n");

33 i‡(
°r
[
i
 - 1] == 0x0A || str[i - 1] == 0x0D) str[i - 1] = 0;

34 i‡(
°r
[
i
 - 2] == 0x0A || str[i - 2] == 0x0D) str[i - 2] = 0;

37 
	}
}

40 *
	$fûe_ba£«me
(*
fûíame
) {

41 *
t
;

42 
t
 = 
	`°ºchr
(
fûíame
, '/');

43 i‡(
t
) Å + 1;

44  
fûíame
;

45 
	}
}

48 
	$check_dú
(*
dú_«me
) {

49 
DIR
 *
d
;

51 i‡(!(
d
 = 
	`›ídú
(
dú_«me
)Ë&& (
î∫o
 =
ENOENT
)) {

52 #ifde‡
WIN32


53 
	`mkdú
(
dú_«me
);

55 
	`mkdú
(
dú_«me
, 0755);

57  
GN_FALSE
;

59 if(
d
)

60 
	`˛o£dú
(
d
);

61  
GN_TRUE
;

62 
	}
}

67 #ifde‡
EMBEDDED_FS


69 *
	$gë_gngeo_dú
() {

70 *
fûíame
 = 
ROOTPATH
"";

71 
	`¥ötf
("°ew¨d, %s\n", 
fûíame
);

72  
fûíame
;

73 
	}
}

76 *
	$gë_gngeo_dú
() {

77 *
fûíame
 = 
NULL
;

78 #i‡
	`deföed
 (
__AMIGA__
)

79 
Àn
 = 
	`°æí
("/PROGDIR/data/") + 1;

81 
Àn
 = 
	`°æí
(
	`gëív
("HOME")) + strlen("/.gngeo/") + 1;

83 i‡(!
fûíame
) {

84 
fûíame
 = 
	`mÆloc
(
Àn
 *  ());

85 
	`CHECK_ALLOC
(
fûíame
);

86 #i‡
	`deföed
 (
__AMIGA__
)

87 
	`•rötf
(
fûíame
, "/PROGDIR/data/");

89 
	`•rötf
(
fûíame
, "%s/.gngeo/", 
	`gëív
("HOME"));

92 
	`check_dú
(
fûíame
);

94  
fûíame
;

95 
	}
}

98 
	$gn_£t_îr‹_msg
(*
fmt
,...) {

99 
va_li°
 
pv¨
;

100 
	`va_°¨t
(
pv¨
, 
fmt
);

101 
	`v¢¥ötf
(
g√º‹
,
GNERROR_SIZE
,
fmt
,
pv¨
);

102 
	}
}

107 
	$gn_πrim_¶ash
(*
dú
) {

108 i‡(
dú
[
	`°æí
(dir)-1]=='/' && strlen(dir)!=1)

109 
dú
[
	`°æí
(dir)-1]=0;

110 
	}
}

112 
	$gn_°∫ˇt_dú
(*
ba£dú
,*
dú
,
size_t
 
n
) {

113 
	`gn_πrim_¶ash
(
ba£dú
);

115 i‡(
	`°rcmp
(
dú
,".")==0)

117 i‡(
	`°rcmp
(
dú
,"..")==0 ) {

118 i‡(
	`°æí
(
ba£dú
)!=1) {

119 *
¶ash
=
	`°ºchr
(
ba£dú
,'/');

120 i‡(
¶ash
==
ba£dú
)

121 
¶ash
[1]=0;

122 i‡(
¶ash
!=
NULL
)

123 
¶ash
[0]=0;

127 i‡(
	`°æí
(
ba£dú
)!=1Ë
	`°∫ˇt
(ba£dú,"/",
n
);

128 
	`°∫ˇt
(
ba£dú
,
dú
,
n
);

130 
	}
}

	@src/gnutil.h

6 #i‚de‡
GNUTIL_H_


7 
	#GNUTIL_H_


	)

9 *
gë_gngeo_dú
();

10 
chomp
(*
°r
);

11 *
my_fgës
(*
s
, 
size
, 
FILE
 *
°ªam
);

12 *
fûe_ba£«me
(*
fûíame
);

13 
check_dú
(*
dú_«me
);

14 
gn_£t_îr‹_msg
(*
fmt
,...);

15 
gn_°∫ˇt_dú
(*
ba£dú
,*
dú
,
size_t
 
n
);

17 #i‡
deföed
 (
__AMIGA__
)

18 #ifde‡
DATA_DIRECTORY


19 #unde‡
DATA_DIRECTORY


20 
	#DATA_DIRECTORY
 "/PROGDIR/d©a/"

	)

23 #i‡
deföed
 (
WII
)

24 
	#ROOTPATH
 "sd:/≠ps/gngeo/"

	)

25 #ñi‡
deföed
 (
__AMIGA__
)

26 
	#ROOTPATH
 "/PROGDIR/d©a/"

	)

28 
	#ROOTPATH
 ""

	)

33 
	#GNGEO_LOG
(...)

	)

34 
	#DEBUG_LOG
 
¥ötf


	)

37 
	#GN_TRUE
 1

	)

38 
	#GN_FALSE
 0

	)

41 
	#CHECK_ALLOC
(
a
Ë{i‡(!aË{
	`¥ötf
("Ouào‡Mem‹y\n");
	`exô
(1);}}

	)

43 
	#GNERROR_SIZE
 1024

	)

44 
g√º‹
[
GNERROR_SIZE
];

	@src/gp2x.c

3 #ifde‡
HAVE_CONFIG_H


4 
	~<c⁄fig.h
>

8 
	~"SDL.h
"

9 
	~"SDL_gp2x.h
"

10 
	~"c⁄f.h
"

12 
	~<Æloˇ.h
>

13 
	~<°dlib.h
>

14 
	~<sys/mm™.h
>

15 
	~<sys/°©.h
>

16 
	~<f˙é.h
>

17 
	~<sys/io˘l.h
>

18 
	~<sys/soundˇrd.h
>

19 
	~<sys/time.h
>

20 
	~<sys/ªsour˚.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<uni°d.h
>

23 
	~<°rög.h
>

24 
	~<libgí.h
>

25 
	~<°dio.h
>

27 
	~"s¸ìn.h
"

28 
	~"gp2x.h
"

29 
	~"míu.h
"

30 
	~"video.h
"

31 
	~"emu.h
"

32 
	~"ym2610-940/940sh¨ed.h
"

33 
	~"ym2610-940/940¥iv©e.h
"

35 
	#SYS_CLK_FREQ
 7372800

	)

36 
	#GP2X_VIDEO_MEM_SIZE
 ((5*1024*1024Ë- 4096)

	)

41 
	mSYSCLKENREG
,
	mSYSCSETREG
,
	mUPLLVSETREG
,
	mFPLLVSETREG
,

42 
	mDUALINT920
,
	mDUALINT940
,
	mDUALCTRL940
,
	mMEMTIMEX0
,
	mMEMTIMEX1
,
	mDISPCSETREG
,

43 
	mDPC_HS_WIDTH
,
	mDPC_HS_STR
,
	mDPC_HS_END
,
	mDPC_VS_END
,
	mDPC_DE
;

45 
	gsy°em_ªg
;

48 
	gMDIV
,
	gPDIV
,
	gSCALE
;

49 vﬁ©ûê*
	g¨m940code
;

51 
	g˝u‰eq
;

52 
Uöt32
 
	gtvoutfix_ßv
;

53 
	g«me
[256];

54 vﬁ©ûê
_940_d©a_t
 *
	gsh¨ed_d©a
;

55 vﬁ©ûê
_940_˘l_t
 *
	gsh¨ed_˘l
;

56 vﬁ©ûê
_940_¥iv©e_t
 *
	g¥iv©e_d©a
;

58 
	svideo_buckë
 {

59 
video_buckë
 *
	m¥ev
, *
	m√xt
;

60 *
	mba£
;

61 
	msize
;

62 
	mu£d
;

63 
	mdúty
;

64 } 
	tvideo_buckë
;

74 
	$˝u˘æ_öô
()

76 
sy°em_ªg
.
DISPCSETREG
=
gp2x_memªgs
[0x924>>1];

77 
sy°em_ªg
.
UPLLVSETREG
=
gp2x_memªgs
[0x916>>1];

78 
sy°em_ªg
.
FPLLVSETREG
=
gp2x_memªgs
[0x912>>1];

79 
sy°em_ªg
.
SYSCSETREG
=
gp2x_memªgs
[0x91c>>1];

80 
sy°em_ªg
.
SYSCLKENREG
=
gp2x_memªgs
[0x904>>1];

81 
sy°em_ªg
.
DUALINT920
=
gp2x_memªgs
[0x3B40>>1];

82 
sy°em_ªg
.
DUALINT940
=
gp2x_memªgs
[0x3B42>>1];

83 
sy°em_ªg
.
DUALCTRL940
=
gp2x_memªgs
[0x3B48>>1];

84 
sy°em_ªg
.
MEMTIMEX0
=
gp2x_memªgs
[0x3802>>1];

85 
sy°em_ªg
.
MEMTIMEX1
=
gp2x_memªgs
[0x3804>>1];

86 
sy°em_ªg
.
DPC_HS_WIDTH
=
gp2x_memªgs
[0x281A>>1];

87 
sy°em_ªg
.
DPC_HS_STR
=
gp2x_memªgs
[0x281C>>1];

88 
sy°em_ªg
.
DPC_HS_END
=
gp2x_memªgs
[0x281E>>1];

89 
sy°em_ªg
.
DPC_VS_END
=
gp2x_memªgs
[0x2822>>1];

90 
sy°em_ªg
.
DPC_DE
=
gp2x_memªgs
[0x2826>>1];

91 
	}
}

94 
	$˝u˘æ_deöô
()

96 
gp2x_memªgs
[0x910>>1]=
sy°em_ªg
.
FPLLVSETREG
;

97 
gp2x_memªgs
[0x91c>>1]=
sy°em_ªg
.
SYSCSETREG
;

98 
gp2x_memªgs
[0x3B40>>1]=
sy°em_ªg
.
DUALINT920
;

99 
gp2x_memªgs
[0x3B42>>1]=
sy°em_ªg
.
DUALINT940
;

100 
gp2x_memªgs
[0x3B48>>1]=
sy°em_ªg
.
DUALCTRL940
;

101 
gp2x_memªgs
[0x904>>1]=
sy°em_ªg
.
SYSCLKENREG
;

102 
gp2x_memªgs
[0x3802>>1]=
sy°em_ªg
.
MEMTIMEX0
;

103 
gp2x_memªgs
[0x3804>>1]=
sy°em_ªg
.
MEMTIMEX1
 ;

104 
	`un£t_LCD_cu°om_øã
();

105 
	}
}

107 
	#SYS_CLK_FREQ
 7372800

	)

109 
	$SëClock
(
MHZ
)

111 #ifde‡
GP2X


112 
v
;

113 
mdiv
,
pdiv
=3,
sˇÀ
=0;

114 
MHZ
*=1000000;

115 
mdiv
=(
MHZ
*
pdiv
)/
SYS_CLK_FREQ
;

117 
mdiv
=((mdiv-8)<<8) & 0xff00;

118 
pdiv
=((pdiv-2)<<2) & 0xfc;

119 
sˇÀ
&=3;

120 
v
 = 
mdiv
 | 
pdiv
 | 
sˇÀ
;

122 
l
 = 
gp2x_memªgl
[0x808>>2];

123 
gp2x_memªgl
[0x808>>2] = 0xFF8FFFE7;

124 
gp2x_memªgs
[0x910>>1]=
v
;

125 
gp2x_memªgs
[0x0902>>1] & 1);

126 
gp2x_memªgl
[0x808>>2] = 
l
;

128 
	}
}

132 
	mªg
, 
	mvÆmask
, 
	mvÆ
;

134 
	tªg_£âög
;

135 
Uöt8
 *
	gøm_±r
=0;

136 
Uöt8
 *
	gøm_±r2
=0;

139 
ªg_£âög
 
	gøã_Æmo°60
[] =

152 
ªg_£âög
 
	gøã_50
[] =

164 
ªg_£âög
 
	gøã_120_20
[] =

177 
ªg_£âög
 
	gøã_100_02
[] =

191 
ªg_£âög
 *
	gpossibÀ_øãs
[] = { 
øã_Æmo°60
, 
øã_50
, 
øã_120_20
, 
øã_100_02
 };

192 
	$£t_LCD_cu°om_øã
(
lcd_øã_t
 
øã
)

194 
ªg_£âög
 *
£t
;

196 
	`¥ötf
("£âög cu°om LCDÑe‰esh, mode=%i... ", 
øã
); 
	`fÊush
(
°dout
);

197 
£t
 = 
possibÀ_øãs
[
øã
]; së->
ªg
; set++)

199 
vÆ
 = 
gp2x_memªgs
[
£t
->
ªg
 >> 1];

200 
vÆ
 &~
£t
->
vÆmask
;

201 
vÆ
 |
£t
->val;

202 
gp2x_memªgs
[
£t
->
ªg
 >> 1] = 
vÆ
;

204 
	`¥ötf
("done.\n");

205 
	}
}

207 
	$un£t_LCD_cu°om_øã
()

209 
	`¥ötf
("resetÅoÖrev LCDÑefresh.\n");

210 
gp2x_memªgs
[0x914>>1]=
sy°em_ªg
.
UPLLVSETREG
;

211 
gp2x_memªgs
[0x924>>1]=
sy°em_ªg
.
DISPCSETREG
;

212 
gp2x_memªgs
[0x281A>>1]=
sy°em_ªg
.
DPC_HS_WIDTH
;

213 
gp2x_memªgs
[0x281C>>1]=
sy°em_ªg
.
DPC_HS_STR
;

214 
gp2x_memªgs
[0x281E>>1]=
sy°em_ªg
.
DPC_HS_END
;

215 
gp2x_memªgs
[0x2822>>1]=
sy°em_ªg
.
DPC_VS_END
;

216 
gp2x_memªgs
[0x2826>>1]=
sy°em_ªg
.
DPC_DE
;

217 
	}
}

219 
	$£t_RAM_Timögs
(
tRC
, 
tRAS
, 
tWR
, 
tMRD
, 
tRFC
, 
tRP
, 
tRCD
)

221 
tRC
 -1; 
tRAS
 -1; 
tWR
 -1; 
tMRD
 -1; 
tRFC
 -1; 
tRP
 -1; 
tRCD
 -= 1;

222 
gp2x_memªgs
[0x3802>>1] = ((
tMRD
 & 0xFË<< 12Ë| ((
tRFC
 & 0xFË<< 8Ë| ((
tRP
 & 0xFË<< 4Ë| (
tRCD
 & 0xF);

223 
gp2x_memªgs
[0x3804>>1] = ((
tRC
 & 0xFË<< 8Ë| ((
tRAS
 & 0xFË<< 4Ë| (
tWR
 & 0xF);

224 
	}
}

236 
	$¥öt_sh¨ed_°ru˘
() {

237 
	`¥ötf
("Shared data:\n");

238 
	`¥ötf
("Cyl˚: %d sam∂e_øã: %d\n",
sh¨ed_d©a
->
z80_cy˛e
,sh¨ed_d©a->
ßm∂e_øã
);

239 
	`¥ötf
("pcma: %08xÖcmb: %08x\n",(
Uöt32
)
sh¨ed_d©a
->
pcmbuÁ
,(Uöt32)sh¨ed_d©a->
pcmbufb
);

240 
	`¥ötf
("asize: %d bsize: %d\n",
sh¨ed_d©a
->
pcmbuÁ_size
,sh¨ed_d©a->
pcmbufb_size
);

241 
	`¥ötf
("sm1: %08x",(
Uöt32
)
sh¨ed_d©a
->
sm1
);

242 
	`¥ötf
("Shared ctl:\n");

243 
	`¥ötf
("result: %d sound_code: %dÖending_cmd: %dÇmi_pending: %d\n",

244 
sh¨ed_˘l
->
ªsu…_code
,sh¨ed_˘l->
sound_code
,sh¨ed_˘l->
≥ndög_comm™d
,

245 
sh¨ed_˘l
->
nmi_≥ndög
);

246 
	`¥ötf
("z80_run: %d updateym: %d,Ölay_buff:%08x\n",

247 
sh¨ed_˘l
->
z80_run
,sh¨ed_˘l->
upd©eym
,(
Uöt32
)sh¨ed_˘l->
∂ay_buf„r
);

249 
	}
}

251 
	$waô_busy_940
(
job
)

253 
i
;

255 
job
--;

256 
i
 = 0; (
gp2x_memªgs
[0x3b46>>1] & (1<<
job
)) && i < 0x10000; i++)

257 
	`•íd_cy˛es
(8*1024);

258 i‡(
i
 < 0x10000) ;

260 
	`¥ötf
("940 cøshed %d (˙t: %i, ve: ", 
job
, 
sh¨ed_˘l
->
lo›c
);

261 
i
 = 0; i < 8; i++)

262 
	`¥ötf
("%ò", 
sh¨ed_˘l
->
v°¨ts
[
i
]);

263 
	`¥ötf
(")\n");

264 
	`¥öt_sh¨ed_°ru˘
();

266 
	`¥ötf
("irqÖending flags: DUALCPU %04x, SRCPND %08x (see 26), INTPND %08x\n",

267 
gp2x_memªgs
[0x3b46>>1], 
gp2x_memªgl
[0x4500>>2], gp2x_memregl[0x4510>>2]);

268 
	`¥ötf
("œ°Ür: %08x,Üa°job: %i\n", 
sh¨ed_˘l
->
œ°_Ã
, sh¨ed_˘l->
œ°job
);

269 
	`¥ötf
("tryingÅo interrupt..\n");

270 
gp2x_memªgs
[0x3B3E>>1] = 0xffff;

271 
i
 = 0; 
gp2x_memªgs
[0x3b46>>1] && i < 0x10000; i++)

272 
	`•íd_cy˛es
(8*1024);

273 
	`¥ötf
("ò0x%x\n", 
i
);

274 
	`¥ötf
("irqÖending flags: DUALCPU %04x, SRCPND %08x (see 26), INTPND %08x\n",

275 
gp2x_memªgs
[0x3b46>>1], 
gp2x_memªgl
[0x4500>>2], gp2x_memregl[0x4510>>2]);

276 
	`¥ötf
("œ°Ür: %08x,Üa°job: %i\n", 
sh¨ed_˘l
->
œ°_Ã
, sh¨ed_˘l->
œ°job
);

277 
	}
}

280 
	$gp2x_add_job940
(
job
)

282 i‡(
job
 <= 0 || job > 16) {

283 
	`¥ötf
("add_job_940: bad job: %i\n", 
job
);

287 
job
--;

288 
gp2x_memªgs
[(0x3B20+
job
*2)>>1] = 1;

290 
	}
}

293 
	$gp2x_∑u£940
(
yes
)

295 
	`¥ötf
 ("Pau£ 940 %d\n",
yes
);

296 if(
yes
)

297 
gp2x_memªgs
[0x0904>>1] &= 0xFFFE;

299 
gp2x_memªgs
[0x0904>>1] |= 1;

300 
	}
}

301 
	$gp2x_ª£t940
(
yes
, 
b™k
)

303 
	`¥ötf
 ("Re£à940 %d\n",
yes
);

304 
gp2x_memªgs
[0x3B48>>1] = ((
yes
&1Ë<< 7Ë| (
b™k
 & 0x03);

305 
	}
}

306 
	$gp2x_lﬂd_bö940
(*
fûe
) {

307 
FILE
 *
f
;

308 
ucD©a
[1024];

309 
nRód
, 
i
, 
nLí
 = 0;

310 *
buf
;

311 
size
;

312 
f
=
	`f›í
(
fûe
,"rb");

313 i‡(!
f
) {

314 
	`¥ötf
("Eº‹ whûêlﬂdög %s\n",
fûe
);

315 
	`exô
(1);

329 
nRód
 = 
	`‰ód
(
ucD©a
, 1, 1024, 
f
);

330 if(
nRód
 <= 0)

332 
	`mem˝y
((*)
gp2x_øm2_unˇched
 + 
nLí
, 
ucD©a
, 
nRód
);

333 
nLí
 +
nRód
;

335 
	`f˛o£
(
f
);

336 
	`¥ötf
("CODE940 uploded [%02X %02X %02X %02X]\n",

337 
gp2x_øm2_unˇched
[0],

338 
gp2x_øm2_unˇched
[1],

339 
gp2x_øm2_unˇched
[2],

340 
gp2x_øm2_unˇched
[3]);

341 
	}
}

342 
	$gp2x_öô_940
() {

343 
video_buckë
 *
buckë
;

344 
	`gp2x_ª£t940
(1, 2);

345 
	`gp2x_∑u£940
(1);

347 
gp2x_memªgs
[0x3B40>>1] = 0;

348 
gp2x_memªgs
[0x3B42>>1] = 1;

350 
gp2x_memªgl
[0x4504>>2] = 0;

351 
gp2x_memªgl
[0x4508>>2] = ~(1<<26);

355 
	`gp2x_lﬂd_bö940
("gngeo940.bin");

357 
	`¥ötf
("Shared dataÑeset...\n");

358 
	`mem£t
((*)
sh¨ed_d©a
, 0, (*shared_data));

359 
	`mem£t
((*)
sh¨ed_˘l
, 0, (*shared_ctl));

360 
	`¥ötf
("Shared dataÑeseted\n");

363 
gp2x_memªgs
[0x3B46>>1] = 0xffff;

364 
gp2x_memªgl
[0x4500>>2] = 0xffffffff;

365 
gp2x_memªgl
[0x4510>>2] = 0xffffffff;

366 
	`¥ötf
("Clear interrupt\n");

369 
	`gp2x_ª£t940
(0, 2);

370 
	`gp2x_∑u£940
(0);

372 
	}
}

374 
	$debug_gp2x_tvout
()

376 
	`¥ötf
("Some TV out Regs\n");

377 
	`¥ötf
("TV-Out? %04x\n",
gp2x_memªgs
[0x2800>>1]&0x100);

378 
	`¥ötf
("h‹iz⁄è» %04x\n",
gp2x_memªgs
[0x2906>>1]);

379 
	`¥ötf
("vîtiˇ» %08x\n",
gp2x_memªgl
[0x2908>>2]);

380 
	`¥ötf
("RGB Width %04x\n",
gp2x_memªgs
[0x290C>>1]);

381 
	`¥ötf
("RGB Wödow† %04x\n",
gp2x_memªgs
[0x28E2>>1]);

382 
	`¥ötf
("MLC_DPC_X_MAX %04x\n",
gp2x_memªgs
[0x2816>>1]);

383 
	`¥ötf
("MLC_DPC_Y_MAX %04x\n",
gp2x_memªgs
[0x2818>>1]);

386 
	`¥ötf
("STL1 ENDX %04x\n",
gp2x_memªgs
[0x28E4>>1]);

387 
	`¥ötf
("STL2 ENDX %04x\n",
gp2x_memªgs
[0x28EC>>1]);

388 
	`¥ötf
("STL3 ENDX %04x\n",
gp2x_memªgs
[0x28F4>>1]);

389 
	`¥ötf
("STL4 ENDX %04x\n",
gp2x_memªgs
[0x28FC>>1]);

392 
	}
}

395 
	$gp2x_øm_öô
() {

396 if(!
gp2x_dev_mem
Ëgp2x_dev_mem = 
	`›í
("/dev/mem", 
O_RDWR
);

397 
gp2x_øm
=(
Uöt8
 *)
	`mm≠
(0, 0x2000000, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

398 
gp2x_dev_mem
, 0x02000000);

399 
gp2x_øm2
=(
Uöt8
 *)
	`mm≠
(0, 0x1000000, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

400 
gp2x_dev_mem
, 0x03000000);

403 
gp2x_memªgl
=(
Uöt32
 *)
	`mm≠
(0, 0x10000, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

404 
gp2x_dev_mem
, 0xc0000000);

405 
gp2x_memªgs
=(
Uöt16
*)
gp2x_memªgl
 ;

406 
	}
}

408 
	$gp2x_øm_öô_unˇched
() {

410 
gp2x_øm2_unˇched
=(
Uöt8
 *)
	`mm≠
(0, 0x2000000, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

411 
gp2x_dev_mem
, 0x02000000);

412 
sh¨ed_d©a
 = (
_940_d©a_t
 *Ë(
gp2x_øm2_unˇched
+0x1C00000);

414 
sh¨ed_˘l
 = (
_940_˘l_t
 *Ë(
gp2x_øm2_unˇched
+0x1C00100);

415 
¥iv©e_d©a
 = (
_940_¥iv©e_t
 *Ë(
gp2x_øm2_unˇched
+0x1B00000);

417 
	`mem£t
((*)
gp2x_øm2_unˇched
,0,0x100000);

418 
	`mem£t
((*)
gp2x_øm2_unˇched
+0x1800000,0,0x800000);

419 
	}
}

421 
Uöt8
 *
	$gp2x_øm_mÆloc
(
size_t
 
size
,
Uöt32
 
∑ge
) {

422 
Uöt8
 *
t
;

423 i‡(
∑ge
==0) {

424 i‡(!
øm_±r
) {

426 
øm_±r
=(
Uöt8
*)
gp2x_øm
+0x100000;

429 i‡((
Uöt32
)
øm_±r
-(Uöt32)
gp2x_øm
+
size
<=0x1100000) {

430 
t
=
øm_±r
;

431 
øm_±r
+=(((
Uöt32
)
size
)|0xF)+0x1;

433  
t
;

435 
	`¥ötf
("Out ofÖage1 upper memory\n");

438 i‡(!
øm_±r2
) {

440 
øm_±r2
=(
Uöt8
*)
gp2x_øm2
+0x800000;

443 i‡((
Uöt32
)
øm_±r2
-(Uöt32)
gp2x_øm2
+
size
<=0x1000000) {

444 
t
=
øm_±r2
;

445 
øm_±r2
+=(((
Uöt32
)
size
)|0xF)+0x1;

447  
t
;

449 
	`¥ötf
("Out ofÖage2 upper memory\n");

452  
NULL
;

453 
	}
}

455 
	$gp2x_øm_±r_ª£t
() {

456 
øm_±r
=
NULL
;

457 
øm_±r2
=
NULL
;

458 
	}
}

460 
	$gp2x_sound_vﬁume_£t
(
l
, 
r
) {

461 
L
;

462 
L
=(((
l
*0x50)/100)<<8)|((
r
*0x50)/100);

463 
	`io˘l
(
gp2x_mixî
, 
SOUND_MIXER_WRITE_PCM
, &
L
);

464 
	}
}

466 
	$gp2x_sound_vﬁume_gë
() {

467 
L
;

469 
	`io˘l
(
gp2x_mixî
, 
SOUND_MIXER_READ_PCM
, &
L
);

470 
	`¥ötf
("Vﬁ=%x\n",
L
);

471  ((
L
&0xFF)*100.0/()0x50);

472 
	}
}

474 
	$gp2x_£t_˝u_•ìd
() {

475 
ovî˛ock
=
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("cpu_speed"));

476 
˛ockgí
 = 0;

477 
sys‰eq
=0;

484 i‡(
ovî˛ock
!=0) {

485 i‡(
ovî˛ock
<66) overclock=66;

486 i‡(
ovî˛ock
>320) overclock=320;

487 
	`SëClock
(
ovî˛ock
);

489 
	}
}

491 
	$gp2x_quô
() {

493 
i
;

494 *
‰⁄ãnd
=
	`°rdup
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("frontend")));

495 *
fuŒ∑th
=
	`CF_STR
(
	`cf_gë_ôem_by_«me
("frontend"));

501 #ifde‡
ENABLE_940T


502 
	`¶ìp
(1);

503 
	`¥öt_sh¨ed_°ru˘
();

504 
	`gp2x_ª£t940
(1, 2);

505 
	`gp2x_∑u£940
(1);

507 
	`¥ötf
("cpuctrl_deinit \n");

508 
	`˝u˘æ_deöô
();

510 
	`¥ötf
("closing opend device \n");

512 i‡(
gp2x_dev_mem
!=-1Ë
	`˛o£
(gp2x_dev_mem);

513 i‡(
gp2x_gfx_dump
!=-1Ë
	`˛o£
(gp2x_gfx_dump);

514 i‡(
gp2x_mixî
!=-1Ë
	`˛o£
(gp2x_mixer);

516 
	`¥ötf
("stopÅvout mode \n");

517 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("tvout")))

518 
	`SDL_GP2X_TV
(0);

520 
	`¥ötf
("sync\n");

521 
	`sync
();

522 
	`¥ötf
("SDLQuit\n");

523 
	`SDL_Quô
();

525 
	`¥ötf
("Restart menu\n");

526 i‡(
	`°rcmp
("nuŒ",
‰⁄ãnd
)!=0) {

528 *
ba£
=
	`ba£«me
(
‰⁄ãnd
);

529 *
dú
=
	`dú«me
(
‰⁄ãnd
);

531 i‡(
dú
) {

532 
	`chdú
(
dú
);

533 
	`¥ötf
("ch™gö‡dúÅÿ%†- %†- %s\n",
dú
,
ba£
,
‰⁄ãnd
);

535 i‡(
	`°rcmp
("øge2x.g≥",
ba£
)==0) {

536 
›t
[128];

537 
	`¢¥ötf
(
›t
,120,"rom=%s",
c⁄f
.
game
);

538 
	`¥ötf
("›t%s\n",
›t
);

539 
	`exe˛
(
fuŒ∑th
,fuŒ∑th,
›t
,
NULL
);

541 
	`exe˛
(
fuŒ∑th
,fuŒ∑th,
NULL
);

544 
	}
}

546 
	$bíchm¨k
 (*
mem±r
)

548 
°¨âime
 = 
	`time
 (
NULL
);

549 
a
,
b
,
c
,
d
;

550 vﬁ©ûê*
µ
 = (*Ë
mem±r
;

552 
°¨âime
 =
	`time
 (
NULL
));

554 
	`¥ötf
 ("\n\nmem‹y bíchm¨k o‡vﬁ©ûêVA: %08X\n\ƒódÅe°\n",(
Uöt32
)
mem±r
);

555 
d
 = 0; d < 3; d ++)

557 
°¨âime
 = 
	`time
 (
NULL
);

558 
b
 = 0;

559 
c
 = 0;

560 
°¨âime
 =
	`time
 (
NULL
))

562 
a
 = 0;á < 20000;á ++)

564 
b
 +
µ
[
a
];

566 
c
 ++;

568 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

571 
	`¥ötf
 ("writeÅest\n");

572 
d
 = 0; d < 3; d ++)

574 
°¨âime
 = 
	`time
 (
NULL
);

575 
b
 = 0;

576 
c
 = 0;

577 
°¨âime
 =
	`time
 (
NULL
))

579 
a
 = 0;á < 20000;á ++)

581 
µ
[
a
] = 0x37014206;

583 
c
 ++;

585 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

588 
	`¥ötf
 ("combinedÅest (read, write back)\n");

589 
d
 = 0; d < 3; d ++)

591 
°¨âime
 = 
	`time
 (
NULL
);

592 
b
 = 0;

593 
c
 = 0;

594 
°¨âime
 =
	`time
 (
NULL
))

596 
a
 = 0;á < 20000;á ++)

598 
µ
[
a
] += 0x55017601;

600 
c
 ++;

602 
	`¥ötf
 ("Cou¡ i†%d. %dMB/£c\n", 
c
, (c * 20000)/1024/1024);

605 
	`¥ötf
 ("test complete\n");

606 
	}
}

608 
	$hack_the_mmu
() {

610 
mmufd
 = 
	`›í
("/dev/mmuhack", 
O_RDWR
);

612 if(
mmufd
 < 0) {

613 
	`sy°em
("/sbin/insmod -f mmuhack.o");

614 
mmufd
 = 
	`›í
("/dev/mmuhack", 
O_RDWR
);

616 if(
mmufd
 < 0)  1;

618 
	`˛o£
(
mmufd
);

620 
	`gp2x_øm_öô_unˇched
();

623 
	}
}

625 
	$gp2x_öô_mixî
() {

626 
	`¥ötf
("Open mixer\n");

627 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sound"))) {

628 
gp2x_mixî
=
	`›í
("/dev/mixî", 
O_RDWR
);

629 i‡(
gp2x_mixî
==-1) {

630 
	`¥ötf
("Can't open mixer\n");

633 
	}
}

635 
Uöt32
 
	$gp2x_is_tvout_⁄
() {

636 
SDL_Re˘
 
r
;

637 
	`SDL_GP2X_GëPhysiˇlS¸ìnSize
(&
r
);

638 
	`¥ötf
("s¸ìn%d %d\n",
r
.
w
,r.
h
);

639 i‡(
r
.
w
!=320ËÑ.
h
;

641 
	}
}

644 
	$gp2x_öô
() {

645 vﬁ©ûê*
£cbuf
 = (*)
	`mÆloc
 (204800);

647 
	`gp2x_øm_öô
();

648 
	`˝u˘æ_öô
();

652 i‡(
	`gp2x_is_tvout_⁄
())

653 
gp2x_memªgs
[0x28E4>>1]=800;

655 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("tvout"))) {

656 
	`SDL_GP2X_TV
(1);

657 
	`SDL_GP2X_TVMode
(3 );

661 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("ramhack")))

662 
	`£t_RAM_Timögs
(6, 4, 1, 1, 1, 2, 2);

666 
	`sdl_£t_tôÀ
(
NULL
);

670 i‡(
	`hack_the_mmu
()==0) {

671 
	`SDL_ãxtout
(
s¸ìn
, 1, 231, "P©chög MMU ... OK!");
	`SDL_Flù
(screen);

673 
	`SDL_ãxtout
(
s¸ìn
, 1, 231, "P©chög MMU ... FAILED :(");
	`SDL_Flù
(screen);

674 
	`SDL_Dñay
(300);

676 #ifde‡
ENABLE_940T


677 
	`gp2x_öô_940
();

678 
	`gp2x_£t_˝u_•ìd
();

683 
	`gp2x_öô_mixî
();

684 
	`SDL_FûlRe˘
(
s¸ìn
,
NULL
,0);

685 
	}
}

688 
	$gp2x_940_lﬂdbö
(*
fûíame
) {

690 
	}
}

	@src/gp2x.h

1 #i‚de‡
_GP2X_H_


2 
	#_GP2X_H_


	)

4 
	~"unzù.h
"

8 
	ggp2x_dev_mem
;

9 
	ggp2x_gfx_dump
;

11 
	ggp2x_mixî
;

13 vﬁ©ûê
Uöt8
 *
	ggp2x_øm
;

14 vﬁ©ûê
Uöt8
 *
	ggp2x_øm2
;

15 vﬁ©ûê
Uöt8
 *
	ggp2x_øm2_unˇched
;

16 vﬁ©ûê
Uöt16
 *
	ggp2x_memªgs
;

17 vﬁ©ûê
Uöt32
 *
	ggp2x_memªgl
;

19 
gp2x_øm_öô
();

20 
Uöt8
 *
gp2x_øm_mÆloc
(
size_t
 
size
,
Uöt32
 
∑ge
);

21 
gp2x_quô
();

22 
gp2x_sound_vﬁume_£t
(
l
, 
r
);

23 
gp2x_sound_vﬁume_gë
();

24 
gp2x_öô
();

25 
gp2x_video_RGB_£tsˇlög
(
W
, 
H
);

26 
gp2x_£t_˝u_•ìd
();

27 
Uöt32
 
gp2x_is_tvout_⁄
();

28 
gp2x_öô_940
();

29 
gp2x_add_job940
(
job
);

30 
gp2x_øm_±r_ª£t
();

32 íum { 
	mGP2X_UP
=0,

33 
	mGP2X_UP_LEFT
,

34 
	mGP2X_LEFT
,

35 
	mGP2X_DOWN_LEFT
,

36 
	mGP2X_DOWN
,

37 
	mGP2X_DOWN_RIGHT
,

38 
	mGP2X_RIGHT
,

39 
	mGP2X_UP_RIGHT
,

40 
	mGP2X_START
,

41 
	mGP2X_SELECT
,

42 
	mGP2X_R
,

43 
	mGP2X_L
,

44 
	mGP2X_A
,

45 
	mGP2X_B
,

46 
	mGP2X_X
,

47 
	mGP2X_Y
,

48 
	mGP2X_VOL_UP
,

49 
	mGP2X_VOL_DOWN
,

50 
	mGP2X_PUSH


54 
	mLCDR_60
 = 0,

55 
	mLCDR_50
,

56 
	mLCDR_120_20
,

57 
	mLCDR_100_02
,

58 } 
	tlcd_øã_t
;

60 
£t_LCD_cu°om_øã
(
lcd_øã_t
 
øã
);

61 
un£t_LCD_cu°om_øã
();

63 
	#CHECK_BUSY
(
job
) \

64 (
gp2x_memªgs
[0x3b46>>1] & (1<<(
job
-1)))

	)

	@src/list.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

5 
	~<°dlib.h
>

6 
	~"li°.h
"

8 
LIST
 *
	$li°_gë_ôem_by_ödex
(
LIST
 *
li°
,
ödex
) {

9 
i
=0;

10 
LIST
 *
l
;

11 
l
=
li°
;l;lˆ->
√xt
) {

12 i‡(
i
==
ödex
Ë 
l
;

13 
i
++;

15  
NULL
;

16 
	}
}

18 
	$li°_îa£_Æl
(
LIST
 *
li°
,(*
îa£d©a
)(*
d©a
)) {

19 
LIST
 *
l
=
li°
;

21 
l
=
li°
->
√xt
;

23 i‡(
îa£d©a
)

24 
	`îa£d©a
(
li°
->
d©a
);

25 
	`‰ì
(
li°
);

26 
li°
=
l
;

27 } 
l
);

28 
	}
}

30 
LIST
* 
	$ö£π_s‹t
(
LIST
 *
li°
,*
d©a
,(*
cmpd©a
)(*
a
,*
b
),
unique
) {

31 
LIST
 *
t
=
li°
,*
±
=
NULL
,*
ªs
=list;

32 
LIST
 *
tmp
=
	`mÆloc
((
li°
));

33 
tmp
->
d©a
=data;

35 
t
=
li°
;à&& 
	`cmpd©a
(
d©a
,t->d©a)>0;
±
Ò,tÒ->
√xt
);

36 i‡(
t
 && 
unique
 && 
	`cmpd©a
(
d©a
,t->d©a)==0Ë 
ªs
;

37 i‡(
t
) {

38 i‡(
±
) {

39 
tmp
->
√xt
=
t
;

40 
±
->
√xt
=
tmp
;

42 
tmp
->
√xt
=
t
;

43 
ªs
=
tmp
;

46 i‡(
±
) {

47 
±
->
√xt
=
tmp
;

48 
tmp
->
√xt
=
NULL
;

50 
ªs
=
tmp
;

51 
tmp
->
√xt
=
NULL
;

54  
ªs
;

55 
	}
}

57 
LIST
* 
	$li°_ö£π_s‹t
(
LIST
 *
li°
,*
d©a
,(*
cmpd©a
)(*
a
,*
b
)) {

58  
	`ö£π_s‹t
(
li°
,
d©a
,
cmpd©a
,0);

59 
	}
}

60 
LIST
* 
	$li°_ö£π_s‹t_unique
(
LIST
 *
li°
,*
d©a
,(*
cmpd©a
)(*
a
,*
b
)) {

61  
	`ö£π_s‹t
(
li°
,
d©a
,
cmpd©a
,1);

62 
	}
}

64 
	$li°_nb_ôem
(
LIST
 *
li°
) {

65 
LIST
 *
l
;

66 
i
=0;

67 
l
=
li°
;l;lˆ->
√xt
)

68 
i
++;

69  
i
;

70 
	}
}

72 
LIST
 *
	$li°_≠≥nd
(
LIST
 *
l
,*
d©a
) {

73 
LIST
 *
t
=
	`mÆloc
((LIST));

74 
LIST
 *
i
;

75 
t
->
d©a
=data;

76 
t
->
√xt
=
NULL
;

78 i‡(
l
==
NULL
)

79 
l
=
t
;

81 
i
=
l
;i->
√xt
!=
NULL
;i=i->next);

82 
i
->
√xt
=
t
;

84  
l
;

85 
	}
}

87 
LIST
 *
	$li°_¥ïíd
(
LIST
 *
l
,*
d©a
) {

88 
LIST
 *
t
=
	`mÆloc
((LIST));

89 
t
->
d©a
=data;

90 
t
->
√xt
=
l
;

91 
l
=
t
;

92  
l
;

93 
	}
}

95 
	$li°_f‹óch
(
LIST
 *
l
,(*
func
)(*
d©a
)) {

96 
LIST
 *
i
;

97 
i
=
l
;i;i=i->
√xt
)

98 
	`func
(
i
->
d©a
);

99 
	}
}

101 #ifde‡
TEST_LIST


103 
	$¥öt_d©a
(*
d©a
) {

104 *
«me
=
d©a
;

105 
	`¥ötf
("DATA: %s\n",
«me
);

106 
	}
}

108 
	$maö
() {

109 
LIST
 *
li°
=
NULL
;

110 *
a
="hello";

111 *
b
="bye";

112 *
c
="toto";

114 
li°
=
	`li°_¥ïíd
(list,"yo!");

115 
li°
=
	`li°_≠≥nd
÷i°,
a
);

116 
li°
=
	`li°_≠≥nd
÷i°,
b
);

117 
li°
=
	`li°_≠≥nd
÷i°,
c
);

118 
li°
=
	`li°_¥ïíd
(list,"plop");

119 
	`li°_f‹óch
(
li°
,
¥öt_d©a
);

121 
	}
}

	@src/list.h

1 #i‚de‡
_LIST_H_


2 
	#_LIST_H_


	)

4 
	sLIST
 {

5 *
	md©a
;

6 
LIST
 *
	m√xt
;

7 }
	tLIST
;

9 
LIST
 *
li°_≠≥nd
(LIST *
l
,*
d©a
);

10 
LIST
 *
li°_¥ïíd
(LIST *
l
,*
d©a
);

11 
li°_f‹óch
(
LIST
 *
l
,(*
func
)(*
d©a
));

12 
	`li°_nb_ôem
(
LIST
 *
li°
);

13 
LIST
 *
	`li°_gë_ôem_by_ödex
(LIST *
li°
,
ödex
);

14 
	`li°_îa£_Æl
(
LIST
 *
li°
,(*
îa£d©a
)(*
d©a
));

15 
LIST
* 
	`li°_ö£π_s‹t
(LIST *
li°
,*
d©a
,(*
cmpd©a
)(*
a
,*
b
));

16 
LIST
* 
	`li°_ö£π_s‹t_unique
(LIST *
li°
,*
d©a
,(*
cmpd©a
)(*
a
,*
b
));

	@src/main.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<sig«l.h
>

25 
	~"SDL.h
"

26 
	~<uni°d.h
>

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

30 
	~"ym2610/2610ötf.h
"

31 
	~"video.h
"

32 
	~"s¸ìn.h
"

33 
	~"emu.h
"

34 
	~"sound.h
"

35 
	~"mesßges.h
"

36 
	~"mem‹y.h
"

37 
	~"debug.h
"

38 
	~"blôãr.h
"

39 
	~"ef„˘.h
"

40 
	~"c⁄f.h
"

41 
	~"å™•ack.h
"

42 
	~"evít.h
"

43 
	~"míu.h
"

44 
	~"‰ame_skù.h
"

45 
	~"gnutû.h
"

46 
	~"roms.h
"

48 #ifde‡
USE_GUI


49 
	~"gui_öãrf.h
"

51 #ifde‡
GP2X


52 
	~"gp2x.h
"

53 
	~"ym2610-940/940sh¨ed.h
"

55 #ifde‡
WII


56 
boﬁ
 
ÁtInôDeÁu…
();

59 #ifde‡
__AMIGA__


60 
	~<¥Ÿo/dos.h
>

64 
	$ˇtch_me
(
signo
) {

65 
	`¥ötf
("Catchá sigsegv\n");

67 
	`exô
(-1);

68 
	}
}

69 
	$maö
(
¨gc
, *
¨gv
[])

71 *
rom_«me
;

72 *
‹igöÆ_rom_«me
;

73 
rc
;

76 #ifde‡
__AMIGA__


77 
BPTR
 
fûe_lock
 = 
	`GëProgømDú
();

78 
	`SëProgømDú
(
fûe_lock
);

80 
	`sig«l
(
SIGSEGV
, 
ˇtch_me
);

82 #ifde‡
WII


85 
	`ÁtInôDeÁu…
();

88 
	`cf_öô
();

89 
	`cf_öô_cmd_löe
();

90 
	`cf_›í_fûe
(
NULL
);

93 
‹igöÆ_rom_«me
=
	`cf_∑r£_cmd_löe
(
¨gc
,
¨gv
);

94 
	`¥ötf
("‹igöÆÑomÇame=[%s]\n",
‹igöÆ_rom_«me
);

95 
rom_«me
 = 
	`ªmove_∑th_™d_exãnsi⁄
(
‹igöÆ_rom_«me
, '.', '/');

96 
	`¥ötf
("romÇame=[%s]\n",
rom_«me
);

99 i‡(!
	`°rcmp
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("effect")),"help")) {

100 
	`¥öt_ef„˘_li°
();

101 
	`exô
(0);

103 i‡(!
	`°rcmp
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("blitter")),"help")) {

104 
	`¥öt_blôãr_li°
();

105 
	`exô
(0);

108 
	`öô_sdl
();

110 
	`öô_evít
();

113 #ifde‡
GP2X


114 
	`gp2x_öô
();

116 i‡((
rc
=
	`gn_öô_skö
())!=
GN_TRUE
) {

117 
	`¥ötf
("Can'tÜoad skin...\n");

118 
	`exô
(1);

121 
	`ª£t_‰ame_skù
();

123 i‡(
c⁄f
.
debug
Ëc⁄f.
sound
=0;

126 i‡(!
rom_«me
) {

128 
	`run_míu
();

129 
	`¥ötf
("GAME %s\n",
c⁄f
.
game
);

130 i‡(
c⁄f
.
game
==
NULL
)  0;

133 i‡(
	`öô_game
(
rom_«me
)!=
GN_TRUE
) {

134 
	`¥ötf
("C™'àöô %s...\n",
rom_«me
);

135 
	`exô
(1);

140 i‡(
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("dump"))) {

141 
dump
[8+4+1];

142 
	`•rötf
(
dump
,"%s.gno",
rom_«me
);

143 
	`dr_ßve_gno
(&
mem‹y
.
rom
,
dump
);

144 
	`˛o£_game
();

148 i‡(
c⁄f
.
debug
)

149 
	`debug_lo›
();

151 
	`maö_lo›
();

153 
	`˛o£_game
();

157 
	}
}

	@src/mame_layer.c

1 
	~"mame_œyî.h
"

2 
	~<°rög.h
>

3 
	~<°dio.h
>

22 
UINT8
 *
	$mem‹y_ªgi⁄
–
GAME_ROMS
 *
r
, *
ªgi⁄
 ) {

23 i‡(
	`°rcmp
(
ªgi⁄
,"audio˝u")==0Ë 
r
->
˝u_z80
.
p
;

24 i‡(
	`°rcmp
(
ªgi⁄
,"audio¸y±")==0Ë 
r
->
˝u_z80c
.
p
;

25 i‡(
	`°rcmp
(
ªgi⁄
,"fixed")==0Ë 
r
->
game_sfix
.
p
;

26 i‡(
	`°rcmp
(
ªgi⁄
,"maö˝u")==0Ë 
r
->
˝u_m68k
.
p
;

27 i‡(
	`°rcmp
(
ªgi⁄
,"maöbios")==0Ë 
r
->
bios_m68k
.
p
;

28 i‡(
	`°rcmp
(
ªgi⁄
,"•rôes")==0Ë 
r
->
tûes
.
p
;

29 i‡(
	`°rcmp
(
ªgi⁄
,"ym")==0Ë 
r
->
adpcma
.
p
;

30 
	`¥ötf
("mem‹y_ªgi⁄ %†nŸ found",
ªgi⁄
);

32  
NULL
;

33 
	}
}

34 
UINT32
 
	$mem‹y_ªgi⁄_Àngth
–
GAME_ROMS
 *
r
, *
ªgi⁄
 ) {

35 i‡(
	`°rcmp
(
ªgi⁄
,"audio˝u")==0Ë 
r
->
˝u_z80
.
size
;

36 i‡(
	`°rcmp
(
ªgi⁄
,"audio¸y±")==0Ë 
r
->
˝u_z80c
.
size
;

37 i‡(
	`°rcmp
(
ªgi⁄
,"fixed")==0Ë 
r
->
game_sfix
.
size
;

38 i‡(
	`°rcmp
(
ªgi⁄
,"maö˝u")==0Ë 
r
->
˝u_m68k
.
size
;

39 i‡(
	`°rcmp
(
ªgi⁄
,"maöbios")==0Ë 
r
->
bios_m68k
.
size
;

40 i‡(
	`°rcmp
(
ªgi⁄
,"•rôes")==0Ë 
r
->
tûes
.
size
;

41 i‡(
	`°rcmp
(
ªgi⁄
,"ym")==0Ë 
r
->
adpcma
.
size
;

42 
	`¥ötf
("mem‹y_ªgi⁄_Àngth %†nŸ found",
ªgi⁄
);

45 
	}
}

47 *
	$mÆloc_‹_dõ
(
UINT32
 
b
) {

48 *
a
=
	`mÆloc
(
b
);

49 i‡(
a
) á;

50 
	`¥ötf
("NotÉnough memory :(Éxiting\n");

51 
	`exô
(1);

52  
NULL
;

53 
	}
}

	@src/mame_layer.h

3 #i‚de‡
H_MAME_LAYER


4 
	#H_MAME_LAYER


	)

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

9 
	~"roms.h
"

11 
	#INT8
 
Söt8


	)

12 
	#INT16
 
Söt16


	)

13 
	#INT32
 
Söt32


	)

15 
	#UINT8
 
Uöt8


	)

16 
	#UINT16
 
Uöt16


	)

17 
	#UINT32
 
Uöt32


	)

20 #i‚de‡
BIGENDIAN


22 
	#BYTE_XOR_BE
(
a
Ë(◊Ë^ 1Ë

	)

23 
	#BYTE_XOR_LE
(
a
Ë◊)

	)

24 
	#BYTE4_XOR_BE
(
a
Ë(◊Ë^ 3Ë

	)

25 
	#BYTE4_XOR_LE
(
a
Ë◊)

	)

26 
	#WORD_XOR_BE
(
a
Ë(◊Ë^ 2Ë

	)

27 
	#WORD_XOR_LE
(
a
Ë◊)

	)

28 
	#BYTE8_XOR_BE
(
a
Ë(◊Ë^ 7Ë

	)

29 
	#BYTE8_XOR_LE
(
a
Ë◊)

	)

30 
	#WORD2_XOR_BE
(
a
Ë(◊Ë^ 6Ë

	)

31 
	#WORD2_XOR_LE
(
a
Ë◊)

	)

32 
	#DWORD_XOR_BE
(
a
Ë(◊Ë^ 4Ë

	)

33 
	#DWORD_XOR_LE
(
a
Ë◊)

	)

37 
	#BYTE_XOR_BE
(
a
Ë◊)

	)

38 
	#BYTE_XOR_LE
(
a
Ë(◊Ë^ 1Ë

	)

39 
	#BYTE4_XOR_BE
(
a
Ë◊)

	)

40 
	#BYTE4_XOR_LE
(
a
Ë(◊Ë^ 3Ë

	)

41 
	#WORD_XOR_BE
(
a
Ë◊)

	)

42 
	#WORD_XOR_LE
(
a
Ë(◊Ë^ 2Ë

	)

43 
	#BYTE8_XOR_BE
(
a
Ë◊)

	)

44 
	#BYTE8_XOR_LE
(
a
Ë(◊Ë^ 7Ë

	)

45 
	#WORD2_XOR_BE
(
a
Ë◊)

	)

46 
	#WORD2_XOR_LE
(
a
Ë(◊Ë^ 6Ë

	)

47 
	#DWORD_XOR_BE
(
a
Ë◊)

	)

48 
	#DWORD_XOR_LE
(
a
Ë(◊Ë^ 4Ë

	)

53 
	#BIT
(
x
,
n
Ë(((x)>>“))&1)

	)

55 
	#BITSWAP8
(
vÆ
,
B7
,
B6
,
B5
,
B4
,
B3
,
B2
,
B1
,
B0
) \

56 ((
	`BIT
(
vÆ
,
B7
) << 7) | \

57 (
	`BIT
(
vÆ
,
B6
) << 6) | \

58 (
	`BIT
(
vÆ
,
B5
) << 5) | \

59 (
	`BIT
(
vÆ
,
B4
) << 4) | \

60 (
	`BIT
(
vÆ
,
B3
) << 3) | \

61 (
	`BIT
(
vÆ
,
B2
) << 2) | \

62 (
	`BIT
(
vÆ
,
B1
) << 1) | \

63 (
	`BIT
(
vÆ
,
B0
Ë<< 0))

	)

65 
	#BITSWAP16
(
vÆ
,
B15
,
B14
,
B13
,
B12
,
B11
,
B10
,
B9
,
B8
,
B7
,
B6
,
B5
,
B4
,
B3
,
B2
,
B1
,
B0
) \

66 ((
	`BIT
(
vÆ
,
B15
) << 15) | \

67 (
	`BIT
(
vÆ
,
B14
) << 14) | \

68 (
	`BIT
(
vÆ
,
B13
) << 13) | \

69 (
	`BIT
(
vÆ
,
B12
) << 12) | \

70 (
	`BIT
(
vÆ
,
B11
) << 11) | \

71 (
	`BIT
(
vÆ
,
B10
) << 10) | \

72 (
	`BIT
(
vÆ
, 
B9
) << 9) | \

73 (
	`BIT
(
vÆ
, 
B8
) << 8) | \

74 (
	`BIT
(
vÆ
, 
B7
) << 7) | \

75 (
	`BIT
(
vÆ
, 
B6
) << 6) | \

76 (
	`BIT
(
vÆ
, 
B5
) << 5) | \

77 (
	`BIT
(
vÆ
, 
B4
) << 4) | \

78 (
	`BIT
(
vÆ
, 
B3
) << 3) | \

79 (
	`BIT
(
vÆ
, 
B2
) << 2) | \

80 (
	`BIT
(
vÆ
, 
B1
) << 1) | \

81 (
	`BIT
(
vÆ
, 
B0
Ë<< 0))

	)

83 
	#BITSWAP24
(
vÆ
,
B23
,
B22
,
B21
,
B20
,
B19
,
B18
,
B17
,
B16
,
B15
,
B14
,
B13
,
B12
,
B11
,
B10
,
B9
,
B8
,
B7
,
B6
,
B5
,
B4
,
B3
,
B2
,
B1
,
B0
) \

84 ((
	`BIT
(
vÆ
,
B23
) << 23) | \

85 (
	`BIT
(
vÆ
,
B22
) << 22) | \

86 (
	`BIT
(
vÆ
,
B21
) << 21) | \

87 (
	`BIT
(
vÆ
,
B20
) << 20) | \

88 (
	`BIT
(
vÆ
,
B19
) << 19) | \

89 (
	`BIT
(
vÆ
,
B18
) << 18) | \

90 (
	`BIT
(
vÆ
,
B17
) << 17) | \

91 (
	`BIT
(
vÆ
,
B16
) << 16) | \

92 (
	`BIT
(
vÆ
,
B15
) << 15) | \

93 (
	`BIT
(
vÆ
,
B14
) << 14) | \

94 (
	`BIT
(
vÆ
,
B13
) << 13) | \

95 (
	`BIT
(
vÆ
,
B12
) << 12) | \

96 (
	`BIT
(
vÆ
,
B11
) << 11) | \

97 (
	`BIT
(
vÆ
,
B10
) << 10) | \

98 (
	`BIT
(
vÆ
, 
B9
) << 9) | \

99 (
	`BIT
(
vÆ
, 
B8
) << 8) | \

100 (
	`BIT
(
vÆ
, 
B7
) << 7) | \

101 (
	`BIT
(
vÆ
, 
B6
) << 6) | \

102 (
	`BIT
(
vÆ
, 
B5
) << 5) | \

103 (
	`BIT
(
vÆ
, 
B4
) << 4) | \

104 (
	`BIT
(
vÆ
, 
B3
) << 3) | \

105 (
	`BIT
(
vÆ
, 
B2
) << 2) | \

106 (
	`BIT
(
vÆ
, 
B1
) << 1) | \

107 (
	`BIT
(
vÆ
, 
B0
Ë<< 0))

	)

109 
	#BITSWAP32
(
vÆ
,
B31
,
B30
,
B29
,
B28
,
B27
,
B26
,
B25
,
B24
,
B23
,
B22
,
B21
,
B20
,
B19
,
B18
,
B17
,
B16
,
B15
,
B14
,
B13
,
B12
,
B11
,
B10
,
B9
,
B8
,
B7
,
B6
,
B5
,
B4
,
B3
,
B2
,
B1
,
B0
) \

110 ((
	`BIT
(
vÆ
,
B31
) << 31) | \

111 (
	`BIT
(
vÆ
,
B30
) << 30) | \

112 (
	`BIT
(
vÆ
,
B29
) << 29) | \

113 (
	`BIT
(
vÆ
,
B28
) << 28) | \

114 (
	`BIT
(
vÆ
,
B27
) << 27) | \

115 (
	`BIT
(
vÆ
,
B26
) << 26) | \

116 (
	`BIT
(
vÆ
,
B25
) << 25) | \

117 (
	`BIT
(
vÆ
,
B24
) << 24) | \

118 (
	`BIT
(
vÆ
,
B23
) << 23) | \

119 (
	`BIT
(
vÆ
,
B22
) << 22) | \

120 (
	`BIT
(
vÆ
,
B21
) << 21) | \

121 (
	`BIT
(
vÆ
,
B20
) << 20) | \

122 (
	`BIT
(
vÆ
,
B19
) << 19) | \

123 (
	`BIT
(
vÆ
,
B18
) << 18) | \

124 (
	`BIT
(
vÆ
,
B17
) << 17) | \

125 (
	`BIT
(
vÆ
,
B16
) << 16) | \

126 (
	`BIT
(
vÆ
,
B15
) << 15) | \

127 (
	`BIT
(
vÆ
,
B14
) << 14) | \

128 (
	`BIT
(
vÆ
,
B13
) << 13) | \

129 (
	`BIT
(
vÆ
,
B12
) << 12) | \

130 (
	`BIT
(
vÆ
,
B11
) << 11) | \

131 (
	`BIT
(
vÆ
,
B10
) << 10) | \

132 (
	`BIT
(
vÆ
, 
B9
) << 9) | \

133 (
	`BIT
(
vÆ
, 
B8
) << 8) | \

134 (
	`BIT
(
vÆ
, 
B7
) << 7) | \

135 (
	`BIT
(
vÆ
, 
B6
) << 6) | \

136 (
	`BIT
(
vÆ
, 
B5
) << 5) | \

137 (
	`BIT
(
vÆ
, 
B4
) << 4) | \

138 (
	`BIT
(
vÆ
, 
B3
) << 3) | \

139 (
	`BIT
(
vÆ
, 
B2
) << 2) | \

140 (
	`BIT
(
vÆ
, 
B1
) << 1) | \

141 (
	`BIT
(
vÆ
, 
B0
Ë<< 0))

	)

145 
	#ru¬ög_machöe
 
GAME_ROMS


	)

148 
	#Æloc_¨øy_‹_dõ
(
ty≥
,
size
Ë(—y≥*)
	`mÆloc_‹_dõ
(—y≥)*size))

	)

149 
UINT32
 
mem‹y_ªgi⁄_Àngth
–
GAME_ROMS
 *
r
, *
ªgi⁄
 );

150 
UINT8
 *
mem‹y_ªgi⁄
–
GAME_ROMS
 *
r
, *
ªgi⁄
 );

151 *
mÆloc_‹_dõ
(
UINT32
 
b
);

	@src/mamez80/z80.c

80 
	~<°dlib.h
>

81 
	~<°dio.h
>

82 
	~<°rög.h
>

83 
	~<°ddef.h
>

84 
	~"z80.h
"

86 #ifde‡
Z80_MSX


87 
	~"z80_msx.h
"

92 
	#VERBOSE
 0

	)

94 #i‡
VERBOSE


95 
	#LOG
(
x
Ë
logîr‹
 
	)
x

97 
	#LOG
(
x
)

	)

101 #i‚de‡
BIG_SWITCH


102 
	#BIG_SWITCH
 1

	)

106 
	#BIG_FLAGS_ARRAY
 1

	)

109 
	#Z80_EXACT
 1

	)

112 
	#BUSY_LOOP_HACKS
 1

	)

115 
	#TIME_LOOP_HACKS
 1

	)

117 #ifde‡
X86_ASM


118 #unde‡
BIG_FLAGS_ARRAY


119 
	#BIG_FLAGS_ARRAY
 0

	)

122 
UINT8
 
mame_z80mem
[0x10000];

124 c⁄° 
UINT8
 
	gz80_ªg_œyout
[] = {

125 
Z80_PC
, 
Z80_SP
, 
Z80_AF
, 
Z80_BC
, 
Z80_DE
, 
Z80_HL
, -1,

126 
Z80_IX
, 
Z80_IY
, 
Z80_AF2
,
Z80_BC2
,
Z80_DE2
,
Z80_HL2
,-1,

127 
Z80_R
, 
Z80_I
, 
Z80_IM
, 
Z80_IFF1
,
Z80_IFF2
, -1,

128 
Z80_NMI_STATE
,
Z80_IRQ_STATE
,
Z80_DC0
,
Z80_DC1
,
Z80_DC2
,
Z80_DC3
, 0

131 c⁄° 
UINT8
 
	gz80_wö_œyout
[] = {

145  
PAIR
 
	mPREPC
,
	mPC
,
	mSP
,
	mAF
,
	mBC
,
	mDE
,
	mHL
,
	mIX
,
	mIY
;

146  
PAIR
 
	mAF2
,
	mBC2
,
	mDE2
,
	mHL2
;

147  
UINT8
 
	mR
,
	mR2
,
	mIFF1
,
	mIFF2
,
	mHALT
,
	mIM
,
	mI
;

148  
UINT8
 
	múq_max
;

149  
INT8
 
	mªque°_úq
;

150  
INT8
 
	m£rvi˚_úq
;

151  
UINT8
 
	mnmi_°©e
;

152  
UINT8
 
	múq_°©e
;

153  
UINT8
 
	möt_°©e
[
Z80_MAXDAISY
];

154  
Z80_DaisyChaö
 
	múq
[
Z80_MAXDAISY
];

155  (*
	múq_ˇŒback
)(
	múqlöe
);

156  
	mexåa_cy˛es
;

157 } 
	tZ80_Regs
;

161 
PAIR
 
	mPREPC
,
	mPC
,
	mSP
,
	mAF
,
	mBC
,
	mDE
,
	mHL
,
	mIX
,
	mIY
;

162 
PAIR
 
	mAF2
,
	mBC2
,
	mDE2
,
	mHL2
;

163 
UINT8
 
	mR
,
	mR2
,
	mIFF1
,
	mIFF2
,
	mHALT
,
	mIM
,
	mI
;

164 
UINT8
 
	múq_max
;

165 
UINT32
 
	mEA
;

166 
	ma·î_EI
;

167 
INT8
 
	mªque°_úq
;

168 
INT8
 
	m£rvi˚_úq
;

169 
UINT8
 
	mnmi_°©e
;

170 
UINT8
 
	múq_°©e
;

171 
UINT8
 
	möt_°©e
[
Z80_MAXDAISY
];

172 
	mexåa_cy˛es
;

173 
Z80_DaisyChaö
 
	múq
[
Z80_MAXDAISY
];

174 (*
	múq_ˇŒback
)(
	múqlöe
);

175 } 
	tZ80_Regs
;

177 
	#CF
 0x01

	)

178 
	#NF
 0x02

	)

179 
	#PF
 0x04

	)

180 
	#VF
 
PF


	)

181 
	#XF
 0x08

	)

182 
	#HF
 0x10

	)

183 
	#YF
 0x20

	)

184 
	#ZF
 0x40

	)

185 
	#SF
 0x80

	)

187 
	#INT_IRQ
 0x01

	)

188 
	#NMI_IRQ
 0x02

	)

190 
	#_PPC
 
Z80
.
PREPC
.
d


	)

192 
	#_PCD
 
Z80
.
PC
.
d


	)

193 
	#_PC
 
Z80
.
PC
.
w
.
l


	)

195 
	#_SPD
 
Z80
.
SP
.
d


	)

196 
	#_SP
 
Z80
.
SP
.
w
.
l


	)

198 
	#_AFD
 
Z80
.
AF
.
d


	)

199 
	#_AF
 
Z80
.
AF
.
w
.
l


	)

200 
	#_A
 
Z80
.
AF
.
b
.
h


	)

201 
	#_F
 
Z80
.
AF
.
b
.
l


	)

203 
	#_BCD
 
Z80
.
BC
.
d


	)

204 
	#_BC
 
Z80
.
BC
.
w
.
l


	)

205 
	#_B
 
Z80
.
BC
.
b
.
h


	)

206 
	#_C
 
Z80
.
BC
.
b
.
l


	)

208 
	#_DED
 
Z80
.
DE
.
d


	)

209 
	#_DE
 
Z80
.
DE
.
w
.
l


	)

210 
	#_D
 
Z80
.
DE
.
b
.
h


	)

211 
	#_E
 
Z80
.
DE
.
b
.
l


	)

213 
	#_HLD
 
Z80
.
HL
.
d


	)

214 
	#_HL
 
Z80
.
HL
.
w
.
l


	)

215 
	#_H
 
Z80
.
HL
.
b
.
h


	)

216 
	#_L
 
Z80
.
HL
.
b
.
l


	)

218 
	#_IXD
 
Z80
.
IX
.
d


	)

219 
	#_IX
 
Z80
.
IX
.
w
.
l


	)

220 
	#_HX
 
Z80
.
IX
.
b
.
h


	)

221 
	#_LX
 
Z80
.
IX
.
b
.
l


	)

223 
	#_IYD
 
Z80
.
IY
.
d


	)

224 
	#_IY
 
Z80
.
IY
.
w
.
l


	)

225 
	#_HY
 
Z80
.
IY
.
b
.
h


	)

226 
	#_LY
 
Z80
.
IY
.
b
.
l


	)

228 
	#_I
 
Z80
.
I


	)

229 
	#_R
 
Z80
.
R


	)

230 
	#_R2
 
Z80
.
R2


	)

231 
	#_IM
 
Z80
.
IM


	)

232 
	#_IFF1
 
Z80
.
IFF1


	)

233 
	#_IFF2
 
Z80
.
IFF2


	)

234 
	#_HALT
 
Z80
.
HALT


	)

236 #ifde‡
Z80_MSX


237 
	#Z80_ICOUNT
 
z80_msx_ICou¡


	)

239 
	#Z80_ICOUNT
 
z80_ICou¡


	)

242 
	gZ80_ICOUNT
;

243 
Z80_Regs
 
	gZ80
 = { { { 0 } } };

245 
uöt
 
	gz80_°©eD©aSize
 = 
off£tof
(
Z80_Regs
, 
exåa_cy˛es
);

246 
UINT8
 *
	$z80_°©eD©a
()

248  (
UINT8
*)&
Z80
;

249 
	}
}

251 
UINT8
 
	gSZ
[256];

252 
UINT8
 
	gSZ_BIT
[256];

253 
UINT8
 
	gSZP
[256];

254 
UINT8
 
	gSZHV_öc
[256];

255 
UINT8
 
	gSZHV_dec
[256];

257 
	~"z80dØ.h
"

259 #i‡
BIG_FLAGS_ARRAY


260 
	~<sig«l.h
>

261 
UINT8
 *
	gSZHVC_add
 = 0;

262 
UINT8
 *
	gSZHVC_sub
 = 0;

265 #i‡
Z80_EXACT


267 c⁄° 
UINT8
 
	gúï_tmp1
[4][4] = {

272 c⁄° 
UINT8
 
	gdªp_tmp1
[4][4] = {

277 c⁄° 
UINT8
 
	gbªg_tmp2
[256] = {

297 c⁄° 
UINT8
 
	gcc_›
[0x100] = {

315 c⁄° 
UINT8
 
	gcc_cb
[0x100] = {

333 c⁄° 
UINT8
 
	gcc_ed
[0x100] = {

351 c⁄° 
UINT8
 
	gcc_xy
[0x100] = {

369 c⁄° 
UINT8
 
	gcc_xycb
[0x100] = {

388 c⁄° 
UINT8
 
	gcc_ex
[0x100] = {

406 c⁄° 
UINT8
 *
	gcc
[6] = { 
cc_›
, 
cc_cb
, 
cc_ed
, 
cc_xy
, 
cc_xycb
, 
cc_ex
 };

407 
	#Z80_TABLE_dd
 
Z80_TABLE_xy


	)

408 
	#Z80_TABLE_fd
 
Z80_TABLE_xy


	)

410 
èke_öãºu±
();

412 (*
	tfun˝å
)();

414 
	#PROTOTYPES
(
èbÀ«me
,
¥efix
) \

415 
INLINE
 
¥efix
##
	`_00
(); INLINE ¥efix##
	`_01
(); INLINE ¥efix##
	`_02
(); INLINE ¥efix##
	`_03
(); \

416 
INLINE
 
¥efix
##
	`_04
(); INLINE ¥efix##
	`_05
(); INLINE ¥efix##
	`_06
(); INLINE ¥efix##
	`_07
(); \

417 
INLINE
 
¥efix
##
	`_08
(); INLINE ¥efix##
	`_09
(); INLINE ¥efix##
	`_0a
(); INLINE ¥efix##
	`_0b
(); \

418 
INLINE
 
¥efix
##
	`_0c
(); INLINE ¥efix##
	`_0d
(); INLINE ¥efix##
	`_0e
(); INLINE ¥efix##
	`_0f
(); \

419 
INLINE
 
¥efix
##
	`_10
(); INLINE ¥efix##
	`_11
(); INLINE ¥efix##
	`_12
(); INLINE ¥efix##
	`_13
(); \

420 
INLINE
 
¥efix
##
	`_14
(); INLINE ¥efix##
	`_15
(); INLINE ¥efix##
	`_16
(); INLINE ¥efix##
	`_17
(); \

421 
INLINE
 
¥efix
##
	`_18
(); INLINE ¥efix##
	`_19
(); INLINE ¥efix##
	`_1a
(); INLINE ¥efix##
	`_1b
(); \

422 
INLINE
 
¥efix
##
	`_1c
(); INLINE ¥efix##
	`_1d
(); INLINE ¥efix##
	`_1e
(); INLINE ¥efix##
	`_1f
(); \

423 
INLINE
 
¥efix
##
	`_20
(); INLINE ¥efix##
	`_21
(); INLINE ¥efix##
	`_22
(); INLINE ¥efix##
	`_23
(); \

424 
INLINE
 
¥efix
##
	`_24
(); INLINE ¥efix##
	`_25
(); INLINE ¥efix##
	`_26
(); INLINE ¥efix##
	`_27
(); \

425 
INLINE
 
¥efix
##
	`_28
(); INLINE ¥efix##
	`_29
(); INLINE ¥efix##
	`_2a
(); INLINE ¥efix##
	`_2b
(); \

426 
INLINE
 
¥efix
##
	`_2c
(); INLINE ¥efix##
	`_2d
(); INLINE ¥efix##
	`_2e
(); INLINE ¥efix##
	`_2f
(); \

427 
INLINE
 
¥efix
##
	`_30
(); INLINE ¥efix##
	`_31
(); INLINE ¥efix##
	`_32
(); INLINE ¥efix##
	`_33
(); \

428 
INLINE
 
¥efix
##
	`_34
(); INLINE ¥efix##
	`_35
(); INLINE ¥efix##
	`_36
(); INLINE ¥efix##
	`_37
(); \

429 
INLINE
 
¥efix
##
	`_38
(); INLINE ¥efix##
	`_39
(); INLINE ¥efix##
	`_3a
(); INLINE ¥efix##
	`_3b
(); \

430 
INLINE
 
¥efix
##
	`_3c
(); INLINE ¥efix##
	`_3d
(); INLINE ¥efix##
	`_3e
(); INLINE ¥efix##
	`_3f
(); \

431 
INLINE
 
¥efix
##
	`_40
(); INLINE ¥efix##
	`_41
(); INLINE ¥efix##
	`_42
(); INLINE ¥efix##
	`_43
(); \

432 
INLINE
 
¥efix
##
	`_44
(); INLINE ¥efix##
	`_45
(); INLINE ¥efix##
	`_46
(); INLINE ¥efix##
	`_47
(); \

433 
INLINE
 
¥efix
##
	`_48
(); INLINE ¥efix##
	`_49
(); INLINE ¥efix##
	`_4a
(); INLINE ¥efix##
	`_4b
(); \

434 
INLINE
 
¥efix
##
	`_4c
(); INLINE ¥efix##
	`_4d
(); INLINE ¥efix##
	`_4e
(); INLINE ¥efix##
	`_4f
(); \

435 
INLINE
 
¥efix
##
	`_50
(); INLINE ¥efix##
	`_51
(); INLINE ¥efix##
	`_52
(); INLINE ¥efix##
	`_53
(); \

436 
INLINE
 
¥efix
##
	`_54
(); INLINE ¥efix##
	`_55
(); INLINE ¥efix##
	`_56
(); INLINE ¥efix##
	`_57
(); \

437 
INLINE
 
¥efix
##
	`_58
(); INLINE ¥efix##
	`_59
(); INLINE ¥efix##
	`_5a
(); INLINE ¥efix##
	`_5b
(); \

438 
INLINE
 
¥efix
##
	`_5c
(); INLINE ¥efix##
	`_5d
(); INLINE ¥efix##
	`_5e
(); INLINE ¥efix##
	`_5f
(); \

439 
INLINE
 
¥efix
##
	`_60
(); INLINE ¥efix##
	`_61
(); INLINE ¥efix##
	`_62
(); INLINE ¥efix##
	`_63
(); \

440 
INLINE
 
¥efix
##
	`_64
(); INLINE ¥efix##
	`_65
(); INLINE ¥efix##
	`_66
(); INLINE ¥efix##
	`_67
(); \

441 
INLINE
 
¥efix
##
	`_68
(); INLINE ¥efix##
	`_69
(); INLINE ¥efix##
	`_6a
(); INLINE ¥efix##
	`_6b
(); \

442 
INLINE
 
¥efix
##
	`_6c
(); INLINE ¥efix##
	`_6d
(); INLINE ¥efix##
	`_6e
(); INLINE ¥efix##
	`_6f
(); \

443 
INLINE
 
¥efix
##
	`_70
(); INLINE ¥efix##
	`_71
(); INLINE ¥efix##
	`_72
(); INLINE ¥efix##
	`_73
(); \

444 
INLINE
 
¥efix
##
	`_74
(); INLINE ¥efix##
	`_75
(); INLINE ¥efix##
	`_76
(); INLINE ¥efix##
	`_77
(); \

445 
INLINE
 
¥efix
##
	`_78
(); INLINE ¥efix##
	`_79
(); INLINE ¥efix##
	`_7a
(); INLINE ¥efix##
	`_7b
(); \

446 
INLINE
 
¥efix
##
	`_7c
(); INLINE ¥efix##
	`_7d
(); INLINE ¥efix##
	`_7e
(); INLINE ¥efix##
	`_7f
(); \

447 
INLINE
 
¥efix
##
	`_80
(); INLINE ¥efix##
	`_81
(); INLINE ¥efix##
	`_82
(); INLINE ¥efix##
	`_83
(); \

448 
INLINE
 
¥efix
##
	`_84
(); INLINE ¥efix##
	`_85
(); INLINE ¥efix##
	`_86
(); INLINE ¥efix##
	`_87
(); \

449 
INLINE
 
¥efix
##
	`_88
(); INLINE ¥efix##
	`_89
(); INLINE ¥efix##
	`_8a
(); INLINE ¥efix##
	`_8b
(); \

450 
INLINE
 
¥efix
##
	`_8c
(); INLINE ¥efix##
	`_8d
(); INLINE ¥efix##
	`_8e
(); INLINE ¥efix##
	`_8f
(); \

451 
INLINE
 
¥efix
##
	`_90
(); INLINE ¥efix##
	`_91
(); INLINE ¥efix##
	`_92
(); INLINE ¥efix##
	`_93
(); \

452 
INLINE
 
¥efix
##
	`_94
(); INLINE ¥efix##
	`_95
(); INLINE ¥efix##
	`_96
(); INLINE ¥efix##
	`_97
(); \

453 
INLINE
 
¥efix
##
	`_98
(); INLINE ¥efix##
	`_99
(); INLINE ¥efix##
	`_9a
(); INLINE ¥efix##
	`_9b
(); \

454 
INLINE
 
¥efix
##
	`_9c
(); INLINE ¥efix##
	`_9d
(); INLINE ¥efix##
	`_9e
(); INLINE ¥efix##
	`_9f
(); \

455 
INLINE
 
¥efix
##
	`_a0
(); INLINE ¥efix##
	`_a1
(); INLINE ¥efix##
	`_a2
(); INLINE ¥efix##
	`_a3
(); \

456 
INLINE
 
¥efix
##
	`_a4
(); INLINE ¥efix##
	`_a5
(); INLINE ¥efix##
	`_a6
(); INLINE ¥efix##
	`_a7
(); \

457 
INLINE
 
¥efix
##
	`_a8
(); INLINE ¥efix##
	`_a9
(); INLINE ¥efix##
	`_Ø
(); INLINE ¥efix##
	`_ab
(); \

458 
INLINE
 
¥efix
##
	`_ac
(); INLINE ¥efix##
	`_ad
(); INLINE ¥efix##
	`_´
(); INLINE ¥efix##
	`_af
(); \

459 
INLINE
 
¥efix
##
	`_b0
(); INLINE ¥efix##
	`_b1
(); INLINE ¥efix##
	`_b2
(); INLINE ¥efix##
	`_b3
(); \

460 
INLINE
 
¥efix
##
	`_b4
(); INLINE ¥efix##
	`_b5
(); INLINE ¥efix##
	`_b6
(); INLINE ¥efix##
	`_b7
(); \

461 
INLINE
 
¥efix
##
	`_b8
(); INLINE ¥efix##
	`_b9
(); INLINE ¥efix##
	`_ba
(); INLINE ¥efix##
	`_bb
(); \

462 
INLINE
 
¥efix
##
	`_bc
(); INLINE ¥efix##
	`_bd
(); INLINE ¥efix##
	`_be
(); INLINE ¥efix##
	`_bf
(); \

463 
INLINE
 
¥efix
##
	`_c0
(); INLINE ¥efix##
	`_c1
(); INLINE ¥efix##
	`_c2
(); INLINE ¥efix##
	`_c3
(); \

464 
INLINE
 
¥efix
##
	`_c4
(); INLINE ¥efix##
	`_c5
(); INLINE ¥efix##
	`_c6
(); INLINE ¥efix##
	`_c7
(); \

465 
INLINE
 
¥efix
##
	`_c8
(); INLINE ¥efix##
	`_c9
(); INLINE ¥efix##
	`_ˇ
(); INLINE ¥efix##
	`_cb
(); \

466 
INLINE
 
¥efix
##
	`_cc
(); INLINE ¥efix##
	`_cd
(); INLINE ¥efix##
	`_˚
(); INLINE ¥efix##
	`_cf
(); \

467 
INLINE
 
¥efix
##
	`_d0
(); INLINE ¥efix##
	`_d1
(); INLINE ¥efix##
	`_d2
(); INLINE ¥efix##
	`_d3
(); \

468 
INLINE
 
¥efix
##
	`_d4
(); INLINE ¥efix##
	`_d5
(); INLINE ¥efix##
	`_d6
(); INLINE ¥efix##
	`_d7
(); \

469 
INLINE
 
¥efix
##
	`_d8
(); INLINE ¥efix##
	`_d9
(); INLINE ¥efix##
	`_da
(); INLINE ¥efix##
	`_db
(); \

470 
INLINE
 
¥efix
##
	`_dc
(); INLINE ¥efix##
	`_dd
(); INLINE ¥efix##
	`_de
(); INLINE ¥efix##
	`_df
(); \

471 
INLINE
 
¥efix
##
	`_e0
(); INLINE ¥efix##
	`_e1
(); INLINE ¥efix##
	`_e2
(); INLINE ¥efix##
	`_e3
(); \

472 
INLINE
 
¥efix
##
	`_e4
(); INLINE ¥efix##
	`_e5
(); INLINE ¥efix##
	`_e6
(); INLINE ¥efix##
	`_e7
(); \

473 
INLINE
 
¥efix
##
	`_e8
(); INLINE ¥efix##
	`_e9
(); INLINE ¥efix##
	`_ó
(); INLINE ¥efix##
	`_eb
(); \

474 
INLINE
 
¥efix
##
	`_ec
(); INLINE ¥efix##
	`_ed
(); INLINE ¥efix##
	`_ì
(); INLINE ¥efix##
	`_ef
(); \

475 
INLINE
 
¥efix
##
	`_f0
(); INLINE ¥efix##
	`_f1
(); INLINE ¥efix##
	`_f2
(); INLINE ¥efix##
	`_f3
(); \

476 
INLINE
 
¥efix
##
	`_f4
(); INLINE ¥efix##
	`_f5
(); INLINE ¥efix##
	`_f6
(); INLINE ¥efix##
	`_f7
(); \

477 
INLINE
 
¥efix
##
	`_f8
(); INLINE ¥efix##
	`_f9
(); INLINE ¥efix##
	`_Á
(); INLINE ¥efix##
	`_fb
(); \

478 
INLINE
 
¥efix
##
	`_fc
(); INLINE ¥efix##
	`_fd
(); INLINE ¥efix##
	`_„
(); INLINE ¥efix##
	`_ff
(); \

479 c⁄° 
fun˝å
 
èbÀ«me
[0x100] = { \

480 
¥efix
##
_00
,¥efix##
_01
,¥efix##
_02
,¥efix##
_03
,¥efix##
_04
,¥efix##
_05
,¥efix##
_06
,¥efix##
_07
, \

481 
¥efix
##
_08
,¥efix##
_09
,¥efix##
_0a
,¥efix##
_0b
,¥efix##
_0c
,¥efix##
_0d
,¥efix##
_0e
,¥efix##
_0f
, \

482 
¥efix
##
_10
,¥efix##
_11
,¥efix##
_12
,¥efix##
_13
,¥efix##
_14
,¥efix##
_15
,¥efix##
_16
,¥efix##
_17
, \

483 
¥efix
##
_18
,¥efix##
_19
,¥efix##
_1a
,¥efix##
_1b
,¥efix##
_1c
,¥efix##
_1d
,¥efix##
_1e
,¥efix##
_1f
, \

484 
¥efix
##
_20
,¥efix##
_21
,¥efix##
_22
,¥efix##
_23
,¥efix##
_24
,¥efix##
_25
,¥efix##
_26
,¥efix##
_27
, \

485 
¥efix
##
_28
,¥efix##
_29
,¥efix##
_2a
,¥efix##
_2b
,¥efix##
_2c
,¥efix##
_2d
,¥efix##
_2e
,¥efix##
_2f
, \

486 
¥efix
##
_30
,¥efix##
_31
,¥efix##
_32
,¥efix##
_33
,¥efix##
_34
,¥efix##
_35
,¥efix##
_36
,¥efix##
_37
, \

487 
¥efix
##
_38
,¥efix##
_39
,¥efix##
_3a
,¥efix##
_3b
,¥efix##
_3c
,¥efix##
_3d
,¥efix##
_3e
,¥efix##
_3f
, \

488 
¥efix
##
_40
,¥efix##
_41
,¥efix##
_42
,¥efix##
_43
,¥efix##
_44
,¥efix##
_45
,¥efix##
_46
,¥efix##
_47
, \

489 
¥efix
##
_48
,¥efix##
_49
,¥efix##
_4a
,¥efix##
_4b
,¥efix##
_4c
,¥efix##
_4d
,¥efix##
_4e
,¥efix##
_4f
, \

490 
¥efix
##
_50
,¥efix##
_51
,¥efix##
_52
,¥efix##
_53
,¥efix##
_54
,¥efix##
_55
,¥efix##
_56
,¥efix##
_57
, \

491 
¥efix
##
_58
,¥efix##
_59
,¥efix##
_5a
,¥efix##
_5b
,¥efix##
_5c
,¥efix##
_5d
,¥efix##
_5e
,¥efix##
_5f
, \

492 
¥efix
##
_60
,¥efix##
_61
,¥efix##
_62
,¥efix##
_63
,¥efix##
_64
,¥efix##
_65
,¥efix##
_66
,¥efix##
_67
, \

493 
¥efix
##
_68
,¥efix##
_69
,¥efix##
_6a
,¥efix##
_6b
,¥efix##
_6c
,¥efix##
_6d
,¥efix##
_6e
,¥efix##
_6f
, \

494 
¥efix
##
_70
,¥efix##
_71
,¥efix##
_72
,¥efix##
_73
,¥efix##
_74
,¥efix##
_75
,¥efix##
_76
,¥efix##
_77
, \

495 
¥efix
##
_78
,¥efix##
_79
,¥efix##
_7a
,¥efix##
_7b
,¥efix##
_7c
,¥efix##
_7d
,¥efix##
_7e
,¥efix##
_7f
, \

496 
¥efix
##
_80
,¥efix##
_81
,¥efix##
_82
,¥efix##
_83
,¥efix##
_84
,¥efix##
_85
,¥efix##
_86
,¥efix##
_87
, \

497 
¥efix
##
_88
,¥efix##
_89
,¥efix##
_8a
,¥efix##
_8b
,¥efix##
_8c
,¥efix##
_8d
,¥efix##
_8e
,¥efix##
_8f
, \

498 
¥efix
##
_90
,¥efix##
_91
,¥efix##
_92
,¥efix##
_93
,¥efix##
_94
,¥efix##
_95
,¥efix##
_96
,¥efix##
_97
, \

499 
¥efix
##
_98
,¥efix##
_99
,¥efix##
_9a
,¥efix##
_9b
,¥efix##
_9c
,¥efix##
_9d
,¥efix##
_9e
,¥efix##
_9f
, \

500 
¥efix
##
_a0
,¥efix##
_a1
,¥efix##
_a2
,¥efix##
_a3
,¥efix##
_a4
,¥efix##
_a5
,¥efix##
_a6
,¥efix##
_a7
, \

501 
¥efix
##
_a8
,¥efix##
_a9
,¥efix##
_Ø
,¥efix##
_ab
,¥efix##
_ac
,¥efix##
_ad
,¥efix##
_´
,¥efix##
_af
, \

502 
¥efix
##
_b0
,¥efix##
_b1
,¥efix##
_b2
,¥efix##
_b3
,¥efix##
_b4
,¥efix##
_b5
,¥efix##
_b6
,¥efix##
_b7
, \

503 
¥efix
##
_b8
,¥efix##
_b9
,¥efix##
_ba
,¥efix##
_bb
,¥efix##
_bc
,¥efix##
_bd
,¥efix##
_be
,¥efix##
_bf
, \

504 
¥efix
##
_c0
,¥efix##
_c1
,¥efix##
_c2
,¥efix##
_c3
,¥efix##
_c4
,¥efix##
_c5
,¥efix##
_c6
,¥efix##
_c7
, \

505 
¥efix
##
_c8
,¥efix##
_c9
,¥efix##
_ˇ
,¥efix##
_cb
,¥efix##
_cc
,¥efix##
_cd
,¥efix##
_˚
,¥efix##
_cf
, \

506 
¥efix
##
_d0
,¥efix##
_d1
,¥efix##
_d2
,¥efix##
_d3
,¥efix##
_d4
,¥efix##
_d5
,¥efix##
_d6
,¥efix##
_d7
, \

507 
¥efix
##
_d8
,¥efix##
_d9
,¥efix##
_da
,¥efix##
_db
,¥efix##
_dc
,¥efix##
_dd
,¥efix##
_de
,¥efix##
_df
, \

508 
¥efix
##
_e0
,¥efix##
_e1
,¥efix##
_e2
,¥efix##
_e3
,¥efix##
_e4
,¥efix##
_e5
,¥efix##
_e6
,¥efix##
_e7
, \

509 
¥efix
##
_e8
,¥efix##
_e9
,¥efix##
_ó
,¥efix##
_eb
,¥efix##
_ec
,¥efix##
_ed
,¥efix##
_ì
,¥efix##
_ef
, \

510 
¥efix
##
_f0
,¥efix##
_f1
,¥efix##
_f2
,¥efix##
_f3
,¥efix##
_f4
,¥efix##
_f5
,¥efix##
_f6
,¥efix##
_f7
, \

511 
¥efix
##
_f8
,¥efix##
_f9
,¥efix##
_Á
,¥efix##
_fb
,¥efix##
_fc
,¥efix##
_fd
,¥efix##
_„
,¥efix##
_ff
 \

512 
	}

	)
}

514 
PROTOTYPES
(
Z80›
,
›
);

515 
PROTOTYPES
(
Z80cb
,
cb
);

516 
PROTOTYPES
(
Z80dd
,
dd
);

517 
PROTOTYPES
(
Z80ed
,
ed
);

518 
PROTOTYPES
(
Z80fd
,
fd
);

519 
PROTOTYPES
(
Z80xycb
,
xycb
);

525 
INLINE
 
	$BURNODD
(
cy˛es
, 
›codes
, 
cy˛esum
)

527 if–
cy˛es
 > 0 )

529 
_R
 +(
cy˛es
 / 
cy˛esum
Ë* 
›codes
;

530 
Z80_ICOUNT
 -(
cy˛es
 / 
cy˛esum
) * cyclesum;

532 
	}
}

537 
	#OP
(
¥efix
,
›code
Ë
INLINE
 ¥efix##
_
##
	`›code
()

	)

542 
	#CC
(
¥efix
,
›code
Ë
Z80_ICOUNT
 -
cc
[
Z80_TABLE_
##¥efix][›code]

	)

547 
	#EXEC
(
¥efix
,
›code
) \

549 
›
 = 
›code
; \

550 
	`CC
(
¥efix
,
›
); \

551 (*
Z80
##
¥efix
[
›
])(); \

552 }

	)

554 #i‡
BIG_SWITCH


555 
	#EXEC_INLINE
(
¥efix
,
›code
) \

557 
›
 = 
›code
; \

558 
	`CC
(
¥efix
,
›
); \

559 
›
) \

561 0x00:
¥efix
##
_
##00();; 0x01:prefix##_##01();; 0x02:prefix##_##02();; 0x03:prefix##_##03();; \

562 0x04:
¥efix
##
_
##04();; 0x05:prefix##_##05();; 0x06:prefix##_##06();; 0x07:prefix##_##07();; \

563 0x08:
¥efix
##
_
##08();; 0x09:prefix##_##09();; 0x0a:prefix##_##0a();; 0x0b:prefix##_##0b();; \

564 0x0c:
¥efix
##
_
##0c();; 0x0d:prefix##_##0d();; 0x0e:prefix##_##0e();; 0x0f:prefix##_##0f();; \

565 0x10:
¥efix
##
_
##10();; 0x11:prefix##_##11();; 0x12:prefix##_##12();; 0x13:prefix##_##13();; \

566 0x14:
¥efix
##
_
##14();; 0x15:prefix##_##15();; 0x16:prefix##_##16();; 0x17:prefix##_##17();; \

567 0x18:
¥efix
##
_
##18();; 0x19:prefix##_##19();; 0x1a:prefix##_##1a();; 0x1b:prefix##_##1b();; \

568 0x1c:
¥efix
##
_
##1c();; 0x1d:prefix##_##1d();; 0x1e:prefix##_##1e();; 0x1f:prefix##_##1f();; \

569 0x20:
¥efix
##
_
##20();; 0x21:prefix##_##21();; 0x22:prefix##_##22();; 0x23:prefix##_##23();; \

570 0x24:
¥efix
##
_
##24();; 0x25:prefix##_##25();; 0x26:prefix##_##26();; 0x27:prefix##_##27();; \

571 0x28:
¥efix
##
_
##28();; 0x29:prefix##_##29();; 0x2a:prefix##_##2a();; 0x2b:prefix##_##2b();; \

572 0x2c:
¥efix
##
_
##2c();; 0x2d:prefix##_##2d();; 0x2e:prefix##_##2e();; 0x2f:prefix##_##2f();; \

573 0x30:
¥efix
##
_
##30();; 0x31:prefix##_##31();; 0x32:prefix##_##32();; 0x33:prefix##_##33();; \

574 0x34:
¥efix
##
_
##34();; 0x35:prefix##_##35();; 0x36:prefix##_##36();; 0x37:prefix##_##37();; \

575 0x38:
¥efix
##
_
##38();; 0x39:prefix##_##39();; 0x3a:prefix##_##3a();; 0x3b:prefix##_##3b();; \

576 0x3c:
¥efix
##
_
##3c();; 0x3d:prefix##_##3d();; 0x3e:prefix##_##3e();; 0x3f:prefix##_##3f();; \

577 0x40:
¥efix
##
_
##40();; 0x41:prefix##_##41();; 0x42:prefix##_##42();; 0x43:prefix##_##43();; \

578 0x44:
¥efix
##
_
##44();; 0x45:prefix##_##45();; 0x46:prefix##_##46();; 0x47:prefix##_##47();; \

579 0x48:
¥efix
##
_
##48();; 0x49:prefix##_##49();; 0x4a:prefix##_##4a();; 0x4b:prefix##_##4b();; \

580 0x4c:
¥efix
##
_
##4c();; 0x4d:prefix##_##4d();; 0x4e:prefix##_##4e();; 0x4f:prefix##_##4f();; \

581 0x50:
¥efix
##
_
##50();; 0x51:prefix##_##51();; 0x52:prefix##_##52();; 0x53:prefix##_##53();; \

582 0x54:
¥efix
##
_
##54();; 0x55:prefix##_##55();; 0x56:prefix##_##56();; 0x57:prefix##_##57();; \

583 0x58:
¥efix
##
_
##58();; 0x59:prefix##_##59();; 0x5a:prefix##_##5a();; 0x5b:prefix##_##5b();; \

584 0x5c:
¥efix
##
_
##5c();; 0x5d:prefix##_##5d();; 0x5e:prefix##_##5e();; 0x5f:prefix##_##5f();; \

585 0x60:
¥efix
##
_
##60();; 0x61:prefix##_##61();; 0x62:prefix##_##62();; 0x63:prefix##_##63();; \

586 0x64:
¥efix
##
_
##64();; 0x65:prefix##_##65();; 0x66:prefix##_##66();; 0x67:prefix##_##67();; \

587 0x68:
¥efix
##
_
##68();; 0x69:prefix##_##69();; 0x6a:prefix##_##6a();; 0x6b:prefix##_##6b();; \

588 0x6c:
¥efix
##
_
##6c();; 0x6d:prefix##_##6d();; 0x6e:prefix##_##6e();; 0x6f:prefix##_##6f();; \

589 0x70:
¥efix
##
_
##70();; 0x71:prefix##_##71();; 0x72:prefix##_##72();; 0x73:prefix##_##73();; \

590 0x74:
¥efix
##
_
##74();; 0x75:prefix##_##75();; 0x76:prefix##_##76();; 0x77:prefix##_##77();; \

591 0x78:
¥efix
##
_
##78();; 0x79:prefix##_##79();; 0x7a:prefix##_##7a();; 0x7b:prefix##_##7b();; \

592 0x7c:
¥efix
##
_
##7c();; 0x7d:prefix##_##7d();; 0x7e:prefix##_##7e();; 0x7f:prefix##_##7f();; \

593 0x80:
¥efix
##
_
##80();; 0x81:prefix##_##81();; 0x82:prefix##_##82();; 0x83:prefix##_##83();; \

594 0x84:
¥efix
##
_
##84();; 0x85:prefix##_##85();; 0x86:prefix##_##86();; 0x87:prefix##_##87();; \

595 0x88:
¥efix
##
_
##88();; 0x89:prefix##_##89();; 0x8a:prefix##_##8a();; 0x8b:prefix##_##8b();; \

596 0x8c:
¥efix
##
_
##8c();; 0x8d:prefix##_##8d();; 0x8e:prefix##_##8e();; 0x8f:prefix##_##8f();; \

597 0x90:
¥efix
##
_
##90();; 0x91:prefix##_##91();; 0x92:prefix##_##92();; 0x93:prefix##_##93();; \

598 0x94:
¥efix
##
_
##94();; 0x95:prefix##_##95();; 0x96:prefix##_##96();; 0x97:prefix##_##97();; \

599 0x98:
¥efix
##
_
##98();; 0x99:prefix##_##99();; 0x9a:prefix##_##9a();; 0x9b:prefix##_##9b();; \

600 0x9c:
¥efix
##
_
##9c();; 0x9d:prefix##_##9d();; 0x9e:prefix##_##9e();; 0x9f:prefix##_##9f();; \

601 0xa0:
¥efix
##
_
##
	`a0
();; 0xa1:¥efix##_##
	`a1
();; 0xa2:¥efix##_##
	`a2
();; 0xa3:¥efix##_##
	`a3
();; \

602 0xa4:
¥efix
##
_
##
	`a4
();; 0xa5:¥efix##_##
	`a5
();; 0xa6:¥efix##_##
	`a6
();; 0xa7:¥efix##_##
	`a7
();; \

603 0xa8:
¥efix
##
_
##
	`a8
();; 0xa9:¥efix##_##
	`a9
();; 0xØ:¥efix##_##
	`Ø
();; 0xab:¥efix##_##
	`ab
();; \

604 0xac:
¥efix
##
_
##
	`ac
();; 0xad:¥efix##_##
	`ad
();; 0x´:¥efix##_##
	`´
();; 0xaf:¥efix##_##
	`af
();; \

605 0xb0:
¥efix
##
_
##
	`b0
();; 0xb1:¥efix##_##
	`b1
();; 0xb2:¥efix##_##
	`b2
();; 0xb3:¥efix##_##
	`b3
();; \

606 0xb4:
¥efix
##
_
##
	`b4
();; 0xb5:¥efix##_##
	`b5
();; 0xb6:¥efix##_##
	`b6
();; 0xb7:¥efix##_##
	`b7
();; \

607 0xb8:
¥efix
##
_
##
	`b8
();; 0xb9:¥efix##_##
	`b9
();; 0xba:¥efix##_##
	`ba
();; 0xbb:¥efix##_##
	`bb
();; \

608 0xbc:
¥efix
##
_
##
	`bc
();; 0xbd:¥efix##_##
	`bd
();; 0xbe:¥efix##_##
	`be
();; 0xbf:¥efix##_##
	`bf
();; \

609 0xc0:
¥efix
##
_
##
	`c0
();; 0xc1:¥efix##_##
	`c1
();; 0xc2:¥efix##_##
	`c2
();; 0xc3:¥efix##_##
	`c3
();; \

610 0xc4:
¥efix
##
_
##
	`c4
();; 0xc5:¥efix##_##
	`c5
();; 0xc6:¥efix##_##
	`c6
();; 0xc7:¥efix##_##
	`c7
();; \

611 0xc8:
¥efix
##
_
##
	`c8
();; 0xc9:¥efix##_##
	`c9
();; 0xˇ:¥efix##_##
	`ˇ
();; 0xcb:¥efix##_##
	`cb
();; \

612 0xcc:
¥efix
##
_
##
	`cc
();; 0xcd:¥efix##_##
	`cd
();; 0x˚:¥efix##_##
	`˚
();; 0xcf:¥efix##_##
	`cf
();; \

613 0xd0:
¥efix
##
_
##
	`d0
();; 0xd1:¥efix##_##
	`d1
();; 0xd2:¥efix##_##
	`d2
();; 0xd3:¥efix##_##
	`d3
();; \

614 0xd4:
¥efix
##
_
##
	`d4
();; 0xd5:¥efix##_##
	`d5
();; 0xd6:¥efix##_##
	`d6
();; 0xd7:¥efix##_##
	`d7
();; \

615 0xd8:
¥efix
##
_
##
	`d8
();; 0xd9:¥efix##_##
	`d9
();; 0xda:¥efix##_##
	`da
();; 0xdb:¥efix##_##
	`db
();; \

616 0xdc:
¥efix
##
_
##
	`dc
();; 0xdd:¥efix##_##
	`dd
();; 0xde:¥efix##_##
	`de
();; 0xdf:¥efix##_##
	`df
();; \

617 0xe0:
¥efix
##
_
##
	`e0
();; 0xe1:¥efix##_##
	`e1
();; 0xe2:¥efix##_##
	`e2
();; 0xe3:¥efix##_##
	`e3
();; \

618 0xe4:
¥efix
##
_
##
	`e4
();; 0xe5:¥efix##_##
	`e5
();; 0xe6:¥efix##_##
	`e6
();; 0xe7:¥efix##_##
	`e7
();; \

619 0xe8:
¥efix
##
_
##
	`e8
();; 0xe9:¥efix##_##
	`e9
();; 0xó:¥efix##_##
	`ó
();; 0xeb:¥efix##_##
	`eb
();; \

620 0xec:
¥efix
##
_
##
	`ec
();; 0xed:¥efix##_##
	`ed
();; 0xì:¥efix##_##
	`ì
();; 0xef:¥efix##_##
	`ef
();; \

621 0xf0:
¥efix
##
_
##
	`f0
();; 0xf1:¥efix##_##
	`f1
();; 0xf2:¥efix##_##
	`f2
();; 0xf3:¥efix##_##
	`f3
();; \

622 0xf4:
¥efix
##
_
##
	`f4
();; 0xf5:¥efix##_##
	`f5
();; 0xf6:¥efix##_##
	`f6
();; 0xf7:¥efix##_##
	`f7
();; \

623 0xf8:
¥efix
##
_
##
	`f8
();; 0xf9:¥efix##_##
	`f9
();; 0xÁ:¥efix##_##
	`Á
();; 0xfb:¥efix##_##
	`fb
();; \

624 0xfc:
¥efix
##
_
##
	`fc
();; 0xfd:¥efix##_##
	`fd
();; 0x„:¥efix##_##
	`„
();; 0xff:¥efix##_##
	`ff
();; \

626 }

	)

628 
	#EXEC_INLINE
 
EXEC


	)

635 #ifde‡
Z80_MSX


636 
	#ENTER_HALT
 { \

637 
_PC
--; \

638 
_HALT
 = 1; \

639 if–!
Z80
.
a·î_EI
 ) \

640 
	`z80_msx_bu∫
–
Z80_ICOUNT
 ); \

641 }

	)

643 
	#ENTER_HALT
 { \

644 
_PC
--; \

645 
_HALT
 = 1; \

646 if–!
Z80
.
a·î_EI
 ) \

647 
	`z80_bu∫
–
Z80_ICOUNT
 ); \

648 }

	)

654 
	#LEAVE_HALT
 { \

655 if–
_HALT
 ) \

657 
_HALT
 = 0; \

658 
_PC
++; \

660 }

	)

665 
	#IN
(
p‹t
Ë((
UINT8
)
	`mame_z80_ªadp‹t16
’‹t))

	)

670 
	#OUT
(
p‹t
,
vÆue
Ë
	`mame_z80_wrôï‹t16
’‹t,vÆue)

	)

676 
	#RM
(
addr
Ë(
mame_z80mem
[addr])

	)

681 
INLINE
 
	$RM16
–
UINT32
 
addr
, 
PAIR
 *
r
 )

683 
r
->
b
.
l
 = 
	`RM
(
addr
);

684 
r
->
b
.
h
 = 
	`RM
((
addr
+1)&0xffff);

685 
	}
}

692 
	#WM
(
addr
,
vÆue
Ë(
mame_z80mem
[addr]=vÆue)

	)

697 
INLINE
 
	$WM16
–
UINT32
 
addr
, 
PAIR
 *
r
 )

699 
	`WM
(
addr
,
r
->
b
.
l
);

700 
	`WM
((
addr
+1)&0xffff,
r
->
b
.
h
);

701 
	}
}

708 
INLINE
 
UINT8
 
	$ROP
()

710 
pc
 = 
_PCD
;

711 #ifde‡
Z80_MSX


712 i‡–!(
pc
 & 0x1fffËË
	`ch™ge_pc16
 (pc);

714 
_PC
++;

715  
	`RM
(
pc
);

716 
	}
}

724 
INLINE
 
UINT8
 
	$ARG
()

726 
pc
 = 
_PCD
;

727 #ifde‡
Z80_MSX


728 i‡–!(
pc
 & 0x1fffËË
	`ch™ge_pc16
 (pc);

730 
_PC
++;

731  
	`RM
(
pc
);

732 
	}
}

734 
INLINE
 
UINT32
 
	$ARG16
()

736 #ifde‡
Z80_MSX


737 
ªt
 = 
	`ARG
();

738  
ªt
 | ((
	`ARG
()&0xffff) << 8);

740 
pc
 = 
_PCD
;

741 
_PC
 += 2;

742  
	`RM
(
pc
) | (RM((pc+1)&0xffff) << 8);

744 
	}
}

750 
	#EAX
 
Z80
.
EA
 = (
UINT32
)(
UINT16
)(
_IX
+(
INT8
)
	`ARG
())

	)

751 
	#EAY
 
Z80
.
EA
 = (
UINT32
)(
UINT16
)(
_IY
+(
INT8
)
	`ARG
())

	)

756 
	#POP
(
DR
Ë{ 
	`RM16
–
_SPD
, &
Z80
.DR ); 
_SP
 +2; }

	)

761 
	#PUSH
(
SR
Ë{ 
_SP
 -2; 
	`WM16
–
_SPD
, &
Z80
.SR ); }

	)

766 #i‡
BUSY_LOOP_HACKS


767 
	#JP
 { \

768 
ﬁdpc
 = 
_PCD
-1; \

769 
_PCD
 = 
	`ARG16
(); \

770 
	`ch™ge_pc16
(
_PCD
); \

772 if–
_PCD
 =
ﬁdpc
 ) \

774 if–!
Z80
.
a·î_EI
 ) \

775 
	`BURNODD
–
Z80_ICOUNT
, 1, 
cc
[
Z80_TABLE_›
][0xc3] ); \

779 
UINT8
 
›
 = 
	`RM
(
_PCD
); \

780 if–
_PCD
 =
ﬁdpc
-1 ) \

783 i‡–
›
 == 0x00 || op == 0xfb ) \

785 if–!
Z80
.
a·î_EI
 ) \

786 
	`BURNODD
–
Z80_ICOUNT
-
cc
[
Z80_TABLE_›
][0x00], \

787 2, 
cc
[
Z80_TABLE_›
][0x00]+cc[Z80_TABLE_op][0xc3]); \

792 if–
_PCD
 =
ﬁdpc
-3 && 
›
 == 0x31 ) \

794 if–!
Z80
.
a·î_EI
 ) \

795 
	`BURNODD
–
Z80_ICOUNT
-
cc
[
Z80_TABLE_›
][0x31], \

796 2, 
cc
[
Z80_TABLE_›
][0x31]+cc[Z80_TABLE_op][0xc3]); \

799 }

	)

801 
	#JP
 { \

802 
_PCD
 = 
	`ARG16
(); \

803 
	`ch™ge_pc16
(
_PCD
); \

804 }

	)

811 
	#JP_COND
(
c⁄d
) \

812 if–
c⁄d
 ) \

814 
_PCD
 = 
	`ARG16
(); \

815 
	`ch™ge_pc16
(
_PCD
); \

819 
_PC
 += 2; \

820 }

	)

825 
	#JR
() \

827 
ﬁdpc
 = 
_PCD
-1; \

828 
INT8
 
¨g
 = (INT8)
	`ARG
(); \

829 
_PC
 +
¨g
; \

830 
	`ch™ge_pc16
(
_PCD
); \

832 if–
_PCD
 =
ﬁdpc
 ) \

834 if–!
Z80
.
a·î_EI
 ) \

835 
	`BURNODD
–
Z80_ICOUNT
, 1, 
cc
[
Z80_TABLE_›
][0x18] ); \

839 
UINT8
 
›
 = 
	`RM
(
_PCD
); \

840 if–
_PCD
 =
ﬁdpc
-1 ) \

843 i‡–
›
 == 0x00 || op == 0xfb ) \

845 if–!
Z80
.
a·î_EI
 ) \

846 
	`BURNODD
–
Z80_ICOUNT
-
cc
[
Z80_TABLE_›
][0x00], \

847 2, 
cc
[
Z80_TABLE_›
][0x00]+cc[Z80_TABLE_op][0x18]); \

852 if–
_PCD
 =
ﬁdpc
-3 && 
›
 == 0x31 ) \

854 if–!
Z80
.
a·î_EI
 ) \

855 
	`BURNODD
–
Z80_ICOUNT
-
cc
[
Z80_TABLE_›
][0x31], \

856 2, 
cc
[
Z80_TABLE_›
][0x31]+cc[Z80_TABLE_op][0x18]); \

859 }

	)

864 
	#JR_COND
(
c⁄d
,
›code
) \

865 if–
c⁄d
 ) \

867 
INT8
 
¨g
 = (INT8)
	`ARG
(); \

868 
_PC
 +
¨g
; \

869 
	`CC
(
ex
,
›code
); \

870 
	`ch™ge_pc16
(
_PCD
); \

872 
_PC
++; \

873 

	)

877 
	#CALL
() \

878 
Z80
.
EA
 = 
	`ARG16
(); \

879 
	`PUSH
–
PC
 ); \

880 
_PCD
 = 
Z80
.
EA
; \

881 
	`ch™ge_pc16
(
_PCD
)

	)

886 
	#CALL_COND
(
c⁄d
,
›code
) \

887 if–
c⁄d
 ) \

889 
Z80
.
EA
 = 
	`ARG16
(); \

890 
	`PUSH
–
PC
 ); \

891 
_PCD
 = 
Z80
.
EA
; \

892 
	`CC
(
ex
,
›code
); \

893 
	`ch™ge_pc16
(
_PCD
); \

897 
_PC
+=2; \

898 }

	)

903 
	#RET_COND
(
c⁄d
,
›code
) \

904 if–
c⁄d
 ) \

906 
	`POP
(
PC
); \

907 
	`ch™ge_pc16
(
_PCD
); \

908 
	`CC
(
ex
,
›code
); \

909 }

	)

914 
	#RETN
 { \

915 
	`LOG
(("Z80 #%d RETN IFF1:%d IFF2:%d\n", 
	`˝u_gëa˘ive˝u
(), 
_IFF1
, 
_IFF2
)); \

916 
	`POP
(
PC
); \

917 
	`ch™ge_pc16
(
_PCD
); \

918 if–
_IFF1
 =0 && 
_IFF2
 == 1 ) \

920 
_IFF1
 = 1; \

921 if–
Z80
.
úq_°©e
 !
CLEAR_LINE
 || \

922 
Z80
.
ªque°_úq
 >= 0 ) \

924 
	`LOG
(("Z80 #%d RETNÅakes IRQ\n", \

925 
	`˝u_gëa˘ive˝u
())); \

926 
	`èke_öãºu±
(); \

929 
_IFF1
 = 
_IFF2
; \

930 }

	)

935 
	#RETI
 { \

936 
devi˚
 = 
Z80
.
£rvi˚_úq
; \

937 
	`POP
(
PC
); \

938 
	`ch™ge_pc16
(
_PCD
); \

941 if–
devi˚
 >= 0 ) \

943 
	`LOG
(("Z80 #%d RETI device %d: $%02x\n", \

944 
	`˝u_gëa˘ive˝u
(), 
devi˚
, 
Z80
.
úq
[devi˚].
úq_∑øm
)); \

945 
Z80
.
úq
[
devi˚
].
	`öãºu±_ªti
(Z80.úq[devi˚].
úq_∑øm
); \

947 }

	)

952 
	#LD_R_A
 { \

953 
_R
 = 
_A
; \

954 
_R2
 = 
_A
 & 0x80; \

955 }

	)

960 
	#LD_A_R
 { \

961 
_A
 = (
_R
 & 0x7fË| 
_R2
; \

962 
_F
 = (_F & 
CF
Ë| 
SZ
[
_A
] | ( 
_IFF2
 << 2 ); \

963 }

	)

968 
	#LD_I_A
 { \

969 
_I
 = 
_A
; \

970 }

	)

975 
	#LD_A_I
 { \

976 
_A
 = 
_I
; \

977 
_F
 = (_F & 
CF
Ë| 
SZ
[
_A
] | ( 
_IFF2
 << 2 ); \

978 }

	)

983 
	#RST
(
addr
) \

984 
	`PUSH
–
PC
 ); \

985 
_PCD
 = 
addr
; \

986 
	`ch™ge_pc16
(
_PCD
)

	)

991 
INLINE
 
UINT8
 
	$INC
(
UINT8
 
vÆue
)

993 
UINT8
 
ªs
 = 
vÆue
 + 1;

994 
_F
 = (_F & 
CF
Ë| 
SZHV_öc
[
ªs
];

995  (
UINT8
)
ªs
;

996 
	}
}

1001 
INLINE
 
UINT8
 
	$DEC
(
UINT8
 
vÆue
)

1003 
UINT8
 
ªs
 = 
vÆue
 - 1;

1004 
_F
 = (_F & 
CF
Ë| 
SZHV_dec
[
ªs
];

1005  
ªs
;

1006 
	}
}

1011 #i‡
Z80_EXACT


1012 
	#RLCA
 \

1013 
_A
 = (_A << 1) | (_A >> 7); \

1014 
_F
 = (_F & (
SF
 | 
ZF
 | 
PF
)Ë| (
_A
 & (
YF
 | 
XF
 | 
CF
))

	)

1016 
	#RLCA
 \

1017 
_A
 = (_A << 1) | (_A >> 7); \

1018 
_F
 = (_F & (
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
PF
)Ë| (
_A
 & 
CF
)

	)

1024 #i‡
Z80_EXACT


1025 
	#RRCA
 \

1026 
_F
 = (_F & (
SF
 | 
ZF
 | 
PF
)Ë| (
_A
 & 
CF
); \

1027 
_A
 = (_A >> 1) | (_A << 7); \

1028 
_F
 |(
_A
 & (
YF
 | 
XF
Ë)

	)

1030 
	#RRCA
 \

1031 
_F
 = (_F & (
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
PF
)Ë| (
_A
 & 
CF
); \

1032 
_A
 = (_A >> 1Ë| (_A << 7)

	)

1038 #i‡
Z80_EXACT


1039 
	#RLA
 { \

1040 
UINT8
 
ªs
 = (
_A
 << 1Ë| (
_F
 & 
CF
); \

1041 
UINT8
 
c
 = (
_A
 & 0x80Ë? 
CF
 : 0; \

1042 
_F
 = (_F & (
SF
 | 
ZF
 | 
PF
)Ë| 
c
 | (
ªs
 & (
YF
 | 
XF
)); \

1043 
_A
 = 
ªs
; \

1044 }

	)

1046 
	#RLA
 { \

1047 
UINT8
 
ªs
 = (
_A
 << 1Ë| (
_F
 & 
CF
); \

1048 
UINT8
 
c
 = (
_A
 & 0x80Ë? 
CF
 : 0; \

1049 
_F
 = (_F & (
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
PF
)Ë| 
c
; \

1050 
_A
 = 
ªs
; \

1051 }

	)

1057 #i‡
Z80_EXACT


1058 
	#RRA
 { \

1059 
UINT8
 
ªs
 = (
_A
 >> 1Ë| (
_F
 << 7); \

1060 
UINT8
 
c
 = (
_A
 & 0x01Ë? 
CF
 : 0; \

1061 
_F
 = (_F & (
SF
 | 
ZF
 | 
PF
)Ë| 
c
 | (
ªs
 & (
YF
 | 
XF
)); \

1062 
_A
 = 
ªs
; \

1063 }

	)

1065 
	#RRA
 { \

1066 
UINT8
 
ªs
 = (
_A
 >> 1Ë| (
_F
 << 7); \

1067 
UINT8
 
c
 = (
_A
 & 0x01Ë? 
CF
 : 0; \

1068 
_F
 = (_F & (
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
PF
)Ë| 
c
; \

1069 
_A
 = 
ªs
; \

1070 }

	)

1076 
	#RRD
 { \

1077 
UINT8
 
n
 = 
	`RM
(
_HL
); \

1078 
	`WM
–
_HL
, (
n
 >> 4Ë| (
_A
 << 4) ); \

1079 
_A
 = (_A & 0xf0Ë| (
n
 & 0x0f); \

1080 
_F
 = (_F & 
CF
Ë| 
SZP
[
_A
]; \

1081 }

	)

1086 
	#RLD
 { \

1087 
UINT8
 
n
 = 
	`RM
(
_HL
); \

1088 
	`WM
–
_HL
, (
n
 << 4Ë| (
_A
 & 0x0f) ); \

1089 
_A
 = (_A & 0xf0Ë| (
n
 >> 4); \

1090 
_F
 = (_F & 
CF
Ë| 
SZP
[
_A
]; \

1091 }

	)

1096 #ifde‡
X86_ASM


1097 #i‡
Z80_EXACT


1098 
	#ADD
(
vÆue
) \

1099 
	`asm
 ( \

1110 :"=q" (
_A
), "=q" (
_F
) \

1111 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1112 )

	)

1114 
	#ADD
(
vÆue
) \

1115 
	`asm
 ( \

1123 :"=q" (
_A
), "=q" (
_F
) \

1124 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1125 )

	)

1128 #i‡
BIG_FLAGS_ARRAY


1129 
	#ADD
(
vÆue
) \

1131 
UINT32
 
ah
 = 
_AFD
 & 0xff00; \

1132 
UINT32
 
ªs
 = (
UINT8
)((
ah
 >> 8Ë+ 
vÆue
); \

1133 
_F
 = 
SZHVC_add
[
ah
 | 
ªs
]; \

1134 
_A
 = 
ªs
; \

1135 }

	)

1137 
	#ADD
(
vÆue
) \

1139 
vÆ
 = 
vÆue
; \

1140 
ªs
 = 
_A
 + 
vÆ
; \

1141 
_F
 = 
SZ
[(
UINT8
)
ªs
] | (‘e†>> 8Ë& 
CF
) | \

1142 ((
_A
 ^ 
ªs
 ^ 
vÆ
Ë& 
HF
) | \

1143 (((
vÆ
 ^ 
_A
 ^ 0x80Ë& (vÆ ^ 
ªs
) & 0x80) >> 5); \

1144 
_A
 = (
UINT8
)
ªs
; \

1145 }

	)

1152 #ifde‡
X86_ASM


1153 #i‡
Z80_EXACT


1154 
	#ADC
(
vÆue
) \

1155 
	`asm
 ( \

1167 :"=q" (
_A
), "=q" (
_F
) \

1168 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1169 )

	)

1171 
	#ADC
(
vÆue
) \

1172 
	`asm
 ( \

1181 :"=q" (
_A
), "=q" (
_F
) \

1182 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1183 )

	)

1186 #i‡
BIG_FLAGS_ARRAY


1187 
	#ADC
(
vÆue
) \

1189 
UINT32
 
ah
 = 
_AFD
 & 0xff00, 
c
 = _AFD & 1; \

1190 
UINT32
 
ªs
 = (
UINT8
)((
ah
 >> 8Ë+ 
vÆue
 + 
c
); \

1191 
_F
 = 
SZHVC_add
[(
c
 << 16Ë| 
ah
 | 
ªs
]; \

1192 
_A
 = 
ªs
; \

1193 }

	)

1195 
	#ADC
(
vÆue
) \

1197 
vÆ
 = 
vÆue
; \

1198 
ªs
 = 
_A
 + 
vÆ
 + (
_F
 & 
CF
); \

1199 
_F
 = 
SZ
[
ªs
 & 0xff] | (‘e†>> 8Ë& 
CF
) | \

1200 ((
_A
 ^ 
ªs
 ^ 
vÆ
Ë& 
HF
) | \

1201 (((
vÆ
 ^ 
_A
 ^ 0x80Ë& (vÆ ^ 
ªs
) & 0x80) >> 5); \

1202 
_A
 = 
ªs
; \

1203 }

	)

1210 #ifde‡
X86_ASM


1211 #i‡
Z80_EXACT


1212 
	#SUB
(
vÆue
) \

1213 
	`asm
 ( \

1225 :"=q" (
_A
), "=q" (
_F
) \

1226 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1227 )

	)

1229 
	#SUB
(
vÆue
) \

1230 
	`asm
 ( \

1239 :"=q" (
_A
), "=q" (
_F
) \

1240 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1241 )

	)

1244 #i‡
BIG_FLAGS_ARRAY


1245 
	#SUB
(
vÆue
) \

1247 
UINT32
 
ah
 = 
_AFD
 & 0xff00; \

1248 
UINT32
 
ªs
 = (
UINT8
)((
ah
 >> 8Ë- 
vÆue
); \

1249 
_F
 = 
SZHVC_sub
[
ah
 | 
ªs
]; \

1250 
_A
 = 
ªs
; \

1251 }

	)

1253 
	#SUB
(
vÆue
) \

1255 
vÆ
 = 
vÆue
; \

1256 
ªs
 = 
_A
 - 
vÆ
; \

1257 
_F
 = 
SZ
[
ªs
 & 0xff] | (‘e†>> 8Ë& 
CF
Ë| 
NF
 | \

1258 ((
_A
 ^ 
ªs
 ^ 
vÆ
Ë& 
HF
) | \

1259 (((
vÆ
 ^ 
_A
Ë& (_A ^ 
ªs
) & 0x80) >> 5); \

1260 
_A
 = 
ªs
; \

1261 }

	)

1268 #ifde‡
X86_ASM


1269 #i‡
Z80_EXACT


1270 
	#SBC
(
vÆue
) \

1271 
	`asm
 ( \

1284 :"=q" (
_A
), "=q" (
_F
) \

1285 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1286 )

	)

1288 
	#SBC
(
vÆue
) \

1289 
	`asm
 ( \

1299 :"=q" (
_A
), "=q" (
_F
) \

1300 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1301 )

	)

1304 #i‡
BIG_FLAGS_ARRAY


1305 
	#SBC
(
vÆue
) \

1307 
UINT32
 
ah
 = 
_AFD
 & 0xff00, 
c
 = _AFD & 1; \

1308 
UINT32
 
ªs
 = (
UINT8
)((
ah
 >> 8Ë- 
vÆue
 - 
c
); \

1309 
_F
 = 
SZHVC_sub
[(
c
<<16Ë| 
ah
 | 
ªs
]; \

1310 
_A
 = 
ªs
; \

1311 }

	)

1313 
	#SBC
(
vÆue
) \

1315 
vÆ
 = 
vÆue
; \

1316 
ªs
 = 
_A
 - 
vÆ
 - (
_F
 & 
CF
); \

1317 
_F
 = 
SZ
[
ªs
 & 0xff] | (‘e†>> 8Ë& 
CF
Ë| 
NF
 | \

1318 ((
_A
 ^ 
ªs
 ^ 
vÆ
Ë& 
HF
) | \

1319 (((
vÆ
 ^ 
_A
Ë& (_A ^ 
ªs
) & 0x80) >> 5); \

1320 
_A
 = 
ªs
; \

1321 }

	)

1328 
	#NEG
 { \

1329 
UINT8
 
vÆue
 = 
_A
; \

1330 
_A
 = 0; \

1331 
	`SUB
(
vÆue
); \

1332 }

	)

1337 
	#DAA
 { \

1338 
idx
 = 
_A
; \

1339 if–
_F
 & 
CF
 ) 
idx
 |= 0x100; \

1340 if–
_F
 & 
HF
 ) 
idx
 |= 0x200; \

1341 if–
_F
 & 
NF
 ) 
idx
 |= 0x400; \

1342 
_AF
 = 
DAATabÀ
[
idx
]; \

1343 }

	)

1348 
	#AND
(
vÆue
) \

1349 
_A
 &
vÆue
; \

1350 
_F
 = 
SZP
[
_A
] | 
HF


	)

1355 
	#OR
(
vÆue
) \

1356 
_A
 |
vÆue
; \

1357 
_F
 = 
SZP
[
_A
]

	)

1362 
	#XOR
(
vÆue
) \

1363 
_A
 ^
vÆue
; \

1364 
_F
 = 
SZP
[
_A
]

	)

1369 #ifde‡
X86_ASM


1370 #i‡
Z80_EXACT


1371 
	#CP
(
vÆue
) \

1372 
	`asm
 ( \

1384 :"=q" (
_A
), "=q" (
_F
) \

1385 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1386 )

	)

1388 
	#CP
(
vÆue
) \

1389 
	`asm
 ( \

1398 :"=q" (
_A
), "=q" (
_F
) \

1399 :"q" (
vÆue
), "1" (
_F
), "0" (
_A
) \

1400 )

	)

1403 #i‡
BIG_FLAGS_ARRAY


1404 
	#CP
(
vÆue
) \

1406 
vÆ
 = 
vÆue
; \

1407 
UINT32
 
ah
 = 
_AFD
 & 0xff00; \

1408 
UINT32
 
ªs
 = (
UINT8
)((
ah
 >> 8Ë- 
vÆ
); \

1409 
_F
 = (
SZHVC_sub
[
ah
 | 
ªs
] & ~(
YF
 | 
XF
)) | \

1410 (
vÆ
 & (
YF
 | 
XF
)); \

1411 }

	)

1413 
	#CP
(
vÆue
) \

1415 
vÆ
 = 
vÆue
; \

1416 
ªs
 = 
_A
 - 
vÆ
; \

1417 
_F
 = (
SZ
[
ªs
 & 0xff] & (
SF
 | 
ZF
)) | \

1418 (
vÆ
 & (
YF
 | 
XF
)Ë| ((
ªs
 >> 8Ë& 
CF
Ë| 
NF
 | \

1419 ((
_A
 ^ 
ªs
 ^ 
vÆ
Ë& 
HF
) | \

1420 ((((
vÆ
 ^ 
_A
Ë& (_A ^ 
ªs
)Ë>> 5Ë& 
VF
); \

1421 }

	)

1428 
	#EX_AF
 { \

1429 
PAIR
 
tmp
; \

1430 
tmp
 = 
Z80
.
AF
; Z80.AF = Z80.
AF2
; Z80.AF2 =Åmp; \

1431 }

	)

1436 
	#EX_DE_HL
 { \

1437 
PAIR
 
tmp
; \

1438 
tmp
 = 
Z80
.
DE
; Z80.DE = Z80.
HL
; Z80.HL =Åmp; \

1439 }

	)

1444 
	#EXX
 { \

1445 
PAIR
 
tmp
; \

1446 
tmp
 = 
Z80
.
BC
; Z80.BC = Z80.
BC2
; Z80.BC2 =Åmp; \

1447 
tmp
 = 
Z80
.
DE
; Z80.DE = Z80.
DE2
; Z80.DE2 =Åmp; \

1448 
tmp
 = 
Z80
.
HL
; Z80.HL = Z80.
HL2
; Z80.HL2 =Åmp; \

1449 }

	)

1454 
	#EXSP
(
DR
) \

1456 
PAIR
 
tmp
 = { { 0, 0, 0, 0 } }; \

1457 
	`RM16
–
_SPD
, &
tmp
 ); \

1458 
	`WM16
–
_SPD
, &
Z80
.
DR
 ); \

1459 
Z80
.
DR
 = 
tmp
; \

1460 }

	)

1466 #ifdef 
X86_ASM


1467 #i‡
Z80_EXACT


1468 
	#ADD16
(
DR
,
SR
) \

1469 
	`asm
 ( \

1479 :"=c" (
Z80
.
DR
.
d
), "=q" (
_F
) \

1480 :"0" (
Z80
.
DR
.
d
), "1" (
_F
), "d" (Z80.
SR
.d) \

1481 )

	)

1483 
	#ADD16
(
DR
,
SR
) \

1484 
	`asm
 ( \

1491 :"=c" (
Z80
.
DR
.
d
), "=q" (
_F
) \

1492 :"0" (
Z80
.
DR
.
d
), "1" (
_F
), "d" (Z80.
SR
.d) \

1493 )

	)

1496 
	#ADD16
(
DR
,
SR
) \

1498 
UINT32
 
ªs
 = 
Z80
.
DR
.
d
 + Z80.
SR
.d; \

1499 
_F
 = (_F & (
SF
 | 
ZF
 | 
VF
)) | \

1500 (((
Z80
.
DR
.
d
 ^ 
ªs
 ^ Z80.
SR
.dË>> 8Ë& 
HF
) | \

1501 ((
ªs
 >> 16Ë& 
CF
Ë| (‘e†>> 8Ë& (
YF
 | 
XF
)); \

1502 
Z80
.
DR
.
w
.
l
 = (
UINT16
)
ªs
; \

1503 }

	)

1509 #ifdef 
X86_ASM


1510 #i‡
Z80_EXACT


1511 
	#ADC16
(
Reg
) \

1512 
	`asm
 ( \

1529 :"=c" (
_HLD
), "=q" (
_F
) \

1530 :"0" (
_HLD
), "1" (
_F
), "d" (
Z80
.
Reg
.
d
) \

1531 )

	)

1533 
	#ADC16
(
Reg
) \

1534 
	`asm
 ( \

1548 :"=c" (
_HLD
), "=q" (
_F
) \

1549 :"0" (
_HLD
), "1" (
_F
), "d" (
Z80
.
Reg
.
d
) \

1550 )

	)

1553 
	#ADC16
(
Reg
) \

1555 
UINT32
 
ªs
 = 
_HLD
 + 
Z80
.
Reg
.
d
 + (
_F
 & 
CF
); \

1556 
_F
 = (((
_HLD
 ^ 
ªs
 ^ 
Z80
.
Reg
.
d
Ë>> 8Ë& 
HF
) | \

1557 ((
ªs
 >> 16Ë& 
CF
) | \

1558 ((
ªs
 >> 8Ë& (
SF
 | 
YF
 | 
XF
)) | \

1559 ((
ªs
 & 0xffffË? 0 : 
ZF
) | \

1560 (((
Z80
.
Reg
.
d
 ^ 
_HLD
 ^ 0x8000Ë& (Z80.Reg.d ^ 
ªs
) & 0x8000) >> 13); \

1561 
_HL
 = (
UINT16
)
ªs
; \

1562 }

	)

1568 #ifdef 
X86_ASM


1569 #i‡
Z80_EXACT


1570 
	#SBC16
(
Reg
) \

1571 
	`asm
 ( \

1589 :"=c" (
_HLD
), "=q" (
_F
) \

1590 :"0" (
_HLD
), "1" (
_F
), "d" (
Z80
.
Reg
.
d
) \

1591 )

	)

1593 
	#SBC16
(
Reg
) \

1594 
	`asm
 ( \

1609 :"=c" (
_HLD
), "=q" (
_F
) \

1610 :"0" (
_HLD
), "1" (
_F
), "d" (
Z80
.
Reg
.
d
) \

1611 )

	)

1614 
	#SBC16
(
Reg
) \

1616 
UINT32
 
ªs
 = 
_HLD
 - 
Z80
.
Reg
.
d
 - (
_F
 & 
CF
); \

1617 
_F
 = (((
_HLD
 ^ 
ªs
 ^ 
Z80
.
Reg
.
d
Ë>> 8Ë& 
HF
Ë| 
NF
 | \

1618 ((
ªs
 >> 16Ë& 
CF
) | \

1619 ((
ªs
 >> 8Ë& (
SF
 | 
YF
 | 
XF
)) | \

1620 ((
ªs
 & 0xffffË? 0 : 
ZF
) | \

1621 (((
Z80
.
Reg
.
d
 ^ 
_HLD
Ë& (_HLD ^ 
ªs
) &0x8000) >> 13); \

1622 
_HL
 = (
UINT16
)
ªs
; \

1623 }

	)

1629 
INLINE
 
UINT8
 
	$RLC
(
UINT8
 
vÆue
)

1631 
ªs
 = 
vÆue
;

1632 
c
 = (
ªs
 & 0x80Ë? 
CF
 : 0;

1633 
ªs
 = ((res << 1) | (res >> 7)) & 0xff;

1634 
_F
 = 
SZP
[
ªs
] | 
c
;

1635  
ªs
;

1636 
	}
}

1641 
INLINE
 
UINT8
 
	$RRC
(
UINT8
 
vÆue
)

1643 
ªs
 = 
vÆue
;

1644 
c
 = (
ªs
 & 0x01Ë? 
CF
 : 0;

1645 
ªs
 = ((res >> 1) | (res << 7)) & 0xff;

1646 
_F
 = 
SZP
[
ªs
] | 
c
;

1647  
ªs
;

1648 
	}
}

1653 
INLINE
 
UINT8
 
	$RL
(
UINT8
 
vÆue
)

1655 
ªs
 = 
vÆue
;

1656 
c
 = (
ªs
 & 0x80Ë? 
CF
 : 0;

1657 
ªs
 = (‘e†<< 1Ë| (
_F
 & 
CF
)) & 0xff;

1658 
_F
 = 
SZP
[
ªs
] | 
c
;

1659  
ªs
;

1660 
	}
}

1665 
INLINE
 
UINT8
 
	$RR
(
UINT8
 
vÆue
)

1667 
ªs
 = 
vÆue
;

1668 
c
 = (
ªs
 & 0x01Ë? 
CF
 : 0;

1669 
ªs
 = (‘e†>> 1Ë| (
_F
 << 7)) & 0xff;

1670 
_F
 = 
SZP
[
ªs
] | 
c
;

1671  
ªs
;

1672 
	}
}

1677 
INLINE
 
UINT8
 
	$SLA
(
UINT8
 
vÆue
)

1679 
ªs
 = 
vÆue
;

1680 
c
 = (
ªs
 & 0x80Ë? 
CF
 : 0;

1681 
ªs
 = (res << 1) & 0xff;

1682 
_F
 = 
SZP
[
ªs
] | 
c
;

1683  
ªs
;

1684 
	}
}

1689 
INLINE
 
UINT8
 
	$SRA
(
UINT8
 
vÆue
)

1691 
ªs
 = 
vÆue
;

1692 
c
 = (
ªs
 & 0x01Ë? 
CF
 : 0;

1693 
ªs
 = ((res >> 1) | (res & 0x80)) & 0xff;

1694 
_F
 = 
SZP
[
ªs
] | 
c
;

1695  
ªs
;

1696 
	}
}

1701 
INLINE
 
UINT8
 
	$SLL
(
UINT8
 
vÆue
)

1703 
ªs
 = 
vÆue
;

1704 
c
 = (
ªs
 & 0x80Ë? 
CF
 : 0;

1705 
ªs
 = ((res << 1) | 0x01) & 0xff;

1706 
_F
 = 
SZP
[
ªs
] | 
c
;

1707  
ªs
;

1708 
	}
}

1713 
INLINE
 
UINT8
 
	$SRL
(
UINT8
 
vÆue
)

1715 
ªs
 = 
vÆue
;

1716 
c
 = (
ªs
 & 0x01Ë? 
CF
 : 0;

1717 
ªs
 = (res >> 1) & 0xff;

1718 
_F
 = 
SZP
[
ªs
] | 
c
;

1719  
ªs
;

1720 
	}
}

1725 
	#BIT
(
bô
,
ªg
) \

1726 
_F
 = (_F & 
CF
Ë| 
HF
 | 
SZ_BIT
[
ªg
 & (1<<
bô
)]

	)

1731 #i‡
Z80_EXACT


1732 
	#BIT_XY
(
bô
,
ªg
) \

1733 
_F
 = (_F & 
CF
Ë| 
HF
 | (
SZ_BIT
[
ªg
 & (1<<
bô
)] & ~(
YF
|
XF
)Ë| ((
Z80
.
EA
>>8Ë& (YF|XF))

	)

1735 
	#BIT_XY
 
BIT


	)

1741 
INLINE
 
UINT8
 
	$RES
(
UINT8
 
bô
, UINT8 
vÆue
)

1743  
vÆue
 & ~(1<<
bô
);

1744 
	}
}

1749 
INLINE
 
UINT8
 
	$SET
(
UINT8
 
bô
, UINT8 
vÆue
)

1751  
vÆue
 | (1<<
bô
);

1752 
	}
}

1757 #i‡
Z80_EXACT


1758 
	#LDI
 { \

1759 
UINT8
 
io
 = 
	`RM
(
_HL
); \

1760 
	`WM
–
_DE
, 
io
 ); \

1761 
_F
 &
SF
 | 
ZF
 | 
CF
; \

1762 if–(
_A
 + 
io
Ë& 0x02 ) 
_F
 |
YF
; \

1763 if–(
_A
 + 
io
Ë& 0x08 ) 
_F
 |
XF
; \

1764 
_HL
++; 
_DE
++; 
_BC
--; \

1765 if–
_BC
 ) 
_F
 |
VF
; \

1766 }

	)

1768 
	#LDI
 { \

1769 
	`WM
–
_DE
, 
	`RM
(
_HL
) ); \

1770 
_F
 &
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
CF
; \

1771 
_HL
++; 
_DE
++; 
_BC
--; \

1772 if–
_BC
 ) 
_F
 |
VF
; \

1773 }

	)

1779 #i‡
Z80_EXACT


1780 
	#CPI
 { \

1781 
UINT8
 
vÆ
 = 
	`RM
(
_HL
); \

1782 
UINT8
 
ªs
 = 
_A
 - 
vÆ
; \

1783 
_HL
++; 
_BC
--; \

1784 
_F
 = (_F & 
CF
Ë| (
SZ
[
ªs
] & ~(
YF
|
XF
)Ë| ((
_A
 ^ 
vÆ
 ^ÑesË& 
HF
Ë| 
NF
; \

1785 if–
_F
 & 
HF
 ) 
ªs
 -= 1; \

1786 if–
ªs
 & 0x02 ) 
_F
 |
YF
; \

1787 if–
ªs
 & 0x08 ) 
_F
 |
XF
; \

1788 if–
_BC
 ) 
_F
 |
VF
; \

1789 }

	)

1791 
	#CPI
 { \

1792 
UINT8
 
vÆ
 = 
	`RM
(
_HL
); \

1793 
UINT8
 
ªs
 = 
_A
 - 
vÆ
; \

1794 
_HL
++; 
_BC
--; \

1795 
_F
 = (_F & 
CF
Ë| 
SZ
[
ªs
] | ((
_A
 ^ 
vÆ
 ^ÑesË& 
HF
Ë| 
NF
; \

1796 if–
_BC
 ) 
_F
 |
VF
; \

1797 }

	)

1803 #i‡
Z80_EXACT


1804 
	#INI
 { \

1805 
UINT8
 
io
 = 
	`IN
(
_BC
); \

1806 
_B
--; \

1807 
	`WM
–
_HL
, 
io
 ); \

1808 
_HL
++; \

1809 
_F
 = 
SZ
[
_B
]; \

1810 if–
io
 & 
SF
 ) 
_F
 |
NF
; \

1811 if–––(
_C
 + 1Ë& 0xffË+ 
io
Ë& 0x100 ) 
_F
 |
HF
 | 
CF
; \

1812 if–(
úï_tmp1
[
_C
 & 3][
io
 & 3] ^ \

1813 
bªg_tmp2
[
_B
] ^ \

1814 (
_C
 >> 2) ^ \

1815 (
io
 >> 2)) & 1 ) \

1816 
_F
 |
PF
; \

1817 }

	)

1819 
	#INI
 { \

1820 
_B
--; \

1821 
	`WM
–
_HL
, 
	`IN
(
_BC
) ); \

1822 
_HL
++; \

1823 
_F
 = (
_B
Ë? 
NF
 : NF | 
ZF
; \

1824 }

	)

1830 #i‡
Z80_EXACT


1831 
	#OUTI
 { \

1832 
UINT8
 
io
 = 
	`RM
(
_HL
); \

1833 
_B
--; \

1834 
	`OUT
–
_BC
, 
io
 ); \

1835 
_HL
++; \

1836 
_F
 = 
SZ
[
_B
]; \

1837 if–
io
 & 
SF
 ) 
_F
 |
NF
; \

1838 if–––(
_C
 + 1Ë& 0xffË+ 
io
Ë& 0x100 ) 
_F
 |
HF
 | 
CF
; \

1839 if–(
úï_tmp1
[
_C
 & 3][
io
 & 3] ^ \

1840 
bªg_tmp2
[
_B
] ^ \

1841 (
_C
 >> 2) ^ \

1842 (
io
 >> 2)) & 1 ) \

1843 
_F
 |
PF
; \

1844 }

	)

1846 
	#OUTI
 { \

1847 
_B
--; \

1848 
	`OUT
–
_BC
, 
	`RM
(
_HL
) ); \

1849 
_HL
++; \

1850 
_F
 = (
_B
Ë? 
NF
 : NF | 
ZF
; \

1851 }

	)

1857 #i‡
Z80_EXACT


1858 
	#LDD
 { \

1859 
UINT8
 
io
 = 
	`RM
(
_HL
); \

1860 
	`WM
–
_DE
, 
io
 ); \

1861 
_F
 &
SF
 | 
ZF
 | 
CF
; \

1862 if–(
_A
 + 
io
Ë& 0x02 ) 
_F
 |
YF
; \

1863 if–(
_A
 + 
io
Ë& 0x08 ) 
_F
 |
XF
; \

1864 
_HL
--; 
_DE
--; 
_BC
--; \

1865 if–
_BC
 ) 
_F
 |
VF
; \

1866 }

	)

1868 
	#LDD
 { \

1869 
	`WM
–
_DE
, 
	`RM
(
_HL
) ); \

1870 
_F
 &
SF
 | 
ZF
 | 
YF
 | 
XF
 | 
CF
; \

1871 
_HL
--; 
_DE
--; 
_BC
--; \

1872 if–
_BC
 ) 
_F
 |
VF
; \

1873 }

	)

1879 #i‡
Z80_EXACT


1880 
	#CPD
 { \

1881 
UINT8
 
vÆ
 = 
	`RM
(
_HL
); \

1882 
UINT8
 
ªs
 = 
_A
 - 
vÆ
; \

1883 
_HL
--; 
_BC
--; \

1884 
_F
 = (_F & 
CF
Ë| (
SZ
[
ªs
] & ~(
YF
|
XF
)Ë| ((
_A
 ^ 
vÆ
 ^ÑesË& 
HF
Ë| 
NF
; \

1885 if–
_F
 & 
HF
 ) 
ªs
 -= 1; \

1886 if–
ªs
 & 0x02 ) 
_F
 |
YF
; \

1887 if–
ªs
 & 0x08 ) 
_F
 |
XF
; \

1888 if–
_BC
 ) 
_F
 |
VF
; \

1889 }

	)

1891 
	#CPD
 { \

1892 
UINT8
 
vÆ
 = 
	`RM
(
_HL
); \

1893 
UINT8
 
ªs
 = 
_A
 - 
vÆ
; \

1894 
_HL
--; 
_BC
--; \

1895 
_F
 = (_F & 
CF
Ë| 
SZ
[
ªs
] | ((
_A
 ^ 
vÆ
 ^ÑesË& 
HF
Ë| 
NF
; \

1896 if–
_BC
 ) 
_F
 |
VF
; \

1897 }

	)

1903 #i‡
Z80_EXACT


1904 
	#IND
 { \

1905 
UINT8
 
io
 = 
	`IN
(
_BC
); \

1906 
_B
--; \

1907 
	`WM
–
_HL
, 
io
 ); \

1908 
_HL
--; \

1909 
_F
 = 
SZ
[
_B
]; \

1910 if–
io
 & 
SF
 ) 
_F
 |
NF
; \

1911 if–––(
_C
 - 1Ë& 0xffË+ 
io
Ë& 0x100 ) 
_F
 |
HF
 | 
CF
; \

1912 if–(
dªp_tmp1
[
_C
 & 3][
io
 & 3] ^ \

1913 
bªg_tmp2
[
_B
] ^ \

1914 (
_C
 >> 2) ^ \

1915 (
io
 >> 2)) & 1 ) \

1916 
_F
 |
PF
; \

1917 }

	)

1919 
	#IND
 { \

1920 
_B
--; \

1921 
	`WM
–
_HL
, 
	`IN
(
_BC
) ); \

1922 
_HL
--; \

1923 
_F
 = (
_B
Ë? 
NF
 : NF | 
ZF
; \

1924 }

	)

1930 #i‡
Z80_EXACT


1931 
	#OUTD
 { \

1932 
UINT8
 
io
 = 
	`RM
(
_HL
); \

1933 
_B
--; \

1934 
	`OUT
–
_BC
, 
io
 ); \

1935 
_HL
--; \

1936 
_F
 = 
SZ
[
_B
]; \

1937 if–
io
 & 
SF
 ) 
_F
 |
NF
; \

1938 if–––(
_C
 - 1Ë& 0xffË+ 
io
Ë& 0x100 ) 
_F
 |
HF
 | 
CF
; \

1939 if–(
dªp_tmp1
[
_C
 & 3][
io
 & 3] ^ \

1940 
bªg_tmp2
[
_B
] ^ \

1941 (
_C
 >> 2) ^ \

1942 (
io
 >> 2)) & 1 ) \

1943 
_F
 |
PF
; \

1944 }

	)

1946 
	#OUTD
 { \

1947 
_B
--; \

1948 
	`OUT
–
_BC
, 
	`RM
(
_HL
) ); \

1949 
_HL
--; \

1950 
_F
 = (
_B
Ë? 
NF
 : NF | 
ZF
; \

1951 }

	)

1957 
	#LDIR
 \

1958 
LDI
; \

1959 if–
_BC
 ) \

1961 
_PC
 -= 2; \

1962 
	`CC
(
ex
,0xb0); \

1963 }

	)

1968 
	#CPIR
 \

1969 
CPI
; \

1970 if–
_BC
 && !(
_F
 & 
ZF
) ) \

1972 
_PC
 -= 2; \

1973 
	`CC
(
ex
,0xb1); \

1974 }

	)

1979 
	#INIR
 \

1980 
INI
; \

1981 if–
_B
 ) \

1983 
_PC
 -= 2; \

1984 
	`CC
(
ex
,0xb2); \

1985 }

	)

1990 
	#OTIR
 \

1991 
OUTI
; \

1992 if–
_B
 ) \

1994 
_PC
 -= 2; \

1995 
	`CC
(
ex
,0xb3); \

1996 }

	)

2001 
	#LDDR
 \

2002 
LDD
; \

2003 if–
_BC
 ) \

2005 
_PC
 -= 2; \

2006 
	`CC
(
ex
,0xb8); \

2007 }

	)

2012 
	#CPDR
 \

2013 
CPD
; \

2014 if–
_BC
 && !(
_F
 & 
ZF
) ) \

2016 
_PC
 -= 2; \

2017 
	`CC
(
ex
,0xb9); \

2018 }

	)

2023 
	#INDR
 \

2024 
IND
; \

2025 if–
_B
 ) \

2027 
_PC
 -= 2; \

2028 
	`CC
(
ex
,0xba); \

2029 }

	)

2034 
	#OTDR
 \

2035 
OUTD
; \

2036 if–
_B
 ) \

2038 
_PC
 -= 2; \

2039 
	`CC
(
ex
,0xbb); \

2040 }

	)

2045 
	#EI
 { \

2050 if–
_IFF1
 == 0 ) \

2052 
_IFF1
 = 
_IFF2
 = 1; \

2053 
_PPC
 = 
_PCD
; \

2054 
CALL_MAME_DEBUG
; \

2055 
_R
++; \

2056  
	`RM
(
_PCD
) == 0xfb ) \

2058 
	`LOG
(("Z80 #%d multiple EI opcodesát %04X\n", \

2059 
	`˝u_gëa˘ive˝u
(), 
_PC
)); \

2060 
	`CC
(
›
,0xfb); \

2061 
_PPC
 =
_PCD
; \

2062 
CALL_MAME_DEBUG
; \

2063 
_PC
++; \

2064 
_R
++; \

2066 if–
Z80
.
úq_°©e
 !
CLEAR_LINE
 || \

2067 
Z80
.
ªque°_úq
 >= 0 ) \

2069 
Z80
.
a·î_EI
 = 1; \

2070 
	`EXEC
(
›
,
	`ROP
()); \

2071 
Z80
.
a·î_EI
 = 0; \

2072 
	`LOG
(("Z80 #%d EIÅake†úq\n", 
	`˝u_gëa˘ive˝u
())); \

2073 
	`èke_öãºu±
(); \

2074 } 
	`EXEC
(
›
,
	`ROP
()); \

2075 } 
_IFF2
 = 1; \

2076 }

	)

2082 
	$OP
(
cb
,00Ë{ 
_B
 = 
	`RLC
(_B); 
	}
}

2083 
	$OP
(
cb
,01Ë{ 
_C
 = 
	`RLC
(_C); 
	}
}

2084 
	$OP
(
cb
,02Ë{ 
_D
 = 
	`RLC
(_D); 
	}
}

2085 
	$OP
(
cb
,03Ë{ 
_E
 = 
	`RLC
(_E); 
	}
}

2086 
	$OP
(
cb
,04Ë{ 
_H
 = 
	`RLC
(_H); 
	}
}

2087 
	$OP
(
cb
,05Ë{ 
_L
 = 
	`RLC
(_L); 
	}
}

2088 
	$OP
(
cb
,06Ë{ 
	`WM
–
_HL
, 
	`RLC
(
	`RM
(_HL)Ë); 
	}
}

2089 
	$OP
(
cb
,07Ë{ 
_A
 = 
	`RLC
(_A); 
	}
}

2091 
	$OP
(
cb
,08Ë{ 
_B
 = 
	`RRC
(_B); 
	}
}

2092 
	$OP
(
cb
,09Ë{ 
_C
 = 
	`RRC
(_C); 
	}
}

2093 
	$OP
(
cb
,0aË{ 
_D
 = 
	`RRC
(_D); 
	}
}

2094 
	$OP
(
cb
,0bË{ 
_E
 = 
	`RRC
(_E); 
	}
}

2095 
	$OP
(
cb
,0cË{ 
_H
 = 
	`RRC
(_H); 
	}
}

2096 
	$OP
(
cb
,0dË{ 
_L
 = 
	`RRC
(_L); 
	}
}

2097 
	$OP
(
cb
,0eË{ 
	`WM
–
_HL
, 
	`RRC
(
	`RM
(_HL)Ë); 
	}
}

2098 
	$OP
(
cb
,0fË{ 
_A
 = 
	`RRC
(_A); 
	}
}

2100 
	$OP
(
cb
,10Ë{ 
_B
 = 
	`RL
(_B); 
	}
}

2101 
	$OP
(
cb
,11Ë{ 
_C
 = 
	`RL
(_C); 
	}
}

2102 
	$OP
(
cb
,12Ë{ 
_D
 = 
	`RL
(_D); 
	}
}

2103 
	$OP
(
cb
,13Ë{ 
_E
 = 
	`RL
(_E); 
	}
}

2104 
	$OP
(
cb
,14Ë{ 
_H
 = 
	`RL
(_H); 
	}
}

2105 
	$OP
(
cb
,15Ë{ 
_L
 = 
	`RL
(_L); 
	}
}

2106 
	$OP
(
cb
,16Ë{ 
	`WM
–
_HL
, 
	`RL
(
	`RM
(_HL)Ë); 
	}
}

2107 
	$OP
(
cb
,17Ë{ 
_A
 = 
	`RL
(_A); 
	}
}

2109 
	$OP
(
cb
,18Ë{ 
_B
 = 
	`RR
(_B); 
	}
}

2110 
	$OP
(
cb
,19Ë{ 
_C
 = 
	`RR
(_C); 
	}
}

2111 
	$OP
(
cb
,1aË{ 
_D
 = 
	`RR
(_D); 
	}
}

2112 
	$OP
(
cb
,1bË{ 
_E
 = 
	`RR
(_E); 
	}
}

2113 
	$OP
(
cb
,1cË{ 
_H
 = 
	`RR
(_H); 
	}
}

2114 
	$OP
(
cb
,1dË{ 
_L
 = 
	`RR
(_L); 
	}
}

2115 
	$OP
(
cb
,1eË{ 
	`WM
–
_HL
, 
	`RR
(
	`RM
(_HL)Ë); 
	}
}

2116 
	$OP
(
cb
,1fË{ 
_A
 = 
	`RR
(_A); 
	}
}

2118 
	$OP
(
cb
,20Ë{ 
_B
 = 
	`SLA
(_B); 
	}
}

2119 
	$OP
(
cb
,21Ë{ 
_C
 = 
	`SLA
(_C); 
	}
}

2120 
	$OP
(
cb
,22Ë{ 
_D
 = 
	`SLA
(_D); 
	}
}

2121 
	$OP
(
cb
,23Ë{ 
_E
 = 
	`SLA
(_E); 
	}
}

2122 
	$OP
(
cb
,24Ë{ 
_H
 = 
	`SLA
(_H); 
	}
}

2123 
	$OP
(
cb
,25Ë{ 
_L
 = 
	`SLA
(_L); 
	}
}

2124 
	$OP
(
cb
,26Ë{ 
	`WM
–
_HL
, 
	`SLA
(
	`RM
(_HL)Ë); 
	}
}

2125 
	$OP
(
cb
,27Ë{ 
_A
 = 
	`SLA
(_A); 
	}
}

2127 
	$OP
(
cb
,28Ë{ 
_B
 = 
	`SRA
(_B); 
	}
}

2128 
	$OP
(
cb
,29Ë{ 
_C
 = 
	`SRA
(_C); 
	}
}

2129 
	$OP
(
cb
,2aË{ 
_D
 = 
	`SRA
(_D); 
	}
}

2130 
	$OP
(
cb
,2bË{ 
_E
 = 
	`SRA
(_E); 
	}
}

2131 
	$OP
(
cb
,2cË{ 
_H
 = 
	`SRA
(_H); 
	}
}

2132 
	$OP
(
cb
,2dË{ 
_L
 = 
	`SRA
(_L); 
	}
}

2133 
	$OP
(
cb
,2eË{ 
	`WM
–
_HL
, 
	`SRA
(
	`RM
(_HL)Ë); 
	}
}

2134 
	$OP
(
cb
,2fË{ 
_A
 = 
	`SRA
(_A); 
	}
}

2136 
	$OP
(
cb
,30Ë{ 
_B
 = 
	`SLL
(_B); 
	}
}

2137 
	$OP
(
cb
,31Ë{ 
_C
 = 
	`SLL
(_C); 
	}
}

2138 
	$OP
(
cb
,32Ë{ 
_D
 = 
	`SLL
(_D); 
	}
}

2139 
	$OP
(
cb
,33Ë{ 
_E
 = 
	`SLL
(_E); 
	}
}

2140 
	$OP
(
cb
,34Ë{ 
_H
 = 
	`SLL
(_H); 
	}
}

2141 
	$OP
(
cb
,35Ë{ 
_L
 = 
	`SLL
(_L); 
	}
}

2142 
	$OP
(
cb
,36Ë{ 
	`WM
–
_HL
, 
	`SLL
(
	`RM
(_HL)Ë); 
	}
}

2143 
	$OP
(
cb
,37Ë{ 
_A
 = 
	`SLL
(_A); 
	}
}

2145 
	$OP
(
cb
,38Ë{ 
_B
 = 
	`SRL
(_B); 
	}
}

2146 
	$OP
(
cb
,39Ë{ 
_C
 = 
	`SRL
(_C); 
	}
}

2147 
	$OP
(
cb
,3aË{ 
_D
 = 
	`SRL
(_D); 
	}
}

2148 
	$OP
(
cb
,3bË{ 
_E
 = 
	`SRL
(_E); 
	}
}

2149 
	$OP
(
cb
,3cË{ 
_H
 = 
	`SRL
(_H); 
	}
}

2150 
	$OP
(
cb
,3dË{ 
_L
 = 
	`SRL
(_L); 
	}
}

2151 
	$OP
(
cb
,3eË{ 
	`WM
–
_HL
, 
	`SRL
(
	`RM
(_HL)Ë); 
	}
}

2152 
	$OP
(
cb
,3fË{ 
_A
 = 
	`SRL
(_A); 
	}
}

2154 
	$OP
(
cb
,40Ë{ 
	`BIT
(0,
_B
); 
	}
}

2155 
	$OP
(
cb
,41Ë{ 
	`BIT
(0,
_C
); 
	}
}

2156 
	$OP
(
cb
,42Ë{ 
	`BIT
(0,
_D
); 
	}
}

2157 
	$OP
(
cb
,43Ë{ 
	`BIT
(0,
_E
); 
	}
}

2158 
	$OP
(
cb
,44Ë{ 
	`BIT
(0,
_H
); 
	}
}

2159 
	$OP
(
cb
,45Ë{ 
	`BIT
(0,
_L
); 
	}
}

2160 
	$OP
(
cb
,46Ë{ 
	`BIT
(0,
	`RM
(
_HL
)); 
	}
}

2161 
	$OP
(
cb
,47Ë{ 
	`BIT
(0,
_A
); 
	}
}

2163 
	$OP
(
cb
,48Ë{ 
	`BIT
(1,
_B
); 
	}
}

2164 
	$OP
(
cb
,49Ë{ 
	`BIT
(1,
_C
); 
	}
}

2165 
	$OP
(
cb
,4aË{ 
	`BIT
(1,
_D
); 
	}
}

2166 
	$OP
(
cb
,4bË{ 
	`BIT
(1,
_E
); 
	}
}

2167 
	$OP
(
cb
,4cË{ 
	`BIT
(1,
_H
); 
	}
}

2168 
	$OP
(
cb
,4dË{ 
	`BIT
(1,
_L
); 
	}
}

2169 
	$OP
(
cb
,4eË{ 
	`BIT
(1,
	`RM
(
_HL
)); 
	}
}

2170 
	$OP
(
cb
,4fË{ 
	`BIT
(1,
_A
); 
	}
}

2172 
	$OP
(
cb
,50Ë{ 
	`BIT
(2,
_B
); 
	}
}

2173 
	$OP
(
cb
,51Ë{ 
	`BIT
(2,
_C
); 
	}
}

2174 
	$OP
(
cb
,52Ë{ 
	`BIT
(2,
_D
); 
	}
}

2175 
	$OP
(
cb
,53Ë{ 
	`BIT
(2,
_E
); 
	}
}

2176 
	$OP
(
cb
,54Ë{ 
	`BIT
(2,
_H
); 
	}
}

2177 
	$OP
(
cb
,55Ë{ 
	`BIT
(2,
_L
); 
	}
}

2178 
	$OP
(
cb
,56Ë{ 
	`BIT
(2,
	`RM
(
_HL
)); 
	}
}

2179 
	$OP
(
cb
,57Ë{ 
	`BIT
(2,
_A
); 
	}
}

2181 
	$OP
(
cb
,58Ë{ 
	`BIT
(3,
_B
); 
	}
}

2182 
	$OP
(
cb
,59Ë{ 
	`BIT
(3,
_C
); 
	}
}

2183 
	$OP
(
cb
,5aË{ 
	`BIT
(3,
_D
); 
	}
}

2184 
	$OP
(
cb
,5bË{ 
	`BIT
(3,
_E
); 
	}
}

2185 
	$OP
(
cb
,5cË{ 
	`BIT
(3,
_H
); 
	}
}

2186 
	$OP
(
cb
,5dË{ 
	`BIT
(3,
_L
); 
	}
}

2187 
	$OP
(
cb
,5eË{ 
	`BIT
(3,
	`RM
(
_HL
)); 
	}
}

2188 
	$OP
(
cb
,5fË{ 
	`BIT
(3,
_A
); 
	}
}

2190 
	$OP
(
cb
,60Ë{ 
	`BIT
(4,
_B
); 
	}
}

2191 
	$OP
(
cb
,61Ë{ 
	`BIT
(4,
_C
); 
	}
}

2192 
	$OP
(
cb
,62Ë{ 
	`BIT
(4,
_D
); 
	}
}

2193 
	$OP
(
cb
,63Ë{ 
	`BIT
(4,
_E
); 
	}
}

2194 
	$OP
(
cb
,64Ë{ 
	`BIT
(4,
_H
); 
	}
}

2195 
	$OP
(
cb
,65Ë{ 
	`BIT
(4,
_L
); 
	}
}

2196 
	$OP
(
cb
,66Ë{ 
	`BIT
(4,
	`RM
(
_HL
)); 
	}
}

2197 
	$OP
(
cb
,67Ë{ 
	`BIT
(4,
_A
); 
	}
}

2199 
	$OP
(
cb
,68Ë{ 
	`BIT
(5,
_B
); 
	}
}

2200 
	$OP
(
cb
,69Ë{ 
	`BIT
(5,
_C
); 
	}
}

2201 
	$OP
(
cb
,6aË{ 
	`BIT
(5,
_D
); 
	}
}

2202 
	$OP
(
cb
,6bË{ 
	`BIT
(5,
_E
); 
	}
}

2203 
	$OP
(
cb
,6cË{ 
	`BIT
(5,
_H
); 
	}
}

2204 
	$OP
(
cb
,6dË{ 
	`BIT
(5,
_L
); 
	}
}

2205 
	$OP
(
cb
,6eË{ 
	`BIT
(5,
	`RM
(
_HL
)); 
	}
}

2206 
	$OP
(
cb
,6fË{ 
	`BIT
(5,
_A
); 
	}
}

2208 
	$OP
(
cb
,70Ë{ 
	`BIT
(6,
_B
); 
	}
}

2209 
	$OP
(
cb
,71Ë{ 
	`BIT
(6,
_C
); 
	}
}

2210 
	$OP
(
cb
,72Ë{ 
	`BIT
(6,
_D
); 
	}
}

2211 
	$OP
(
cb
,73Ë{ 
	`BIT
(6,
_E
); 
	}
}

2212 
	$OP
(
cb
,74Ë{ 
	`BIT
(6,
_H
); 
	}
}

2213 
	$OP
(
cb
,75Ë{ 
	`BIT
(6,
_L
); 
	}
}

2214 
	$OP
(
cb
,76Ë{ 
	`BIT
(6,
	`RM
(
_HL
)); 
	}
}

2215 
	$OP
(
cb
,77Ë{ 
	`BIT
(6,
_A
); 
	}
}

2217 
	$OP
(
cb
,78Ë{ 
	`BIT
(7,
_B
); 
	}
}

2218 
	$OP
(
cb
,79Ë{ 
	`BIT
(7,
_C
); 
	}
}

2219 
	$OP
(
cb
,7aË{ 
	`BIT
(7,
_D
); 
	}
}

2220 
	$OP
(
cb
,7bË{ 
	`BIT
(7,
_E
); 
	}
}

2221 
	$OP
(
cb
,7cË{ 
	`BIT
(7,
_H
); 
	}
}

2222 
	$OP
(
cb
,7dË{ 
	`BIT
(7,
_L
); 
	}
}

2223 
	$OP
(
cb
,7eË{ 
	`BIT
(7,
	`RM
(
_HL
)); 
	}
}

2224 
	$OP
(
cb
,7fË{ 
	`BIT
(7,
_A
); 
	}
}

2226 
	$OP
(
cb
,80Ë{ 
_B
 = 
	`RES
(0,_B); 
	}
}

2227 
	$OP
(
cb
,81Ë{ 
_C
 = 
	`RES
(0,_C); 
	}
}

2228 
	$OP
(
cb
,82Ë{ 
_D
 = 
	`RES
(0,_D); 
	}
}

2229 
	$OP
(
cb
,83Ë{ 
_E
 = 
	`RES
(0,_E); 
	}
}

2230 
	$OP
(
cb
,84Ë{ 
_H
 = 
	`RES
(0,_H); 
	}
}

2231 
	$OP
(
cb
,85Ë{ 
_L
 = 
	`RES
(0,_L); 
	}
}

2232 
	$OP
(
cb
,86Ë{ 
	`WM
–
_HL
, 
	`RES
(0,
	`RM
(_HL)Ë); 
	}
}

2233 
	$OP
(
cb
,87Ë{ 
_A
 = 
	`RES
(0,_A); 
	}
}

2235 
	$OP
(
cb
,88Ë{ 
_B
 = 
	`RES
(1,_B); 
	}
}

2236 
	$OP
(
cb
,89Ë{ 
_C
 = 
	`RES
(1,_C); 
	}
}

2237 
	$OP
(
cb
,8aË{ 
_D
 = 
	`RES
(1,_D); 
	}
}

2238 
	$OP
(
cb
,8bË{ 
_E
 = 
	`RES
(1,_E); 
	}
}

2239 
	$OP
(
cb
,8cË{ 
_H
 = 
	`RES
(1,_H); 
	}
}

2240 
	$OP
(
cb
,8dË{ 
_L
 = 
	`RES
(1,_L); 
	}
}

2241 
	$OP
(
cb
,8eË{ 
	`WM
–
_HL
, 
	`RES
(1,
	`RM
(_HL)Ë); 
	}
}

2242 
	$OP
(
cb
,8fË{ 
_A
 = 
	`RES
(1,_A); 
	}
}

2244 
	$OP
(
cb
,90Ë{ 
_B
 = 
	`RES
(2,_B); 
	}
}

2245 
	$OP
(
cb
,91Ë{ 
_C
 = 
	`RES
(2,_C); 
	}
}

2246 
	$OP
(
cb
,92Ë{ 
_D
 = 
	`RES
(2,_D); 
	}
}

2247 
	$OP
(
cb
,93Ë{ 
_E
 = 
	`RES
(2,_E); 
	}
}

2248 
	$OP
(
cb
,94Ë{ 
_H
 = 
	`RES
(2,_H); 
	}
}

2249 
	$OP
(
cb
,95Ë{ 
_L
 = 
	`RES
(2,_L); 
	}
}

2250 
	$OP
(
cb
,96Ë{ 
	`WM
–
_HL
, 
	`RES
(2,
	`RM
(_HL)Ë); 
	}
}

2251 
	$OP
(
cb
,97Ë{ 
_A
 = 
	`RES
(2,_A); 
	}
}

2253 
	$OP
(
cb
,98Ë{ 
_B
 = 
	`RES
(3,_B); 
	}
}

2254 
	$OP
(
cb
,99Ë{ 
_C
 = 
	`RES
(3,_C); 
	}
}

2255 
	$OP
(
cb
,9aË{ 
_D
 = 
	`RES
(3,_D); 
	}
}

2256 
	$OP
(
cb
,9bË{ 
_E
 = 
	`RES
(3,_E); 
	}
}

2257 
	$OP
(
cb
,9cË{ 
_H
 = 
	`RES
(3,_H); 
	}
}

2258 
	$OP
(
cb
,9dË{ 
_L
 = 
	`RES
(3,_L); 
	}
}

2259 
	$OP
(
cb
,9eË{ 
	`WM
–
_HL
, 
	`RES
(3,
	`RM
(_HL)Ë); 
	}
}

2260 
	$OP
(
cb
,9fË{ 
_A
 = 
	`RES
(3,_A); 
	}
}

2262 
	$OP
(
cb
,
a0
Ë{ 
_B
 = 
	`RES
(4,_B); 
	}
}

2263 
	$OP
(
cb
,
a1
Ë{ 
_C
 = 
	`RES
(4,_C); 
	}
}

2264 
	$OP
(
cb
,
a2
Ë{ 
_D
 = 
	`RES
(4,_D); 
	}
}

2265 
	$OP
(
cb
,
a3
Ë{ 
_E
 = 
	`RES
(4,_E); 
	}
}

2266 
	$OP
(
cb
,
a4
Ë{ 
_H
 = 
	`RES
(4,_H); 
	}
}

2267 
	$OP
(
cb
,
a5
Ë{ 
_L
 = 
	`RES
(4,_L); 
	}
}

2268 
	$OP
(
cb
,
a6
Ë{ 
	`WM
–
_HL
, 
	`RES
(4,
	`RM
(_HL)Ë); 
	}
}

2269 
	$OP
(
cb
,
a7
Ë{ 
_A
 = 
	`RES
(4,_A); 
	}
}

2271 
	$OP
(
cb
,
a8
Ë{ 
_B
 = 
	`RES
(5,_B); 
	}
}

2272 
	$OP
(
cb
,
a9
Ë{ 
_C
 = 
	`RES
(5,_C); 
	}
}

2273 
	$OP
(
cb
,
Ø
Ë{ 
_D
 = 
	`RES
(5,_D); 
	}
}

2274 
	$OP
(
cb
,
ab
Ë{ 
_E
 = 
	`RES
(5,_E); 
	}
}

2275 
	$OP
(
cb
,
ac
Ë{ 
_H
 = 
	`RES
(5,_H); 
	}
}

2276 
	$OP
(
cb
,
ad
Ë{ 
_L
 = 
	`RES
(5,_L); 
	}
}

2277 
	$OP
(
cb
,
´
Ë{ 
	`WM
–
_HL
, 
	`RES
(5,
	`RM
(_HL)Ë); 
	}
}

2278 
	$OP
(
cb
,
af
Ë{ 
_A
 = 
	`RES
(5,_A); 
	}
}

2280 
	$OP
(
cb
,
b0
Ë{ 
_B
 = 
	`RES
(6,_B); 
	}
}

2281 
	$OP
(
cb
,
b1
Ë{ 
_C
 = 
	`RES
(6,_C); 
	}
}

2282 
	$OP
(
cb
,
b2
Ë{ 
_D
 = 
	`RES
(6,_D); 
	}
}

2283 
	$OP
(
cb
,
b3
Ë{ 
_E
 = 
	`RES
(6,_E); 
	}
}

2284 
	$OP
(
cb
,
b4
Ë{ 
_H
 = 
	`RES
(6,_H); 
	}
}

2285 
	$OP
(
cb
,
b5
Ë{ 
_L
 = 
	`RES
(6,_L); 
	}
}

2286 
	$OP
(
cb
,
b6
Ë{ 
	`WM
–
_HL
, 
	`RES
(6,
	`RM
(_HL)Ë); 
	}
}

2287 
	$OP
(
cb
,
b7
Ë{ 
_A
 = 
	`RES
(6,_A); 
	}
}

2289 
	$OP
(
cb
,
b8
Ë{ 
_B
 = 
	`RES
(7,_B); 
	}
}

2290 
	$OP
(
cb
,
b9
Ë{ 
_C
 = 
	`RES
(7,_C); 
	}
}

2291 
	$OP
(
cb
,
ba
Ë{ 
_D
 = 
	`RES
(7,_D); 
	}
}

2292 
	$OP
(
cb
,
bb
Ë{ 
_E
 = 
	`RES
(7,_E); 
	}
}

2293 
	$OP
(
cb
,
bc
Ë{ 
_H
 = 
	`RES
(7,_H); 
	}
}

2294 
	$OP
(
cb
,
bd
Ë{ 
_L
 = 
	`RES
(7,_L); 
	}
}

2295 
	$OP
(
cb
,
be
Ë{ 
	`WM
–
_HL
, 
	`RES
(7,
	`RM
(_HL)Ë); 
	}
}

2296 
	$OP
(
cb
,
bf
Ë{ 
_A
 = 
	`RES
(7,_A); 
	}
}

2298 
	$OP
(
cb
,
c0
Ë{ 
_B
 = 
	`SET
(0,_B); 
	}
}

2299 
	$OP
(
cb
,
c1
Ë{ 
_C
 = 
	`SET
(0,_C); 
	}
}

2300 
	$OP
(
cb
,
c2
Ë{ 
_D
 = 
	`SET
(0,_D); 
	}
}

2301 
	$OP
(
cb
,
c3
Ë{ 
_E
 = 
	`SET
(0,_E); 
	}
}

2302 
	$OP
(
cb
,
c4
Ë{ 
_H
 = 
	`SET
(0,_H); 
	}
}

2303 
	$OP
(
cb
,
c5
Ë{ 
_L
 = 
	`SET
(0,_L); 
	}
}

2304 
	$OP
(
cb
,
c6
Ë{ 
	`WM
–
_HL
, 
	`SET
(0,
	`RM
(_HL)Ë); 
	}
}

2305 
	$OP
(
cb
,
c7
Ë{ 
_A
 = 
	`SET
(0,_A); 
	}
}

2307 
	$OP
(
cb
,
c8
Ë{ 
_B
 = 
	`SET
(1,_B); 
	}
}

2308 
	$OP
(
cb
,
c9
Ë{ 
_C
 = 
	`SET
(1,_C); 
	}
}

2309 
	$OP
(
cb
,
ˇ
Ë{ 
_D
 = 
	`SET
(1,_D); 
	}
}

2310 
	$OP
(
cb
,cbË{ 
_E
 = 
	`SET
(1,_E); 
	}
}

2311 
	$OP
(
cb
,
cc
Ë{ 
_H
 = 
	`SET
(1,_H); 
	}
}

2312 
	$OP
(
cb
,
cd
Ë{ 
_L
 = 
	`SET
(1,_L); 
	}
}

2313 
	$OP
(
cb
,
˚
Ë{ 
	`WM
–
_HL
, 
	`SET
(1,
	`RM
(_HL)Ë); 
	}
}

2314 
	$OP
(
cb
,
cf
Ë{ 
_A
 = 
	`SET
(1,_A); 
	}
}

2316 
	$OP
(
cb
,
d0
Ë{ 
_B
 = 
	`SET
(2,_B); 
	}
}

2317 
	$OP
(
cb
,
d1
Ë{ 
_C
 = 
	`SET
(2,_C); 
	}
}

2318 
	$OP
(
cb
,
d2
Ë{ 
_D
 = 
	`SET
(2,_D); 
	}
}

2319 
	$OP
(
cb
,
d3
Ë{ 
_E
 = 
	`SET
(2,_E); 
	}
}

2320 
	$OP
(
cb
,
d4
Ë{ 
_H
 = 
	`SET
(2,_H); 
	}
}

2321 
	$OP
(
cb
,
d5
Ë{ 
_L
 = 
	`SET
(2,_L); 
	}
}

2322 
	$OP
(
cb
,
d6
Ë{ 
	`WM
–
_HL
, 
	`SET
(2,
	`RM
(_HL)Ë); 
	}
}

2323 
	$OP
(
cb
,
d7
Ë{ 
_A
 = 
	`SET
(2,_A); 
	}
}

2325 
	$OP
(
cb
,
d8
Ë{ 
_B
 = 
	`SET
(3,_B); 
	}
}

2326 
	$OP
(
cb
,
d9
Ë{ 
_C
 = 
	`SET
(3,_C); 
	}
}

2327 
	$OP
(
cb
,
da
Ë{ 
_D
 = 
	`SET
(3,_D); 
	}
}

2328 
	$OP
(
cb
,
db
Ë{ 
_E
 = 
	`SET
(3,_E); 
	}
}

2329 
	$OP
(
cb
,
dc
Ë{ 
_H
 = 
	`SET
(3,_H); 
	}
}

2330 
	$OP
(
cb
,
dd
Ë{ 
_L
 = 
	`SET
(3,_L); 
	}
}

2331 
	$OP
(
cb
,
de
Ë{ 
	`WM
–
_HL
, 
	`SET
(3,
	`RM
(_HL)Ë); 
	}
}

2332 
	$OP
(
cb
,
df
Ë{ 
_A
 = 
	`SET
(3,_A); 
	}
}

2334 
	$OP
(
cb
,
e0
Ë{ 
_B
 = 
	`SET
(4,_B); 
	}
}

2335 
	$OP
(
cb
,
e1
Ë{ 
_C
 = 
	`SET
(4,_C); 
	}
}

2336 
	$OP
(
cb
,
e2
Ë{ 
_D
 = 
	`SET
(4,_D); 
	}
}

2337 
	$OP
(
cb
,
e3
Ë{ 
_E
 = 
	`SET
(4,_E); 
	}
}

2338 
	$OP
(
cb
,
e4
Ë{ 
_H
 = 
	`SET
(4,_H); 
	}
}

2339 
	$OP
(
cb
,
e5
Ë{ 
_L
 = 
	`SET
(4,_L); 
	}
}

2340 
	$OP
(
cb
,
e6
Ë{ 
	`WM
–
_HL
, 
	`SET
(4,
	`RM
(_HL)Ë); 
	}
}

2341 
	$OP
(
cb
,
e7
Ë{ 
_A
 = 
	`SET
(4,_A); 
	}
}

2343 
	$OP
(
cb
,
e8
Ë{ 
_B
 = 
	`SET
(5,_B); 
	}
}

2344 
	$OP
(
cb
,
e9
Ë{ 
_C
 = 
	`SET
(5,_C); 
	}
}

2345 
	$OP
(
cb
,
ó
Ë{ 
_D
 = 
	`SET
(5,_D); 
	}
}

2346 
	$OP
(
cb
,
eb
Ë{ 
_E
 = 
	`SET
(5,_E); 
	}
}

2347 
	$OP
(
cb
,
ec
Ë{ 
_H
 = 
	`SET
(5,_H); 
	}
}

2348 
	$OP
(
cb
,
ed
Ë{ 
_L
 = 
	`SET
(5,_L); 
	}
}

2349 
	$OP
(
cb
,
ì
Ë{ 
	`WM
–
_HL
, 
	`SET
(5,
	`RM
(_HL)Ë); 
	}
}

2350 
	$OP
(
cb
,
ef
Ë{ 
_A
 = 
	`SET
(5,_A); 
	}
}

2352 
	$OP
(
cb
,
f0
Ë{ 
_B
 = 
	`SET
(6,_B); 
	}
}

2353 
	$OP
(
cb
,
f1
Ë{ 
_C
 = 
	`SET
(6,_C); 
	}
}

2354 
	$OP
(
cb
,
f2
Ë{ 
_D
 = 
	`SET
(6,_D); 
	}
}

2355 
	$OP
(
cb
,
f3
Ë{ 
_E
 = 
	`SET
(6,_E); 
	}
}

2356 
	$OP
(
cb
,
f4
Ë{ 
_H
 = 
	`SET
(6,_H); 
	}
}

2357 
	$OP
(
cb
,
f5
Ë{ 
_L
 = 
	`SET
(6,_L); 
	}
}

2358 
	$OP
(
cb
,
f6
Ë{ 
	`WM
–
_HL
, 
	`SET
(6,
	`RM
(_HL)Ë); 
	}
}

2359 
	$OP
(
cb
,
f7
Ë{ 
_A
 = 
	`SET
(6,_A); 
	}
}

2361 
	$OP
(
cb
,
f8
Ë{ 
_B
 = 
	`SET
(7,_B); 
	}
}

2362 
	$OP
(
cb
,
f9
Ë{ 
_C
 = 
	`SET
(7,_C); 
	}
}

2363 
	$OP
(
cb
,
Á
Ë{ 
_D
 = 
	`SET
(7,_D); 
	}
}

2364 
	$OP
(
cb
,
fb
Ë{ 
_E
 = 
	`SET
(7,_E); 
	}
}

2365 
	$OP
(
cb
,
fc
Ë{ 
_H
 = 
	`SET
(7,_H); 
	}
}

2366 
	$OP
(
cb
,
fd
Ë{ 
_L
 = 
	`SET
(7,_L); 
	}
}

2367 
	$OP
(
cb
,
„
Ë{ 
	`WM
–
_HL
, 
	`SET
(7,
	`RM
(_HL)Ë); 
	}
}

2368 
	$OP
(
cb
,
ff
Ë{ 
_A
 = 
	`SET
(7,_A); 
	}
}

2375 
	$OP
(
xycb
,00Ë{ 
_B
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2376 
	$OP
(
xycb
,01Ë{ 
_C
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2377 
	$OP
(
xycb
,02Ë{ 
_D
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2378 
	$OP
(
xycb
,03Ë{ 
_E
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2379 
	$OP
(
xycb
,04Ë{ 
_H
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2380 
	$OP
(
xycb
,05Ë{ 
_L
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2381 
	$OP
(
xycb
,06Ë{ 
	`WM
–
Z80
.
EA
, 
	`RLC
–
	`RM
(Z80.EAËË); 
	}
}

2382 
	$OP
(
xycb
,07Ë{ 
_A
 = 
	`RLC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2384 
	$OP
(
xycb
,08Ë{ 
_B
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2385 
	$OP
(
xycb
,09Ë{ 
_C
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2386 
	$OP
(
xycb
,0aË{ 
_D
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2387 
	$OP
(
xycb
,0bË{ 
_E
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2388 
	$OP
(
xycb
,0cË{ 
_H
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2389 
	$OP
(
xycb
,0dË{ 
_L
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2390 
	$OP
(
xycb
,0eË{ 
	`WM
–
Z80
.
EA
,
	`RRC
–
	`RM
(Z80.EAËË); 
	}
}

2391 
	$OP
(
xycb
,0fË{ 
_A
 = 
	`RRC
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2393 
	$OP
(
xycb
,10Ë{ 
_B
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2394 
	$OP
(
xycb
,11Ë{ 
_C
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2395 
	$OP
(
xycb
,12Ë{ 
_D
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2396 
	$OP
(
xycb
,13Ë{ 
_E
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2397 
	$OP
(
xycb
,14Ë{ 
_H
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2398 
	$OP
(
xycb
,15Ë{ 
_L
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2399 
	$OP
(
xycb
,16Ë{ 
	`WM
–
Z80
.
EA
,
	`RL
–
	`RM
(Z80.EAËË); 
	}
}

2400 
	$OP
(
xycb
,17Ë{ 
_A
 = 
	`RL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2402 
	$OP
(
xycb
,18Ë{ 
_B
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2403 
	$OP
(
xycb
,19Ë{ 
_C
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2404 
	$OP
(
xycb
,1aË{ 
_D
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2405 
	$OP
(
xycb
,1bË{ 
_E
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2406 
	$OP
(
xycb
,1cË{ 
_H
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2407 
	$OP
(
xycb
,1dË{ 
_L
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2408 
	$OP
(
xycb
,1eË{ 
	`WM
–
Z80
.
EA
,
	`RR
–
	`RM
(Z80.EAËË); 
	}
}

2409 
	$OP
(
xycb
,1fË{ 
_A
 = 
	`RR
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2411 
	$OP
(
xycb
,20Ë{ 
_B
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2412 
	$OP
(
xycb
,21Ë{ 
_C
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2413 
	$OP
(
xycb
,22Ë{ 
_D
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2414 
	$OP
(
xycb
,23Ë{ 
_E
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2415 
	$OP
(
xycb
,24Ë{ 
_H
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2416 
	$OP
(
xycb
,25Ë{ 
_L
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2417 
	$OP
(
xycb
,26Ë{ 
	`WM
–
Z80
.
EA
,
	`SLA
–
	`RM
(Z80.EAËË); 
	}
}

2418 
	$OP
(
xycb
,27Ë{ 
_A
 = 
	`SLA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2420 
	$OP
(
xycb
,28Ë{ 
_B
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2421 
	$OP
(
xycb
,29Ë{ 
_C
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2422 
	$OP
(
xycb
,2aË{ 
_D
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2423 
	$OP
(
xycb
,2bË{ 
_E
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2424 
	$OP
(
xycb
,2cË{ 
_H
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2425 
	$OP
(
xycb
,2dË{ 
_L
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2426 
	$OP
(
xycb
,2eË{ 
	`WM
–
Z80
.
EA
,
	`SRA
–
	`RM
(Z80.EAËË); 
	}
}

2427 
	$OP
(
xycb
,2fË{ 
_A
 = 
	`SRA
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2429 
	$OP
(
xycb
,30Ë{ 
_B
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2430 
	$OP
(
xycb
,31Ë{ 
_C
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2431 
	$OP
(
xycb
,32Ë{ 
_D
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2432 
	$OP
(
xycb
,33Ë{ 
_E
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2433 
	$OP
(
xycb
,34Ë{ 
_H
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2434 
	$OP
(
xycb
,35Ë{ 
_L
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2435 
	$OP
(
xycb
,36Ë{ 
	`WM
–
Z80
.
EA
,
	`SLL
–
	`RM
(Z80.EAËË); 
	}
}

2436 
	$OP
(
xycb
,37Ë{ 
_A
 = 
	`SLL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2438 
	$OP
(
xycb
,38Ë{ 
_B
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2439 
	$OP
(
xycb
,39Ë{ 
_C
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2440 
	$OP
(
xycb
,3aË{ 
_D
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2441 
	$OP
(
xycb
,3bË{ 
_E
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2442 
	$OP
(
xycb
,3cË{ 
_H
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2443 
	$OP
(
xycb
,3dË{ 
_L
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2444 
	$OP
(
xycb
,3eË{ 
	`WM
–
Z80
.
EA
,
	`SRL
–
	`RM
(Z80.EAËË); 
	}
}

2445 
	$OP
(
xycb
,3fË{ 
_A
 = 
	`SRL
–
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2447 
	$OP
(
xycb
,40Ë{ 
	`xycb_46
(); 
	}
}

2448 
	$OP
(
xycb
,41Ë{ 
	`xycb_46
(); 
	}
}

2449 
	$OP
(
xycb
,42Ë{ 
	`xycb_46
(); 
	}
}

2450 
	$OP
(
xycb
,43Ë{ 
	`xycb_46
(); 
	}
}

2451 
	$OP
(
xycb
,44Ë{ 
	`xycb_46
(); 
	}
}

2452 
	$OP
(
xycb
,45Ë{ 
	`xycb_46
(); 
	}
}

2453 
	$OP
(
xycb
,46Ë{ 
	`BIT_XY
(0,
	`RM
(
Z80
.
EA
)); 
	}
}

2454 
	$OP
(
xycb
,47Ë{ 
	`xycb_46
(); 
	}
}

2456 
	$OP
(
xycb
,48Ë{ 
	`xycb_4e
(); 
	}
}

2457 
	$OP
(
xycb
,49Ë{ 
	`xycb_4e
(); 
	}
}

2458 
	$OP
(
xycb
,4aË{ 
	`xycb_4e
(); 
	}
}

2459 
	$OP
(
xycb
,4bË{ 
	`xycb_4e
(); 
	}
}

2460 
	$OP
(
xycb
,4cË{ 
	`xycb_4e
(); 
	}
}

2461 
	$OP
(
xycb
,4dË{ 
	`xycb_4e
(); 
	}
}

2462 
	$OP
(
xycb
,4eË{ 
	`BIT_XY
(1,
	`RM
(
Z80
.
EA
)); 
	}
}

2463 
	$OP
(
xycb
,4fË{ 
	`xycb_4e
(); 
	}
}

2465 
	$OP
(
xycb
,50Ë{ 
	`xycb_56
(); 
	}
}

2466 
	$OP
(
xycb
,51Ë{ 
	`xycb_56
(); 
	}
}

2467 
	$OP
(
xycb
,52Ë{ 
	`xycb_56
(); 
	}
}

2468 
	$OP
(
xycb
,53Ë{ 
	`xycb_56
(); 
	}
}

2469 
	$OP
(
xycb
,54Ë{ 
	`xycb_56
(); 
	}
}

2470 
	$OP
(
xycb
,55Ë{ 
	`xycb_56
(); 
	}
}

2471 
	$OP
(
xycb
,56Ë{ 
	`BIT_XY
(2,
	`RM
(
Z80
.
EA
)); 
	}
}

2472 
	$OP
(
xycb
,57Ë{ 
	`xycb_56
(); 
	}
}

2474 
	$OP
(
xycb
,58Ë{ 
	`xycb_5e
(); 
	}
}

2475 
	$OP
(
xycb
,59Ë{ 
	`xycb_5e
(); 
	}
}

2476 
	$OP
(
xycb
,5aË{ 
	`xycb_5e
(); 
	}
}

2477 
	$OP
(
xycb
,5bË{ 
	`xycb_5e
(); 
	}
}

2478 
	$OP
(
xycb
,5cË{ 
	`xycb_5e
(); 
	}
}

2479 
	$OP
(
xycb
,5dË{ 
	`xycb_5e
(); 
	}
}

2480 
	$OP
(
xycb
,5eË{ 
	`BIT_XY
(3,
	`RM
(
Z80
.
EA
)); 
	}
}

2481 
	$OP
(
xycb
,5fË{ 
	`xycb_5e
(); 
	}
}

2483 
	$OP
(
xycb
,60Ë{ 
	`xycb_66
(); 
	}
}

2484 
	$OP
(
xycb
,61Ë{ 
	`xycb_66
(); 
	}
}

2485 
	$OP
(
xycb
,62Ë{ 
	`xycb_66
(); 
	}
}

2486 
	$OP
(
xycb
,63Ë{ 
	`xycb_66
(); 
	}
}

2487 
	$OP
(
xycb
,64Ë{ 
	`xycb_66
(); 
	}
}

2488 
	$OP
(
xycb
,65Ë{ 
	`xycb_66
(); 
	}
}

2489 
	$OP
(
xycb
,66Ë{ 
	`BIT_XY
(4,
	`RM
(
Z80
.
EA
)); 
	}
}

2490 
	$OP
(
xycb
,67Ë{ 
	`xycb_66
(); 
	}
}

2492 
	$OP
(
xycb
,68Ë{ 
	`xycb_6e
(); 
	}
}

2493 
	$OP
(
xycb
,69Ë{ 
	`xycb_6e
(); 
	}
}

2494 
	$OP
(
xycb
,6aË{ 
	`xycb_6e
(); 
	}
}

2495 
	$OP
(
xycb
,6bË{ 
	`xycb_6e
(); 
	}
}

2496 
	$OP
(
xycb
,6cË{ 
	`xycb_6e
(); 
	}
}

2497 
	$OP
(
xycb
,6dË{ 
	`xycb_6e
(); 
	}
}

2498 
	$OP
(
xycb
,6eË{ 
	`BIT_XY
(5,
	`RM
(
Z80
.
EA
)); 
	}
}

2499 
	$OP
(
xycb
,6fË{ 
	`xycb_6e
(); 
	}
}

2501 
	$OP
(
xycb
,70Ë{ 
	`xycb_76
(); 
	}
}

2502 
	$OP
(
xycb
,71Ë{ 
	`xycb_76
(); 
	}
}

2503 
	$OP
(
xycb
,72Ë{ 
	`xycb_76
(); 
	}
}

2504 
	$OP
(
xycb
,73Ë{ 
	`xycb_76
(); 
	}
}

2505 
	$OP
(
xycb
,74Ë{ 
	`xycb_76
(); 
	}
}

2506 
	$OP
(
xycb
,75Ë{ 
	`xycb_76
(); 
	}
}

2507 
	$OP
(
xycb
,76Ë{ 
	`BIT_XY
(6,
	`RM
(
Z80
.
EA
)); 
	}
}

2508 
	$OP
(
xycb
,77Ë{ 
	`xycb_76
(); 
	}
}

2510 
	$OP
(
xycb
,78Ë{ 
	`xycb_7e
(); 
	}
}

2511 
	$OP
(
xycb
,79Ë{ 
	`xycb_7e
(); 
	}
}

2512 
	$OP
(
xycb
,7aË{ 
	`xycb_7e
(); 
	}
}

2513 
	$OP
(
xycb
,7bË{ 
	`xycb_7e
(); 
	}
}

2514 
	$OP
(
xycb
,7cË{ 
	`xycb_7e
(); 
	}
}

2515 
	$OP
(
xycb
,7dË{ 
	`xycb_7e
(); 
	}
}

2516 
	$OP
(
xycb
,7eË{ 
	`BIT_XY
(7,
	`RM
(
Z80
.
EA
)); 
	}
}

2517 
	$OP
(
xycb
,7fË{ 
	`xycb_7e
(); 
	}
}

2519 
	$OP
(
xycb
,80Ë{ 
_B
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2520 
	$OP
(
xycb
,81Ë{ 
_C
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2521 
	$OP
(
xycb
,82Ë{ 
_D
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2522 
	$OP
(
xycb
,83Ë{ 
_E
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2523 
	$OP
(
xycb
,84Ë{ 
_H
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2524 
	$OP
(
xycb
,85Ë{ 
_L
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2525 
	$OP
(
xycb
,86Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(0,
	`RM
(Z80.EA)Ë); 
	}
}

2526 
	$OP
(
xycb
,87Ë{ 
_A
 = 
	`RES
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2528 
	$OP
(
xycb
,88Ë{ 
_B
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2529 
	$OP
(
xycb
,89Ë{ 
_C
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2530 
	$OP
(
xycb
,8aË{ 
_D
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2531 
	$OP
(
xycb
,8bË{ 
_E
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2532 
	$OP
(
xycb
,8cË{ 
_H
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2533 
	$OP
(
xycb
,8dË{ 
_L
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2534 
	$OP
(
xycb
,8eË{ 
	`WM
–
Z80
.
EA
, 
	`RES
(1,
	`RM
(Z80.EA)Ë); 
	}
}

2535 
	$OP
(
xycb
,8fË{ 
_A
 = 
	`RES
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2537 
	$OP
(
xycb
,90Ë{ 
_B
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2538 
	$OP
(
xycb
,91Ë{ 
_C
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2539 
	$OP
(
xycb
,92Ë{ 
_D
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2540 
	$OP
(
xycb
,93Ë{ 
_E
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2541 
	$OP
(
xycb
,94Ë{ 
_H
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2542 
	$OP
(
xycb
,95Ë{ 
_L
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2543 
	$OP
(
xycb
,96Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(2,
	`RM
(Z80.EA)Ë); 
	}
}

2544 
	$OP
(
xycb
,97Ë{ 
_A
 = 
	`RES
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2546 
	$OP
(
xycb
,98Ë{ 
_B
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2547 
	$OP
(
xycb
,99Ë{ 
_C
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2548 
	$OP
(
xycb
,9aË{ 
_D
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2549 
	$OP
(
xycb
,9bË{ 
_E
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2550 
	$OP
(
xycb
,9cË{ 
_H
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2551 
	$OP
(
xycb
,9dË{ 
_L
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2552 
	$OP
(
xycb
,9eË{ 
	`WM
–
Z80
.
EA
, 
	`RES
(3,
	`RM
(Z80.EA)Ë); 
	}
}

2553 
	$OP
(
xycb
,9fË{ 
_A
 = 
	`RES
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2555 
	$OP
(
xycb
,
a0
Ë{ 
_B
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2556 
	$OP
(
xycb
,
a1
Ë{ 
_C
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2557 
	$OP
(
xycb
,
a2
Ë{ 
_D
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2558 
	$OP
(
xycb
,
a3
Ë{ 
_E
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2559 
	$OP
(
xycb
,
a4
Ë{ 
_H
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2560 
	$OP
(
xycb
,
a5
Ë{ 
_L
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2561 
	$OP
(
xycb
,
a6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(4,
	`RM
(Z80.EA)Ë); 
	}
}

2562 
	$OP
(
xycb
,
a7
Ë{ 
_A
 = 
	`RES
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2564 
	$OP
(
xycb
,
a8
Ë{ 
_B
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2565 
	$OP
(
xycb
,
a9
Ë{ 
_C
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2566 
	$OP
(
xycb
,
Ø
Ë{ 
_D
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2567 
	$OP
(
xycb
,
ab
Ë{ 
_E
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2568 
	$OP
(
xycb
,
ac
Ë{ 
_H
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2569 
	$OP
(
xycb
,
ad
Ë{ 
_L
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2570 
	$OP
(
xycb
,
´
Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(5,
	`RM
(Z80.EA)Ë); 
	}
}

2571 
	$OP
(
xycb
,
af
Ë{ 
_A
 = 
	`RES
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2573 
	$OP
(
xycb
,
b0
Ë{ 
_B
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2574 
	$OP
(
xycb
,
b1
Ë{ 
_C
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2575 
	$OP
(
xycb
,
b2
Ë{ 
_D
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2576 
	$OP
(
xycb
,
b3
Ë{ 
_E
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2577 
	$OP
(
xycb
,
b4
Ë{ 
_H
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2578 
	$OP
(
xycb
,
b5
Ë{ 
_L
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2579 
	$OP
(
xycb
,
b6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(6,
	`RM
(Z80.EA)Ë); 
	}
}

2580 
	$OP
(
xycb
,
b7
Ë{ 
_A
 = 
	`RES
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2582 
	$OP
(
xycb
,
b8
Ë{ 
_B
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2583 
	$OP
(
xycb
,
b9
Ë{ 
_C
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2584 
	$OP
(
xycb
,
ba
Ë{ 
_D
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2585 
	$OP
(
xycb
,
bb
Ë{ 
_E
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2586 
	$OP
(
xycb
,
bc
Ë{ 
_H
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2587 
	$OP
(
xycb
,
bd
Ë{ 
_L
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2588 
	$OP
(
xycb
,
be
Ë{ 
	`WM
–
Z80
.
EA
, 
	`RES
(7,
	`RM
(Z80.EA)Ë); 
	}
}

2589 
	$OP
(
xycb
,
bf
Ë{ 
_A
 = 
	`RES
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2591 
	$OP
(
xycb
,
c0
Ë{ 
_B
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2592 
	$OP
(
xycb
,
c1
Ë{ 
_C
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2593 
	$OP
(
xycb
,
c2
Ë{ 
_D
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2594 
	$OP
(
xycb
,
c3
Ë{ 
_E
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2595 
	$OP
(
xycb
,
c4
Ë{ 
_H
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2596 
	$OP
(
xycb
,
c5
Ë{ 
_L
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2597 
	$OP
(
xycb
,
c6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(0,
	`RM
(Z80.EA)Ë); 
	}
}

2598 
	$OP
(
xycb
,
c7
Ë{ 
_A
 = 
	`SET
(0, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2600 
	$OP
(
xycb
,
c8
Ë{ 
_B
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2601 
	$OP
(
xycb
,
c9
Ë{ 
_C
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2602 
	$OP
(
xycb
,
ˇ
Ë{ 
_D
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2603 
	$OP
(
xycb
,
cb
Ë{ 
_E
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2604 
	$OP
(
xycb
,
cc
Ë{ 
_H
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2605 
	$OP
(
xycb
,
cd
Ë{ 
_L
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2606 
	$OP
(
xycb
,
˚
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(1,
	`RM
(Z80.EA)Ë); 
	}
}

2607 
	$OP
(
xycb
,
cf
Ë{ 
_A
 = 
	`SET
(1, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2609 
	$OP
(
xycb
,
d0
Ë{ 
_B
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2610 
	$OP
(
xycb
,
d1
Ë{ 
_C
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2611 
	$OP
(
xycb
,
d2
Ë{ 
_D
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2612 
	$OP
(
xycb
,
d3
Ë{ 
_E
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2613 
	$OP
(
xycb
,
d4
Ë{ 
_H
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2614 
	$OP
(
xycb
,
d5
Ë{ 
_L
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2615 
	$OP
(
xycb
,
d6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(2,
	`RM
(Z80.EA)Ë); 
	}
}

2616 
	$OP
(
xycb
,
d7
Ë{ 
_A
 = 
	`SET
(2, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2618 
	$OP
(
xycb
,
d8
Ë{ 
_B
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2619 
	$OP
(
xycb
,
d9
Ë{ 
_C
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2620 
	$OP
(
xycb
,
da
Ë{ 
_D
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2621 
	$OP
(
xycb
,
db
Ë{ 
_E
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2622 
	$OP
(
xycb
,
dc
Ë{ 
_H
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2623 
	$OP
(
xycb
,
dd
Ë{ 
_L
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2624 
	$OP
(
xycb
,
de
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(3,
	`RM
(Z80.EA)Ë); 
	}
}

2625 
	$OP
(
xycb
,
df
Ë{ 
_A
 = 
	`SET
(3, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2627 
	$OP
(
xycb
,
e0
Ë{ 
_B
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2628 
	$OP
(
xycb
,
e1
Ë{ 
_C
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2629 
	$OP
(
xycb
,
e2
Ë{ 
_D
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2630 
	$OP
(
xycb
,
e3
Ë{ 
_E
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2631 
	$OP
(
xycb
,
e4
Ë{ 
_H
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2632 
	$OP
(
xycb
,
e5
Ë{ 
_L
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2633 
	$OP
(
xycb
,
e6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(4,
	`RM
(Z80.EA)Ë); 
	}
}

2634 
	$OP
(
xycb
,
e7
Ë{ 
_A
 = 
	`SET
(4, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2636 
	$OP
(
xycb
,
e8
Ë{ 
_B
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2637 
	$OP
(
xycb
,
e9
Ë{ 
_C
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2638 
	$OP
(
xycb
,
ó
Ë{ 
_D
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2639 
	$OP
(
xycb
,
eb
Ë{ 
_E
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2640 
	$OP
(
xycb
,
ec
Ë{ 
_H
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2641 
	$OP
(
xycb
,
ed
Ë{ 
_L
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2642 
	$OP
(
xycb
,
ì
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(5,
	`RM
(Z80.EA)Ë); 
	}
}

2643 
	$OP
(
xycb
,
ef
Ë{ 
_A
 = 
	`SET
(5, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2645 
	$OP
(
xycb
,
f0
Ë{ 
_B
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2646 
	$OP
(
xycb
,
f1
Ë{ 
_C
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2647 
	$OP
(
xycb
,
f2
Ë{ 
_D
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2648 
	$OP
(
xycb
,
f3
Ë{ 
_E
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2649 
	$OP
(
xycb
,
f4
Ë{ 
_H
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2650 
	$OP
(
xycb
,
f5
Ë{ 
_L
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2651 
	$OP
(
xycb
,
f6
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(6,
	`RM
(Z80.EA)Ë); 
	}
}

2652 
	$OP
(
xycb
,
f7
Ë{ 
_A
 = 
	`SET
(6, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2654 
	$OP
(
xycb
,
f8
Ë{ 
_B
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_B ); 
	}
}

2655 
	$OP
(
xycb
,
f9
Ë{ 
_C
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_C ); 
	}
}

2656 
	$OP
(
xycb
,
Á
Ë{ 
_D
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_D ); 
	}
}

2657 
	$OP
(
xycb
,
fb
Ë{ 
_E
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_E ); 
	}
}

2658 
	$OP
(
xycb
,
fc
Ë{ 
_H
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_H ); 
	}
}

2659 
	$OP
(
xycb
,
fd
Ë{ 
_L
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_L ); 
	}
}

2660 
	$OP
(
xycb
,
„
Ë{ 
	`WM
–
Z80
.
EA
, 
	`SET
(7,
	`RM
(Z80.EA)Ë); 
	}
}

2661 
	$OP
(
xycb
,
ff
Ë{ 
_A
 = 
	`SET
(7, 
	`RM
(
Z80
.
EA
Ë); 
	`WM
–Z80.EA,_A ); 
	}
}

2663 
	$OP
(
ûÀgÆ
,1) {

2668 
	}
}

2673 
	$OP
(
dd
,00Ë{ 
	`ûÀgÆ_1
(); 
	`›_00
(); 
	}
}

2674 
	$OP
(
dd
,01Ë{ 
	`ûÀgÆ_1
(); 
	`›_01
(); 
	}
}

2675 
	$OP
(
dd
,02Ë{ 
	`ûÀgÆ_1
(); 
	`›_02
(); 
	}
}

2676 
	$OP
(
dd
,03Ë{ 
	`ûÀgÆ_1
(); 
	`›_03
(); 
	}
}

2677 
	$OP
(
dd
,04Ë{ 
	`ûÀgÆ_1
(); 
	`›_04
(); 
	}
}

2678 
	$OP
(
dd
,05Ë{ 
	`ûÀgÆ_1
(); 
	`›_05
(); 
	}
}

2679 
	$OP
(
dd
,06Ë{ 
	`ûÀgÆ_1
(); 
	`›_06
(); 
	}
}

2680 
	$OP
(
dd
,07Ë{ 
	`ûÀgÆ_1
(); 
	`›_07
(); 
	}
}

2682 
	$OP
(
dd
,08Ë{ 
	`ûÀgÆ_1
(); 
	`›_08
(); 
	}
}

2683 
	$OP
(
dd
,09Ë{ 
_R
++; 
	`ADD16
(
IX
,
BC
); 
	}
}

2684 
	$OP
(
dd
,0aË{ 
	`ûÀgÆ_1
(); 
	`›_0a
(); 
	}
}

2685 
	$OP
(
dd
,0bË{ 
	`ûÀgÆ_1
(); 
	`›_0b
(); 
	}
}

2686 
	$OP
(
dd
,0cË{ 
	`ûÀgÆ_1
(); 
	`›_0c
(); 
	}
}

2687 
	$OP
(
dd
,0dË{ 
	`ûÀgÆ_1
(); 
	`›_0d
(); 
	}
}

2688 
	$OP
(
dd
,0eË{ 
	`ûÀgÆ_1
(); 
	`›_0e
(); 
	}
}

2689 
	$OP
(
dd
,0fË{ 
	`ûÀgÆ_1
(); 
	`›_0f
(); 
	}
}

2691 
	$OP
(
dd
,10Ë{ 
	`ûÀgÆ_1
(); 
	`›_10
(); 
	}
}

2692 
	$OP
(
dd
,11Ë{ 
	`ûÀgÆ_1
(); 
	`›_11
(); 
	}
}

2693 
	$OP
(
dd
,12Ë{ 
	`ûÀgÆ_1
(); 
	`›_12
(); 
	}
}

2694 
	$OP
(
dd
,13Ë{ 
	`ûÀgÆ_1
(); 
	`›_13
(); 
	}
}

2695 
	$OP
(
dd
,14Ë{ 
	`ûÀgÆ_1
(); 
	`›_14
(); 
	}
}

2696 
	$OP
(
dd
,15Ë{ 
	`ûÀgÆ_1
(); 
	`›_15
(); 
	}
}

2697 
	$OP
(
dd
,16Ë{ 
	`ûÀgÆ_1
(); 
	`›_16
(); 
	}
}

2698 
	$OP
(
dd
,17Ë{ 
	`ûÀgÆ_1
(); 
	`›_17
(); 
	}
}

2700 
	$OP
(
dd
,18Ë{ 
	`ûÀgÆ_1
(); 
	`›_18
(); 
	}
}

2701 
	$OP
(
dd
,19Ë{ 
_R
++; 
	`ADD16
(
IX
,
DE
); 
	}
}

2702 
	$OP
(
dd
,1aË{ 
	`ûÀgÆ_1
(); 
	`›_1a
(); 
	}
}

2703 
	$OP
(
dd
,1bË{ 
	`ûÀgÆ_1
(); 
	`›_1b
(); 
	}
}

2704 
	$OP
(
dd
,1cË{ 
	`ûÀgÆ_1
(); 
	`›_1c
(); 
	}
}

2705 
	$OP
(
dd
,1dË{ 
	`ûÀgÆ_1
(); 
	`›_1d
(); 
	}
}

2706 
	$OP
(
dd
,1eË{ 
	`ûÀgÆ_1
(); 
	`›_1e
(); 
	}
}

2707 
	$OP
(
dd
,1fË{ 
	`ûÀgÆ_1
(); 
	`›_1f
(); 
	}
}

2709 
	$OP
(
dd
,20Ë{ 
	`ûÀgÆ_1
(); 
	`›_20
(); 
	}
}

2710 
	$OP
(
dd
,21Ë{ 
_R
++; 
_IX
 = 
	`ARG16
(); 
	}
}

2711 
	$OP
(
dd
,22Ë{ 
_R
++; 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
IX
 ); 
	}
}

2712 
	$OP
(
dd
,23Ë{ 
_R
++; 
_IX
++; 
	}
}

2713 
	$OP
(
dd
,24Ë{ 
_R
++; 
_HX
 = 
	`INC
(_HX); 
	}
}

2714 
	$OP
(
dd
,25Ë{ 
_R
++; 
_HX
 = 
	`DEC
(_HX); 
	}
}

2715 
	$OP
(
dd
,26Ë{ 
_R
++; 
_HX
 = 
	`ARG
(); 
	}
}

2716 
	$OP
(
dd
,27Ë{ 
	`ûÀgÆ_1
(); 
	`›_27
(); 
	}
}

2718 
	$OP
(
dd
,28Ë{ 
	`ûÀgÆ_1
(); 
	`›_28
(); 
	}
}

2719 
	$OP
(
dd
,29Ë{ 
_R
++; 
	`ADD16
(
IX
,IX); 
	}
}

2720 
	$OP
(
dd
,2aË{ 
_R
++; 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
IX
 ); 
	}
}

2721 
	$OP
(
dd
,2bË{ 
_R
++; 
_IX
--; 
	}
}

2722 
	$OP
(
dd
,2cË{ 
_R
++; 
_LX
 = 
	`INC
(_LX); 
	}
}

2723 
	$OP
(
dd
,2dË{ 
_R
++; 
_LX
 = 
	`DEC
(_LX); 
	}
}

2724 
	$OP
(
dd
,2eË{ 
_R
++; 
_LX
 = 
	`ARG
(); 
	}
}

2725 
	$OP
(
dd
,2fË{ 
	`ûÀgÆ_1
(); 
	`›_2f
(); 
	}
}

2727 
	$OP
(
dd
,30Ë{ 
	`ûÀgÆ_1
(); 
	`›_30
(); 
	}
}

2728 
	$OP
(
dd
,31Ë{ 
	`ûÀgÆ_1
(); 
	`›_31
(); 
	}
}

2729 
	$OP
(
dd
,32Ë{ 
	`ûÀgÆ_1
(); 
	`›_32
(); 
	}
}

2730 
	$OP
(
dd
,33Ë{ 
	`ûÀgÆ_1
(); 
	`›_33
(); 
	}
}

2731 
	$OP
(
dd
,34Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
	`INC
(
	`RM
(Z80.EA)Ë); 
	}
}

2732 
	$OP
(
dd
,35Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
	`DEC
(
	`RM
(Z80.EA)Ë); 
	}
}

2733 
	$OP
(
dd
,36Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
	`ARG
(Ë); 
	}
}

2734 
	$OP
(
dd
,37Ë{ 
	`ûÀgÆ_1
(); 
	`›_37
(); 
	}
}

2736 
	$OP
(
dd
,38Ë{ 
	`ûÀgÆ_1
(); 
	`›_38
(); 
	}
}

2737 
	$OP
(
dd
,39Ë{ 
_R
++; 
	`ADD16
(
IX
,
SP
); 
	}
}

2738 
	$OP
(
dd
,3aË{ 
	`ûÀgÆ_1
(); 
	`›_3a
(); 
	}
}

2739 
	$OP
(
dd
,3bË{ 
	`ûÀgÆ_1
(); 
	`›_3b
(); 
	}
}

2740 
	$OP
(
dd
,3cË{ 
	`ûÀgÆ_1
(); 
	`›_3c
(); 
	}
}

2741 
	$OP
(
dd
,3dË{ 
	`ûÀgÆ_1
(); 
	`›_3d
(); 
	}
}

2742 
	$OP
(
dd
,3eË{ 
	`ûÀgÆ_1
(); 
	`›_3e
(); 
	}
}

2743 
	$OP
(
dd
,3fË{ 
	`ûÀgÆ_1
(); 
	`›_3f
(); 
	}
}

2745 
	$OP
(
dd
,40Ë{ 
	`ûÀgÆ_1
(); 
	`›_40
(); 
	}
}

2746 
	$OP
(
dd
,41Ë{ 
	`ûÀgÆ_1
(); 
	`›_41
(); 
	}
}

2747 
	$OP
(
dd
,42Ë{ 
	`ûÀgÆ_1
(); 
	`›_42
(); 
	}
}

2748 
	$OP
(
dd
,43Ë{ 
	`ûÀgÆ_1
(); 
	`›_43
(); 
	}
}

2749 
	$OP
(
dd
,44Ë{ 
_R
++; 
_B
 = 
_HX
; 
	}
}

2750 
	$OP
(
dd
,45Ë{ 
_R
++; 
_B
 = 
_LX
; 
	}
}

2751 
	$OP
(
dd
,46Ë{ 
_R
++; 
EAX
; 
_B
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2752 
	$OP
(
dd
,47Ë{ 
	`ûÀgÆ_1
(); 
	`›_47
(); 
	}
}

2754 
	$OP
(
dd
,48Ë{ 
	`ûÀgÆ_1
(); 
	`›_48
(); 
	}
}

2755 
	$OP
(
dd
,49Ë{ 
	`ûÀgÆ_1
(); 
	`›_49
(); 
	}
}

2756 
	$OP
(
dd
,4aË{ 
	`ûÀgÆ_1
(); 
	`›_4a
(); 
	}
}

2757 
	$OP
(
dd
,4bË{ 
	`ûÀgÆ_1
(); 
	`›_4b
(); 
	}
}

2758 
	$OP
(
dd
,4cË{ 
_R
++; 
_C
 = 
_HX
; 
	}
}

2759 
	$OP
(
dd
,4dË{ 
_R
++; 
_C
 = 
_LX
; 
	}
}

2760 
	$OP
(
dd
,4eË{ 
_R
++; 
EAX
; 
_C
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2761 
	$OP
(
dd
,4fË{ 
	`ûÀgÆ_1
(); 
	`›_4f
(); 
	}
}

2763 
	$OP
(
dd
,50Ë{ 
	`ûÀgÆ_1
(); 
	`›_50
(); 
	}
}

2764 
	$OP
(
dd
,51Ë{ 
	`ûÀgÆ_1
(); 
	`›_51
(); 
	}
}

2765 
	$OP
(
dd
,52Ë{ 
	`ûÀgÆ_1
(); 
	`›_52
(); 
	}
}

2766 
	$OP
(
dd
,53Ë{ 
	`ûÀgÆ_1
(); 
	`›_53
(); 
	}
}

2767 
	$OP
(
dd
,54Ë{ 
_R
++; 
_D
 = 
_HX
; 
	}
}

2768 
	$OP
(
dd
,55Ë{ 
_R
++; 
_D
 = 
_LX
; 
	}
}

2769 
	$OP
(
dd
,56Ë{ 
_R
++; 
EAX
; 
_D
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2770 
	$OP
(
dd
,57Ë{ 
	`ûÀgÆ_1
(); 
	`›_57
(); 
	}
}

2772 
	$OP
(
dd
,58Ë{ 
	`ûÀgÆ_1
(); 
	`›_58
(); 
	}
}

2773 
	$OP
(
dd
,59Ë{ 
	`ûÀgÆ_1
(); 
	`›_59
(); 
	}
}

2774 
	$OP
(
dd
,5aË{ 
	`ûÀgÆ_1
(); 
	`›_5a
(); 
	}
}

2775 
	$OP
(
dd
,5bË{ 
	`ûÀgÆ_1
(); 
	`›_5b
(); 
	}
}

2776 
	$OP
(
dd
,5cË{ 
_R
++; 
_E
 = 
_HX
; 
	}
}

2777 
	$OP
(
dd
,5dË{ 
_R
++; 
_E
 = 
_LX
; 
	}
}

2778 
	$OP
(
dd
,5eË{ 
_R
++; 
EAX
; 
_E
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2779 
	$OP
(
dd
,5fË{ 
	`ûÀgÆ_1
(); 
	`›_5f
(); 
	}
}

2781 
	$OP
(
dd
,60Ë{ 
_R
++; 
_HX
 = 
_B
; 
	}
}

2782 
	$OP
(
dd
,61Ë{ 
_R
++; 
_HX
 = 
_C
; 
	}
}

2783 
	$OP
(
dd
,62Ë{ 
_R
++; 
_HX
 = 
_D
; 
	}
}

2784 
	$OP
(
dd
,63Ë{ 
_R
++; 
_HX
 = 
_E
; 
	}
}

2785 
	$OP
(
dd
,64Ë{ 
	}
}

2786 
	$OP
(
dd
,65Ë{ 
_R
++; 
_HX
 = 
_LX
; 
	}
}

2787 
	$OP
(
dd
,66Ë{ 
_R
++; 
EAX
; 
_H
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2788 
	$OP
(
dd
,67Ë{ 
_R
++; 
_HX
 = 
_A
; 
	}
}

2790 
	$OP
(
dd
,68Ë{ 
_R
++; 
_LX
 = 
_B
; 
	}
}

2791 
	$OP
(
dd
,69Ë{ 
_R
++; 
_LX
 = 
_C
; 
	}
}

2792 
	$OP
(
dd
,6aË{ 
_R
++; 
_LX
 = 
_D
; 
	}
}

2793 
	$OP
(
dd
,6bË{ 
_R
++; 
_LX
 = 
_E
; 
	}
}

2794 
	$OP
(
dd
,6cË{ 
_R
++; 
_LX
 = 
_HX
; 
	}
}

2795 
	$OP
(
dd
,6dË{ 
	}
}

2796 
	$OP
(
dd
,6eË{ 
_R
++; 
EAX
; 
_L
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2797 
	$OP
(
dd
,6fË{ 
_R
++; 
_LX
 = 
_A
; 
	}
}

2799 
	$OP
(
dd
,70Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_B
 ); 
	}
}

2800 
	$OP
(
dd
,71Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_C
 ); 
	}
}

2801 
	$OP
(
dd
,72Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_D
 ); 
	}
}

2802 
	$OP
(
dd
,73Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_E
 ); 
	}
}

2803 
	$OP
(
dd
,74Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_H
 ); 
	}
}

2804 
	$OP
(
dd
,75Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_L
 ); 
	}
}

2805 
	$OP
(
dd
,76Ë{ 
	`ûÀgÆ_1
(); 
	`›_76
(); 
	}
}

2806 
	$OP
(
dd
,77Ë{ 
_R
++; 
EAX
; 
	`WM
–
Z80
.
EA
, 
_A
 ); 
	}
}

2808 
	$OP
(
dd
,78Ë{ 
	`ûÀgÆ_1
(); 
	`›_78
(); 
	}
}

2809 
	$OP
(
dd
,79Ë{ 
	`ûÀgÆ_1
(); 
	`›_79
(); 
	}
}

2810 
	$OP
(
dd
,7aË{ 
	`ûÀgÆ_1
(); 
	`›_7a
(); 
	}
}

2811 
	$OP
(
dd
,7bË{ 
	`ûÀgÆ_1
(); 
	`›_7b
(); 
	}
}

2812 
	$OP
(
dd
,7cË{ 
_R
++; 
_A
 = 
_HX
; 
	}
}

2813 
	$OP
(
dd
,7dË{ 
_R
++; 
_A
 = 
_LX
; 
	}
}

2814 
	$OP
(
dd
,7eË{ 
_R
++; 
EAX
; 
_A
 = 
	`RM
(
Z80
.
EA
); 
	}
}

2815 
	$OP
(
dd
,7fË{ 
	`ûÀgÆ_1
(); 
	`›_7f
(); 
	}
}

2817 
	$OP
(
dd
,80Ë{ 
	`ûÀgÆ_1
(); 
	`›_80
(); 
	}
}

2818 
	$OP
(
dd
,81Ë{ 
	`ûÀgÆ_1
(); 
	`›_81
(); 
	}
}

2819 
	$OP
(
dd
,82Ë{ 
	`ûÀgÆ_1
(); 
	`›_82
(); 
	}
}

2820 
	$OP
(
dd
,83Ë{ 
	`ûÀgÆ_1
(); 
	`›_83
(); 
	}
}

2821 
	$OP
(
dd
,84Ë{ 
_R
++; 
	`ADD
(
_HX
); 
	}
}

2822 
	$OP
(
dd
,85Ë{ 
_R
++; 
	`ADD
(
_LX
); 
	}
}

2823 
	$OP
(
dd
,86Ë{ 
_R
++; 
EAX
; 
	`ADD
(
	`RM
(
Z80
.
EA
)); 
	}
}

2824 
	$OP
(
dd
,87Ë{ 
	`ûÀgÆ_1
(); 
	`›_87
(); 
	}
}

2826 
	$OP
(
dd
,88Ë{ 
	`ûÀgÆ_1
(); 
	`›_88
(); 
	}
}

2827 
	$OP
(
dd
,89Ë{ 
	`ûÀgÆ_1
(); 
	`›_89
(); 
	}
}

2828 
	$OP
(
dd
,8aË{ 
	`ûÀgÆ_1
(); 
	`›_8a
(); 
	}
}

2829 
	$OP
(
dd
,8bË{ 
	`ûÀgÆ_1
(); 
	`›_8b
(); 
	}
}

2830 
	$OP
(
dd
,8cË{ 
_R
++; 
	`ADC
(
_HX
); 
	}
}

2831 
	$OP
(
dd
,8dË{ 
_R
++; 
	`ADC
(
_LX
); 
	}
}

2832 
	$OP
(
dd
,8eË{ 
_R
++; 
EAX
; 
	`ADC
(
	`RM
(
Z80
.
EA
)); 
	}
}

2833 
	$OP
(
dd
,8fË{ 
	`ûÀgÆ_1
(); 
	`›_8f
(); 
	}
}

2835 
	$OP
(
dd
,90Ë{ 
	`ûÀgÆ_1
(); 
	`›_90
(); 
	}
}

2836 
	$OP
(
dd
,91Ë{ 
	`ûÀgÆ_1
(); 
	`›_91
(); 
	}
}

2837 
	$OP
(
dd
,92Ë{ 
	`ûÀgÆ_1
(); 
	`›_92
(); 
	}
}

2838 
	$OP
(
dd
,93Ë{ 
	`ûÀgÆ_1
(); 
	`›_93
(); 
	}
}

2839 
	$OP
(
dd
,94Ë{ 
_R
++; 
	`SUB
(
_HX
); 
	}
}

2840 
	$OP
(
dd
,95Ë{ 
_R
++; 
	`SUB
(
_LX
); 
	}
}

2841 
	$OP
(
dd
,96Ë{ 
_R
++; 
EAX
; 
	`SUB
(
	`RM
(
Z80
.
EA
)); 
	}
}

2842 
	$OP
(
dd
,97Ë{ 
	`ûÀgÆ_1
(); 
	`›_97
(); 
	}
}

2844 
	$OP
(
dd
,98Ë{ 
	`ûÀgÆ_1
(); 
	`›_98
(); 
	}
}

2845 
	$OP
(
dd
,99Ë{ 
	`ûÀgÆ_1
(); 
	`›_99
(); 
	}
}

2846 
	$OP
(
dd
,9aË{ 
	`ûÀgÆ_1
(); 
	`›_9a
(); 
	}
}

2847 
	$OP
(
dd
,9bË{ 
	`ûÀgÆ_1
(); 
	`›_9b
(); 
	}
}

2848 
	$OP
(
dd
,9cË{ 
_R
++; 
	`SBC
(
_HX
); 
	}
}

2849 
	$OP
(
dd
,9dË{ 
_R
++; 
	`SBC
(
_LX
); 
	}
}

2850 
	$OP
(
dd
,9eË{ 
_R
++; 
EAX
; 
	`SBC
(
	`RM
(
Z80
.
EA
)); 
	}
}

2851 
	$OP
(
dd
,9fË{ 
	`ûÀgÆ_1
(); 
	`›_9f
(); 
	}
}

2853 
	$OP
(
dd
,
a0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a0
(); 
	}
}

2854 
	$OP
(
dd
,
a1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a1
(); 
	}
}

2855 
	$OP
(
dd
,
a2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a2
(); 
	}
}

2856 
	$OP
(
dd
,
a3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a3
(); 
	}
}

2857 
	$OP
(
dd
,
a4
Ë{ 
_R
++; 
	`AND
(
_HX
); 
	}
}

2858 
	$OP
(
dd
,
a5
Ë{ 
_R
++; 
	`AND
(
_LX
); 
	}
}

2859 
	$OP
(
dd
,
a6
Ë{ 
_R
++; 
EAX
; 
	`AND
(
	`RM
(
Z80
.
EA
)); 
	}
}

2860 
	$OP
(
dd
,
a7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a7
(); 
	}
}

2862 
	$OP
(
dd
,
a8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a8
(); 
	}
}

2863 
	$OP
(
dd
,
a9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a9
(); 
	}
}

2864 
	$OP
(
dd
,
Ø
Ë{ 
	`ûÀgÆ_1
(); 
	`›_Ø
(); 
	}
}

2865 
	$OP
(
dd
,
ab
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ab
(); 
	}
}

2866 
	$OP
(
dd
,
ac
Ë{ 
_R
++; 
	`XOR
(
_HX
); 
	}
}

2867 
	$OP
(
dd
,
ad
Ë{ 
_R
++; 
	`XOR
(
_LX
); 
	}
}

2868 
	$OP
(
dd
,
´
Ë{ 
_R
++; 
EAX
; 
	`XOR
(
	`RM
(
Z80
.
EA
)); 
	}
}

2869 
	$OP
(
dd
,
af
Ë{ 
	`ûÀgÆ_1
(); 
	`›_af
(); 
	}
}

2871 
	$OP
(
dd
,
b0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b0
(); 
	}
}

2872 
	$OP
(
dd
,
b1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b1
(); 
	}
}

2873 
	$OP
(
dd
,
b2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b2
(); 
	}
}

2874 
	$OP
(
dd
,
b3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b3
(); 
	}
}

2875 
	$OP
(
dd
,
b4
Ë{ 
_R
++; 
	`OR
(
_HX
); 
	}
}

2876 
	$OP
(
dd
,
b5
Ë{ 
_R
++; 
	`OR
(
_LX
); 
	}
}

2877 
	$OP
(
dd
,
b6
Ë{ 
_R
++; 
EAX
; 
	`OR
(
	`RM
(
Z80
.
EA
)); 
	}
}

2878 
	$OP
(
dd
,
b7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b7
(); 
	}
}

2880 
	$OP
(
dd
,
b8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b8
(); 
	}
}

2881 
	$OP
(
dd
,
b9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b9
(); 
	}
}

2882 
	$OP
(
dd
,
ba
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ba
(); 
	}
}

2883 
	$OP
(
dd
,
bb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_bb
(); 
	}
}

2884 
	$OP
(
dd
,
bc
Ë{ 
_R
++; 
	`CP
(
_HX
); 
	}
}

2885 
	$OP
(
dd
,
bd
Ë{ 
_R
++; 
	`CP
(
_LX
); 
	}
}

2886 
	$OP
(
dd
,
be
Ë{ 
_R
++; 
EAX
; 
	`CP
(
	`RM
(
Z80
.
EA
)); 
	}
}

2887 
	$OP
(
dd
,
bf
Ë{ 
	`ûÀgÆ_1
(); 
	`›_bf
(); 
	}
}

2889 
	$OP
(
dd
,
c0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c0
(); 
	}
}

2890 
	$OP
(
dd
,
c1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c1
(); 
	}
}

2891 
	$OP
(
dd
,
c2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c2
(); 
	}
}

2892 
	$OP
(
dd
,
c3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c3
(); 
	}
}

2893 
	$OP
(
dd
,
c4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c4
(); 
	}
}

2894 
	$OP
(
dd
,
c5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c5
(); 
	}
}

2895 
	$OP
(
dd
,
c6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c6
(); 
	}
}

2896 
	$OP
(
dd
,
c7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c7
(); 
	}
}

2898 
	$OP
(
dd
,
c8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c8
(); 
	}
}

2899 
	$OP
(
dd
,
c9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c9
(); 
	}
}

2900 
	$OP
(
dd
,
ˇ
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ˇ
(); 
	}
}

2901 
	$OP
(
dd
,
cb
Ë{ 
_R
++; 
EAX
; 
	`EXEC
(
xycb
,
	`ARG
()); 
	}
}

2902 
	$OP
(
dd
,
cc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cc
(); 
	}
}

2903 
	$OP
(
dd
,
cd
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cd
(); 
	}
}

2904 
	$OP
(
dd
,
˚
Ë{ 
	`ûÀgÆ_1
(); 
	`›_˚
(); 
	}
}

2905 
	$OP
(
dd
,
cf
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cf
(); 
	}
}

2907 
	$OP
(
dd
,
d0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d0
(); 
	}
}

2908 
	$OP
(
dd
,
d1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d1
(); 
	}
}

2909 
	$OP
(
dd
,
d2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d2
(); 
	}
}

2910 
	$OP
(
dd
,
d3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d3
(); 
	}
}

2911 
	$OP
(
dd
,
d4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d4
(); 
	}
}

2912 
	$OP
(
dd
,
d5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d5
(); 
	}
}

2913 
	$OP
(
dd
,
d6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d6
(); 
	}
}

2914 
	$OP
(
dd
,
d7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d7
(); 
	}
}

2916 
	$OP
(
dd
,
d8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d8
(); 
	}
}

2917 
	$OP
(
dd
,
d9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d9
(); 
	}
}

2918 
	$OP
(
dd
,
da
Ë{ 
	`ûÀgÆ_1
(); 
	`›_da
(); 
	}
}

2919 
	$OP
(
dd
,
db
Ë{ 
	`ûÀgÆ_1
(); 
	`›_db
(); 
	}
}

2920 
	$OP
(
dd
,
dc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_dc
(); 
	}
}

2921 
	$OP
(
dd
,ddË{ 
	`ûÀgÆ_1
(); 
	`›_dd
(); 
	}
}

2922 
	$OP
(
dd
,
de
Ë{ 
	`ûÀgÆ_1
(); 
	`›_de
(); 
	}
}

2923 
	$OP
(
dd
,
df
Ë{ 
	`ûÀgÆ_1
(); 
	`›_df
(); 
	}
}

2925 
	$OP
(
dd
,
e0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e0
(); 
	}
}

2926 
	$OP
(
dd
,
e1
Ë{ 
_R
++; 
	`POP
(
IX
); 
	}
}

2927 
	$OP
(
dd
,
e2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e2
(); 
	}
}

2928 
	$OP
(
dd
,
e3
Ë{ 
_R
++; 
	`EXSP
(
IX
); 
	}
}

2929 
	$OP
(
dd
,
e4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e4
(); 
	}
}

2930 
	$OP
(
dd
,
e5
Ë{ 
_R
++; 
	`PUSH
–
IX
 ); 
	}
}

2931 
	$OP
(
dd
,
e6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e6
(); 
	}
}

2932 
	$OP
(
dd
,
e7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e7
(); 
	}
}

2934 
	$OP
(
dd
,
e8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e8
(); 
	}
}

2935 
	$OP
(
dd
,
e9
Ë{ 
_R
++; 
_PC
 = 
_IX
; 
	`ch™ge_pc16
(
_PCD
); 
	}
}

2936 
	$OP
(
dd
,
ó
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ó
(); 
	}
}

2937 
	$OP
(
dd
,
eb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_eb
(); 
	}
}

2938 
	$OP
(
dd
,
ec
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ec
(); 
	}
}

2939 
	$OP
(
dd
,
ed
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ed
(); 
	}
}

2940 
	$OP
(
dd
,
ì
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ì
(); 
	}
}

2941 
	$OP
(
dd
,
ef
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ef
(); 
	}
}

2943 
	$OP
(
dd
,
f0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f0
(); 
	}
}

2944 
	$OP
(
dd
,
f1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f1
(); 
	}
}

2945 
	$OP
(
dd
,
f2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f2
(); 
	}
}

2946 
	$OP
(
dd
,
f3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f3
(); 
	}
}

2947 
	$OP
(
dd
,
f4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f4
(); 
	}
}

2948 
	$OP
(
dd
,
f5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f5
(); 
	}
}

2949 
	$OP
(
dd
,
f6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f6
(); 
	}
}

2950 
	$OP
(
dd
,
f7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f7
(); 
	}
}

2952 
	$OP
(
dd
,
f8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f8
(); 
	}
}

2953 
	$OP
(
dd
,
f9
Ë{ 
_R
++; 
_SP
 = 
_IX
; 
	}
}

2954 
	$OP
(
dd
,
Á
Ë{ 
	`ûÀgÆ_1
(); 
	`›_Á
(); 
	}
}

2955 
	$OP
(
dd
,
fb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_fb
(); 
	}
}

2956 
	$OP
(
dd
,
fc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_fc
(); 
	}
}

2957 
	$OP
(
dd
,
fd
Ë{ 
	`ûÀgÆ_1
(); 
	`›_fd
(); 
	}
}

2958 
	$OP
(
dd
,
„
Ë{ 
	`ûÀgÆ_1
(); 
	`›_„
(); 
	}
}

2959 
	$OP
(
dd
,
ff
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ff
(); 
	}
}

2964 
	$OP
(
fd
,00Ë{ 
	`ûÀgÆ_1
(); 
	`›_00
(); 
	}
}

2965 
	$OP
(
fd
,01Ë{ 
	`ûÀgÆ_1
(); 
	`›_01
(); 
	}
}

2966 
	$OP
(
fd
,02Ë{ 
	`ûÀgÆ_1
(); 
	`›_02
(); 
	}
}

2967 
	$OP
(
fd
,03Ë{ 
	`ûÀgÆ_1
(); 
	`›_03
(); 
	}
}

2968 
	$OP
(
fd
,04Ë{ 
	`ûÀgÆ_1
(); 
	`›_04
(); 
	}
}

2969 
	$OP
(
fd
,05Ë{ 
	`ûÀgÆ_1
(); 
	`›_05
(); 
	}
}

2970 
	$OP
(
fd
,06Ë{ 
	`ûÀgÆ_1
(); 
	`›_06
(); 
	}
}

2971 
	$OP
(
fd
,07Ë{ 
	`ûÀgÆ_1
(); 
	`›_07
(); 
	}
}

2973 
	$OP
(
fd
,08Ë{ 
	`ûÀgÆ_1
(); 
	`›_08
(); 
	}
}

2974 
	$OP
(
fd
,09Ë{ 
_R
++; 
	`ADD16
(
IY
,
BC
); 
	}
}

2975 
	$OP
(
fd
,0aË{ 
	`ûÀgÆ_1
(); 
	`›_0a
(); 
	}
}

2976 
	$OP
(
fd
,0bË{ 
	`ûÀgÆ_1
(); 
	`›_0b
(); 
	}
}

2977 
	$OP
(
fd
,0cË{ 
	`ûÀgÆ_1
(); 
	`›_0c
(); 
	}
}

2978 
	$OP
(
fd
,0dË{ 
	`ûÀgÆ_1
(); 
	`›_0d
(); 
	}
}

2979 
	$OP
(
fd
,0eË{ 
	`ûÀgÆ_1
(); 
	`›_0e
(); 
	}
}

2980 
	$OP
(
fd
,0fË{ 
	`ûÀgÆ_1
(); 
	`›_0f
(); 
	}
}

2982 
	$OP
(
fd
,10Ë{ 
	`ûÀgÆ_1
(); 
	`›_10
(); 
	}
}

2983 
	$OP
(
fd
,11Ë{ 
	`ûÀgÆ_1
(); 
	`›_11
(); 
	}
}

2984 
	$OP
(
fd
,12Ë{ 
	`ûÀgÆ_1
(); 
	`›_12
(); 
	}
}

2985 
	$OP
(
fd
,13Ë{ 
	`ûÀgÆ_1
(); 
	`›_13
(); 
	}
}

2986 
	$OP
(
fd
,14Ë{ 
	`ûÀgÆ_1
(); 
	`›_14
(); 
	}
}

2987 
	$OP
(
fd
,15Ë{ 
	`ûÀgÆ_1
(); 
	`›_15
(); 
	}
}

2988 
	$OP
(
fd
,16Ë{ 
	`ûÀgÆ_1
(); 
	`›_16
(); 
	}
}

2989 
	$OP
(
fd
,17Ë{ 
	`ûÀgÆ_1
(); 
	`›_17
(); 
	}
}

2991 
	$OP
(
fd
,18Ë{ 
	`ûÀgÆ_1
(); 
	`›_18
(); 
	}
}

2992 
	$OP
(
fd
,19Ë{ 
_R
++; 
	`ADD16
(
IY
,
DE
); 
	}
}

2993 
	$OP
(
fd
,1aË{ 
	`ûÀgÆ_1
(); 
	`›_1a
(); 
	}
}

2994 
	$OP
(
fd
,1bË{ 
	`ûÀgÆ_1
(); 
	`›_1b
(); 
	}
}

2995 
	$OP
(
fd
,1cË{ 
	`ûÀgÆ_1
(); 
	`›_1c
(); 
	}
}

2996 
	$OP
(
fd
,1dË{ 
	`ûÀgÆ_1
(); 
	`›_1d
(); 
	}
}

2997 
	$OP
(
fd
,1eË{ 
	`ûÀgÆ_1
(); 
	`›_1e
(); 
	}
}

2998 
	$OP
(
fd
,1fË{ 
	`ûÀgÆ_1
(); 
	`›_1f
(); 
	}
}

3000 
	$OP
(
fd
,20Ë{ 
	`ûÀgÆ_1
(); 
	`›_20
(); 
	}
}

3001 
	$OP
(
fd
,21Ë{ 
_R
++; 
_IY
 = 
	`ARG16
(); 
	}
}

3002 
	$OP
(
fd
,22Ë{ 
_R
++; 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
IY
 ); 
	}
}

3003 
	$OP
(
fd
,23Ë{ 
_R
++; 
_IY
++; 
	}
}

3004 
	$OP
(
fd
,24Ë{ 
_R
++; 
_HY
 = 
	`INC
(_HY); 
	}
}

3005 
	$OP
(
fd
,25Ë{ 
_R
++; 
_HY
 = 
	`DEC
(_HY); 
	}
}

3006 
	$OP
(
fd
,26Ë{ 
_R
++; 
_HY
 = 
	`ARG
(); 
	}
}

3007 
	$OP
(
fd
,27Ë{ 
	`ûÀgÆ_1
(); 
	`›_27
(); 
	}
}

3009 
	$OP
(
fd
,28Ë{ 
	`ûÀgÆ_1
(); 
	`›_28
(); 
	}
}

3010 
	$OP
(
fd
,29Ë{ 
_R
++; 
	`ADD16
(
IY
,IY); 
	}
}

3011 
	$OP
(
fd
,2aË{ 
_R
++; 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
IY
 ); 
	}
}

3012 
	$OP
(
fd
,2bË{ 
_R
++; 
_IY
--; 
	}
}

3013 
	$OP
(
fd
,2cË{ 
_R
++; 
_LY
 = 
	`INC
(_LY); 
	}
}

3014 
	$OP
(
fd
,2dË{ 
_R
++; 
_LY
 = 
	`DEC
(_LY); 
	}
}

3015 
	$OP
(
fd
,2eË{ 
_R
++; 
_LY
 = 
	`ARG
(); 
	}
}

3016 
	$OP
(
fd
,2fË{ 
	`ûÀgÆ_1
(); 
	`›_2f
(); 
	}
}

3018 
	$OP
(
fd
,30Ë{ 
	`ûÀgÆ_1
(); 
	`›_30
(); 
	}
}

3019 
	$OP
(
fd
,31Ë{ 
	`ûÀgÆ_1
(); 
	`›_31
(); 
	}
}

3020 
	$OP
(
fd
,32Ë{ 
	`ûÀgÆ_1
(); 
	`›_32
(); 
	}
}

3021 
	$OP
(
fd
,33Ë{ 
	`ûÀgÆ_1
(); 
	`›_33
(); 
	}
}

3022 
	$OP
(
fd
,34Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
	`INC
(
	`RM
(Z80.EA)Ë); 
	}
}

3023 
	$OP
(
fd
,35Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
	`DEC
(
	`RM
(Z80.EA)Ë); 
	}
}

3024 
	$OP
(
fd
,36Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
	`ARG
(Ë); 
	}
}

3025 
	$OP
(
fd
,37Ë{ 
	`ûÀgÆ_1
(); 
	`›_37
(); 
	}
}

3027 
	$OP
(
fd
,38Ë{ 
	`ûÀgÆ_1
(); 
	`›_38
(); 
	}
}

3028 
	$OP
(
fd
,39Ë{ 
_R
++; 
	`ADD16
(
IY
,
SP
); 
	}
}

3029 
	$OP
(
fd
,3aË{ 
	`ûÀgÆ_1
(); 
	`›_3a
(); 
	}
}

3030 
	$OP
(
fd
,3bË{ 
	`ûÀgÆ_1
(); 
	`›_3b
(); 
	}
}

3031 
	$OP
(
fd
,3cË{ 
	`ûÀgÆ_1
(); 
	`›_3c
(); 
	}
}

3032 
	$OP
(
fd
,3dË{ 
	`ûÀgÆ_1
(); 
	`›_3d
(); 
	}
}

3033 
	$OP
(
fd
,3eË{ 
	`ûÀgÆ_1
(); 
	`›_3e
(); 
	}
}

3034 
	$OP
(
fd
,3fË{ 
	`ûÀgÆ_1
(); 
	`›_3f
(); 
	}
}

3036 
	$OP
(
fd
,40Ë{ 
	`ûÀgÆ_1
(); 
	`›_40
(); 
	}
}

3037 
	$OP
(
fd
,41Ë{ 
	`ûÀgÆ_1
(); 
	`›_41
(); 
	}
}

3038 
	$OP
(
fd
,42Ë{ 
	`ûÀgÆ_1
(); 
	`›_42
(); 
	}
}

3039 
	$OP
(
fd
,43Ë{ 
	`ûÀgÆ_1
(); 
	`›_43
(); 
	}
}

3040 
	$OP
(
fd
,44Ë{ 
_R
++; 
_B
 = 
_HY
; 
	}
}

3041 
	$OP
(
fd
,45Ë{ 
_R
++; 
_B
 = 
_LY
; 
	}
}

3042 
	$OP
(
fd
,46Ë{ 
_R
++; 
EAY
; 
_B
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3043 
	$OP
(
fd
,47Ë{ 
	`ûÀgÆ_1
(); 
	`›_47
(); 
	}
}

3045 
	$OP
(
fd
,48Ë{ 
	`ûÀgÆ_1
(); 
	`›_48
(); 
	}
}

3046 
	$OP
(
fd
,49Ë{ 
	`ûÀgÆ_1
(); 
	`›_49
(); 
	}
}

3047 
	$OP
(
fd
,4aË{ 
	`ûÀgÆ_1
(); 
	`›_4a
(); 
	}
}

3048 
	$OP
(
fd
,4bË{ 
	`ûÀgÆ_1
(); 
	`›_4b
(); 
	}
}

3049 
	$OP
(
fd
,4cË{ 
_R
++; 
_C
 = 
_HY
; 
	}
}

3050 
	$OP
(
fd
,4dË{ 
_R
++; 
_C
 = 
_LY
; 
	}
}

3051 
	$OP
(
fd
,4eË{ 
_R
++; 
EAY
; 
_C
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3052 
	$OP
(
fd
,4fË{ 
	`ûÀgÆ_1
(); 
	`›_4f
(); 
	}
}

3054 
	$OP
(
fd
,50Ë{ 
	`ûÀgÆ_1
(); 
	`›_50
(); 
	}
}

3055 
	$OP
(
fd
,51Ë{ 
	`ûÀgÆ_1
(); 
	`›_51
(); 
	}
}

3056 
	$OP
(
fd
,52Ë{ 
	`ûÀgÆ_1
(); 
	`›_52
(); 
	}
}

3057 
	$OP
(
fd
,53Ë{ 
	`ûÀgÆ_1
(); 
	`›_53
(); 
	}
}

3058 
	$OP
(
fd
,54Ë{ 
_R
++; 
_D
 = 
_HY
; 
	}
}

3059 
	$OP
(
fd
,55Ë{ 
_R
++; 
_D
 = 
_LY
; 
	}
}

3060 
	$OP
(
fd
,56Ë{ 
_R
++; 
EAY
; 
_D
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3061 
	$OP
(
fd
,57Ë{ 
	`ûÀgÆ_1
(); 
	`›_57
(); 
	}
}

3063 
	$OP
(
fd
,58Ë{ 
	`ûÀgÆ_1
(); 
	`›_58
(); 
	}
}

3064 
	$OP
(
fd
,59Ë{ 
	`ûÀgÆ_1
(); 
	`›_59
(); 
	}
}

3065 
	$OP
(
fd
,5aË{ 
	`ûÀgÆ_1
(); 
	`›_5a
(); 
	}
}

3066 
	$OP
(
fd
,5bË{ 
	`ûÀgÆ_1
(); 
	`›_5b
(); 
	}
}

3067 
	$OP
(
fd
,5cË{ 
_R
++; 
_E
 = 
_HY
; 
	}
}

3068 
	$OP
(
fd
,5dË{ 
_R
++; 
_E
 = 
_LY
; 
	}
}

3069 
	$OP
(
fd
,5eË{ 
_R
++; 
EAY
; 
_E
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3070 
	$OP
(
fd
,5fË{ 
	`ûÀgÆ_1
(); 
	`›_5f
(); 
	}
}

3072 
	$OP
(
fd
,60Ë{ 
_R
++; 
_HY
 = 
_B
; 
	}
}

3073 
	$OP
(
fd
,61Ë{ 
_R
++; 
_HY
 = 
_C
; 
	}
}

3074 
	$OP
(
fd
,62Ë{ 
_R
++; 
_HY
 = 
_D
; 
	}
}

3075 
	$OP
(
fd
,63Ë{ 
_R
++; 
_HY
 = 
_E
; 
	}
}

3076 
	$OP
(
fd
,64Ë{ 
_R
++; 
	}
}

3077 
	$OP
(
fd
,65Ë{ 
_R
++; 
_HY
 = 
_LY
; 
	}
}

3078 
	$OP
(
fd
,66Ë{ 
_R
++; 
EAY
; 
_H
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3079 
	$OP
(
fd
,67Ë{ 
_R
++; 
_HY
 = 
_A
; 
	}
}

3081 
	$OP
(
fd
,68Ë{ 
_R
++; 
_LY
 = 
_B
; 
	}
}

3082 
	$OP
(
fd
,69Ë{ 
_R
++; 
_LY
 = 
_C
; 
	}
}

3083 
	$OP
(
fd
,6aË{ 
_R
++; 
_LY
 = 
_D
; 
	}
}

3084 
	$OP
(
fd
,6bË{ 
_R
++; 
_LY
 = 
_E
; 
	}
}

3085 
	$OP
(
fd
,6cË{ 
_R
++; 
_LY
 = 
_HY
; 
	}
}

3086 
	$OP
(
fd
,6dË{ 
_R
++; 
	}
}

3087 
	$OP
(
fd
,6eË{ 
_R
++; 
EAY
; 
_L
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3088 
	$OP
(
fd
,6fË{ 
_R
++; 
_LY
 = 
_A
; 
	}
}

3090 
	$OP
(
fd
,70Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_B
 ); 
	}
}

3091 
	$OP
(
fd
,71Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_C
 ); 
	}
}

3092 
	$OP
(
fd
,72Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_D
 ); 
	}
}

3093 
	$OP
(
fd
,73Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_E
 ); 
	}
}

3094 
	$OP
(
fd
,74Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_H
 ); 
	}
}

3095 
	$OP
(
fd
,75Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_L
 ); 
	}
}

3096 
	$OP
(
fd
,76Ë{ 
	`ûÀgÆ_1
(); 
	`›_76
(); 
	}
}

3097 
	$OP
(
fd
,77Ë{ 
_R
++; 
EAY
; 
	`WM
–
Z80
.
EA
, 
_A
 ); 
	}
}

3099 
	$OP
(
fd
,78Ë{ 
	`ûÀgÆ_1
(); 
	`›_78
(); 
	}
}

3100 
	$OP
(
fd
,79Ë{ 
	`ûÀgÆ_1
(); 
	`›_79
(); 
	}
}

3101 
	$OP
(
fd
,7aË{ 
	`ûÀgÆ_1
(); 
	`›_7a
(); 
	}
}

3102 
	$OP
(
fd
,7bË{ 
	`ûÀgÆ_1
(); 
	`›_7b
(); 
	}
}

3103 
	$OP
(
fd
,7cË{ 
_R
++; 
_A
 = 
_HY
; 
	}
}

3104 
	$OP
(
fd
,7dË{ 
_R
++; 
_A
 = 
_LY
; 
	}
}

3105 
	$OP
(
fd
,7eË{ 
_R
++; 
EAY
; 
_A
 = 
	`RM
(
Z80
.
EA
); 
	}
}

3106 
	$OP
(
fd
,7fË{ 
	`ûÀgÆ_1
(); 
	`›_7f
(); 
	}
}

3108 
	$OP
(
fd
,80Ë{ 
	`ûÀgÆ_1
(); 
	`›_80
(); 
	}
}

3109 
	$OP
(
fd
,81Ë{ 
	`ûÀgÆ_1
(); 
	`›_81
(); 
	}
}

3110 
	$OP
(
fd
,82Ë{ 
	`ûÀgÆ_1
(); 
	`›_82
(); 
	}
}

3111 
	$OP
(
fd
,83Ë{ 
	`ûÀgÆ_1
(); 
	`›_83
(); 
	}
}

3112 
	$OP
(
fd
,84Ë{ 
_R
++; 
	`ADD
(
_HY
); 
	}
}

3113 
	$OP
(
fd
,85Ë{ 
_R
++; 
	`ADD
(
_LY
); 
	}
}

3114 
	$OP
(
fd
,86Ë{ 
_R
++; 
EAY
; 
	`ADD
(
	`RM
(
Z80
.
EA
)); 
	}
}

3115 
	$OP
(
fd
,87Ë{ 
	`ûÀgÆ_1
(); 
	`›_87
(); 
	}
}

3117 
	$OP
(
fd
,88Ë{ 
	`ûÀgÆ_1
(); 
	`›_88
(); 
	}
}

3118 
	$OP
(
fd
,89Ë{ 
	`ûÀgÆ_1
(); 
	`›_89
(); 
	}
}

3119 
	$OP
(
fd
,8aË{ 
	`ûÀgÆ_1
(); 
	`›_8a
(); 
	}
}

3120 
	$OP
(
fd
,8bË{ 
	`ûÀgÆ_1
(); 
	`›_8b
(); 
	}
}

3121 
	$OP
(
fd
,8cË{ 
_R
++; 
	`ADC
(
_HY
); 
	}
}

3122 
	$OP
(
fd
,8dË{ 
_R
++; 
	`ADC
(
_LY
); 
	}
}

3123 
	$OP
(
fd
,8eË{ 
_R
++; 
EAY
; 
	`ADC
(
	`RM
(
Z80
.
EA
)); 
	}
}

3124 
	$OP
(
fd
,8fË{ 
	`ûÀgÆ_1
(); 
	`›_8f
(); 
	}
}

3126 
	$OP
(
fd
,90Ë{ 
	`ûÀgÆ_1
(); 
	`›_90
(); 
	}
}

3127 
	$OP
(
fd
,91Ë{ 
	`ûÀgÆ_1
(); 
	`›_91
(); 
	}
}

3128 
	$OP
(
fd
,92Ë{ 
	`ûÀgÆ_1
(); 
	`›_92
(); 
	}
}

3129 
	$OP
(
fd
,93Ë{ 
	`ûÀgÆ_1
(); 
	`›_93
(); 
	}
}

3130 
	$OP
(
fd
,94Ë{ 
_R
++; 
	`SUB
(
_HY
); 
	}
}

3131 
	$OP
(
fd
,95Ë{ 
_R
++; 
	`SUB
(
_LY
); 
	}
}

3132 
	$OP
(
fd
,96Ë{ 
_R
++; 
EAY
; 
	`SUB
(
	`RM
(
Z80
.
EA
)); 
	}
}

3133 
	$OP
(
fd
,97Ë{ 
	`ûÀgÆ_1
(); 
	`›_97
(); 
	}
}

3135 
	$OP
(
fd
,98Ë{ 
	`ûÀgÆ_1
(); 
	`›_98
(); 
	}
}

3136 
	$OP
(
fd
,99Ë{ 
	`ûÀgÆ_1
(); 
	`›_99
(); 
	}
}

3137 
	$OP
(
fd
,9aË{ 
	`ûÀgÆ_1
(); 
	`›_9a
(); 
	}
}

3138 
	$OP
(
fd
,9bË{ 
	`ûÀgÆ_1
(); 
	`›_9b
(); 
	}
}

3139 
	$OP
(
fd
,9cË{ 
_R
++; 
	`SBC
(
_HY
); 
	}
}

3140 
	$OP
(
fd
,9dË{ 
_R
++; 
	`SBC
(
_LY
); 
	}
}

3141 
	$OP
(
fd
,9eË{ 
_R
++; 
EAY
; 
	`SBC
(
	`RM
(
Z80
.
EA
)); 
	}
}

3142 
	$OP
(
fd
,9fË{ 
	`ûÀgÆ_1
(); 
	`›_9f
(); 
	}
}

3144 
	$OP
(
fd
,
a0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a0
(); 
	}
}

3145 
	$OP
(
fd
,
a1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a1
(); 
	}
}

3146 
	$OP
(
fd
,
a2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a2
(); 
	}
}

3147 
	$OP
(
fd
,
a3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a3
(); 
	}
}

3148 
	$OP
(
fd
,
a4
Ë{ 
_R
++; 
	`AND
(
_HY
); 
	}
}

3149 
	$OP
(
fd
,
a5
Ë{ 
_R
++; 
	`AND
(
_LY
); 
	}
}

3150 
	$OP
(
fd
,
a6
Ë{ 
_R
++; 
EAY
; 
	`AND
(
	`RM
(
Z80
.
EA
)); 
	}
}

3151 
	$OP
(
fd
,
a7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a7
(); 
	}
}

3153 
	$OP
(
fd
,
a8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a8
(); 
	}
}

3154 
	$OP
(
fd
,
a9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_a9
(); 
	}
}

3155 
	$OP
(
fd
,
Ø
Ë{ 
	`ûÀgÆ_1
(); 
	`›_Ø
(); 
	}
}

3156 
	$OP
(
fd
,
ab
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ab
(); 
	}
}

3157 
	$OP
(
fd
,
ac
Ë{ 
_R
++; 
	`XOR
(
_HY
); 
	}
}

3158 
	$OP
(
fd
,
ad
Ë{ 
_R
++; 
	`XOR
(
_LY
); 
	}
}

3159 
	$OP
(
fd
,
´
Ë{ 
_R
++; 
EAY
; 
	`XOR
(
	`RM
(
Z80
.
EA
)); 
	}
}

3160 
	$OP
(
fd
,
af
Ë{ 
	`ûÀgÆ_1
(); 
	`›_af
(); 
	}
}

3162 
	$OP
(
fd
,
b0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b0
(); 
	}
}

3163 
	$OP
(
fd
,
b1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b1
(); 
	}
}

3164 
	$OP
(
fd
,
b2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b2
(); 
	}
}

3165 
	$OP
(
fd
,
b3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b3
(); 
	}
}

3166 
	$OP
(
fd
,
b4
Ë{ 
_R
++; 
	`OR
(
_HY
); 
	}
}

3167 
	$OP
(
fd
,
b5
Ë{ 
_R
++; 
	`OR
(
_LY
); 
	}
}

3168 
	$OP
(
fd
,
b6
Ë{ 
_R
++; 
EAY
; 
	`OR
(
	`RM
(
Z80
.
EA
)); 
	}
}

3169 
	$OP
(
fd
,
b7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b7
(); 
	}
}

3171 
	$OP
(
fd
,
b8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b8
(); 
	}
}

3172 
	$OP
(
fd
,
b9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_b9
(); 
	}
}

3173 
	$OP
(
fd
,
ba
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ba
(); 
	}
}

3174 
	$OP
(
fd
,
bb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_bb
(); 
	}
}

3175 
	$OP
(
fd
,
bc
Ë{ 
_R
++; 
	`CP
(
_HY
); 
	}
}

3176 
	$OP
(
fd
,
bd
Ë{ 
_R
++; 
	`CP
(
_LY
); 
	}
}

3177 
	$OP
(
fd
,
be
Ë{ 
_R
++; 
EAY
; 
	`CP
(
	`RM
(
Z80
.
EA
)); 
	}
}

3178 
	$OP
(
fd
,
bf
Ë{ 
	`ûÀgÆ_1
(); 
	`›_bf
(); 
	}
}

3180 
	$OP
(
fd
,
c0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c0
(); 
	}
}

3181 
	$OP
(
fd
,
c1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c1
(); 
	}
}

3182 
	$OP
(
fd
,
c2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c2
(); 
	}
}

3183 
	$OP
(
fd
,
c3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c3
(); 
	}
}

3184 
	$OP
(
fd
,
c4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c4
(); 
	}
}

3185 
	$OP
(
fd
,
c5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c5
(); 
	}
}

3186 
	$OP
(
fd
,
c6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c6
(); 
	}
}

3187 
	$OP
(
fd
,
c7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c7
(); 
	}
}

3189 
	$OP
(
fd
,
c8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c8
(); 
	}
}

3190 
	$OP
(
fd
,
c9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_c9
(); 
	}
}

3191 
	$OP
(
fd
,
ˇ
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ˇ
(); 
	}
}

3192 
	$OP
(
fd
,
cb
Ë{ 
_R
++; 
EAY
; 
	`EXEC
(
xycb
,
	`ARG
()); 
	}
}

3193 
	$OP
(
fd
,
cc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cc
(); 
	}
}

3194 
	$OP
(
fd
,
cd
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cd
(); 
	}
}

3195 
	$OP
(
fd
,
˚
Ë{ 
	`ûÀgÆ_1
(); 
	`›_˚
(); 
	}
}

3196 
	$OP
(
fd
,
cf
Ë{ 
	`ûÀgÆ_1
(); 
	`›_cf
(); 
	}
}

3198 
	$OP
(
fd
,
d0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d0
(); 
	}
}

3199 
	$OP
(
fd
,
d1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d1
(); 
	}
}

3200 
	$OP
(
fd
,
d2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d2
(); 
	}
}

3201 
	$OP
(
fd
,
d3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d3
(); 
	}
}

3202 
	$OP
(
fd
,
d4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d4
(); 
	}
}

3203 
	$OP
(
fd
,
d5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d5
(); 
	}
}

3204 
	$OP
(
fd
,
d6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d6
(); 
	}
}

3205 
	$OP
(
fd
,
d7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d7
(); 
	}
}

3207 
	$OP
(
fd
,
d8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d8
(); 
	}
}

3208 
	$OP
(
fd
,
d9
Ë{ 
	`ûÀgÆ_1
(); 
	`›_d9
(); 
	}
}

3209 
	$OP
(
fd
,
da
Ë{ 
	`ûÀgÆ_1
(); 
	`›_da
(); 
	}
}

3210 
	$OP
(
fd
,
db
Ë{ 
	`ûÀgÆ_1
(); 
	`›_db
(); 
	}
}

3211 
	$OP
(
fd
,
dc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_dc
(); 
	}
}

3212 
	$OP
(
fd
,
dd
Ë{ 
	`ûÀgÆ_1
(); 
	`›_dd
(); 
	}
}

3213 
	$OP
(
fd
,
de
Ë{ 
	`ûÀgÆ_1
(); 
	`›_de
(); 
	}
}

3214 
	$OP
(
fd
,
df
Ë{ 
	`ûÀgÆ_1
(); 
	`›_df
(); 
	}
}

3216 
	$OP
(
fd
,
e0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e0
(); 
	}
}

3217 
	$OP
(
fd
,
e1
Ë{ 
_R
++; 
	`POP
(
IY
); 
	}
}

3218 
	$OP
(
fd
,
e2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e2
(); 
	}
}

3219 
	$OP
(
fd
,
e3
Ë{ 
_R
++; 
	`EXSP
(
IY
); 
	}
}

3220 
	$OP
(
fd
,
e4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e4
(); 
	}
}

3221 
	$OP
(
fd
,
e5
Ë{ 
_R
++; 
	`PUSH
–
IY
 ); 
	}
}

3222 
	$OP
(
fd
,
e6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e6
(); 
	}
}

3223 
	$OP
(
fd
,
e7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e7
(); 
	}
}

3225 
	$OP
(
fd
,
e8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_e8
(); 
	}
}

3226 
	$OP
(
fd
,
e9
Ë{ 
_R
++; 
_PC
 = 
_IY
; 
	`ch™ge_pc16
(
_PCD
); 
	}
}

3227 
	$OP
(
fd
,
ó
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ó
(); 
	}
}

3228 
	$OP
(
fd
,
eb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_eb
(); 
	}
}

3229 
	$OP
(
fd
,
ec
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ec
(); 
	}
}

3230 
	$OP
(
fd
,
ed
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ed
(); 
	}
}

3231 
	$OP
(
fd
,
ì
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ì
(); 
	}
}

3232 
	$OP
(
fd
,
ef
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ef
(); 
	}
}

3234 
	$OP
(
fd
,
f0
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f0
(); 
	}
}

3235 
	$OP
(
fd
,
f1
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f1
(); 
	}
}

3236 
	$OP
(
fd
,
f2
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f2
(); 
	}
}

3237 
	$OP
(
fd
,
f3
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f3
(); 
	}
}

3238 
	$OP
(
fd
,
f4
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f4
(); 
	}
}

3239 
	$OP
(
fd
,
f5
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f5
(); 
	}
}

3240 
	$OP
(
fd
,
f6
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f6
(); 
	}
}

3241 
	$OP
(
fd
,
f7
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f7
(); 
	}
}

3243 
	$OP
(
fd
,
f8
Ë{ 
	`ûÀgÆ_1
(); 
	`›_f8
(); 
	}
}

3244 
	$OP
(
fd
,
f9
Ë{ 
_R
++; 
_SP
 = 
_IY
; 
	}
}

3245 
	$OP
(
fd
,
Á
Ë{ 
	`ûÀgÆ_1
(); 
	`›_Á
(); 
	}
}

3246 
	$OP
(
fd
,
fb
Ë{ 
	`ûÀgÆ_1
(); 
	`›_fb
(); 
	}
}

3247 
	$OP
(
fd
,
fc
Ë{ 
	`ûÀgÆ_1
(); 
	`›_fc
(); 
	}
}

3248 
	$OP
(
fd
,fdË{ 
	`ûÀgÆ_1
(); 
	`›_fd
(); 
	}
}

3249 
	$OP
(
fd
,
„
Ë{ 
	`ûÀgÆ_1
(); 
	`›_„
(); 
	}
}

3250 
	$OP
(
fd
,
ff
Ë{ 
	`ûÀgÆ_1
(); 
	`›_ff
(); 
	}
}

3252 
	$OP
(
ûÀgÆ
,2)

3258 
	}
}

3263 
	$OP
(
ed
,00Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3264 
	$OP
(
ed
,01Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3265 
	$OP
(
ed
,02Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3266 
	$OP
(
ed
,03Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3267 
	$OP
(
ed
,04Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3268 
	$OP
(
ed
,05Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3269 
	$OP
(
ed
,06Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3270 
	$OP
(
ed
,07Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3272 
	$OP
(
ed
,08Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3273 
	$OP
(
ed
,09Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3274 
	$OP
(
ed
,0aË{ 
	`ûÀgÆ_2
(); 
	}
}

3275 
	$OP
(
ed
,0bË{ 
	`ûÀgÆ_2
(); 
	}
}

3276 
	$OP
(
ed
,0cË{ 
	`ûÀgÆ_2
(); 
	}
}

3277 
	$OP
(
ed
,0dË{ 
	`ûÀgÆ_2
(); 
	}
}

3278 
	$OP
(
ed
,0eË{ 
	`ûÀgÆ_2
(); 
	}
}

3279 
	$OP
(
ed
,0fË{ 
	`ûÀgÆ_2
(); 
	}
}

3281 
	$OP
(
ed
,10Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3282 
	$OP
(
ed
,11Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3283 
	$OP
(
ed
,12Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3284 
	$OP
(
ed
,13Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3285 
	$OP
(
ed
,14Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3286 
	$OP
(
ed
,15Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3287 
	$OP
(
ed
,16Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3288 
	$OP
(
ed
,17Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3290 
	$OP
(
ed
,18Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3291 
	$OP
(
ed
,19Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3292 
	$OP
(
ed
,1aË{ 
	`ûÀgÆ_2
(); 
	}
}

3293 
	$OP
(
ed
,1bË{ 
	`ûÀgÆ_2
(); 
	}
}

3294 
	$OP
(
ed
,1cË{ 
	`ûÀgÆ_2
(); 
	}
}

3295 
	$OP
(
ed
,1dË{ 
	`ûÀgÆ_2
(); 
	}
}

3296 
	$OP
(
ed
,1eË{ 
	`ûÀgÆ_2
(); 
	}
}

3297 
	$OP
(
ed
,1fË{ 
	`ûÀgÆ_2
(); 
	}
}

3299 
	$OP
(
ed
,20Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3300 
	$OP
(
ed
,21Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3301 
	$OP
(
ed
,22Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3302 
	$OP
(
ed
,23Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3303 
	$OP
(
ed
,24Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3304 
	$OP
(
ed
,25Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3305 
	$OP
(
ed
,26Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3306 
	$OP
(
ed
,27Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3308 
	$OP
(
ed
,28Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3309 
	$OP
(
ed
,29Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3310 
	$OP
(
ed
,2aË{ 
	`ûÀgÆ_2
(); 
	}
}

3311 
	$OP
(
ed
,2bË{ 
	`ûÀgÆ_2
(); 
	}
}

3312 
	$OP
(
ed
,2cË{ 
	`ûÀgÆ_2
(); 
	}
}

3313 
	$OP
(
ed
,2dË{ 
	`ûÀgÆ_2
(); 
	}
}

3314 
	$OP
(
ed
,2eË{ 
	`ûÀgÆ_2
(); 
	}
}

3315 
	$OP
(
ed
,2fË{ 
	`ûÀgÆ_2
(); 
	}
}

3317 
	$OP
(
ed
,30Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3318 
	$OP
(
ed
,31Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3319 
	$OP
(
ed
,32Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3320 
	$OP
(
ed
,33Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3321 
	$OP
(
ed
,34Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3322 
	$OP
(
ed
,35Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3323 
	$OP
(
ed
,36Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3324 
	$OP
(
ed
,37Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3326 
	$OP
(
ed
,38Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3327 
	$OP
(
ed
,39Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3328 
	$OP
(
ed
,3aË{ 
	`ûÀgÆ_2
(); 
	}
}

3329 
	$OP
(
ed
,3bË{ 
	`ûÀgÆ_2
(); 
	}
}

3330 
	$OP
(
ed
,3cË{ 
	`ûÀgÆ_2
(); 
	}
}

3331 
	$OP
(
ed
,3dË{ 
	`ûÀgÆ_2
(); 
	}
}

3332 
	$OP
(
ed
,3eË{ 
	`ûÀgÆ_2
(); 
	}
}

3333 
	$OP
(
ed
,3fË{ 
	`ûÀgÆ_2
(); 
	}
}

3335 
	$OP
(
ed
,40Ë{ 
_B
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_B]; 
	}
}

3336 
	$OP
(
ed
,41Ë{ 
	`OUT
(
_BC
,
_B
); 
	}
}

3337 
	$OP
(
ed
,42Ë{ 
	`SBC16
–
BC
 ); 
	}
}

3338 
	$OP
(
ed
,43Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
BC
 ); 
	}
}

3339 
	$OP
(
ed
,44Ë{ 
NEG
; 
	}
}

3340 
	$OP
(
ed
,45Ë{ 
RETN
; 
	}
}

3341 
	$OP
(
ed
,46Ë{ 
_IM
 = 0; 
	}
}

3342 
	$OP
(
ed
,47Ë{ 
LD_I_A
; 
	}
}

3344 
	$OP
(
ed
,48Ë{ 
_C
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_C]; 
	}
}

3345 
	$OP
(
ed
,49Ë{ 
	`OUT
(
_BC
,
_C
); 
	}
}

3346 
	$OP
(
ed
,4aË{ 
	`ADC16
–
BC
 ); 
	}
}

3347 
	$OP
(
ed
,4bË{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
BC
 ); 
	}
}

3348 
	$OP
(
ed
,4cË{ 
NEG
; 
	}
}

3349 
	$OP
(
ed
,4dË{ 
RETI
; 
	}
}

3350 
	$OP
(
ed
,4eË{ 
_IM
 = 0; 
	}
}

3351 
	$OP
(
ed
,4fË{ 
LD_R_A
; 
	}
}

3353 
	$OP
(
ed
,50Ë{ 
_D
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_D]; 
	}
}

3354 
	$OP
(
ed
,51Ë{ 
	`OUT
(
_BC
,
_D
); 
	}
}

3355 
	$OP
(
ed
,52Ë{ 
	`SBC16
–
DE
 ); 
	}
}

3356 
	$OP
(
ed
,53Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
DE
 ); 
	}
}

3357 
	$OP
(
ed
,54Ë{ 
NEG
; 
	}
}

3358 
	$OP
(
ed
,55Ë{ 
RETN
; 
	}
}

3359 
	$OP
(
ed
,56Ë{ 
_IM
 = 1; 
	}
}

3360 
	$OP
(
ed
,57Ë{ 
LD_A_I
; 
	}
}

3362 
	$OP
(
ed
,58Ë{ 
_E
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_E]; 
	}
}

3363 
	$OP
(
ed
,59Ë{ 
	`OUT
(
_BC
,
_E
); 
	}
}

3364 
	$OP
(
ed
,5aË{ 
	`ADC16
–
DE
 ); 
	}
}

3365 
	$OP
(
ed
,5bË{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
DE
 ); 
	}
}

3366 
	$OP
(
ed
,5cË{ 
NEG
; 
	}
}

3367 
	$OP
(
ed
,5dË{ 
RETI
; 
	}
}

3368 
	$OP
(
ed
,5eË{ 
_IM
 = 2; 
	}
}

3369 
	$OP
(
ed
,5fË{ 
LD_A_R
; 
	}
}

3371 
	$OP
(
ed
,60Ë{ 
_H
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_H]; 
	}
}

3372 
	$OP
(
ed
,61Ë{ 
	`OUT
(
_BC
,
_H
); 
	}
}

3373 
	$OP
(
ed
,62Ë{ 
	`SBC16
–
HL
 ); 
	}
}

3374 
	$OP
(
ed
,63Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
HL
 ); 
	}
}

3375 
	$OP
(
ed
,64Ë{ 
NEG
; 
	}
}

3376 
	$OP
(
ed
,65Ë{ 
RETN
; 
	}
}

3377 
	$OP
(
ed
,66Ë{ 
_IM
 = 0; 
	}
}

3378 
	$OP
(
ed
,67Ë{ 
RRD
; 
	}
}

3380 
	$OP
(
ed
,68Ë{ 
_L
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_L]; 
	}
}

3381 
	$OP
(
ed
,69Ë{ 
	`OUT
(
_BC
,
_L
); 
	}
}

3382 
	$OP
(
ed
,6aË{ 
	`ADC16
–
HL
 ); 
	}
}

3383 
	$OP
(
ed
,6bË{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
HL
 ); 
	}
}

3384 
	$OP
(
ed
,6cË{ 
NEG
; 
	}
}

3385 
	$OP
(
ed
,6dË{ 
RETI
; 
	}
}

3386 
	$OP
(
ed
,6eË{ 
_IM
 = 0; 
	}
}

3387 
	$OP
(
ed
,6fË{ 
RLD
; 
	}
}

3389 
	$OP
(
ed
,70Ë{ 
UINT8
 
ªs
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[ªs]; 
	}
}

3390 
	$OP
(
ed
,71Ë{ 
	`OUT
(
_BC
,0); 
	}
}

3391 
	$OP
(
ed
,72Ë{ 
	`SBC16
–
SP
 ); 
	}
}

3392 
	$OP
(
ed
,73Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
SP
 ); 
	}
}

3393 
	$OP
(
ed
,74Ë{ 
NEG
; 
	}
}

3394 
	$OP
(
ed
,75Ë{ 
RETN
; 
	}
}

3395 
	$OP
(
ed
,76Ë{ 
_IM
 = 1; 
	}
}

3396 
	$OP
(
ed
,77Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3398 
	$OP
(
ed
,78Ë{ 
_A
 = 
	`IN
(
_BC
); 
_F
 = (_F & 
CF
Ë| 
SZP
[_A]; 
	}
}

3399 
	$OP
(
ed
,79Ë{ 
	`OUT
(
_BC
,
_A
); 
	}
}

3400 
	$OP
(
ed
,7aË{ 
	`ADC16
–
SP
 ); 
	}
}

3401 
	$OP
(
ed
,7bË{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
SP
 ); 
	}
}

3402 
	$OP
(
ed
,7cË{ 
NEG
; 
	}
}

3403 
	$OP
(
ed
,7dË{ 
RETI
; 
	}
}

3404 
	$OP
(
ed
,7eË{ 
_IM
 = 2; 
	}
}

3405 
	$OP
(
ed
,7fË{ 
	`ûÀgÆ_2
(); 
	}
}

3407 
	$OP
(
ed
,80Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3408 
	$OP
(
ed
,81Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3409 
	$OP
(
ed
,82Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3410 
	$OP
(
ed
,83Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3411 
	$OP
(
ed
,84Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3412 
	$OP
(
ed
,85Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3413 
	$OP
(
ed
,86Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3414 
	$OP
(
ed
,87Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3416 
	$OP
(
ed
,88Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3417 
	$OP
(
ed
,89Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3418 
	$OP
(
ed
,8aË{ 
	`ûÀgÆ_2
(); 
	}
}

3419 
	$OP
(
ed
,8bË{ 
	`ûÀgÆ_2
(); 
	}
}

3420 
	$OP
(
ed
,8cË{ 
	`ûÀgÆ_2
(); 
	}
}

3421 
	$OP
(
ed
,8dË{ 
	`ûÀgÆ_2
(); 
	}
}

3422 
	$OP
(
ed
,8eË{ 
	`ûÀgÆ_2
(); 
	}
}

3423 
	$OP
(
ed
,8fË{ 
	`ûÀgÆ_2
(); 
	}
}

3425 
	$OP
(
ed
,90Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3426 
	$OP
(
ed
,91Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3427 
	$OP
(
ed
,92Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3428 
	$OP
(
ed
,93Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3429 
	$OP
(
ed
,94Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3430 
	$OP
(
ed
,95Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3431 
	$OP
(
ed
,96Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3432 
	$OP
(
ed
,97Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3434 
	$OP
(
ed
,98Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3435 
	$OP
(
ed
,99Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3436 
	$OP
(
ed
,9aË{ 
	`ûÀgÆ_2
(); 
	}
}

3437 
	$OP
(
ed
,9bË{ 
	`ûÀgÆ_2
(); 
	}
}

3438 
	$OP
(
ed
,9cË{ 
	`ûÀgÆ_2
(); 
	}
}

3439 
	$OP
(
ed
,9dË{ 
	`ûÀgÆ_2
(); 
	}
}

3440 
	$OP
(
ed
,9eË{ 
	`ûÀgÆ_2
(); 
	}
}

3441 
	$OP
(
ed
,9fË{ 
	`ûÀgÆ_2
(); 
	}
}

3443 
	$OP
(
ed
,
a0
Ë{ 
LDI
; 
	}
}

3444 
	$OP
(
ed
,
a1
Ë{ 
CPI
; 
	}
}

3445 
	$OP
(
ed
,
a2
Ë{ 
INI
; 
	}
}

3446 
	$OP
(
ed
,
a3
Ë{ 
OUTI
; 
	}
}

3447 
	$OP
(
ed
,
a4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3448 
	$OP
(
ed
,
a5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3449 
	$OP
(
ed
,
a6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3450 
	$OP
(
ed
,
a7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3452 
	$OP
(
ed
,
a8
Ë{ 
LDD
; 
	}
}

3453 
	$OP
(
ed
,
a9
Ë{ 
CPD
; 
	}
}

3454 
	$OP
(
ed
,
Ø
Ë{ 
IND
; 
	}
}

3455 
	$OP
(
ed
,
ab
Ë{ 
OUTD
; 
	}
}

3456 
	$OP
(
ed
,
ac
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3457 
	$OP
(
ed
,
ad
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3458 
	$OP
(
ed
,
´
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3459 
	$OP
(
ed
,
af
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3461 
	$OP
(
ed
,
b0
Ë{ 
LDIR
; 
	}
}

3462 
	$OP
(
ed
,
b1
Ë{ 
CPIR
; 
	}
}

3463 
	$OP
(
ed
,
b2
Ë{ 
INIR
; 
	}
}

3464 
	$OP
(
ed
,
b3
Ë{ 
OTIR
; 
	}
}

3465 
	$OP
(
ed
,
b4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3466 
	$OP
(
ed
,
b5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3467 
	$OP
(
ed
,
b6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3468 
	$OP
(
ed
,
b7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3470 
	$OP
(
ed
,
b8
Ë{ 
LDDR
; 
	}
}

3471 
	$OP
(
ed
,
b9
Ë{ 
CPDR
; 
	}
}

3472 
	$OP
(
ed
,
ba
Ë{ 
INDR
; 
	}
}

3473 
	$OP
(
ed
,
bb
Ë{ 
OTDR
; 
	}
}

3474 
	$OP
(
ed
,
bc
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3475 
	$OP
(
ed
,
bd
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3476 
	$OP
(
ed
,
be
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3477 
	$OP
(
ed
,
bf
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3479 
	$OP
(
ed
,
c0
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3480 
	$OP
(
ed
,
c1
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3481 
	$OP
(
ed
,
c2
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3482 
	$OP
(
ed
,
c3
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3483 
	$OP
(
ed
,
c4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3484 
	$OP
(
ed
,
c5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3485 
	$OP
(
ed
,
c6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3486 
	$OP
(
ed
,
c7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3488 
	$OP
(
ed
,
c8
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3489 
	$OP
(
ed
,
c9
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3490 
	$OP
(
ed
,
ˇ
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3491 
	$OP
(
ed
,
cb
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3492 
	$OP
(
ed
,
cc
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3493 
	$OP
(
ed
,
cd
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3494 
	$OP
(
ed
,
˚
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3495 
	$OP
(
ed
,
cf
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3497 
	$OP
(
ed
,
d0
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3498 
	$OP
(
ed
,
d1
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3499 
	$OP
(
ed
,
d2
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3500 
	$OP
(
ed
,
d3
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3501 
	$OP
(
ed
,
d4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3502 
	$OP
(
ed
,
d5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3503 
	$OP
(
ed
,
d6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3504 
	$OP
(
ed
,
d7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3506 
	$OP
(
ed
,
d8
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3507 
	$OP
(
ed
,
d9
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3508 
	$OP
(
ed
,
da
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3509 
	$OP
(
ed
,
db
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3510 
	$OP
(
ed
,
dc
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3511 
	$OP
(
ed
,
dd
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3512 
	$OP
(
ed
,
de
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3513 
	$OP
(
ed
,
df
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3515 
	$OP
(
ed
,
e0
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3516 
	$OP
(
ed
,
e1
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3517 
	$OP
(
ed
,
e2
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3518 
	$OP
(
ed
,
e3
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3519 
	$OP
(
ed
,
e4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3520 
	$OP
(
ed
,
e5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3521 
	$OP
(
ed
,
e6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3522 
	$OP
(
ed
,
e7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3524 
	$OP
(
ed
,
e8
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3525 
	$OP
(
ed
,
e9
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3526 
	$OP
(
ed
,
ó
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3527 
	$OP
(
ed
,
eb
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3528 
	$OP
(
ed
,
ec
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3529 
	$OP
(
ed
,edË{ 
	`ûÀgÆ_2
(); 
	}
}

3530 
	$OP
(
ed
,
ì
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3531 
	$OP
(
ed
,
ef
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3533 
	$OP
(
ed
,
f0
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3534 
	$OP
(
ed
,
f1
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3535 
	$OP
(
ed
,
f2
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3536 
	$OP
(
ed
,
f3
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3537 
	$OP
(
ed
,
f4
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3538 
	$OP
(
ed
,
f5
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3539 
	$OP
(
ed
,
f6
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3540 
	$OP
(
ed
,
f7
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3542 
	$OP
(
ed
,
f8
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3543 
	$OP
(
ed
,
f9
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3544 
	$OP
(
ed
,
Á
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3545 
	$OP
(
ed
,
fb
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3546 
	$OP
(
ed
,
fc
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3547 
	$OP
(
ed
,
fd
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3548 
	$OP
(
ed
,
„
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3549 
	$OP
(
ed
,
ff
Ë{ 
	`ûÀgÆ_2
(); 
	}
}

3551 #i‡
TIME_LOOP_HACKS


3553 
	#CHECK_BC_LOOP
 \

3554 if–
_BC
 > 1 && 
_PCD
 < 0xfffc ) { \

3555 
UINT8
 
›1
 = 
	`RM
(
_PCD
); \

3556 
UINT8
 
›2
 = 
	`RM
(
_PCD
+1); \

3557 if–(
›1
==0x78 && 
›2
==0xb1) || (op1==0x79 && op2==0xb0) ) \

3559 
UINT8
 
›3
 = 
	`RM
(
_PCD
+2); \

3560 
UINT8
 
›4
 = 
	`RM
(
_PCD
+3); \

3561 if–
›3
==0x20 && 
›4
==0xfb ) \

3563 
˙t
 = \

3564 
cc
[
Z80_TABLE_›
][0x78] + \

3565 
cc
[
Z80_TABLE_›
][0xb1] + \

3566 
cc
[
Z80_TABLE_›
][0x20] + \

3567 
cc
[
Z80_TABLE_ex
][0x20]; \

3568  
_BC
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3570 
	`BURNODD
–
˙t
, 4, cnt ); \

3571 
_BC
--; \

3575 if–
›3
 == 0xc2 ) \

3577 
UINT8
 
ad1
 = 
	`RM
(
_PCD
+3); \

3578 
UINT8
 
ad2
 = 
	`RM
(
_PCD
+4); \

3579 if–(
ad1
 + 256 * 
ad2
Ë=(
_PCD
 - 1) ) \

3581 
˙t
 = \

3582 
cc
[
Z80_TABLE_›
][0x78] + \

3583 
cc
[
Z80_TABLE_›
][0xb1] + \

3584 
cc
[
Z80_TABLE_›
][0xc2] + \

3585 
cc
[
Z80_TABLE_ex
][0xc2]; \

3586  
_BC
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3588 
	`BURNODD
–
˙t
, 4, cnt ); \

3589 
_BC
--; \

3594 }

	)

3596 
	#CHECK_DE_LOOP
 \

3597 if–
_DE
 > 1 && 
_PCD
 < 0xfffc ) { \

3598 
UINT8
 
›1
 = 
	`RM
(
_PCD
); \

3599 
UINT8
 
›2
 = 
	`RM
(
_PCD
+1); \

3600 if–(
›1
==0x7®&& 
›2
==0xb3) || (op1==0x7b && op2==0xb2) ) \

3602 
UINT8
 
›3
 = 
	`RM
(
_PCD
+2); \

3603 
UINT8
 
›4
 = 
	`RM
(
_PCD
+3); \

3604 if–
›3
==0x20 && 
›4
==0xfb ) \

3606 
˙t
 = \

3607 
cc
[
Z80_TABLE_›
][0x7a] + \

3608 
cc
[
Z80_TABLE_›
][0xb3] + \

3609 
cc
[
Z80_TABLE_›
][0x20] + \

3610 
cc
[
Z80_TABLE_ex
][0x20]; \

3611  
_DE
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3613 
	`BURNODD
–
˙t
, 4, cnt ); \

3614 
_DE
--; \

3618 if–
›3
==0xc2 ) \

3620 
UINT8
 
ad1
 = 
	`RM
(
_PCD
+3); \

3621 
UINT8
 
ad2
 = 
	`RM
(
_PCD
+4); \

3622 if–(
ad1
 + 256 * 
ad2
Ë=(
_PCD
 - 1) ) \

3624 
˙t
 = \

3625 
cc
[
Z80_TABLE_›
][0x7a] + \

3626 
cc
[
Z80_TABLE_›
][0xb3] + \

3627 
cc
[
Z80_TABLE_›
][0xc2] + \

3628 
cc
[
Z80_TABLE_ex
][0xc2]; \

3629  
_DE
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3631 
	`BURNODD
–
˙t
, 4, cnt ); \

3632 
_DE
--; \

3637 }

	)

3639 
	#CHECK_HL_LOOP
 \

3640 if–
_HL
 > 1 && 
_PCD
 < 0xfffc ) { \

3641 
UINT8
 
›1
 = 
	`RM
(
_PCD
); \

3642 
UINT8
 
›2
 = 
	`RM
(
_PCD
+1); \

3643 if–(
›1
==0x7¯&& 
›2
==0xb5) || (op1==0x7d && op2==0xb4) ) \

3645 
UINT8
 
›3
 = 
	`RM
(
_PCD
+2); \

3646 
UINT8
 
›4
 = 
	`RM
(
_PCD
+3); \

3647 if–
›3
==0x20 && 
›4
==0xfb ) \

3649 
˙t
 = \

3650 
cc
[
Z80_TABLE_›
][0x7c] + \

3651 
cc
[
Z80_TABLE_›
][0xb5] + \

3652 
cc
[
Z80_TABLE_›
][0x20] + \

3653 
cc
[
Z80_TABLE_ex
][0x20]; \

3654  
_HL
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3656 
	`BURNODD
–
˙t
, 4, cnt ); \

3657 
_HL
--; \

3661 if–
›3
==0xc2 ) \

3663 
UINT8
 
ad1
 = 
	`RM
(
_PCD
+3); \

3664 
UINT8
 
ad2
 = 
	`RM
(
_PCD
+4); \

3665 if–(
ad1
 + 256 * 
ad2
Ë=(
_PCD
 - 1) ) \

3667 
˙t
 = \

3668 
cc
[
Z80_TABLE_›
][0x7c] + \

3669 
cc
[
Z80_TABLE_›
][0xb5] + \

3670 
cc
[
Z80_TABLE_›
][0xc2] + \

3671 
cc
[
Z80_TABLE_ex
][0xc2]; \

3672  
_HL
 > 0 && 
Z80_ICOUNT
 > 
˙t
 ) \

3674 
	`BURNODD
–
˙t
, 4, cnt ); \

3675 
_HL
--; \

3680 }

	)

3684 
	#CHECK_BC_LOOP


	)

3685 
	#CHECK_DE_LOOP


	)

3686 
	#CHECK_HL_LOOP


	)

3693 
	$OP
(
›
,00Ë{ 
	}
}

3694 
	$OP
(
›
,01Ë{ 
_BC
 = 
	`ARG16
(); 
	}
}

3695 
	$OP
(
›
,02Ë{ 
	`WM
–
_BC
, 
_A
 ); 
	}
}

3696 
	$OP
(
›
,03Ë{ 
_BC
++; 
	}
}

3697 
	$OP
(
›
,04Ë{ 
_B
 = 
	`INC
(_B); 
	}
}

3698 
	$OP
(
›
,05Ë{ 
_B
 = 
	`DEC
(_B); 
	}
}

3699 
	$OP
(
›
,06Ë{ 
_B
 = 
	`ARG
(); 
	}
}

3700 
	$OP
(
›
,07Ë{ 
RLCA
; 
	}
}

3702 
	$OP
(
›
,08Ë{ 
EX_AF
; 
	}
}

3703 
	$OP
(
›
,09Ë{ 
	`ADD16
(
HL
,
BC
); 
	}
}

3704 
	$OP
(
›
,0aË{ 
_A
 = 
	`RM
(
_BC
); 
	}
}

3705 
	$OP
(
›
,0bË{ 
_BC
--; 
CHECK_BC_LOOP
; 
	}
}

3706 
	$OP
(
›
,0cË{ 
_C
 = 
	`INC
(_C); 
	}
}

3707 
	$OP
(
›
,0dË{ 
_C
 = 
	`DEC
(_C); 
	}
}

3708 
	$OP
(
›
,0eË{ 
_C
 = 
	`ARG
(); 
	}
}

3709 
	$OP
(
›
,0fË{ 
RRCA
; 
	}
}

3711 
	$OP
(
›
,10Ë{ 
_B
--; 
	`JR_COND
–_B, 0x10 ); 
	}
}

3712 
	$OP
(
›
,11Ë{ 
_DE
 = 
	`ARG16
(); 
	}
}

3713 
	$OP
(
›
,12Ë{ 
	`WM
–
_DE
, 
_A
 ); 
	}
}

3714 
	$OP
(
›
,13Ë{ 
_DE
++; 
	}
}

3715 
	$OP
(
›
,14Ë{ 
_D
 = 
	`INC
(_D); 
	}
}

3716 
	$OP
(
›
,15Ë{ 
_D
 = 
	`DEC
(_D); 
	}
}

3717 
	$OP
(
›
,16Ë{ 
_D
 = 
	`ARG
(); 
	}
}

3718 
	$OP
(
›
,17Ë{ 
RLA
; 
	}
}

3720 
	$OP
(
›
,18Ë{ 
	`JR
(); 
	}
}

3721 
	$OP
(
›
,19Ë{ 
	`ADD16
(
HL
,
DE
); 
	}
}

3722 
	$OP
(
›
,1aË{ 
_A
 = 
	`RM
(
_DE
); 
	}
}

3723 
	$OP
(
›
,1bË{ 
_DE
--; 
CHECK_DE_LOOP
; 
	}
}

3724 
	$OP
(
›
,1cË{ 
_E
 = 
	`INC
(_E); 
	}
}

3725 
	$OP
(
›
,1dË{ 
_E
 = 
	`DEC
(_E); 
	}
}

3726 
	$OP
(
›
,1eË{ 
_E
 = 
	`ARG
(); 
	}
}

3727 
	$OP
(
›
,1fË{ 
RRA
; 
	}
}

3729 
	$OP
(
›
,20Ë{ 
	`JR_COND
–!(
_F
 & 
ZF
), 0x20 ); 
	}
}

3730 
	$OP
(
›
,21Ë{ 
_HL
 = 
	`ARG16
(); 
	}
}

3731 
	$OP
(
›
,22Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM16
–Z80.EA, &Z80.
HL
 ); 
	}
}

3732 
	$OP
(
›
,23Ë{ 
_HL
++; 
	}
}

3733 
	$OP
(
›
,24Ë{ 
_H
 = 
	`INC
(_H); 
	}
}

3734 
	$OP
(
›
,25Ë{ 
_H
 = 
	`DEC
(_H); 
	}
}

3735 
	$OP
(
›
,26Ë{ 
_H
 = 
	`ARG
(); 
	}
}

3736 
	$OP
(
›
,27Ë{ 
DAA
; 
	}
}

3738 
	$OP
(
›
,28Ë{ 
	`JR_COND
–
_F
 & 
ZF
, 0x28 ); 
	}
}

3739 
	$OP
(
›
,29Ë{ 
	`ADD16
(
HL
,HL); 
	}
}

3740 
	$OP
(
›
,2aË{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`RM16
–Z80.EA, &Z80.
HL
 ); 
	}
}

3741 
	$OP
(
›
,2bË{ 
_HL
--; 
CHECK_HL_LOOP
; 
	}
}

3742 
	$OP
(
›
,2cË{ 
_L
 = 
	`INC
(_L); 
	}
}

3743 
	$OP
(
›
,2dË{ 
_L
 = 
	`DEC
(_L); 
	}
}

3744 
	$OP
(
›
,2eË{ 
_L
 = 
	`ARG
(); 
	}
}

3745 
	$OP
(
›
,2fË{ 
_A
 ^0xff; 
_F
 = (_F&(
SF
|
ZF
|
PF
|
CF
))|
HF
|
NF
|(_A&(
YF
|
XF
)); 
	}
}

3747 
	$OP
(
›
,30Ë{ 
	`JR_COND
–!(
_F
 & 
CF
), 0x30 ); 
	}
}

3748 
	$OP
(
›
,31Ë{ 
_SP
 = 
	`ARG16
(); 
	}
}

3749 
	$OP
(
›
,32Ë{ 
Z80
.
EA
 = 
	`ARG16
(); 
	`WM
–Z80.EA, 
_A
 ); 
	}
}

3750 
	$OP
(
›
,33Ë{ 
_SP
++; 
	}
}

3751 
	$OP
(
›
,34Ë{ 
	`WM
–
_HL
, 
	`INC
(
	`RM
(_HL)Ë); 
	}
}

3752 
	$OP
(
›
,35Ë{ 
	`WM
–
_HL
, 
	`DEC
(
	`RM
(_HL)Ë); 
	}
}

3753 
	$OP
(
›
,36Ë{ 
	`WM
–
_HL
, 
	`ARG
(Ë); 
	}
}

3754 
	$OP
(
›
,37Ë{ 
_F
 = (_F & (
SF
|
ZF
|
PF
)Ë| 
CF
 | (
_A
 & (
YF
|
XF
)); 
	}
}

3756 
	$OP
(
›
,38Ë{ 
	`JR_COND
–
_F
 & 
CF
, 0x38 ); 
	}
}

3757 
	$OP
(
›
,39Ë{ 
	`ADD16
(
HL
,
SP
); 
	}
}

3758 
	$OP
(
›
,3aË{ 
Z80
.
EA
 = 
	`ARG16
(); 
_A
 = 
	`RM
–Z80.EA ); 
	}
}

3759 
	$OP
(
›
,3bË{ 
_SP
--; 
	}
}

3760 
	$OP
(
›
,3cË{ 
_A
 = 
	`INC
(_A); 
	}
}

3761 
	$OP
(
›
,3dË{ 
_A
 = 
	`DEC
(_A); 
	}
}

3762 
	$OP
(
›
,3eË{ 
_A
 = 
	`ARG
(); 
	}
}

3763 
	$OP
(
›
,3fË{ 
_F
 = ((_F&(
SF
|
ZF
|
PF
|
CF
))|((_F&CF)<<4)|(
_A
&(
YF
|
XF
)))^CF; 
	}
}

3766 
	$OP
(
›
,40Ë{ 
	}
}

3767 
	$OP
(
›
,41Ë{ 
_B
 = 
_C
; 
	}
}

3768 
	$OP
(
›
,42Ë{ 
_B
 = 
_D
; 
	}
}

3769 
	$OP
(
›
,43Ë{ 
_B
 = 
_E
; 
	}
}

3770 
	$OP
(
›
,44Ë{ 
_B
 = 
_H
; 
	}
}

3771 
	$OP
(
›
,45Ë{ 
_B
 = 
_L
; 
	}
}

3772 
	$OP
(
›
,46Ë{ 
_B
 = 
	`RM
(
_HL
); 
	}
}

3773 
	$OP
(
›
,47Ë{ 
_B
 = 
_A
; 
	}
}

3775 
	$OP
(
›
,48Ë{ 
_C
 = 
_B
; 
	}
}

3776 
	$OP
(
›
,49Ë{ 
	}
}

3777 
	$OP
(
›
,4aË{ 
_C
 = 
_D
; 
	}
}

3778 
	$OP
(
›
,4bË{ 
_C
 = 
_E
; 
	}
}

3779 
	$OP
(
›
,4cË{ 
_C
 = 
_H
; 
	}
}

3780 
	$OP
(
›
,4dË{ 
_C
 = 
_L
; 
	}
}

3781 
	$OP
(
›
,4eË{ 
_C
 = 
	`RM
(
_HL
); 
	}
}

3782 
	$OP
(
›
,4fË{ 
_C
 = 
_A
; 
	}
}

3784 
	$OP
(
›
,50Ë{ 
_D
 = 
_B
; 
	}
}

3785 
	$OP
(
›
,51Ë{ 
_D
 = 
_C
; 
	}
}

3786 
	$OP
(
›
,52Ë{ 
	}
}

3787 
	$OP
(
›
,53Ë{ 
_D
 = 
_E
; 
	}
}

3788 
	$OP
(
›
,54Ë{ 
_D
 = 
_H
; 
	}
}

3789 
	$OP
(
›
,55Ë{ 
_D
 = 
_L
; 
	}
}

3790 
	$OP
(
›
,56Ë{ 
_D
 = 
	`RM
(
_HL
); 
	}
}

3791 
	$OP
(
›
,57Ë{ 
_D
 = 
_A
; 
	}
}

3793 
	$OP
(
›
,58Ë{ 
_E
 = 
_B
; 
	}
}

3794 
	$OP
(
›
,59Ë{ 
_E
 = 
_C
; 
	}
}

3795 
	$OP
(
›
,5aË{ 
_E
 = 
_D
; 
	}
}

3796 
	$OP
(
›
,5bË{ 
	}
}

3797 
	$OP
(
›
,5cË{ 
_E
 = 
_H
; 
	}
}

3798 
	$OP
(
›
,5dË{ 
_E
 = 
_L
; 
	}
}

3799 
	$OP
(
›
,5eË{ 
_E
 = 
	`RM
(
_HL
); 
	}
}

3800 
	$OP
(
›
,5fË{ 
_E
 = 
_A
; 
	}
}

3802 
	$OP
(
›
,60Ë{ 
_H
 = 
_B
; 
	}
}

3803 
	$OP
(
›
,61Ë{ 
_H
 = 
_C
; 
	}
}

3804 
	$OP
(
›
,62Ë{ 
_H
 = 
_D
; 
	}
}

3805 
	$OP
(
›
,63Ë{ 
_H
 = 
_E
; 
	}
}

3806 
	$OP
(
›
,64Ë{ 
	}
}

3807 
	$OP
(
›
,65Ë{ 
_H
 = 
_L
; 
	}
}

3808 
	$OP
(
›
,66Ë{ 
_H
 = 
	`RM
(
_HL
); 
	}
}

3809 
	$OP
(
›
,67Ë{ 
_H
 = 
_A
; 
	}
}

3811 
	$OP
(
›
,68Ë{ 
_L
 = 
_B
; 
	}
}

3812 
	$OP
(
›
,69Ë{ 
_L
 = 
_C
; 
	}
}

3813 
	$OP
(
›
,6aË{ 
_L
 = 
_D
; 
	}
}

3814 
	$OP
(
›
,6bË{ 
_L
 = 
_E
; 
	}
}

3815 
	$OP
(
›
,6cË{ 
_L
 = 
_H
; 
	}
}

3816 
	$OP
(
›
,6dË{ 
	}
}

3817 
	$OP
(
›
,6eË{ 
_L
 = 
	`RM
(
_HL
); 
	}
}

3818 
	$OP
(
›
,6fË{ 
_L
 = 
_A
; 
	}
}

3820 
	$OP
(
›
,70Ë{ 
	`WM
–
_HL
, 
_B
 ); 
	}
}

3821 
	$OP
(
›
,71Ë{ 
	`WM
–
_HL
, 
_C
 ); 
	}
}

3822 
	$OP
(
›
,72Ë{ 
	`WM
–
_HL
, 
_D
 ); 
	}
}

3823 
	$OP
(
›
,73Ë{ 
	`WM
–
_HL
, 
_E
 ); 
	}
}

3824 
	$OP
(
›
,74Ë{ 
	`WM
–
_HL
, 
_H
 ); 
	}
}

3825 
	$OP
(
›
,75Ë{ 
	`WM
–
_HL
, 
_L
 ); 
	}
}

3826 
	$OP
(
›
,76Ë{ 
ENTER_HALT
; 
	}
}

3827 
	$OP
(
›
,77Ë{ 
	`WM
–
_HL
, 
_A
 ); 
	}
}

3829 
	$OP
(
›
,78Ë{ 
_A
 = 
_B
; 
	}
}

3830 
	$OP
(
›
,79Ë{ 
_A
 = 
_C
; 
	}
}

3831 
	$OP
(
›
,7aË{ 
_A
 = 
_D
; 
	}
}

3832 
	$OP
(
›
,7bË{ 
_A
 = 
_E
; 
	}
}

3833 
	$OP
(
›
,7cË{ 
_A
 = 
_H
; 
	}
}

3834 
	$OP
(
›
,7dË{ 
_A
 = 
_L
; 
	}
}

3835 
	$OP
(
›
,7eË{ 
_A
 = 
	`RM
(
_HL
); 
	}
}

3836 
	$OP
(
›
,7fË{ 
	}
}

3838 
	$OP
(
›
,80Ë{ 
	`ADD
(
_B
); 
	}
}

3839 
	$OP
(
›
,81Ë{ 
	`ADD
(
_C
); 
	}
}

3840 
	$OP
(
›
,82Ë{ 
	`ADD
(
_D
); 
	}
}

3841 
	$OP
(
›
,83Ë{ 
	`ADD
(
_E
); 
	}
}

3842 
	$OP
(
›
,84Ë{ 
	`ADD
(
_H
); 
	}
}

3843 
	$OP
(
›
,85Ë{ 
	`ADD
(
_L
); 
	}
}

3844 
	$OP
(
›
,86Ë{ 
	`ADD
(
	`RM
(
_HL
)); 
	}
}

3845 
	$OP
(
›
,87Ë{ 
	`ADD
(
_A
); 
	}
}

3847 
	$OP
(
›
,88Ë{ 
	`ADC
(
_B
); 
	}
}

3848 
	$OP
(
›
,89Ë{ 
	`ADC
(
_C
); 
	}
}

3849 
	$OP
(
›
,8aË{ 
	`ADC
(
_D
); 
	}
}

3850 
	$OP
(
›
,8bË{ 
	`ADC
(
_E
); 
	}
}

3851 
	$OP
(
›
,8cË{ 
	`ADC
(
_H
); 
	}
}

3852 
	$OP
(
›
,8dË{ 
	`ADC
(
_L
); 
	}
}

3853 
	$OP
(
›
,8eË{ 
	`ADC
(
	`RM
(
_HL
)); 
	}
}

3854 
	$OP
(
›
,8fË{ 
	`ADC
(
_A
); 
	}
}

3856 
	$OP
(
›
,90Ë{ 
	`SUB
(
_B
); 
	}
}

3857 
	$OP
(
›
,91Ë{ 
	`SUB
(
_C
); 
	}
}

3858 
	$OP
(
›
,92Ë{ 
	`SUB
(
_D
); 
	}
}

3859 
	$OP
(
›
,93Ë{ 
	`SUB
(
_E
); 
	}
}

3860 
	$OP
(
›
,94Ë{ 
	`SUB
(
_H
); 
	}
}

3861 
	$OP
(
›
,95Ë{ 
	`SUB
(
_L
); 
	}
}

3862 
	$OP
(
›
,96Ë{ 
	`SUB
(
	`RM
(
_HL
)); 
	}
}

3863 
	$OP
(
›
,97Ë{ 
	`SUB
(
_A
); 
	}
}

3865 
	$OP
(
›
,98Ë{ 
	`SBC
(
_B
); 
	}
}

3866 
	$OP
(
›
,99Ë{ 
	`SBC
(
_C
); 
	}
}

3867 
	$OP
(
›
,9aË{ 
	`SBC
(
_D
); 
	}
}

3868 
	$OP
(
›
,9bË{ 
	`SBC
(
_E
); 
	}
}

3869 
	$OP
(
›
,9cË{ 
	`SBC
(
_H
); 
	}
}

3870 
	$OP
(
›
,9dË{ 
	`SBC
(
_L
); 
	}
}

3871 
	$OP
(
›
,9eË{ 
	`SBC
(
	`RM
(
_HL
)); 
	}
}

3872 
	$OP
(
›
,9fË{ 
	`SBC
(
_A
); 
	}
}

3874 
	$OP
(
›
,
a0
Ë{ 
	`AND
(
_B
); 
	}
}

3875 
	$OP
(
›
,
a1
Ë{ 
	`AND
(
_C
); 
	}
}

3876 
	$OP
(
›
,
a2
Ë{ 
	`AND
(
_D
); 
	}
}

3877 
	$OP
(
›
,
a3
Ë{ 
	`AND
(
_E
); 
	}
}

3878 
	$OP
(
›
,
a4
Ë{ 
	`AND
(
_H
); 
	}
}

3879 
	$OP
(
›
,
a5
Ë{ 
	`AND
(
_L
); 
	}
}

3880 
	$OP
(
›
,
a6
Ë{ 
	`AND
(
	`RM
(
_HL
)); 
	}
}

3881 
	$OP
(
›
,
a7
Ë{ 
	`AND
(
_A
); 
	}
}

3883 
	$OP
(
›
,
a8
Ë{ 
	`XOR
(
_B
); 
	}
}

3884 
	$OP
(
›
,
a9
Ë{ 
	`XOR
(
_C
); 
	}
}

3885 
	$OP
(
›
,
Ø
Ë{ 
	`XOR
(
_D
); 
	}
}

3886 
	$OP
(
›
,
ab
Ë{ 
	`XOR
(
_E
); 
	}
}

3887 
	$OP
(
›
,
ac
Ë{ 
	`XOR
(
_H
); 
	}
}

3888 
	$OP
(
›
,
ad
Ë{ 
	`XOR
(
_L
); 
	}
}

3889 
	$OP
(
›
,
´
Ë{ 
	`XOR
(
	`RM
(
_HL
)); 
	}
}

3890 
	$OP
(
›
,
af
Ë{ 
	`XOR
(
_A
); 
	}
}

3892 
	$OP
(
›
,
b0
Ë{ 
	`OR
(
_B
); 
	}
}

3893 
	$OP
(
›
,
b1
Ë{ 
	`OR
(
_C
); 
	}
}

3894 
	$OP
(
›
,
b2
Ë{ 
	`OR
(
_D
); 
	}
}

3895 
	$OP
(
›
,
b3
Ë{ 
	`OR
(
_E
); 
	}
}

3896 
	$OP
(
›
,
b4
Ë{ 
	`OR
(
_H
); 
	}
}

3897 
	$OP
(
›
,
b5
Ë{ 
	`OR
(
_L
); 
	}
}

3898 
	$OP
(
›
,
b6
Ë{ 
	`OR
(
	`RM
(
_HL
)); 
	}
}

3899 
	$OP
(
›
,
b7
Ë{ 
	`OR
(
_A
); 
	}
}

3901 
	$OP
(
›
,
b8
Ë{ 
	`CP
(
_B
); 
	}
}

3902 
	$OP
(
›
,
b9
Ë{ 
	`CP
(
_C
); 
	}
}

3903 
	$OP
(
›
,
ba
Ë{ 
	`CP
(
_D
); 
	}
}

3904 
	$OP
(
›
,
bb
Ë{ 
	`CP
(
_E
); 
	}
}

3905 
	$OP
(
›
,
bc
Ë{ 
	`CP
(
_H
); 
	}
}

3906 
	$OP
(
›
,
bd
Ë{ 
	`CP
(
_L
); 
	}
}

3907 
	$OP
(
›
,
be
Ë{ 
	`CP
(
	`RM
(
_HL
)); 
	}
}

3908 
	$OP
(
›
,
bf
Ë{ 
	`CP
(
_A
); 
	}
}

3910 
	$OP
(
›
,
c0
Ë{ 
	`RET_COND
–!(
_F
 & 
ZF
), 0xc0 ); 
	}
}

3911 
	$OP
(
›
,
c1
Ë{ 
	`POP
(
BC
); 
	}
}

3912 
	$OP
(
›
,
c2
Ë{ 
	`JP_COND
–!(
_F
 & 
ZF
Ë); 
	}
}

3913 
	$OP
(
›
,
c3
Ë{ 
JP
; 
	}
}

3914 
	$OP
(
›
,
c4
Ë{ 
	`CALL_COND
–!(
_F
 & 
ZF
), 0xc4 ); 
	}
}

3915 
	$OP
(
›
,
c5
Ë{ 
	`PUSH
–
BC
 ); 
	}
}

3916 
	$OP
(
›
,
c6
Ë{ 
	`ADD
(
	`ARG
()); 
	}
}

3917 
	$OP
(
›
,
c7
Ë{ 
	`RST
(0x00); 
	}
}

3919 
	$OP
(
›
,
c8
Ë{ 
	`RET_COND
–
_F
 & 
ZF
, 0xc8 ); 
	}
}

3920 
	$OP
(
›
,
c9
Ë{ 
	`POP
(
PC
); 
	`ch™ge_pc16
(
_PCD
); 
	}
}

3921 
	$OP
(
›
,
ˇ
Ë{ 
	`JP_COND
–
_F
 & 
ZF
 ); 
	}
}

3922 
	$OP
(
›
,
cb
Ë{ 
_R
++; 
	`EXEC
(cb,
	`ROP
()); 
	}
}

3923 
	$OP
(
›
,
cc
Ë{ 
	`CALL_COND
–
_F
 & 
ZF
, 0xc¯); 
	}
}

3924 
	$OP
(
›
,
cd
Ë{ 
	`CALL
(); 
	}
}

3925 
	$OP
(
›
,
˚
Ë{ 
	`ADC
(
	`ARG
()); 
	}
}

3926 
	$OP
(
›
,
cf
Ë{ 
	`RST
(0x08); 
	}
}

3928 
	$OP
(
›
,
d0
Ë{ 
	`RET_COND
–!(
_F
 & 
CF
), 0xd0 ); 
	}
}

3929 
	$OP
(
›
,
d1
Ë{ 
	`POP
(
DE
); 
	}
}

3930 
	$OP
(
›
,
d2
Ë{ 
	`JP_COND
–!(
_F
 & 
CF
Ë); 
	}
}

3931 
	$OP
(
›
,
d3
Ë{ 
n
 = 
	`ARG
(Ë| (
_A
 << 8); 
	`OUT
–n, _A ); 
	}
}

3932 
	$OP
(
›
,
d4
Ë{ 
	`CALL_COND
–!(
_F
 & 
CF
), 0xd4 ); 
	}
}

3933 
	$OP
(
›
,
d5
Ë{ 
	`PUSH
–
DE
 ); 
	}
}

3934 
	$OP
(
›
,
d6
Ë{ 
	`SUB
(
	`ARG
()); 
	}
}

3935 
	$OP
(
›
,
d7
Ë{ 
	`RST
(0x10); 
	}
}

3937 
	$OP
(
›
,
d8
Ë{ 
	`RET_COND
–
_F
 & 
CF
, 0xd8 ); 
	}
}

3938 
	$OP
(
›
,
d9
Ë{ 
EXX
; 
	}
}

3939 
	$OP
(
›
,
da
Ë{ 
	`JP_COND
–
_F
 & 
CF
 ); 
	}
}

3940 
	$OP
(
›
,
db
Ë{ 
n
 = 
	`ARG
(Ë| (
_A
 << 8); _A = 
	`IN
–¿); 
	}
}

3941 
	$OP
(
›
,
dc
Ë{ 
	`CALL_COND
–
_F
 & 
CF
, 0xd¯); 
	}
}

3942 
	$OP
(
›
,
dd
Ë{ 
_R
++; 
	`EXEC
(dd,
	`ROP
()); 
	}
}

3943 
	$OP
(
›
,
de
Ë{ 
	`SBC
(
	`ARG
()); 
	}
}

3944 
	$OP
(
›
,
df
Ë{ 
	`RST
(0x18); 
	}
}

3946 
	$OP
(
›
,
e0
Ë{ 
	`RET_COND
–!(
_F
 & 
PF
), 0xe0 ); 
	}
}

3947 
	$OP
(
›
,
e1
Ë{ 
	`POP
(
HL
); 
	}
}

3948 
	$OP
(
›
,
e2
Ë{ 
	`JP_COND
–!(
_F
 & 
PF
Ë); 
	}
}

3949 
	$OP
(
›
,
e3
Ë{ 
	`EXSP
(
HL
); 
	}
}

3950 
	$OP
(
›
,
e4
Ë{ 
	`CALL_COND
–!(
_F
 & 
PF
), 0xe4 ); 
	}
}

3951 
	$OP
(
›
,
e5
Ë{ 
	`PUSH
–
HL
 ); 
	}
}

3952 
	$OP
(
›
,
e6
Ë{ 
	`AND
(
	`ARG
()); 
	}
}

3953 
	$OP
(
›
,
e7
Ë{ 
	`RST
(0x20); 
	}
}

3955 
	$OP
(
›
,
e8
Ë{ 
	`RET_COND
–
_F
 & 
PF
, 0xe8 ); 
	}
}

3956 
	$OP
(
›
,
e9
Ë{ 
_PC
 = 
_HL
; 
	`ch™ge_pc16
(
_PCD
); 
	}
}

3957 
	$OP
(
›
,
ó
Ë{ 
	`JP_COND
–
_F
 & 
PF
 ); 
	}
}

3958 
	$OP
(
›
,
eb
Ë{ 
EX_DE_HL
; 
	}
}

3959 
	$OP
(
›
,
ec
Ë{ 
	`CALL_COND
–
_F
 & 
PF
, 0xe¯); 
	}
}

3960 
	$OP
(
›
,
ed
Ë{ 
_R
++; 
	`EXEC
”d,
	`ROP
()); 
	}
}

3961 
	$OP
(
›
,
ì
Ë{ 
	`XOR
(
	`ARG
()); 
	}
}

3962 
	$OP
(
›
,
ef
Ë{ 
	`RST
(0x28); 
	}
}

3964 
	$OP
(
›
,
f0
Ë{ 
	`RET_COND
–!(
_F
 & 
SF
), 0xf0 ); 
	}
}

3965 
	$OP
(
›
,
f1
Ë{ 
	`POP
(
AF
); 
	}
}

3966 
	$OP
(
›
,
f2
Ë{ 
	`JP_COND
–!(
_F
 & 
SF
Ë); 
	}
}

3967 
	$OP
(
›
,
f3
Ë{ 
_IFF1
 = 
_IFF2
 = 0; 
	}
}

3968 
	$OP
(
›
,
f4
Ë{ 
	`CALL_COND
–!(
_F
 & 
SF
), 0xf4 ); 
	}
}

3969 
	$OP
(
›
,
f5
Ë{ 
	`PUSH
–
AF
 ); 
	}
}

3970 
	$OP
(
›
,
f6
Ë{ 
	`OR
(
	`ARG
()); 
	}
}

3971 
	$OP
(
›
,
f7
Ë{ 
	`RST
(0x30); 
	}
}

3973 
	$OP
(
›
,
f8
Ë{ 
	`RET_COND
–
_F
 & 
SF
, 0xf8 ); 
	}
}

3974 
	$OP
(
›
,
f9
Ë{ 
_SP
 = 
_HL
; 
	}
}

3975 
	$OP
(
›
,
Á
Ë{ 
	`JP_COND
(
_F
 & 
SF
); 
	}
}

3976 
	$OP
(
›
,
fb
Ë{ 
EI
; 
	}
}

3977 
	$OP
(
›
,
fc
Ë{ 
	`CALL_COND
–
_F
 & 
SF
, 0xf¯); 
	}
}

3978 
	$OP
(
›
,
fd
Ë{ 
_R
++; 
	`EXEC
(fd,
	`ROP
()); 
	}
}

3979 
	$OP
(
›
,
„
Ë{ 
	`CP
(
	`ARG
()); 
	}
}

3980 
	$OP
(
›
,
ff
Ë{ 
	`RST
(0x38); 
	}
}

3983 
	$èke_öãºu±
()

3985 if–
_IFF1
 )

3987 
úq_ve˘‹
;

3990 
_PPC
 = -1;

3993 
LEAVE_HALT
;

3995 if–
Z80
.
úq_max
 )

3997 if–
Z80
.
ªque°_úq
 >= 0 )

4000 
_IFF1
 = 
_IFF2
 = 0;

4001 
úq_ve˘‹
 = 
Z80
.
úq
[Z80.
ªque°_úq
].
	`öãºu±_íåy
(Z80.úq[Z80.ªque°_úq].
úq_∑øm
);

4002 
	`LOG
(("Z80 #%d daisy chaö irq_ve˘‹ $%02x\n", 
	`˝u_gëa˘ive˝u
(), 
úq_ve˘‹
));

4003 
Z80
.
ªque°_úq
 = -1;

4009 
_IFF1
 = 
_IFF2
 = 0;

4011 
úq_ve˘‹
 = (*
Z80
.
úq_ˇŒback
)(0);

4012 
	`LOG
(("Z80 #%d sögÀ i¡. irq_ve˘‹ $%02x\n", 
	`˝u_gëa˘ive˝u
(), 
úq_ve˘‹
));

4016 if–
_IM
 == 2 )

4018 
úq_ve˘‹
 = (úq_ve˘‹ & 0xffË| (
_I
 << 8);

4019 
	`PUSH
–
PC
 );

4020 
	`RM16
–
úq_ve˘‹
, &
Z80
.
PC
 );

4021 
	`LOG
(("Z80 #%d IM2 [$%04x] = $%04x\n",
	`˝u_gëa˘ive˝u
(Ë, 
úq_ve˘‹
, 
_PCD
));

4023 
Z80
.
exåa_cy˛es
 +
cc
[
Z80_TABLE_›
][0xcd];

4027 if–
_IM
 == 1 )

4029 
	`LOG
(("Z80 #%d IM1 $0038\n",
	`˝u_gëa˘ive˝u
() ));

4030 
	`PUSH
–
PC
 );

4031 
_PCD
 = 0x0038;

4033 
Z80
.
exåa_cy˛es
 +
cc
[
Z80_TABLE_›
][0xff] + cc[
Z80_TABLE_ex
][0xff];

4040 
	`LOG
(("Z80 #%d IM0 $%04x\n",
	`˝u_gëa˘ive˝u
(Ë, 
úq_ve˘‹
));

4041 
úq_ve˘‹
 & 0xff0000)

4044 
	`PUSH
–
PC
 );

4045 
_PCD
 = 
úq_ve˘‹
 & 0xffff;

4047 
Z80
.
exåa_cy˛es
 +
cc
[
Z80_TABLE_›
][0xcd] + cc[
Z80_TABLE_ex
][0xff];

4050 
_PCD
 = 
úq_ve˘‹
 & 0xffff;

4052 
Z80
.
exåa_cy˛es
 +
cc
[
Z80_TABLE_›
][0xc3] + cc[
Z80_TABLE_ex
][0xff];

4055 
	`PUSH
–
PC
 );

4056 
_PCD
 = 
úq_ve˘‹
 & 0x0038;

4058 
Z80
.
exåa_cy˛es
 +
cc
[
Z80_TABLE_›
][
_PCD
] + cc[
Z80_TABLE_ex
][_PCD];

4062 
	`ch™ge_pc16
(
_PCD
);

4064 
	}
}

4069 #ifde‡
Z80_MSX


4070 
	$z80_msx_öô
()

4072 
	$z80_öô
()

4078 
i
, 
p
;

4079 #i‡
BIG_FLAGS_ARRAY


4080 if–!
SZHVC_add
 || !
SZHVC_sub
 )

4082 
ﬁdvÆ
, 
√wvÆ
, 
vÆ
;

4083 
UINT8
 *
∑dd
, *
∑dc
, *
psub
, *
psbc
;

4085 
SZHVC_add
 = (
UINT8
 *)
	`mÆloc
(2*256*256);

4086 
SZHVC_sub
 = (
UINT8
 *)
	`mÆloc
(2*256*256);

4087 if–!
SZHVC_add
 || !
SZHVC_sub
 )

4089 
	`LOG
(("Z80: failedÅoállocate 2 * 128K flagsárrays!!!\n"));

4090 
	`øi£
(
SIGABRT
);

4092 
∑dd
 = &
SZHVC_add
[ 0*256];

4093 
∑dc
 = &
SZHVC_add
[256*256];

4094 
psub
 = &
SZHVC_sub
[ 0*256];

4095 
psbc
 = &
SZHVC_sub
[256*256];

4096 
ﬁdvÆ
 = 0; oldval < 256; oldval++)

4098 
√wvÆ
 = 0;Çewval < 256;Çewval++)

4101 
vÆ
 = 
√wvÆ
 - 
ﬁdvÆ
;

4102 *
∑dd
 = (
√wvÆ
Ë? (“ewvÆ & 0x80Ë? 
SF
 : 0Ë: 
ZF
;

4103 #i‡
Z80_EXACT


4104 *
∑dd
 |(
√wvÆ
 & (
YF
 | 
XF
));

4106 if–(
√wvÆ
 & 0x0fË< (
ﬁdvÆ
 & 0x0fËË*
∑dd
 |
HF
;

4107 if–
√wvÆ
 < 
ﬁdvÆ
 ) *
∑dd
 |
CF
;

4108 if–(
vÆ
^
ﬁdvÆ
^0x80Ë& (vÆ^
√wvÆ
Ë& 0x80 ) *
∑dd
 |
VF
;

4109 
∑dd
++;

4112 
vÆ
 = 
√wvÆ
 - 
ﬁdvÆ
 - 1;

4113 *
∑dc
 = (
√wvÆ
Ë? (“ewvÆ & 0x80Ë? 
SF
 : 0Ë: 
ZF
;

4114 #i‡
Z80_EXACT


4115 *
∑dc
 |(
√wvÆ
 & (
YF
 | 
XF
));

4117 if–(
√wvÆ
 & 0x0fË<(
ﬁdvÆ
 & 0x0fËË*
∑dc
 |
HF
;

4118 if–
√wvÆ
 <
ﬁdvÆ
 ) *
∑dc
 |
CF
;

4119 if–(
vÆ
^
ﬁdvÆ
^0x80Ë& (vÆ^
√wvÆ
Ë& 0x80 ) *
∑dc
 |
VF
;

4120 
∑dc
++;

4123 
vÆ
 = 
ﬁdvÆ
 - 
√wvÆ
;

4124 *
psub
 = 
NF
 | ((
√wvÆ
Ë? (“ewvÆ & 0x80Ë? 
SF
 : 0Ë: 
ZF
);

4125 #i‡
Z80_EXACT


4126 *
psub
 |(
√wvÆ
 & (
YF
 | 
XF
));

4128 if–(
√wvÆ
 & 0x0fË> (
ﬁdvÆ
 & 0x0fËË*
psub
 |
HF
;

4129 if–
√wvÆ
 > 
ﬁdvÆ
 ) *
psub
 |
CF
;

4130 if–(
vÆ
^
ﬁdvÆ
Ë& (ﬁdvÆ^
√wvÆ
Ë& 0x80 ) *
psub
 |
VF
;

4131 
psub
++;

4134 
vÆ
 = 
ﬁdvÆ
 - 
√wvÆ
 - 1;

4135 *
psbc
 = 
NF
 | ((
√wvÆ
Ë? (“ewvÆ & 0x80Ë? 
SF
 : 0Ë: 
ZF
);

4136 #i‡
Z80_EXACT


4137 *
psbc
 |(
√wvÆ
 & (
YF
 | 
XF
));

4139 if–(
√wvÆ
 & 0x0fË>(
ﬁdvÆ
 & 0x0fËË*
psbc
 |
HF
;

4140 if–
√wvÆ
 >
ﬁdvÆ
 ) *
psbc
 |
CF
;

4141 if–(
vÆ
^
ﬁdvÆ
Ë& (ﬁdvÆ^
√wvÆ
Ë& 0x80 ) *
psbc
 |
VF
;

4142 
psbc
++;

4147 
i
 = 0; i < 256; i++)

4149 
p
 = 0;

4150 if–
i
&0x01 ) ++
p
;

4151 if–
i
&0x02 ) ++
p
;

4152 if–
i
&0x04 ) ++
p
;

4153 if–
i
&0x08 ) ++
p
;

4154 if–
i
&0x10 ) ++
p
;

4155 if–
i
&0x20 ) ++
p
;

4156 if–
i
&0x40 ) ++
p
;

4157 if–
i
&0x80 ) ++
p
;

4158 
SZ
[
i
] = i ? i & 
SF
 : 
ZF
;

4159 #i‡
Z80_EXACT


4160 
SZ
[
i
] |(ò& (
YF
 | 
XF
));

4162 
SZ_BIT
[
i
] = i ? i & 
SF
 : 
ZF
 | 
PF
;

4163 #i‡
Z80_EXACT


4164 
SZ_BIT
[
i
] |(ò& (
YF
 | 
XF
));

4166 
SZP
[
i
] = 
SZ
[i] | ((
p
 & 1Ë? 0 : 
PF
);

4167 
SZHV_öc
[
i
] = 
SZ
[i];

4168 if–
i
 =0x80 ) 
SZHV_öc
[i] |
VF
;

4169 if–(
i
 & 0x0fË=0x00 ) 
SZHV_öc
[i] |
HF
;

4170 
SZHV_dec
[
i
] = 
SZ
[i] | 
NF
;

4171 if–
i
 =0x7‡Ë
SZHV_dec
[i] |
VF
;

4172 if–(
i
 & 0x0fË=0x0‡Ë
SZHV_dec
[i] |
HF
;

4202 
	}
}

4207 #ifde‡
Z80_MSX


4208 
	$z80_msx_ª£t
(*
∑øm
)

4210 
	$z80_ª£t
(*
∑øm
)

4213 
Z80_DaisyChaö
 *
daisy_chaö
 = (Z80_DaisyChaö *)
∑øm
;

4214 
	`mem£t
(&
Z80
, 0, (Z80));

4215 
_IX
 = 
_IY
 = 0xffff;

4216 
_F
 = 
ZF
;

4217 
Z80
.
ªque°_úq
 = -1;

4218 
Z80
.
£rvi˚_úq
 = -1;

4219 
Z80
.
nmi_°©e
 = 
CLEAR_LINE
;

4220 
Z80
.
úq_°©e
 = 
CLEAR_LINE
;

4222 if–
daisy_chaö
 )

4224  
daisy_chaö
->
úq_∑øm
 !-1 && 
Z80
.
úq_max
 < 
Z80_MAXDAISY
 )

4227 
Z80
.
úq
[Z80.
úq_max
] = *
daisy_chaö
;

4229 if–
Z80
.
úq
[Z80.
úq_max
].
ª£t
 )

4230 
Z80
.
úq
[Z80.
úq_max
].
	`ª£t
(Z80.úq[Z80.úq_max].
úq_∑øm
);

4231 
Z80
.
úq_max
++;

4232 
daisy_chaö
++;

4236 
	`ch™ge_pc16
(
_PCD
);

4237 
	}
}

4239 #ifde‡
Z80_MSX


4240 
	$z80_msx_exô
()

4242 
	$z80_exô
()

4245 #i‡
BIG_FLAGS_ARRAY


4246 i‡(
SZHVC_add
Ë
	`‰ì
(SZHVC_add);

4247 
SZHVC_add
 = 
NULL
;

4248 i‡(
SZHVC_sub
Ë
	`‰ì
(SZHVC_sub);

4249 
SZHVC_sub
 = 
NULL
;

4251 
	}
}

4256 #ifde‡
Z80_MSX


4257 
	$z80_msx_execuã
(
cy˛es
)

4259 
	$z80_execuã
(
cy˛es
)

4262 
Z80_ICOUNT
 = 
cy˛es
 - 
Z80
.
exåa_cy˛es
;

4263 
Z80
.
exåa_cy˛es
 = 0;

4267 
_PPC
 = 
_PCD
;

4269 
_R
++;

4270 
	`EXEC_INLINE
(
›
,
	`ROP
());

4271 }  
Z80_ICOUNT
 > 0 );

4273 
Z80_ICOUNT
 -
Z80
.
exåa_cy˛es
;

4274 
Z80
.
exåa_cy˛es
 = 0;

4276  
cy˛es
 - 
Z80_ICOUNT
;

4277 
	}
}

4282 #ifde‡
Z80_MSX


4283 
	$z80_msx_bu∫
(
cy˛es
)

4285 
	$z80_bu∫
(
cy˛es
)

4288 if–
cy˛es
 > 0 )

4291 
n
 = (
cy˛es
 + 3) / 4;

4292 
_R
 +
n
;

4293 
Z80_ICOUNT
 -4 * 
n
;

4295 
	}
}

4300 #ifde‡
Z80_MSX


4301 
	$z80_msx_gë_c⁄ãxt
 (*
d°
)

4303 
	$z80_gë_c⁄ãxt
 (*
d°
)

4306 if–
d°
 )

4307 *(
Z80_Regs
*)
d°
 = 
Z80
;

4308  (
Z80_Regs
);

4309 
	}
}

4314 #ifde‡
Z80_MSX


4315 
	$z80_msx_£t_c⁄ãxt
 (*
§c
)

4317 
	$z80_£t_c⁄ãxt
 (*
§c
)

4320 if–
§c
 )

4321 
Z80
 = *(
Z80_Regs
*)
§c
;

4322 
	`ch™ge_pc16
(
_PCD
);

4323 
	}
}

4328 #ifde‡
Z80_MSX


4329 c⁄° *
	$z80_msx_gë_cy˛e_èbÀ
 (
which
)

4331 c⁄° *
	$z80_gë_cy˛e_èbÀ
 (
which
)

4334 i‡(
which
 >0 && which <
Z80_TABLE_xycb
)

4335  
cc
[
which
];

4336  
NULL
;

4337 
	}
}

4342 #ifde‡
Z80_MSX


4343 
	$z80_msx_£t_cy˛e_èbÀ
 (
which
, *
√w_èbÀ
)

4345 
	$z80_£t_cy˛e_èbÀ
 (
which
, *
√w_èbÀ
)

4348 i‡(
which
 >0 && which <
Z80_TABLE_ex
)

4349 
cc
[
which
] = 
√w_èbÀ
;

4350 
	}
}

4355 #ifde‡
Z80_MSX


4356 
	$z80_msx_gë_ªg
 (
ªgnum
)

4358 
	$z80_gë_ªg
 (
ªgnum
)

4361  
ªgnum
 )

4363 
REG_PC
:  
_PCD
;

4364 
Z80_PC
:  
Z80
.
PC
.
w
.
l
;

4365 
REG_SP
:  
_SPD
;

4366 
Z80_SP
:  
Z80
.
SP
.
w
.
l
;

4367 
Z80_AF
:  
Z80
.
AF
.
w
.
l
;

4368 
Z80_BC
:  
Z80
.
BC
.
w
.
l
;

4369 
Z80_DE
:  
Z80
.
DE
.
w
.
l
;

4370 
Z80_HL
:  
Z80
.
HL
.
w
.
l
;

4371 
Z80_IX
:  
Z80
.
IX
.
w
.
l
;

4372 
Z80_IY
:  
Z80
.
IY
.
w
.
l
;

4373 
Z80_R
:  (
Z80
.
R
 & 0x7fË| (Z80.
R2
 & 0x80);

4374 
Z80_I
:  
Z80
.
I
;

4375 
Z80_AF2
:  
Z80
.
AF2
.
w
.
l
;

4376 
Z80_BC2
:  
Z80
.
BC2
.
w
.
l
;

4377 
Z80_DE2
:  
Z80
.
DE2
.
w
.
l
;

4378 
Z80_HL2
:  
Z80
.
HL2
.
w
.
l
;

4379 
Z80_IM
:  
Z80
.
IM
;

4380 
Z80_IFF1
:  
Z80
.
IFF1
;

4381 
Z80_IFF2
:  
Z80
.
IFF2
;

4382 
Z80_HALT
:  
Z80
.
HALT
;

4383 
Z80_NMI_STATE
:  
Z80
.
nmi_°©e
;

4384 
Z80_IRQ_STATE
:  
Z80
.
úq_°©e
;

4385 
Z80_DC0
:  
Z80
.
öt_°©e
[0];

4386 #i‡
Z80_MAXDAISY
 > 1

4387 
Z80_DC1
:  
Z80
.
öt_°©e
[1];

4388 
Z80_DC2
:  
Z80
.
öt_°©e
[2];

4389 
Z80_DC3
:  
Z80
.
öt_°©e
[3];

4391 
REG_PREVIOUSPC
:  
Z80
.
PREPC
.
w
.
l
;

4393 if–
ªgnum
 <
REG_SP_CONTENTS
 )

4395 
off£t
 = 
_SPD
 + 2 * (
REG_SP_CONTENTS
 - 
ªgnum
);

4396 if–
off£t
 < 0xffff )

4397  
	`RM
–
off£t
 ) | ( RM( offset + 1) << 8 );

4401 
	}
}

4406 #ifde‡
Z80_MSX


4407 
	$z80_msx_£t_ªg
 (
ªgnum
, 
vÆ
)

4409 
	$z80_£t_ªg
 (
ªgnum
, 
vÆ
)

4412  
ªgnum
 )

4414 
REG_PC
: 
_PC
 = 
vÆ
; 
	`ch™ge_pc16
(
_PCD
); ;

4415 
Z80_PC
: 
Z80
.
PC
.
w
.
l
 = 
vÆ
; ;

4416 
REG_SP
: 
_SP
 = 
vÆ
; ;

4417 
Z80_SP
: 
Z80
.
SP
.
w
.
l
 = 
vÆ
; ;

4418 
Z80_AF
: 
Z80
.
AF
.
w
.
l
 = 
vÆ
; ;

4419 
Z80_BC
: 
Z80
.
BC
.
w
.
l
 = 
vÆ
; ;

4420 
Z80_DE
: 
Z80
.
DE
.
w
.
l
 = 
vÆ
; ;

4421 
Z80_HL
: 
Z80
.
HL
.
w
.
l
 = 
vÆ
; ;

4422 
Z80_IX
: 
Z80
.
IX
.
w
.
l
 = 
vÆ
; ;

4423 
Z80_IY
: 
Z80
.
IY
.
w
.
l
 = 
vÆ
; ;

4424 
Z80_R
: 
Z80
.
R
 = 
vÆ
; Z80.
R2
 = val & 0x80; ;

4425 
Z80_I
: 
Z80
.
I
 = 
vÆ
; ;

4426 
Z80_AF2
: 
Z80
.
AF2
.
w
.
l
 = 
vÆ
; ;

4427 
Z80_BC2
: 
Z80
.
BC2
.
w
.
l
 = 
vÆ
; ;

4428 
Z80_DE2
: 
Z80
.
DE2
.
w
.
l
 = 
vÆ
; ;

4429 
Z80_HL2
: 
Z80
.
HL2
.
w
.
l
 = 
vÆ
; ;

4430 
Z80_IM
: 
Z80
.
IM
 = 
vÆ
; ;

4431 
Z80_IFF1
: 
Z80
.
IFF1
 = 
vÆ
; ;

4432 
Z80_IFF2
: 
Z80
.
IFF2
 = 
vÆ
; ;

4433 
Z80_HALT
: 
Z80
.
HALT
 = 
vÆ
; ;

4434 #ifde‡
Z80_MSX


4435 
Z80_NMI_STATE
: 
	`z80_msx_£t_úq_löe
(
IRQ_LINE_NMI
,
vÆ
); ;

4436 
Z80_IRQ_STATE
: 
	`z80_msx_£t_úq_löe
(0,
vÆ
); ;

4438 
Z80_NMI_STATE
: 
	`z80_£t_úq_löe
(
IRQ_LINE_NMI
,
vÆ
); ;

4439 
Z80_IRQ_STATE
: 
	`z80_£t_úq_löe
(0,
vÆ
); ;

4441 
Z80_DC0
: 
Z80
.
öt_°©e
[0] = 
vÆ
; ;

4442 #i‡
Z80_MAXDAISY
 > 1

4443 
Z80_DC1
: 
Z80
.
öt_°©e
[1] = 
vÆ
; ;

4444 
Z80_DC2
: 
Z80
.
öt_°©e
[2] = 
vÆ
; ;

4445 
Z80_DC3
: 
Z80
.
öt_°©e
[3] = 
vÆ
; ;

4448 if–
ªgnum
 <
REG_SP_CONTENTS
 )

4450 
off£t
 = 
_SPD
 + 2 * (
REG_SP_CONTENTS
 - 
ªgnum
);

4451 if–
off£t
 < 0xffff )

4453 
	`WM
–
off£t
, 
vÆ
 & 0xff );

4454 
	`WM
–
off£t
+1, (
vÆ
 >> 8) & 0xff );

4458 
	}
}

4463 #ifde‡
Z80_MSX


4464 
	$z80_msx_£t_úq_löe
(
úqlöe
, 
°©e
)

4466 
	$z80_£t_úq_löe
(
úqlöe
, 
°©e
)

4469 i‡(
úqlöe
 =
IRQ_LINE_NMI
)

4471 if–
Z80
.
nmi_°©e
 =
°©e
 ) ;

4473 
	`LOG
(("Z80 #%d së_úq_löê(NMIË%d\n", 
	`˝u_gëa˘ive˝u
(), 
°©e
));

4474 
Z80
.
nmi_°©e
 = 
°©e
;

4475 if–
°©e
 =
CLEAR_LINE
 ) ;

4477 
	`LOG
(("Z80 #%dÅakêNMI\n", 
	`˝u_gëa˘ive˝u
()));

4478 
_PPC
 = -1;

4479 
LEAVE_HALT
;

4481 
_IFF1
 = 0;

4482 
	`PUSH
–
PC
 );

4483 
_PCD
 = 0x0066;

4484 
Z80
.
exåa_cy˛es
 += 11;

4488 
	`LOG
(("Z80 #%d së_úq_löê%d\n",
	`˝u_gëa˘ive˝u
(Ë, 
°©e
));

4489 
Z80
.
úq_°©e
 = 
°©e
;

4490 if–
°©e
 =
CLEAR_LINE
 ) ;

4492 if–
Z80
.
úq_max
 )

4494 
daisychaö
, 
devi˚
, 
öt_°©e
;

4495 
daisychaö
 = (*
Z80
.
úq_ˇŒback
)(
úqlöe
);

4496 
devi˚
 = 
daisychaö
 >> 8;

4497 
öt_°©e
 = 
daisychaö
 & 0xff;

4498 
	`LOG
(("Z80 #%d daisy chaö $%04x -> devi˚ %d, sèã $%02x",
	`˝u_gëa˘ive˝u
(), 
daisychaö
, 
devi˚
, 
öt_°©e
));

4500 if–
Z80
.
öt_°©e
[
devi˚
] != int_state )

4502 
	`LOG
((" change\n"));

4504 
Z80
.
öt_°©e
[
devi˚
] = int_state;

4506 
Z80
.
ªque°_úq
 = Z80.
£rvi˚_úq
 = -1;

4509  
devi˚
 = 0 ; devi˚ < 
Z80
.
úq_max
 ; device ++ )

4512 if–
Z80
.
öt_°©e
[
devi˚
] & 
Z80_INT_IEO
 )

4514 
Z80
.
ªque°_úq
 = -1;

4515 
Z80
.
£rvi˚_úq
 = 
devi˚
;

4518 if–
Z80
.
öt_°©e
[
devi˚
] & 
Z80_INT_REQ
 )

4519 
Z80
.
ªque°_úq
 = 
devi˚
;

4521 
	`LOG
(("Z80 #%d daisy chaö sîvi˚_úq $%02x,Ñeque°_úq $%02x\n", 
	`˝u_gëa˘ive˝u
(), 
Z80
.
£rvi˚_úq
, Z80.
ªque°_úq
));

4522 if–
Z80
.
ªque°_úq
 < 0 ) ;

4526 
	`LOG
(("Ço change\n"));

4530 
	`èke_öãºu±
();

4532 
	}
}

4537 #ifde‡
Z80_MSX


4538 
	$z80_msx_£t_úq_ˇŒback
((*
ˇŒback
)())

4540 
	$z80_£t_úq_ˇŒback
((*
ˇŒback
)())

4543 
	`LOG
(("Z80 #%d së_úq_ˇŒback $%08x\n",
	`˝u_gëa˘ive˝u
(Ë, ()
ˇŒback
));

4544 
Z80
.
úq_ˇŒback
 = 
ˇŒback
;

4545 
	}
}

4550 #ifde‡
Z80_MSX


4551 c⁄° *
	$z80_msx_öfo
(*
c⁄ãxt
, 
ªgnum
)

4553 c⁄° *
	$z80_öfo
(*
c⁄ãxt
, 
ªgnum
)

4556 
buf„r
[32][47+1];

4557 
which
 = 0;

4558 
Z80_Regs
 *
r
 = 
c⁄ãxt
;

4560 
which
 = (which+1) % 32;

4561 
buf„r
[
which
][0] = '\0';

4562 if–!
c⁄ãxt
 )

4563 
r
 = &
Z80
;

4565  
ªgnum
 )

4567 
CPU_INFO_REG
+
Z80_PC
: 
	`•rötf
(
buf„r
[
which
], "PC:%04X", 
r
->
PC
.
w
.
l
); ;

4568 
CPU_INFO_REG
+
Z80_SP
: 
	`•rötf
(
buf„r
[
which
], "SP:%04X", 
r
->
SP
.
w
.
l
); ;

4569 
CPU_INFO_REG
+
Z80_AF
: 
	`•rötf
(
buf„r
[
which
], "AF:%04X", 
r
->
AF
.
w
.
l
); ;

4570 
CPU_INFO_REG
+
Z80_BC
: 
	`•rötf
(
buf„r
[
which
], "BC:%04X", 
r
->
BC
.
w
.
l
); ;

4571 
CPU_INFO_REG
+
Z80_DE
: 
	`•rötf
(
buf„r
[
which
], "DE:%04X", 
r
->
DE
.
w
.
l
); ;

4572 
CPU_INFO_REG
+
Z80_HL
: 
	`•rötf
(
buf„r
[
which
], "HL:%04X", 
r
->
HL
.
w
.
l
); ;

4573 
CPU_INFO_REG
+
Z80_IX
: 
	`•rötf
(
buf„r
[
which
], "IX:%04X", 
r
->
IX
.
w
.
l
); ;

4574 
CPU_INFO_REG
+
Z80_IY
: 
	`•rötf
(
buf„r
[
which
], "IY:%04X", 
r
->
IY
.
w
.
l
); ;

4575 
CPU_INFO_REG
+
Z80_R
: 
	`•rötf
(
buf„r
[
which
], "R:%02X", (
r
->
R
 & 0x7fË| (r->
R2
 & 0x80)); ;

4576 
CPU_INFO_REG
+
Z80_I
: 
	`•rötf
(
buf„r
[
which
], "I:%02X", 
r
->
I
); ;

4577 
CPU_INFO_REG
+
Z80_AF2
: 
	`•rötf
(
buf„r
[
which
], "AF'%04X", 
r
->
AF2
.
w
.
l
); ;

4578 
CPU_INFO_REG
+
Z80_BC2
: 
	`•rötf
(
buf„r
[
which
], "BC'%04X", 
r
->
BC2
.
w
.
l
); ;

4579 
CPU_INFO_REG
+
Z80_DE2
: 
	`•rötf
(
buf„r
[
which
], "DE'%04X", 
r
->
DE2
.
w
.
l
); ;

4580 
CPU_INFO_REG
+
Z80_HL2
: 
	`•rötf
(
buf„r
[
which
], "HL'%04X", 
r
->
HL2
.
w
.
l
); ;

4581 
CPU_INFO_REG
+
Z80_IM
: 
	`•rötf
(
buf„r
[
which
], "IM:%X", 
r
->
IM
); ;

4582 
CPU_INFO_REG
+
Z80_IFF1
: 
	`•rötf
(
buf„r
[
which
], "IFF1:%X", 
r
->
IFF1
); ;

4583 
CPU_INFO_REG
+
Z80_IFF2
: 
	`•rötf
(
buf„r
[
which
], "IFF2:%X", 
r
->
IFF2
); ;

4584 
CPU_INFO_REG
+
Z80_HALT
: 
	`•rötf
(
buf„r
[
which
], "HALT:%X", 
r
->
HALT
); ;

4585 
CPU_INFO_REG
+
Z80_NMI_STATE
: 
	`•rötf
(
buf„r
[
which
], "NMI:%X", 
r
->
nmi_°©e
); ;

4586 
CPU_INFO_REG
+
Z80_IRQ_STATE
: 
	`•rötf
(
buf„r
[
which
], "IRQ:%X", 
r
->
úq_°©e
); ;

4587 
CPU_INFO_REG
+
Z80_DC0
: if(
Z80
.
úq_max
 >1Ë
	`•rötf
(
buf„r
[
which
], "DC0:%X", 
r
->
öt_°©e
[0]); ;

4588 #i‡
Z80_MAXDAISY
 > 1

4589 
CPU_INFO_REG
+
Z80_DC1
: if(
Z80
.
úq_max
 >2Ë
	`•rötf
(
buf„r
[
which
], "DC1:%X", 
r
->
öt_°©e
[1]); ;

4590 
CPU_INFO_REG
+
Z80_DC2
: if(
Z80
.
úq_max
 >3Ë
	`•rötf
(
buf„r
[
which
], "DC2:%X", 
r
->
öt_°©e
[2]); ;

4591 
CPU_INFO_REG
+
Z80_DC3
: if(
Z80
.
úq_max
 >4Ë
	`•rötf
(
buf„r
[
which
], "DC3:%X", 
r
->
öt_°©e
[3]); ;

4593 
CPU_INFO_FLAGS
:

4594 
	`•rötf
(
buf„r
[
which
], "%c%c%c%c%c%c%c%c",

4595 
r
->
AF
.
b
.
l
 & 0x80 ? 'S':'.',

4596 
r
->
AF
.
b
.
l
 & 0x40 ? 'Z':'.',

4597 
r
->
AF
.
b
.
l
 & 0x20 ? '5':'.',

4598 
r
->
AF
.
b
.
l
 & 0x10 ? 'H':'.',

4599 
r
->
AF
.
b
.
l
 & 0x08 ? '3':'.',

4600 
r
->
AF
.
b
.
l
 & 0x04 ? 'P':'.',

4601 
r
->
AF
.
b
.
l
 & 0x02 ? 'N':'.',

4602 
r
->
AF
.
b
.
l
 & 0x01 ? 'C':'.');

4604 #ifde‡
Z80_MSX


4605 
CPU_INFO_NAME
:  "Z80-MSX";

4607 
CPU_INFO_NAME
:  "Z80";

4609 
CPU_INFO_FAMILY
:  "Zilog Z80";

4610 
CPU_INFO_VERSION
:  "3.3";

4611 
CPU_INFO_FILE
:  
__FILE__
;

4612 
CPU_INFO_CREDITS
:  "Copyright (C) 1998,1999 Juergen Buchmueller,állÑightsÑeserved.";

4613 
CPU_INFO_REG_LAYOUT
:  (c⁄° *)
z80_ªg_œyout
;

4614 
CPU_INFO_WIN_LAYOUT
:  (c⁄° *)
z80_wö_œyout
;

4616  
buf„r
[
which
];

4617 
	}
}

4619 #ifde‡
Z80_MSX


4620 
	$z80_msx_dasm
–*
buf„r
, 
pc
 )

4622 
	$z80_dasm
–*
buf„r
, 
pc
 )

4625 #ifde‡
MAME_DEBUG


4626  
	`DasmZ80
–
buf„r
, 
pc
 );

4628 
	`•rötf
–
buf„r
, "$%02X", 
	`RM
(
pc
) );

4631 
	}
}

	@src/mamez80/z80.h

1 #i‚de‡
Z80_H


2 
	#Z80_H


	)

4 #ifde‡
HAVE_CONFIG_H


5 
	~<c⁄fig.h
>

8 #i‚de‡
WORDS_BIGENDIAN


9 
	#LSB_FIRST


	)

13 
	~<°döt.h
>

14 
	#UINT8
 
uöt8_t


	)

15 
	#UINT16
 
uöt16_t


	)

16 
	#UINT32
 
uöt32_t


	)

17 
	#INT8
 
öt8_t


	)

18 
	#INT16
 
öt16_t


	)

19 
	#INT32
 
öt32_t


	)

20 #i‚de‡
INLINE


21 
	#INLINE
 
__ölöe__


	)

24 
	#CALL_MAME_DEBUG


	)

29 #ifde‡
LSB_FIRST


30 °ru˘ { 
UINT8
 
	ml
,
	mh
,
	mh2
,
	mh3
; } 
	mb
;

31 °ru˘ { 
UINT16
 
	ml
,
	mh
; } 
	mw
;

33 °ru˘ { 
UINT8
 
	mh3
,
	mh2
,
	mh
,
	ml
; } 
	mb
;

34 °ru˘ { 
UINT16
 
	mh
,
	ml
; } 
	mw
;

36 
UINT32
 
	md
;

37 } 
	tPAIR
;

41 (*
	mª£t
)();

42 (*
	möãºu±_íåy
)();

43 (*
	möãºu±_ªti
)();

44 
	múq_∑øm
;

45 } 
	tZ80_DaisyChaö
;

47 
	#Z80_MAXDAISY
 1

	)

49 
	#Z80_INT_REQ
 0x01

	)

50 
	#Z80_INT_IEO
 0x02

	)

52 
	#Z80_VECTOR
(
devi˚
,
°©e
Ë(((devi˚)<<8)|(°©e))

	)

56 
	mCLEAR_LINE
 = 0,

57 
	mASSERT_LINE
,

58 
	mHOLD_LINE
,

59 
	mPULSE_LINE
,

62 
	mINTERNAL_CLEAR_LINE
 = 100 + 
CLEAR_LINE
,

63 
	mINTERNAL_ASSERT_LINE
 = 100 + 
ASSERT_LINE
,

66 
	mMAX_IRQ_LINES
 = 16,

67 
	mIRQ_LINE_NMI
 = 127

72 
	mMAX_REGS
 = 128,

77 
	mREG_PREVIOUSPC
 = -1,

81 
	mREG_PC
 = -2,

85 
	mREG_SP
 = -3,

93 
	mREG_SP_CONTENTS
 = -4

97 
	#ch™ge_pc16
(
pc
Ë
Z80
.
PC
.
w
.
l
ıc;

	)

103 
	mCPU_INFO_REG
,

104 
	mCPU_INFO_FLAGS
 = 
MAX_REGS
,

105 
	mCPU_INFO_NAME
,

106 
	mCPU_INFO_FAMILY
,

107 
	mCPU_INFO_VERSION
,

108 
	mCPU_INFO_FILE
,

109 
	mCPU_INFO_CREDITS
,

110 
	mCPU_INFO_REG_LAYOUT
,

111 
	mCPU_INFO_WIN_LAYOUT


115 
	mZ80_PC
=1, 
	mZ80_SP
, 
	mZ80_AF
, 
	mZ80_BC
, 
	mZ80_DE
, 
	mZ80_HL
,

116 
	mZ80_IX
, 
	mZ80_IY
, 
	mZ80_AF2
, 
	mZ80_BC2
, 
	mZ80_DE2
, 
	mZ80_HL2
,

117 
	mZ80_R
, 
	mZ80_I
, 
	mZ80_IM
, 
	mZ80_IFF1
, 
	mZ80_IFF2
, 
	mZ80_HALT
,

118 
	mZ80_NMI_STATE
, 
	mZ80_IRQ_STATE
, 
	mZ80_DC0
, 
	mZ80_DC1
, 
	mZ80_DC2
, 
	mZ80_DC3


122 
	mZ80_TABLE_›
,

123 
	mZ80_TABLE_cb
,

124 
	mZ80_TABLE_ed
,

125 
	mZ80_TABLE_xy
,

126 
	mZ80_TABLE_xycb
,

127 
	mZ80_TABLE_ex


130 
z80_ICou¡
;

132 
z80_öô
();

133 
z80_ª£t
 (*
∑øm
);

134 
z80_exô
 ();

135 
z80_execuã
(
cy˛es
);

136 
z80_bu∫
(
cy˛es
);

137 
z80_gë_c⁄ãxt
 (*
d°
);

138 
z80_£t_c⁄ãxt
 (*
§c
);

139 c⁄° *
z80_gë_cy˛e_èbÀ
 (
which
);

140 
z80_£t_cy˛e_èbÀ
 (
which
, *
√w_tbl
);

141 
z80_gë_ªg
 (
ªgnum
);

142 
z80_£t_ªg
 (
ªgnum
, 
vÆ
);

143 
z80_£t_úq_löe
(
úqlöe
, 
°©e
);

144 
z80_£t_úq_ˇŒback
((*
úq_ˇŒback
)());

145 c⁄° *
	`z80_öfo
(*
c⁄ãxt
, 
ªgnum
);

146 
	`z80_dasm
(*
buf„r
, 
pc
);

150 
	`mame_z80_wrôemem16
(
UINT16
 
addr
,
UINT8
 
vÆ
);

151 
UINT8
 
	`mame_z80_ªadmem16
(
UINT16
 
addr
);

152 
UINT8
 
	`mame_z80_ªad›
(
UINT16
 
addr
);

153 
UINT8
 
	`mame_z80_ªad›_¨g
(
UINT16
 
addr
);

154 
UINT8
 
	`mame_z80_ªadp‹t16
(
UINT16
 
p‹t
);

155 
	`mame_z80_wrôï‹t16
(
UINT16
 
p‹t
,
UINT8
 
vÆue
);

157 #ifde‡
MAME_DEBUG


158 
	`DasmZ80
(*
buf„r
, 
pc
);

161 
uöt
 
z80_°©eD©aSize
;

162 
UINT8
 *
	`z80_°©eD©a
();

	@src/mamez80/z80daa.h

1 
UINT16
 
	gDAATabÀ
[0x800] = {

2 (0x00<<8Ë+
ZF
 +
VF
 ,

5 (0x03<<8Ë+
VF
 ,

7 (0x05<<8Ë+
VF
 ,

8 (0x06<<8Ë+
VF
 ,

10 (0x08<<8Ë+
XF
 ,

11 (0x09<<8Ë+
XF
+
VF
 ,

12 (0x10<<8Ë+
HF
 ,

13 (0x11<<8Ë+
HF
 +
VF
 ,

14 (0x12<<8Ë+
HF
 +
VF
 ,

15 (0x13<<8Ë+
HF
 ,

16 (0x14<<8Ë+
HF
 +
VF
 ,

17 (0x15<<8Ë+
HF
 ,

19 (0x11<<8Ë+
VF
 ,

20 (0x12<<8Ë+
VF
 ,

22 (0x14<<8Ë+
VF
 ,

25 (0x17<<8Ë+
VF
 ,

26 (0x18<<8Ë+
XF
+
VF
 ,

27 (0x19<<8Ë+
XF
 ,

28 (0x20<<8Ë+
YF
+
HF
 ,

29 (0x21<<8Ë+
YF
+
HF
 +
VF
 ,

30 (0x22<<8Ë+
YF
+
HF
 +
VF
 ,

31 (0x23<<8Ë+
YF
+
HF
 ,

32 (0x24<<8Ë+
YF
+
HF
 +
VF
 ,

33 (0x25<<8Ë+
YF
+
HF
 ,

34 (0x20<<8Ë+
YF
 ,

35 (0x21<<8Ë+
YF
 +
VF
 ,

36 (0x22<<8Ë+
YF
 +
VF
 ,

37 (0x23<<8Ë+
YF
 ,

38 (0x24<<8Ë+
YF
 +
VF
 ,

39 (0x25<<8Ë+
YF
 ,

40 (0x26<<8Ë+
YF
 ,

41 (0x27<<8Ë+
YF
 +
VF
 ,

42 (0x28<<8Ë+
YF
 +
XF
+
VF
 ,

43 (0x29<<8Ë+
YF
 +
XF
 ,

44 (0x30<<8Ë+
YF
+
HF
 +
VF
 ,

45 (0x31<<8Ë+
YF
+
HF
 ,

46 (0x32<<8Ë+
YF
+
HF
 ,

47 (0x33<<8Ë+
YF
+
HF
 +
VF
 ,

48 (0x34<<8Ë+
YF
+
HF
 ,

49 (0x35<<8Ë+
YF
+
HF
 +
VF
 ,

50 (0x30<<8Ë+
YF
 +
VF
 ,

51 (0x31<<8Ë+
YF
 ,

52 (0x32<<8Ë+
YF
 ,

53 (0x33<<8Ë+
YF
 +
VF
 ,

54 (0x34<<8Ë+
YF
 ,

55 (0x35<<8Ë+
YF
 +
VF
 ,

56 (0x36<<8Ë+
YF
 +
VF
 ,

57 (0x37<<8Ë+
YF
 ,

58 (0x38<<8Ë+
YF
 +
XF
 ,

59 (0x39<<8Ë+
YF
 +
XF
+
VF
 ,

60 (0x40<<8Ë+
HF
 ,

61 (0x41<<8Ë+
HF
 +
VF
 ,

62 (0x42<<8Ë+
HF
 +
VF
 ,

63 (0x43<<8Ë+
HF
 ,

64 (0x44<<8Ë+
HF
 +
VF
 ,

65 (0x45<<8Ë+
HF
 ,

67 (0x41<<8Ë+
VF
 ,

68 (0x42<<8Ë+
VF
 ,

70 (0x44<<8Ë+
VF
 ,

73 (0x47<<8Ë+
VF
 ,

74 (0x48<<8Ë+
XF
+
VF
 ,

75 (0x49<<8Ë+
XF
 ,

76 (0x50<<8Ë+
HF
 +
VF
 ,

77 (0x51<<8Ë+
HF
 ,

78 (0x52<<8Ë+
HF
 ,

79 (0x53<<8Ë+
HF
 +
VF
 ,

80 (0x54<<8Ë+
HF
 ,

81 (0x55<<8Ë+
HF
 +
VF
 ,

82 (0x50<<8Ë+
VF
 ,

85 (0x53<<8Ë+
VF
 ,

87 (0x55<<8Ë+
VF
 ,

88 (0x56<<8Ë+
VF
 ,

90 (0x58<<8Ë+
XF
 ,

91 (0x59<<8Ë+
XF
+
VF
 ,

92 (0x60<<8Ë+
YF
+
HF
 +
VF
 ,

93 (0x61<<8Ë+
YF
+
HF
 ,

94 (0x62<<8Ë+
YF
+
HF
 ,

95 (0x63<<8Ë+
YF
+
HF
 +
VF
 ,

96 (0x64<<8Ë+
YF
+
HF
 ,

97 (0x65<<8Ë+
YF
+
HF
 +
VF
 ,

98 (0x60<<8Ë+
YF
 +
VF
 ,

99 (0x61<<8Ë+
YF
 ,

100 (0x62<<8Ë+
YF
 ,

101 (0x63<<8Ë+
YF
 +
VF
 ,

102 (0x64<<8Ë+
YF
 ,

103 (0x65<<8Ë+
YF
 +
VF
 ,

104 (0x66<<8Ë+
YF
 +
VF
 ,

105 (0x67<<8Ë+
YF
 ,

106 (0x68<<8Ë+
YF
 +
XF
 ,

107 (0x69<<8Ë+
YF
 +
XF
+
VF
 ,

108 (0x70<<8Ë+
YF
+
HF
 ,

109 (0x71<<8Ë+
YF
+
HF
 +
VF
 ,

110 (0x72<<8Ë+
YF
+
HF
 +
VF
 ,

111 (0x73<<8Ë+
YF
+
HF
 ,

112 (0x74<<8Ë+
YF
+
HF
 +
VF
 ,

113 (0x75<<8Ë+
YF
+
HF
 ,

114 (0x70<<8Ë+
YF
 ,

115 (0x71<<8Ë+
YF
 +
VF
 ,

116 (0x72<<8Ë+
YF
 +
VF
 ,

117 (0x73<<8Ë+
YF
 ,

118 (0x74<<8Ë+
YF
 +
VF
 ,

119 (0x75<<8Ë+
YF
 ,

120 (0x76<<8Ë+
YF
 ,

121 (0x77<<8Ë+
YF
 +
VF
 ,

122 (0x78<<8Ë+
YF
 +
XF
+
VF
 ,

123 (0x79<<8Ë+
YF
 +
XF
 ,

124 (0x80<<8)+
SF
 +
HF
 ,

125 (0x81<<8)+
SF
 +
HF
 +
VF
 ,

126 (0x82<<8)+
SF
 +
HF
 +
VF
 ,

127 (0x83<<8)+
SF
 +
HF
 ,

128 (0x84<<8)+
SF
 +
HF
 +
VF
 ,

129 (0x85<<8)+
SF
 +
HF
 ,

130 (0x80<<8)+
SF
 ,

131 (0x81<<8)+
SF
 +
VF
 ,

132 (0x82<<8)+
SF
 +
VF
 ,

133 (0x83<<8)+
SF
 ,

134 (0x84<<8)+
SF
 +
VF
 ,

135 (0x85<<8)+
SF
 ,

136 (0x86<<8)+
SF
 ,

137 (0x87<<8)+
SF
 +
VF
 ,

138 (0x88<<8)+
SF
 +
XF
+
VF
 ,

139 (0x89<<8)+
SF
 +
XF
 ,

140 (0x90<<8)+
SF
 +
HF
 +
VF
 ,

141 (0x91<<8)+
SF
 +
HF
 ,

142 (0x92<<8)+
SF
 +
HF
 ,

143 (0x93<<8)+
SF
 +
HF
 +
VF
 ,

144 (0x94<<8)+
SF
 +
HF
 ,

145 (0x95<<8)+
SF
 +
HF
 +
VF
 ,

146 (0x90<<8)+
SF
 +
VF
 ,

147 (0x91<<8)+
SF
 ,

148 (0x92<<8)+
SF
 ,

149 (0x93<<8)+
SF
 +
VF
 ,

150 (0x94<<8)+
SF
 ,

151 (0x95<<8)+
SF
 +
VF
 ,

152 (0x96<<8)+
SF
 +
VF
 ,

153 (0x97<<8)+
SF
 ,

154 (0x98<<8)+
SF
 +
XF
 ,

155 (0x99<<8)+
SF
 +
XF
+
VF
 ,

156 (0x00<<8Ë+
ZF
 +
HF
 +
VF
 +
CF
,

157 (0x01<<8Ë+
HF
 +
CF
,

158 (0x02<<8Ë+
HF
 +
CF
,

159 (0x03<<8Ë+
HF
 +
VF
 +
CF
,

160 (0x04<<8Ë+
HF
 +
CF
,

161 (0x05<<8Ë+
HF
 +
VF
 +
CF
,

162 (0x00<<8Ë+
ZF
 +
VF
 +
CF
,

163 (0x01<<8Ë+
CF
,

164 (0x02<<8Ë+
CF
,

165 (0x03<<8Ë+
VF
 +
CF
,

166 (0x04<<8Ë+
CF
,

167 (0x05<<8Ë+
VF
 +
CF
,

168 (0x06<<8Ë+
VF
 +
CF
,

169 (0x07<<8Ë+
CF
,

170 (0x08<<8Ë+
XF
 +
CF
,

171 (0x09<<8Ë+
XF
+
VF
 +
CF
,

172 (0x10<<8Ë+
HF
 +
CF
,

173 (0x11<<8Ë+
HF
 +
VF
 +
CF
,

174 (0x12<<8Ë+
HF
 +
VF
 +
CF
,

175 (0x13<<8Ë+
HF
 +
CF
,

176 (0x14<<8Ë+
HF
 +
VF
 +
CF
,

177 (0x15<<8Ë+
HF
 +
CF
,

178 (0x10<<8Ë+
CF
,

179 (0x11<<8Ë+
VF
 +
CF
,

180 (0x12<<8Ë+
VF
 +
CF
,

181 (0x13<<8Ë+
CF
,

182 (0x14<<8Ë+
VF
 +
CF
,

183 (0x15<<8Ë+
CF
,

184 (0x16<<8Ë+
CF
,

185 (0x17<<8Ë+
VF
 +
CF
,

186 (0x18<<8Ë+
XF
+
VF
 +
CF
,

187 (0x19<<8Ë+
XF
 +
CF
,

188 (0x20<<8Ë+
YF
+
HF
 +
CF
,

189 (0x21<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

190 (0x22<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

191 (0x23<<8Ë+
YF
+
HF
 +
CF
,

192 (0x24<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

193 (0x25<<8Ë+
YF
+
HF
 +
CF
,

194 (0x20<<8Ë+
YF
 +
CF
,

195 (0x21<<8Ë+
YF
 +
VF
 +
CF
,

196 (0x22<<8Ë+
YF
 +
VF
 +
CF
,

197 (0x23<<8Ë+
YF
 +
CF
,

198 (0x24<<8Ë+
YF
 +
VF
 +
CF
,

199 (0x25<<8Ë+
YF
 +
CF
,

200 (0x26<<8Ë+
YF
 +
CF
,

201 (0x27<<8Ë+
YF
 +
VF
 +
CF
,

202 (0x28<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

203 (0x29<<8Ë+
YF
 +
XF
 +
CF
,

204 (0x30<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

205 (0x31<<8Ë+
YF
+
HF
 +
CF
,

206 (0x32<<8Ë+
YF
+
HF
 +
CF
,

207 (0x33<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

208 (0x34<<8Ë+
YF
+
HF
 +
CF
,

209 (0x35<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

210 (0x30<<8Ë+
YF
 +
VF
 +
CF
,

211 (0x31<<8Ë+
YF
 +
CF
,

212 (0x32<<8Ë+
YF
 +
CF
,

213 (0x33<<8Ë+
YF
 +
VF
 +
CF
,

214 (0x34<<8Ë+
YF
 +
CF
,

215 (0x35<<8Ë+
YF
 +
VF
 +
CF
,

216 (0x36<<8Ë+
YF
 +
VF
 +
CF
,

217 (0x37<<8Ë+
YF
 +
CF
,

218 (0x38<<8Ë+
YF
 +
XF
 +
CF
,

219 (0x39<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

220 (0x40<<8Ë+
HF
 +
CF
,

221 (0x41<<8Ë+
HF
 +
VF
 +
CF
,

222 (0x42<<8Ë+
HF
 +
VF
 +
CF
,

223 (0x43<<8Ë+
HF
 +
CF
,

224 (0x44<<8Ë+
HF
 +
VF
 +
CF
,

225 (0x45<<8Ë+
HF
 +
CF
,

226 (0x40<<8Ë+
CF
,

227 (0x41<<8Ë+
VF
 +
CF
,

228 (0x42<<8Ë+
VF
 +
CF
,

229 (0x43<<8Ë+
CF
,

230 (0x44<<8Ë+
VF
 +
CF
,

231 (0x45<<8Ë+
CF
,

232 (0x46<<8Ë+
CF
,

233 (0x47<<8Ë+
VF
 +
CF
,

234 (0x48<<8Ë+
XF
+
VF
 +
CF
,

235 (0x49<<8Ë+
XF
 +
CF
,

236 (0x50<<8Ë+
HF
 +
VF
 +
CF
,

237 (0x51<<8Ë+
HF
 +
CF
,

238 (0x52<<8Ë+
HF
 +
CF
,

239 (0x53<<8Ë+
HF
 +
VF
 +
CF
,

240 (0x54<<8Ë+
HF
 +
CF
,

241 (0x55<<8Ë+
HF
 +
VF
 +
CF
,

242 (0x50<<8Ë+
VF
 +
CF
,

243 (0x51<<8Ë+
CF
,

244 (0x52<<8Ë+
CF
,

245 (0x53<<8Ë+
VF
 +
CF
,

246 (0x54<<8Ë+
CF
,

247 (0x55<<8Ë+
VF
 +
CF
,

248 (0x56<<8Ë+
VF
 +
CF
,

249 (0x57<<8Ë+
CF
,

250 (0x58<<8Ë+
XF
 +
CF
,

251 (0x59<<8Ë+
XF
+
VF
 +
CF
,

252 (0x60<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

253 (0x61<<8Ë+
YF
+
HF
 +
CF
,

254 (0x62<<8Ë+
YF
+
HF
 +
CF
,

255 (0x63<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

256 (0x64<<8Ë+
YF
+
HF
 +
CF
,

257 (0x65<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

258 (0x60<<8Ë+
YF
 +
VF
 +
CF
,

259 (0x61<<8Ë+
YF
 +
CF
,

260 (0x62<<8Ë+
YF
 +
CF
,

261 (0x63<<8Ë+
YF
 +
VF
 +
CF
,

262 (0x64<<8Ë+
YF
 +
CF
,

263 (0x65<<8Ë+
YF
 +
VF
 +
CF
,

264 (0x66<<8Ë+
YF
 +
VF
 +
CF
,

265 (0x67<<8Ë+
YF
 +
CF
,

266 (0x68<<8Ë+
YF
 +
XF
 +
CF
,

267 (0x69<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

268 (0x70<<8Ë+
YF
+
HF
 +
CF
,

269 (0x71<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

270 (0x72<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

271 (0x73<<8Ë+
YF
+
HF
 +
CF
,

272 (0x74<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

273 (0x75<<8Ë+
YF
+
HF
 +
CF
,

274 (0x70<<8Ë+
YF
 +
CF
,

275 (0x71<<8Ë+
YF
 +
VF
 +
CF
,

276 (0x72<<8Ë+
YF
 +
VF
 +
CF
,

277 (0x73<<8Ë+
YF
 +
CF
,

278 (0x74<<8Ë+
YF
 +
VF
 +
CF
,

279 (0x75<<8Ë+
YF
 +
CF
,

280 (0x76<<8Ë+
YF
 +
CF
,

281 (0x77<<8Ë+
YF
 +
VF
 +
CF
,

282 (0x78<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

283 (0x79<<8Ë+
YF
 +
XF
 +
CF
,

284 (0x80<<8)+
SF
 +
HF
 +
CF
,

285 (0x81<<8)+
SF
 +
HF
 +
VF
 +
CF
,

286 (0x82<<8)+
SF
 +
HF
 +
VF
 +
CF
,

287 (0x83<<8)+
SF
 +
HF
 +
CF
,

288 (0x84<<8)+
SF
 +
HF
 +
VF
 +
CF
,

289 (0x85<<8)+
SF
 +
HF
 +
CF
,

290 (0x80<<8)+
SF
 +
CF
,

291 (0x81<<8)+
SF
 +
VF
 +
CF
,

292 (0x82<<8)+
SF
 +
VF
 +
CF
,

293 (0x83<<8)+
SF
 +
CF
,

294 (0x84<<8)+
SF
 +
VF
 +
CF
,

295 (0x85<<8)+
SF
 +
CF
,

296 (0x86<<8)+
SF
 +
CF
,

297 (0x87<<8)+
SF
 +
VF
 +
CF
,

298 (0x88<<8)+
SF
 +
XF
+
VF
 +
CF
,

299 (0x89<<8)+
SF
 +
XF
 +
CF
,

300 (0x90<<8)+
SF
 +
HF
 +
VF
 +
CF
,

301 (0x91<<8)+
SF
 +
HF
 +
CF
,

302 (0x92<<8)+
SF
 +
HF
 +
CF
,

303 (0x93<<8)+
SF
 +
HF
 +
VF
 +
CF
,

304 (0x94<<8)+
SF
 +
HF
 +
CF
,

305 (0x95<<8)+
SF
 +
HF
 +
VF
 +
CF
,

306 (0x90<<8)+
SF
 +
VF
 +
CF
,

307 (0x91<<8)+
SF
 +
CF
,

308 (0x92<<8)+
SF
 +
CF
,

309 (0x93<<8)+
SF
 +
VF
 +
CF
,

310 (0x94<<8)+
SF
 +
CF
,

311 (0x95<<8)+
SF
 +
VF
 +
CF
,

312 (0x96<<8)+
SF
 +
VF
 +
CF
,

313 (0x97<<8)+
SF
 +
CF
,

314 (0x98<<8)+
SF
 +
XF
 +
CF
,

315 (0x99<<8)+
SF
 +
XF
+
VF
 +
CF
,

316 (0xA0<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

317 (0xA1<<8)+
SF
 +
YF
+
HF
 +
CF
,

318 (0xA2<<8)+
SF
 +
YF
+
HF
 +
CF
,

319 (0xA3<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

320 (0xA4<<8)+
SF
 +
YF
+
HF
 +
CF
,

321 (0xA5<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

322 (0xA0<<8)+
SF
 +
YF
 +
VF
 +
CF
,

323 (0xA1<<8)+
SF
 +
YF
 +
CF
,

324 (0xA2<<8)+
SF
 +
YF
 +
CF
,

325 (0xA3<<8)+
SF
 +
YF
 +
VF
 +
CF
,

326 (0xA4<<8)+
SF
 +
YF
 +
CF
,

327 (0xA5<<8)+
SF
 +
YF
 +
VF
 +
CF
,

328 (0xA6<<8)+
SF
 +
YF
 +
VF
 +
CF
,

329 (0xA7<<8)+
SF
 +
YF
 +
CF
,

330 (0xA8<<8)+
SF
 +
YF
 +
XF
 +
CF
,

331 (0xA9<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

332 (0xB0<<8)+
SF
 +
YF
+
HF
 +
CF
,

333 (0xB1<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

334 (0xB2<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

335 (0xB3<<8)+
SF
 +
YF
+
HF
 +
CF
,

336 (0xB4<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

337 (0xB5<<8)+
SF
 +
YF
+
HF
 +
CF
,

338 (0xB0<<8)+
SF
 +
YF
 +
CF
,

339 (0xB1<<8)+
SF
 +
YF
 +
VF
 +
CF
,

340 (0xB2<<8)+
SF
 +
YF
 +
VF
 +
CF
,

341 (0xB3<<8)+
SF
 +
YF
 +
CF
,

342 (0xB4<<8)+
SF
 +
YF
 +
VF
 +
CF
,

343 (0xB5<<8)+
SF
 +
YF
 +
CF
,

344 (0xB6<<8)+
SF
 +
YF
 +
CF
,

345 (0xB7<<8)+
SF
 +
YF
 +
VF
 +
CF
,

346 (0xB8<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

347 (0xB9<<8)+
SF
 +
YF
 +
XF
 +
CF
,

348 (0xC0<<8)+
SF
 +
HF
 +
VF
 +
CF
,

349 (0xC1<<8)+
SF
 +
HF
 +
CF
,

350 (0xC2<<8)+
SF
 +
HF
 +
CF
,

351 (0xC3<<8)+
SF
 +
HF
 +
VF
 +
CF
,

352 (0xC4<<8)+
SF
 +
HF
 +
CF
,

353 (0xC5<<8)+
SF
 +
HF
 +
VF
 +
CF
,

354 (0xC0<<8)+
SF
 +
VF
 +
CF
,

355 (0xC1<<8)+
SF
 +
CF
,

356 (0xC2<<8)+
SF
 +
CF
,

357 (0xC3<<8)+
SF
 +
VF
 +
CF
,

358 (0xC4<<8)+
SF
 +
CF
,

359 (0xC5<<8)+
SF
 +
VF
 +
CF
,

360 (0xC6<<8)+
SF
 +
VF
 +
CF
,

361 (0xC7<<8)+
SF
 +
CF
,

362 (0xC8<<8)+
SF
 +
XF
 +
CF
,

363 (0xC9<<8)+
SF
 +
XF
+
VF
 +
CF
,

364 (0xD0<<8)+
SF
 +
HF
 +
CF
,

365 (0xD1<<8)+
SF
 +
HF
 +
VF
 +
CF
,

366 (0xD2<<8)+
SF
 +
HF
 +
VF
 +
CF
,

367 (0xD3<<8)+
SF
 +
HF
 +
CF
,

368 (0xD4<<8)+
SF
 +
HF
 +
VF
 +
CF
,

369 (0xD5<<8)+
SF
 +
HF
 +
CF
,

370 (0xD0<<8)+
SF
 +
CF
,

371 (0xD1<<8)+
SF
 +
VF
 +
CF
,

372 (0xD2<<8)+
SF
 +
VF
 +
CF
,

373 (0xD3<<8)+
SF
 +
CF
,

374 (0xD4<<8)+
SF
 +
VF
 +
CF
,

375 (0xD5<<8)+
SF
 +
CF
,

376 (0xD6<<8)+
SF
 +
CF
,

377 (0xD7<<8)+
SF
 +
VF
 +
CF
,

378 (0xD8<<8)+
SF
 +
XF
+
VF
 +
CF
,

379 (0xD9<<8)+
SF
 +
XF
 +
CF
,

380 (0xE0<<8)+
SF
 +
YF
+
HF
 +
CF
,

381 (0xE1<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

382 (0xE2<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

383 (0xE3<<8)+
SF
 +
YF
+
HF
 +
CF
,

384 (0xE4<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

385 (0xE5<<8)+
SF
 +
YF
+
HF
 +
CF
,

386 (0xE0<<8)+
SF
 +
YF
 +
CF
,

387 (0xE1<<8)+
SF
 +
YF
 +
VF
 +
CF
,

388 (0xE2<<8)+
SF
 +
YF
 +
VF
 +
CF
,

389 (0xE3<<8)+
SF
 +
YF
 +
CF
,

390 (0xE4<<8)+
SF
 +
YF
 +
VF
 +
CF
,

391 (0xE5<<8)+
SF
 +
YF
 +
CF
,

392 (0xE6<<8)+
SF
 +
YF
 +
CF
,

393 (0xE7<<8)+
SF
 +
YF
 +
VF
 +
CF
,

394 (0xE8<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

395 (0xE9<<8)+
SF
 +
YF
 +
XF
 +
CF
,

396 (0xF0<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

397 (0xF1<<8)+
SF
 +
YF
+
HF
 +
CF
,

398 (0xF2<<8)+
SF
 +
YF
+
HF
 +
CF
,

399 (0xF3<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

400 (0xF4<<8)+
SF
 +
YF
+
HF
 +
CF
,

401 (0xF5<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

402 (0xF0<<8)+
SF
 +
YF
 +
VF
 +
CF
,

403 (0xF1<<8)+
SF
 +
YF
 +
CF
,

404 (0xF2<<8)+
SF
 +
YF
 +
CF
,

405 (0xF3<<8)+
SF
 +
YF
 +
VF
 +
CF
,

406 (0xF4<<8)+
SF
 +
YF
 +
CF
,

407 (0xF5<<8)+
SF
 +
YF
 +
VF
 +
CF
,

408 (0xF6<<8)+
SF
 +
YF
 +
VF
 +
CF
,

409 (0xF7<<8)+
SF
 +
YF
 +
CF
,

410 (0xF8<<8)+
SF
 +
YF
 +
XF
 +
CF
,

411 (0xF9<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

412 (0x00<<8Ë+
ZF
 +
HF
 +
VF
 +
CF
,

413 (0x01<<8Ë+
HF
 +
CF
,

414 (0x02<<8Ë+
HF
 +
CF
,

415 (0x03<<8Ë+
HF
 +
VF
 +
CF
,

416 (0x04<<8Ë+
HF
 +
CF
,

417 (0x05<<8Ë+
HF
 +
VF
 +
CF
,

418 (0x00<<8Ë+
ZF
 +
VF
 +
CF
,

419 (0x01<<8Ë+
CF
,

420 (0x02<<8Ë+
CF
,

421 (0x03<<8Ë+
VF
 +
CF
,

422 (0x04<<8Ë+
CF
,

423 (0x05<<8Ë+
VF
 +
CF
,

424 (0x06<<8Ë+
VF
 +
CF
,

425 (0x07<<8Ë+
CF
,

426 (0x08<<8Ë+
XF
 +
CF
,

427 (0x09<<8Ë+
XF
+
VF
 +
CF
,

428 (0x10<<8Ë+
HF
 +
CF
,

429 (0x11<<8Ë+
HF
 +
VF
 +
CF
,

430 (0x12<<8Ë+
HF
 +
VF
 +
CF
,

431 (0x13<<8Ë+
HF
 +
CF
,

432 (0x14<<8Ë+
HF
 +
VF
 +
CF
,

433 (0x15<<8Ë+
HF
 +
CF
,

434 (0x10<<8Ë+
CF
,

435 (0x11<<8Ë+
VF
 +
CF
,

436 (0x12<<8Ë+
VF
 +
CF
,

437 (0x13<<8Ë+
CF
,

438 (0x14<<8Ë+
VF
 +
CF
,

439 (0x15<<8Ë+
CF
,

440 (0x16<<8Ë+
CF
,

441 (0x17<<8Ë+
VF
 +
CF
,

442 (0x18<<8Ë+
XF
+
VF
 +
CF
,

443 (0x19<<8Ë+
XF
 +
CF
,

444 (0x20<<8Ë+
YF
+
HF
 +
CF
,

445 (0x21<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

446 (0x22<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

447 (0x23<<8Ë+
YF
+
HF
 +
CF
,

448 (0x24<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

449 (0x25<<8Ë+
YF
+
HF
 +
CF
,

450 (0x20<<8Ë+
YF
 +
CF
,

451 (0x21<<8Ë+
YF
 +
VF
 +
CF
,

452 (0x22<<8Ë+
YF
 +
VF
 +
CF
,

453 (0x23<<8Ë+
YF
 +
CF
,

454 (0x24<<8Ë+
YF
 +
VF
 +
CF
,

455 (0x25<<8Ë+
YF
 +
CF
,

456 (0x26<<8Ë+
YF
 +
CF
,

457 (0x27<<8Ë+
YF
 +
VF
 +
CF
,

458 (0x28<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

459 (0x29<<8Ë+
YF
 +
XF
 +
CF
,

460 (0x30<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

461 (0x31<<8Ë+
YF
+
HF
 +
CF
,

462 (0x32<<8Ë+
YF
+
HF
 +
CF
,

463 (0x33<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

464 (0x34<<8Ë+
YF
+
HF
 +
CF
,

465 (0x35<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

466 (0x30<<8Ë+
YF
 +
VF
 +
CF
,

467 (0x31<<8Ë+
YF
 +
CF
,

468 (0x32<<8Ë+
YF
 +
CF
,

469 (0x33<<8Ë+
YF
 +
VF
 +
CF
,

470 (0x34<<8Ë+
YF
 +
CF
,

471 (0x35<<8Ë+
YF
 +
VF
 +
CF
,

472 (0x36<<8Ë+
YF
 +
VF
 +
CF
,

473 (0x37<<8Ë+
YF
 +
CF
,

474 (0x38<<8Ë+
YF
 +
XF
 +
CF
,

475 (0x39<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

476 (0x40<<8Ë+
HF
 +
CF
,

477 (0x41<<8Ë+
HF
 +
VF
 +
CF
,

478 (0x42<<8Ë+
HF
 +
VF
 +
CF
,

479 (0x43<<8Ë+
HF
 +
CF
,

480 (0x44<<8Ë+
HF
 +
VF
 +
CF
,

481 (0x45<<8Ë+
HF
 +
CF
,

482 (0x40<<8Ë+
CF
,

483 (0x41<<8Ë+
VF
 +
CF
,

484 (0x42<<8Ë+
VF
 +
CF
,

485 (0x43<<8Ë+
CF
,

486 (0x44<<8Ë+
VF
 +
CF
,

487 (0x45<<8Ë+
CF
,

488 (0x46<<8Ë+
CF
,

489 (0x47<<8Ë+
VF
 +
CF
,

490 (0x48<<8Ë+
XF
+
VF
 +
CF
,

491 (0x49<<8Ë+
XF
 +
CF
,

492 (0x50<<8Ë+
HF
 +
VF
 +
CF
,

493 (0x51<<8Ë+
HF
 +
CF
,

494 (0x52<<8Ë+
HF
 +
CF
,

495 (0x53<<8Ë+
HF
 +
VF
 +
CF
,

496 (0x54<<8Ë+
HF
 +
CF
,

497 (0x55<<8Ë+
HF
 +
VF
 +
CF
,

498 (0x50<<8Ë+
VF
 +
CF
,

499 (0x51<<8Ë+
CF
,

500 (0x52<<8Ë+
CF
,

501 (0x53<<8Ë+
VF
 +
CF
,

502 (0x54<<8Ë+
CF
,

503 (0x55<<8Ë+
VF
 +
CF
,

504 (0x56<<8Ë+
VF
 +
CF
,

505 (0x57<<8Ë+
CF
,

506 (0x58<<8Ë+
XF
 +
CF
,

507 (0x59<<8Ë+
XF
+
VF
 +
CF
,

508 (0x60<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

509 (0x61<<8Ë+
YF
+
HF
 +
CF
,

510 (0x62<<8Ë+
YF
+
HF
 +
CF
,

511 (0x63<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

512 (0x64<<8Ë+
YF
+
HF
 +
CF
,

513 (0x65<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

514 (0x06<<8Ë+
VF
 ,

516 (0x08<<8Ë+
XF
 ,

517 (0x09<<8Ë+
XF
+
VF
 ,

518 (0x0A<<8Ë+
XF
+
VF
 ,

519 (0x0B<<8Ë+
XF
 ,

520 (0x0C<<8Ë+
XF
+
VF
 ,

521 (0x0D<<8Ë+
XF
 ,

522 (0x0E<<8Ë+
XF
 ,

523 (0x0F<<8Ë+
XF
+
VF
 ,

524 (0x10<<8Ë+
HF
 ,

525 (0x11<<8Ë+
HF
 +
VF
 ,

526 (0x12<<8Ë+
HF
 +
VF
 ,

527 (0x13<<8Ë+
HF
 ,

528 (0x14<<8Ë+
HF
 +
VF
 ,

529 (0x15<<8Ë+
HF
 ,

531 (0x17<<8Ë+
VF
 ,

532 (0x18<<8Ë+
XF
+
VF
 ,

533 (0x19<<8Ë+
XF
 ,

534 (0x1A<<8Ë+
XF
 ,

535 (0x1B<<8Ë+
XF
+
VF
 ,

536 (0x1C<<8Ë+
XF
 ,

537 (0x1D<<8Ë+
XF
+
VF
 ,

538 (0x1E<<8Ë+
XF
+
VF
 ,

539 (0x1F<<8Ë+
XF
 ,

540 (0x20<<8Ë+
YF
+
HF
 ,

541 (0x21<<8Ë+
YF
+
HF
 +
VF
 ,

542 (0x22<<8Ë+
YF
+
HF
 +
VF
 ,

543 (0x23<<8Ë+
YF
+
HF
 ,

544 (0x24<<8Ë+
YF
+
HF
 +
VF
 ,

545 (0x25<<8Ë+
YF
+
HF
 ,

546 (0x26<<8Ë+
YF
 ,

547 (0x27<<8Ë+
YF
 +
VF
 ,

548 (0x28<<8Ë+
YF
 +
XF
+
VF
 ,

549 (0x29<<8Ë+
YF
 +
XF
 ,

550 (0x2A<<8Ë+
YF
 +
XF
 ,

551 (0x2B<<8Ë+
YF
 +
XF
+
VF
 ,

552 (0x2C<<8Ë+
YF
 +
XF
 ,

553 (0x2D<<8Ë+
YF
 +
XF
+
VF
 ,

554 (0x2E<<8Ë+
YF
 +
XF
+
VF
 ,

555 (0x2F<<8Ë+
YF
 +
XF
 ,

556 (0x30<<8Ë+
YF
+
HF
 +
VF
 ,

557 (0x31<<8Ë+
YF
+
HF
 ,

558 (0x32<<8Ë+
YF
+
HF
 ,

559 (0x33<<8Ë+
YF
+
HF
 +
VF
 ,

560 (0x34<<8Ë+
YF
+
HF
 ,

561 (0x35<<8Ë+
YF
+
HF
 +
VF
 ,

562 (0x36<<8Ë+
YF
 +
VF
 ,

563 (0x37<<8Ë+
YF
 ,

564 (0x38<<8Ë+
YF
 +
XF
 ,

565 (0x39<<8Ë+
YF
 +
XF
+
VF
 ,

566 (0x3A<<8Ë+
YF
 +
XF
+
VF
 ,

567 (0x3B<<8Ë+
YF
 +
XF
 ,

568 (0x3C<<8Ë+
YF
 +
XF
+
VF
 ,

569 (0x3D<<8Ë+
YF
 +
XF
 ,

570 (0x3E<<8Ë+
YF
 +
XF
 ,

571 (0x3F<<8Ë+
YF
 +
XF
+
VF
 ,

572 (0x40<<8Ë+
HF
 ,

573 (0x41<<8Ë+
HF
 +
VF
 ,

574 (0x42<<8Ë+
HF
 +
VF
 ,

575 (0x43<<8Ë+
HF
 ,

576 (0x44<<8Ë+
HF
 +
VF
 ,

577 (0x45<<8Ë+
HF
 ,

579 (0x47<<8Ë+
VF
 ,

580 (0x48<<8Ë+
XF
+
VF
 ,

581 (0x49<<8Ë+
XF
 ,

582 (0x4A<<8Ë+
XF
 ,

583 (0x4B<<8Ë+
XF
+
VF
 ,

584 (0x4C<<8Ë+
XF
 ,

585 (0x4D<<8Ë+
XF
+
VF
 ,

586 (0x4E<<8Ë+
XF
+
VF
 ,

587 (0x4F<<8Ë+
XF
 ,

588 (0x50<<8Ë+
HF
 +
VF
 ,

589 (0x51<<8Ë+
HF
 ,

590 (0x52<<8Ë+
HF
 ,

591 (0x53<<8Ë+
HF
 +
VF
 ,

592 (0x54<<8Ë+
HF
 ,

593 (0x55<<8Ë+
HF
 +
VF
 ,

594 (0x56<<8Ë+
VF
 ,

596 (0x58<<8Ë+
XF
 ,

597 (0x59<<8Ë+
XF
+
VF
 ,

598 (0x5A<<8Ë+
XF
+
VF
 ,

599 (0x5B<<8Ë+
XF
 ,

600 (0x5C<<8Ë+
XF
+
VF
 ,

601 (0x5D<<8Ë+
XF
 ,

602 (0x5E<<8Ë+
XF
 ,

603 (0x5F<<8Ë+
XF
+
VF
 ,

604 (0x60<<8Ë+
YF
+
HF
 +
VF
 ,

605 (0x61<<8Ë+
YF
+
HF
 ,

606 (0x62<<8Ë+
YF
+
HF
 ,

607 (0x63<<8Ë+
YF
+
HF
 +
VF
 ,

608 (0x64<<8Ë+
YF
+
HF
 ,

609 (0x65<<8Ë+
YF
+
HF
 +
VF
 ,

610 (0x66<<8Ë+
YF
 +
VF
 ,

611 (0x67<<8Ë+
YF
 ,

612 (0x68<<8Ë+
YF
 +
XF
 ,

613 (0x69<<8Ë+
YF
 +
XF
+
VF
 ,

614 (0x6A<<8Ë+
YF
 +
XF
+
VF
 ,

615 (0x6B<<8Ë+
YF
 +
XF
 ,

616 (0x6C<<8Ë+
YF
 +
XF
+
VF
 ,

617 (0x6D<<8Ë+
YF
 +
XF
 ,

618 (0x6E<<8Ë+
YF
 +
XF
 ,

619 (0x6F<<8Ë+
YF
 +
XF
+
VF
 ,

620 (0x70<<8Ë+
YF
+
HF
 ,

621 (0x71<<8Ë+
YF
+
HF
 +
VF
 ,

622 (0x72<<8Ë+
YF
+
HF
 +
VF
 ,

623 (0x73<<8Ë+
YF
+
HF
 ,

624 (0x74<<8Ë+
YF
+
HF
 +
VF
 ,

625 (0x75<<8Ë+
YF
+
HF
 ,

626 (0x76<<8Ë+
YF
 ,

627 (0x77<<8Ë+
YF
 +
VF
 ,

628 (0x78<<8Ë+
YF
 +
XF
+
VF
 ,

629 (0x79<<8Ë+
YF
 +
XF
 ,

630 (0x7A<<8Ë+
YF
 +
XF
 ,

631 (0x7B<<8Ë+
YF
 +
XF
+
VF
 ,

632 (0x7C<<8Ë+
YF
 +
XF
 ,

633 (0x7D<<8Ë+
YF
 +
XF
+
VF
 ,

634 (0x7E<<8Ë+
YF
 +
XF
+
VF
 ,

635 (0x7F<<8Ë+
YF
 +
XF
 ,

636 (0x80<<8)+
SF
 +
HF
 ,

637 (0x81<<8)+
SF
 +
HF
 +
VF
 ,

638 (0x82<<8)+
SF
 +
HF
 +
VF
 ,

639 (0x83<<8)+
SF
 +
HF
 ,

640 (0x84<<8)+
SF
 +
HF
 +
VF
 ,

641 (0x85<<8)+
SF
 +
HF
 ,

642 (0x86<<8)+
SF
 ,

643 (0x87<<8)+
SF
 +
VF
 ,

644 (0x88<<8)+
SF
 +
XF
+
VF
 ,

645 (0x89<<8)+
SF
 +
XF
 ,

646 (0x8A<<8)+
SF
 +
XF
 ,

647 (0x8B<<8)+
SF
 +
XF
+
VF
 ,

648 (0x8C<<8)+
SF
 +
XF
 ,

649 (0x8D<<8)+
SF
 +
XF
+
VF
 ,

650 (0x8E<<8)+
SF
 +
XF
+
VF
 ,

651 (0x8F<<8)+
SF
 +
XF
 ,

652 (0x90<<8)+
SF
 +
HF
 +
VF
 ,

653 (0x91<<8)+
SF
 +
HF
 ,

654 (0x92<<8)+
SF
 +
HF
 ,

655 (0x93<<8)+
SF
 +
HF
 +
VF
 ,

656 (0x94<<8)+
SF
 +
HF
 ,

657 (0x95<<8)+
SF
 +
HF
 +
VF
 ,

658 (0x96<<8)+
SF
 +
VF
 ,

659 (0x97<<8)+
SF
 ,

660 (0x98<<8)+
SF
 +
XF
 ,

661 (0x99<<8)+
SF
 +
XF
+
VF
 ,

662 (0x9A<<8)+
SF
 +
XF
+
VF
 ,

663 (0x9B<<8)+
SF
 +
XF
 ,

664 (0x9C<<8)+
SF
 +
XF
+
VF
 ,

665 (0x9D<<8)+
SF
 +
XF
 ,

666 (0x9E<<8)+
SF
 +
XF
 ,

667 (0x9F<<8)+
SF
 +
XF
+
VF
 ,

668 (0x00<<8Ë+
ZF
 +
HF
 +
VF
 +
CF
,

669 (0x01<<8Ë+
HF
 +
CF
,

670 (0x02<<8Ë+
HF
 +
CF
,

671 (0x03<<8Ë+
HF
 +
VF
 +
CF
,

672 (0x04<<8Ë+
HF
 +
CF
,

673 (0x05<<8Ë+
HF
 +
VF
 +
CF
,

674 (0x06<<8Ë+
VF
 +
CF
,

675 (0x07<<8Ë+
CF
,

676 (0x08<<8Ë+
XF
 +
CF
,

677 (0x09<<8Ë+
XF
+
VF
 +
CF
,

678 (0x0A<<8Ë+
XF
+
VF
 +
CF
,

679 (0x0B<<8Ë+
XF
 +
CF
,

680 (0x0C<<8Ë+
XF
+
VF
 +
CF
,

681 (0x0D<<8Ë+
XF
 +
CF
,

682 (0x0E<<8Ë+
XF
 +
CF
,

683 (0x0F<<8Ë+
XF
+
VF
 +
CF
,

684 (0x10<<8Ë+
HF
 +
CF
,

685 (0x11<<8Ë+
HF
 +
VF
 +
CF
,

686 (0x12<<8Ë+
HF
 +
VF
 +
CF
,

687 (0x13<<8Ë+
HF
 +
CF
,

688 (0x14<<8Ë+
HF
 +
VF
 +
CF
,

689 (0x15<<8Ë+
HF
 +
CF
,

690 (0x16<<8Ë+
CF
,

691 (0x17<<8Ë+
VF
 +
CF
,

692 (0x18<<8Ë+
XF
+
VF
 +
CF
,

693 (0x19<<8Ë+
XF
 +
CF
,

694 (0x1A<<8Ë+
XF
 +
CF
,

695 (0x1B<<8Ë+
XF
+
VF
 +
CF
,

696 (0x1C<<8Ë+
XF
 +
CF
,

697 (0x1D<<8Ë+
XF
+
VF
 +
CF
,

698 (0x1E<<8Ë+
XF
+
VF
 +
CF
,

699 (0x1F<<8Ë+
XF
 +
CF
,

700 (0x20<<8Ë+
YF
+
HF
 +
CF
,

701 (0x21<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

702 (0x22<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

703 (0x23<<8Ë+
YF
+
HF
 +
CF
,

704 (0x24<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

705 (0x25<<8Ë+
YF
+
HF
 +
CF
,

706 (0x26<<8Ë+
YF
 +
CF
,

707 (0x27<<8Ë+
YF
 +
VF
 +
CF
,

708 (0x28<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

709 (0x29<<8Ë+
YF
 +
XF
 +
CF
,

710 (0x2A<<8Ë+
YF
 +
XF
 +
CF
,

711 (0x2B<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

712 (0x2C<<8Ë+
YF
 +
XF
 +
CF
,

713 (0x2D<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

714 (0x2E<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

715 (0x2F<<8Ë+
YF
 +
XF
 +
CF
,

716 (0x30<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

717 (0x31<<8Ë+
YF
+
HF
 +
CF
,

718 (0x32<<8Ë+
YF
+
HF
 +
CF
,

719 (0x33<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

720 (0x34<<8Ë+
YF
+
HF
 +
CF
,

721 (0x35<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

722 (0x36<<8Ë+
YF
 +
VF
 +
CF
,

723 (0x37<<8Ë+
YF
 +
CF
,

724 (0x38<<8Ë+
YF
 +
XF
 +
CF
,

725 (0x39<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

726 (0x3A<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

727 (0x3B<<8Ë+
YF
 +
XF
 +
CF
,

728 (0x3C<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

729 (0x3D<<8Ë+
YF
 +
XF
 +
CF
,

730 (0x3E<<8Ë+
YF
 +
XF
 +
CF
,

731 (0x3F<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

732 (0x40<<8Ë+
HF
 +
CF
,

733 (0x41<<8Ë+
HF
 +
VF
 +
CF
,

734 (0x42<<8Ë+
HF
 +
VF
 +
CF
,

735 (0x43<<8Ë+
HF
 +
CF
,

736 (0x44<<8Ë+
HF
 +
VF
 +
CF
,

737 (0x45<<8Ë+
HF
 +
CF
,

738 (0x46<<8Ë+
CF
,

739 (0x47<<8Ë+
VF
 +
CF
,

740 (0x48<<8Ë+
XF
+
VF
 +
CF
,

741 (0x49<<8Ë+
XF
 +
CF
,

742 (0x4A<<8Ë+
XF
 +
CF
,

743 (0x4B<<8Ë+
XF
+
VF
 +
CF
,

744 (0x4C<<8Ë+
XF
 +
CF
,

745 (0x4D<<8Ë+
XF
+
VF
 +
CF
,

746 (0x4E<<8Ë+
XF
+
VF
 +
CF
,

747 (0x4F<<8Ë+
XF
 +
CF
,

748 (0x50<<8Ë+
HF
 +
VF
 +
CF
,

749 (0x51<<8Ë+
HF
 +
CF
,

750 (0x52<<8Ë+
HF
 +
CF
,

751 (0x53<<8Ë+
HF
 +
VF
 +
CF
,

752 (0x54<<8Ë+
HF
 +
CF
,

753 (0x55<<8Ë+
HF
 +
VF
 +
CF
,

754 (0x56<<8Ë+
VF
 +
CF
,

755 (0x57<<8Ë+
CF
,

756 (0x58<<8Ë+
XF
 +
CF
,

757 (0x59<<8Ë+
XF
+
VF
 +
CF
,

758 (0x5A<<8Ë+
XF
+
VF
 +
CF
,

759 (0x5B<<8Ë+
XF
 +
CF
,

760 (0x5C<<8Ë+
XF
+
VF
 +
CF
,

761 (0x5D<<8Ë+
XF
 +
CF
,

762 (0x5E<<8Ë+
XF
 +
CF
,

763 (0x5F<<8Ë+
XF
+
VF
 +
CF
,

764 (0x60<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

765 (0x61<<8Ë+
YF
+
HF
 +
CF
,

766 (0x62<<8Ë+
YF
+
HF
 +
CF
,

767 (0x63<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

768 (0x64<<8Ë+
YF
+
HF
 +
CF
,

769 (0x65<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

770 (0x66<<8Ë+
YF
 +
VF
 +
CF
,

771 (0x67<<8Ë+
YF
 +
CF
,

772 (0x68<<8Ë+
YF
 +
XF
 +
CF
,

773 (0x69<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

774 (0x6A<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

775 (0x6B<<8Ë+
YF
 +
XF
 +
CF
,

776 (0x6C<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

777 (0x6D<<8Ë+
YF
 +
XF
 +
CF
,

778 (0x6E<<8Ë+
YF
 +
XF
 +
CF
,

779 (0x6F<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

780 (0x70<<8Ë+
YF
+
HF
 +
CF
,

781 (0x71<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

782 (0x72<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

783 (0x73<<8Ë+
YF
+
HF
 +
CF
,

784 (0x74<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

785 (0x75<<8Ë+
YF
+
HF
 +
CF
,

786 (0x76<<8Ë+
YF
 +
CF
,

787 (0x77<<8Ë+
YF
 +
VF
 +
CF
,

788 (0x78<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

789 (0x79<<8Ë+
YF
 +
XF
 +
CF
,

790 (0x7A<<8Ë+
YF
 +
XF
 +
CF
,

791 (0x7B<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

792 (0x7C<<8Ë+
YF
 +
XF
 +
CF
,

793 (0x7D<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

794 (0x7E<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

795 (0x7F<<8Ë+
YF
 +
XF
 +
CF
,

796 (0x80<<8)+
SF
 +
HF
 +
CF
,

797 (0x81<<8)+
SF
 +
HF
 +
VF
 +
CF
,

798 (0x82<<8)+
SF
 +
HF
 +
VF
 +
CF
,

799 (0x83<<8)+
SF
 +
HF
 +
CF
,

800 (0x84<<8)+
SF
 +
HF
 +
VF
 +
CF
,

801 (0x85<<8)+
SF
 +
HF
 +
CF
,

802 (0x86<<8)+
SF
 +
CF
,

803 (0x87<<8)+
SF
 +
VF
 +
CF
,

804 (0x88<<8)+
SF
 +
XF
+
VF
 +
CF
,

805 (0x89<<8)+
SF
 +
XF
 +
CF
,

806 (0x8A<<8)+
SF
 +
XF
 +
CF
,

807 (0x8B<<8)+
SF
 +
XF
+
VF
 +
CF
,

808 (0x8C<<8)+
SF
 +
XF
 +
CF
,

809 (0x8D<<8)+
SF
 +
XF
+
VF
 +
CF
,

810 (0x8E<<8)+
SF
 +
XF
+
VF
 +
CF
,

811 (0x8F<<8)+
SF
 +
XF
 +
CF
,

812 (0x90<<8)+
SF
 +
HF
 +
VF
 +
CF
,

813 (0x91<<8)+
SF
 +
HF
 +
CF
,

814 (0x92<<8)+
SF
 +
HF
 +
CF
,

815 (0x93<<8)+
SF
 +
HF
 +
VF
 +
CF
,

816 (0x94<<8)+
SF
 +
HF
 +
CF
,

817 (0x95<<8)+
SF
 +
HF
 +
VF
 +
CF
,

818 (0x96<<8)+
SF
 +
VF
 +
CF
,

819 (0x97<<8)+
SF
 +
CF
,

820 (0x98<<8)+
SF
 +
XF
 +
CF
,

821 (0x99<<8)+
SF
 +
XF
+
VF
 +
CF
,

822 (0x9A<<8)+
SF
 +
XF
+
VF
 +
CF
,

823 (0x9B<<8)+
SF
 +
XF
 +
CF
,

824 (0x9C<<8)+
SF
 +
XF
+
VF
 +
CF
,

825 (0x9D<<8)+
SF
 +
XF
 +
CF
,

826 (0x9E<<8)+
SF
 +
XF
 +
CF
,

827 (0x9F<<8)+
SF
 +
XF
+
VF
 +
CF
,

828 (0xA0<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

829 (0xA1<<8)+
SF
 +
YF
+
HF
 +
CF
,

830 (0xA2<<8)+
SF
 +
YF
+
HF
 +
CF
,

831 (0xA3<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

832 (0xA4<<8)+
SF
 +
YF
+
HF
 +
CF
,

833 (0xA5<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

834 (0xA6<<8)+
SF
 +
YF
 +
VF
 +
CF
,

835 (0xA7<<8)+
SF
 +
YF
 +
CF
,

836 (0xA8<<8)+
SF
 +
YF
 +
XF
 +
CF
,

837 (0xA9<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

838 (0xAA<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

839 (0xAB<<8)+
SF
 +
YF
 +
XF
 +
CF
,

840 (0xAC<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

841 (0xAD<<8)+
SF
 +
YF
 +
XF
 +
CF
,

842 (0xAE<<8)+
SF
 +
YF
 +
XF
 +
CF
,

843 (0xAF<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

844 (0xB0<<8)+
SF
 +
YF
+
HF
 +
CF
,

845 (0xB1<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

846 (0xB2<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

847 (0xB3<<8)+
SF
 +
YF
+
HF
 +
CF
,

848 (0xB4<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

849 (0xB5<<8)+
SF
 +
YF
+
HF
 +
CF
,

850 (0xB6<<8)+
SF
 +
YF
 +
CF
,

851 (0xB7<<8)+
SF
 +
YF
 +
VF
 +
CF
,

852 (0xB8<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

853 (0xB9<<8)+
SF
 +
YF
 +
XF
 +
CF
,

854 (0xBA<<8)+
SF
 +
YF
 +
XF
 +
CF
,

855 (0xBB<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

856 (0xBC<<8)+
SF
 +
YF
 +
XF
 +
CF
,

857 (0xBD<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

858 (0xBE<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

859 (0xBF<<8)+
SF
 +
YF
 +
XF
 +
CF
,

860 (0xC0<<8)+
SF
 +
HF
 +
VF
 +
CF
,

861 (0xC1<<8)+
SF
 +
HF
 +
CF
,

862 (0xC2<<8)+
SF
 +
HF
 +
CF
,

863 (0xC3<<8)+
SF
 +
HF
 +
VF
 +
CF
,

864 (0xC4<<8)+
SF
 +
HF
 +
CF
,

865 (0xC5<<8)+
SF
 +
HF
 +
VF
 +
CF
,

866 (0xC6<<8)+
SF
 +
VF
 +
CF
,

867 (0xC7<<8)+
SF
 +
CF
,

868 (0xC8<<8)+
SF
 +
XF
 +
CF
,

869 (0xC9<<8)+
SF
 +
XF
+
VF
 +
CF
,

870 (0xCA<<8)+
SF
 +
XF
+
VF
 +
CF
,

871 (0xCB<<8)+
SF
 +
XF
 +
CF
,

872 (0xCC<<8)+
SF
 +
XF
+
VF
 +
CF
,

873 (0xCD<<8)+
SF
 +
XF
 +
CF
,

874 (0xCE<<8)+
SF
 +
XF
 +
CF
,

875 (0xCF<<8)+
SF
 +
XF
+
VF
 +
CF
,

876 (0xD0<<8)+
SF
 +
HF
 +
CF
,

877 (0xD1<<8)+
SF
 +
HF
 +
VF
 +
CF
,

878 (0xD2<<8)+
SF
 +
HF
 +
VF
 +
CF
,

879 (0xD3<<8)+
SF
 +
HF
 +
CF
,

880 (0xD4<<8)+
SF
 +
HF
 +
VF
 +
CF
,

881 (0xD5<<8)+
SF
 +
HF
 +
CF
,

882 (0xD6<<8)+
SF
 +
CF
,

883 (0xD7<<8)+
SF
 +
VF
 +
CF
,

884 (0xD8<<8)+
SF
 +
XF
+
VF
 +
CF
,

885 (0xD9<<8)+
SF
 +
XF
 +
CF
,

886 (0xDA<<8)+
SF
 +
XF
 +
CF
,

887 (0xDB<<8)+
SF
 +
XF
+
VF
 +
CF
,

888 (0xDC<<8)+
SF
 +
XF
 +
CF
,

889 (0xDD<<8)+
SF
 +
XF
+
VF
 +
CF
,

890 (0xDE<<8)+
SF
 +
XF
+
VF
 +
CF
,

891 (0xDF<<8)+
SF
 +
XF
 +
CF
,

892 (0xE0<<8)+
SF
 +
YF
+
HF
 +
CF
,

893 (0xE1<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

894 (0xE2<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

895 (0xE3<<8)+
SF
 +
YF
+
HF
 +
CF
,

896 (0xE4<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

897 (0xE5<<8)+
SF
 +
YF
+
HF
 +
CF
,

898 (0xE6<<8)+
SF
 +
YF
 +
CF
,

899 (0xE7<<8)+
SF
 +
YF
 +
VF
 +
CF
,

900 (0xE8<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

901 (0xE9<<8)+
SF
 +
YF
 +
XF
 +
CF
,

902 (0xEA<<8)+
SF
 +
YF
 +
XF
 +
CF
,

903 (0xEB<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

904 (0xEC<<8)+
SF
 +
YF
 +
XF
 +
CF
,

905 (0xED<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

906 (0xEE<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

907 (0xEF<<8)+
SF
 +
YF
 +
XF
 +
CF
,

908 (0xF0<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

909 (0xF1<<8)+
SF
 +
YF
+
HF
 +
CF
,

910 (0xF2<<8)+
SF
 +
YF
+
HF
 +
CF
,

911 (0xF3<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

912 (0xF4<<8)+
SF
 +
YF
+
HF
 +
CF
,

913 (0xF5<<8)+
SF
 +
YF
+
HF
 +
VF
 +
CF
,

914 (0xF6<<8)+
SF
 +
YF
 +
VF
 +
CF
,

915 (0xF7<<8)+
SF
 +
YF
 +
CF
,

916 (0xF8<<8)+
SF
 +
YF
 +
XF
 +
CF
,

917 (0xF9<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

918 (0xFA<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

919 (0xFB<<8)+
SF
 +
YF
 +
XF
 +
CF
,

920 (0xFC<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

921 (0xFD<<8)+
SF
 +
YF
 +
XF
 +
CF
,

922 (0xFE<<8)+
SF
 +
YF
 +
XF
 +
CF
,

923 (0xFF<<8)+
SF
 +
YF
 +
XF
+
VF
 +
CF
,

924 (0x00<<8Ë+
ZF
 +
HF
 +
VF
 +
CF
,

925 (0x01<<8Ë+
HF
 +
CF
,

926 (0x02<<8Ë+
HF
 +
CF
,

927 (0x03<<8Ë+
HF
 +
VF
 +
CF
,

928 (0x04<<8Ë+
HF
 +
CF
,

929 (0x05<<8Ë+
HF
 +
VF
 +
CF
,

930 (0x06<<8Ë+
VF
 +
CF
,

931 (0x07<<8Ë+
CF
,

932 (0x08<<8Ë+
XF
 +
CF
,

933 (0x09<<8Ë+
XF
+
VF
 +
CF
,

934 (0x0A<<8Ë+
XF
+
VF
 +
CF
,

935 (0x0B<<8Ë+
XF
 +
CF
,

936 (0x0C<<8Ë+
XF
+
VF
 +
CF
,

937 (0x0D<<8Ë+
XF
 +
CF
,

938 (0x0E<<8Ë+
XF
 +
CF
,

939 (0x0F<<8Ë+
XF
+
VF
 +
CF
,

940 (0x10<<8Ë+
HF
 +
CF
,

941 (0x11<<8Ë+
HF
 +
VF
 +
CF
,

942 (0x12<<8Ë+
HF
 +
VF
 +
CF
,

943 (0x13<<8Ë+
HF
 +
CF
,

944 (0x14<<8Ë+
HF
 +
VF
 +
CF
,

945 (0x15<<8Ë+
HF
 +
CF
,

946 (0x16<<8Ë+
CF
,

947 (0x17<<8Ë+
VF
 +
CF
,

948 (0x18<<8Ë+
XF
+
VF
 +
CF
,

949 (0x19<<8Ë+
XF
 +
CF
,

950 (0x1A<<8Ë+
XF
 +
CF
,

951 (0x1B<<8Ë+
XF
+
VF
 +
CF
,

952 (0x1C<<8Ë+
XF
 +
CF
,

953 (0x1D<<8Ë+
XF
+
VF
 +
CF
,

954 (0x1E<<8Ë+
XF
+
VF
 +
CF
,

955 (0x1F<<8Ë+
XF
 +
CF
,

956 (0x20<<8Ë+
YF
+
HF
 +
CF
,

957 (0x21<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

958 (0x22<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

959 (0x23<<8Ë+
YF
+
HF
 +
CF
,

960 (0x24<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

961 (0x25<<8Ë+
YF
+
HF
 +
CF
,

962 (0x26<<8Ë+
YF
 +
CF
,

963 (0x27<<8Ë+
YF
 +
VF
 +
CF
,

964 (0x28<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

965 (0x29<<8Ë+
YF
 +
XF
 +
CF
,

966 (0x2A<<8Ë+
YF
 +
XF
 +
CF
,

967 (0x2B<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

968 (0x2C<<8Ë+
YF
 +
XF
 +
CF
,

969 (0x2D<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

970 (0x2E<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

971 (0x2F<<8Ë+
YF
 +
XF
 +
CF
,

972 (0x30<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

973 (0x31<<8Ë+
YF
+
HF
 +
CF
,

974 (0x32<<8Ë+
YF
+
HF
 +
CF
,

975 (0x33<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

976 (0x34<<8Ë+
YF
+
HF
 +
CF
,

977 (0x35<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

978 (0x36<<8Ë+
YF
 +
VF
 +
CF
,

979 (0x37<<8Ë+
YF
 +
CF
,

980 (0x38<<8Ë+
YF
 +
XF
 +
CF
,

981 (0x39<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

982 (0x3A<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

983 (0x3B<<8Ë+
YF
 +
XF
 +
CF
,

984 (0x3C<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

985 (0x3D<<8Ë+
YF
 +
XF
 +
CF
,

986 (0x3E<<8Ë+
YF
 +
XF
 +
CF
,

987 (0x3F<<8Ë+
YF
 +
XF
+
VF
 +
CF
,

988 (0x40<<8Ë+
HF
 +
CF
,

989 (0x41<<8Ë+
HF
 +
VF
 +
CF
,

990 (0x42<<8Ë+
HF
 +
VF
 +
CF
,

991 (0x43<<8Ë+
HF
 +
CF
,

992 (0x44<<8Ë+
HF
 +
VF
 +
CF
,

993 (0x45<<8Ë+
HF
 +
CF
,

994 (0x46<<8Ë+
CF
,

995 (0x47<<8Ë+
VF
 +
CF
,

996 (0x48<<8Ë+
XF
+
VF
 +
CF
,

997 (0x49<<8Ë+
XF
 +
CF
,

998 (0x4A<<8Ë+
XF
 +
CF
,

999 (0x4B<<8Ë+
XF
+
VF
 +
CF
,

1000 (0x4C<<8Ë+
XF
 +
CF
,

1001 (0x4D<<8Ë+
XF
+
VF
 +
CF
,

1002 (0x4E<<8Ë+
XF
+
VF
 +
CF
,

1003 (0x4F<<8Ë+
XF
 +
CF
,

1004 (0x50<<8Ë+
HF
 +
VF
 +
CF
,

1005 (0x51<<8Ë+
HF
 +
CF
,

1006 (0x52<<8Ë+
HF
 +
CF
,

1007 (0x53<<8Ë+
HF
 +
VF
 +
CF
,

1008 (0x54<<8Ë+
HF
 +
CF
,

1009 (0x55<<8Ë+
HF
 +
VF
 +
CF
,

1010 (0x56<<8Ë+
VF
 +
CF
,

1011 (0x57<<8Ë+
CF
,

1012 (0x58<<8Ë+
XF
 +
CF
,

1013 (0x59<<8Ë+
XF
+
VF
 +
CF
,

1014 (0x5A<<8Ë+
XF
+
VF
 +
CF
,

1015 (0x5B<<8Ë+
XF
 +
CF
,

1016 (0x5C<<8Ë+
XF
+
VF
 +
CF
,

1017 (0x5D<<8Ë+
XF
 +
CF
,

1018 (0x5E<<8Ë+
XF
 +
CF
,

1019 (0x5F<<8Ë+
XF
+
VF
 +
CF
,

1020 (0x60<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

1021 (0x61<<8Ë+
YF
+
HF
 +
CF
,

1022 (0x62<<8Ë+
YF
+
HF
 +
CF
,

1023 (0x63<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

1024 (0x64<<8Ë+
YF
+
HF
 +
CF
,

1025 (0x65<<8Ë+
YF
+
HF
 +
VF
 +
CF
,

1026 (0x00<<8Ë+
ZF
 +
VF
+
NF
 ,

1027 (0x01<<8Ë+
NF
 ,

1028 (0x02<<8Ë+
NF
 ,

1029 (0x03<<8Ë+
VF
+
NF
 ,

1030 (0x04<<8Ë+
NF
 ,

1031 (0x05<<8Ë+
VF
+
NF
 ,

1032 (0x06<<8Ë+
VF
+
NF
 ,

1033 (0x07<<8Ë+
NF
 ,

1034 (0x08<<8Ë+
XF
 +
NF
 ,

1035 (0x09<<8Ë+
XF
+
VF
+
NF
 ,

1036 (0x04<<8Ë+
NF
 ,

1037 (0x05<<8Ë+
VF
+
NF
 ,

1038 (0x06<<8Ë+
VF
+
NF
 ,

1039 (0x07<<8Ë+
NF
 ,

1040 (0x08<<8Ë+
XF
 +
NF
 ,

1041 (0x09<<8Ë+
XF
+
VF
+
NF
 ,

1042 (0x10<<8Ë+
NF
 ,

1043 (0x11<<8Ë+
VF
+
NF
 ,

1044 (0x12<<8Ë+
VF
+
NF
 ,

1045 (0x13<<8Ë+
NF
 ,

1046 (0x14<<8Ë+
VF
+
NF
 ,

1047 (0x15<<8Ë+
NF
 ,

1048 (0x16<<8Ë+
NF
 ,

1049 (0x17<<8Ë+
VF
+
NF
 ,

1050 (0x18<<8Ë+
XF
+
VF
+
NF
 ,

1051 (0x19<<8Ë+
XF
 +
NF
 ,

1052 (0x14<<8Ë+
VF
+
NF
 ,

1053 (0x15<<8Ë+
NF
 ,

1054 (0x16<<8Ë+
NF
 ,

1055 (0x17<<8Ë+
VF
+
NF
 ,

1056 (0x18<<8Ë+
XF
+
VF
+
NF
 ,

1057 (0x19<<8Ë+
XF
 +
NF
 ,

1058 (0x20<<8Ë+
YF
 +
NF
 ,

1059 (0x21<<8Ë+
YF
 +
VF
+
NF
 ,

1060 (0x22<<8Ë+
YF
 +
VF
+
NF
 ,

1061 (0x23<<8Ë+
YF
 +
NF
 ,

1062 (0x24<<8Ë+
YF
 +
VF
+
NF
 ,

1063 (0x25<<8Ë+
YF
 +
NF
 ,

1064 (0x26<<8Ë+
YF
 +
NF
 ,

1065 (0x27<<8Ë+
YF
 +
VF
+
NF
 ,

1066 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1067 (0x29<<8Ë+
YF
 +
XF
 +
NF
 ,

1068 (0x24<<8Ë+
YF
 +
VF
+
NF
 ,

1069 (0x25<<8Ë+
YF
 +
NF
 ,

1070 (0x26<<8Ë+
YF
 +
NF
 ,

1071 (0x27<<8Ë+
YF
 +
VF
+
NF
 ,

1072 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1073 (0x29<<8Ë+
YF
 +
XF
 +
NF
 ,

1074 (0x30<<8Ë+
YF
 +
VF
+
NF
 ,

1075 (0x31<<8Ë+
YF
 +
NF
 ,

1076 (0x32<<8Ë+
YF
 +
NF
 ,

1077 (0x33<<8Ë+
YF
 +
VF
+
NF
 ,

1078 (0x34<<8Ë+
YF
 +
NF
 ,

1079 (0x35<<8Ë+
YF
 +
VF
+
NF
 ,

1080 (0x36<<8Ë+
YF
 +
VF
+
NF
 ,

1081 (0x37<<8Ë+
YF
 +
NF
 ,

1082 (0x38<<8Ë+
YF
 +
XF
 +
NF
 ,

1083 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1084 (0x34<<8Ë+
YF
 +
NF
 ,

1085 (0x35<<8Ë+
YF
 +
VF
+
NF
 ,

1086 (0x36<<8Ë+
YF
 +
VF
+
NF
 ,

1087 (0x37<<8Ë+
YF
 +
NF
 ,

1088 (0x38<<8Ë+
YF
 +
XF
 +
NF
 ,

1089 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1090 (0x40<<8Ë+
NF
 ,

1091 (0x41<<8Ë+
VF
+
NF
 ,

1092 (0x42<<8Ë+
VF
+
NF
 ,

1093 (0x43<<8Ë+
NF
 ,

1094 (0x44<<8Ë+
VF
+
NF
 ,

1095 (0x45<<8Ë+
NF
 ,

1096 (0x46<<8Ë+
NF
 ,

1097 (0x47<<8Ë+
VF
+
NF
 ,

1098 (0x48<<8Ë+
XF
+
VF
+
NF
 ,

1099 (0x49<<8Ë+
XF
 +
NF
 ,

1100 (0x44<<8Ë+
VF
+
NF
 ,

1101 (0x45<<8Ë+
NF
 ,

1102 (0x46<<8Ë+
NF
 ,

1103 (0x47<<8Ë+
VF
+
NF
 ,

1104 (0x48<<8Ë+
XF
+
VF
+
NF
 ,

1105 (0x49<<8Ë+
XF
 +
NF
 ,

1106 (0x50<<8Ë+
VF
+
NF
 ,

1107 (0x51<<8Ë+
NF
 ,

1108 (0x52<<8Ë+
NF
 ,

1109 (0x53<<8Ë+
VF
+
NF
 ,

1110 (0x54<<8Ë+
NF
 ,

1111 (0x55<<8Ë+
VF
+
NF
 ,

1112 (0x56<<8Ë+
VF
+
NF
 ,

1113 (0x57<<8Ë+
NF
 ,

1114 (0x58<<8Ë+
XF
 +
NF
 ,

1115 (0x59<<8Ë+
XF
+
VF
+
NF
 ,

1116 (0x54<<8Ë+
NF
 ,

1117 (0x55<<8Ë+
VF
+
NF
 ,

1118 (0x56<<8Ë+
VF
+
NF
 ,

1119 (0x57<<8Ë+
NF
 ,

1120 (0x58<<8Ë+
XF
 +
NF
 ,

1121 (0x59<<8Ë+
XF
+
VF
+
NF
 ,

1122 (0x60<<8Ë+
YF
 +
VF
+
NF
 ,

1123 (0x61<<8Ë+
YF
 +
NF
 ,

1124 (0x62<<8Ë+
YF
 +
NF
 ,

1125 (0x63<<8Ë+
YF
 +
VF
+
NF
 ,

1126 (0x64<<8Ë+
YF
 +
NF
 ,

1127 (0x65<<8Ë+
YF
 +
VF
+
NF
 ,

1128 (0x66<<8Ë+
YF
 +
VF
+
NF
 ,

1129 (0x67<<8Ë+
YF
 +
NF
 ,

1130 (0x68<<8Ë+
YF
 +
XF
 +
NF
 ,

1131 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1132 (0x64<<8Ë+
YF
 +
NF
 ,

1133 (0x65<<8Ë+
YF
 +
VF
+
NF
 ,

1134 (0x66<<8Ë+
YF
 +
VF
+
NF
 ,

1135 (0x67<<8Ë+
YF
 +
NF
 ,

1136 (0x68<<8Ë+
YF
 +
XF
 +
NF
 ,

1137 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1138 (0x70<<8Ë+
YF
 +
NF
 ,

1139 (0x71<<8Ë+
YF
 +
VF
+
NF
 ,

1140 (0x72<<8Ë+
YF
 +
VF
+
NF
 ,

1141 (0x73<<8Ë+
YF
 +
NF
 ,

1142 (0x74<<8Ë+
YF
 +
VF
+
NF
 ,

1143 (0x75<<8Ë+
YF
 +
NF
 ,

1144 (0x76<<8Ë+
YF
 +
NF
 ,

1145 (0x77<<8Ë+
YF
 +
VF
+
NF
 ,

1146 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1147 (0x79<<8Ë+
YF
 +
XF
 +
NF
 ,

1148 (0x74<<8Ë+
YF
 +
VF
+
NF
 ,

1149 (0x75<<8Ë+
YF
 +
NF
 ,

1150 (0x76<<8Ë+
YF
 +
NF
 ,

1151 (0x77<<8Ë+
YF
 +
VF
+
NF
 ,

1152 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1153 (0x79<<8Ë+
YF
 +
XF
 +
NF
 ,

1154 (0x80<<8)+
SF
 +
NF
 ,

1155 (0x81<<8)+
SF
 +
VF
+
NF
 ,

1156 (0x82<<8)+
SF
 +
VF
+
NF
 ,

1157 (0x83<<8)+
SF
 +
NF
 ,

1158 (0x84<<8)+
SF
 +
VF
+
NF
 ,

1159 (0x85<<8)+
SF
 +
NF
 ,

1160 (0x86<<8)+
SF
 +
NF
 ,

1161 (0x87<<8)+
SF
 +
VF
+
NF
 ,

1162 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
 ,

1163 (0x89<<8)+
SF
 +
XF
 +
NF
 ,

1164 (0x84<<8)+
SF
 +
VF
+
NF
 ,

1165 (0x85<<8)+
SF
 +
NF
 ,

1166 (0x86<<8)+
SF
 +
NF
 ,

1167 (0x87<<8)+
SF
 +
VF
+
NF
 ,

1168 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
 ,

1169 (0x89<<8)+
SF
 +
XF
 +
NF
 ,

1170 (0x90<<8)+
SF
 +
VF
+
NF
 ,

1171 (0x91<<8)+
SF
 +
NF
 ,

1172 (0x92<<8)+
SF
 +
NF
 ,

1173 (0x93<<8)+
SF
 +
VF
+
NF
 ,

1174 (0x94<<8)+
SF
 +
NF
 ,

1175 (0x95<<8)+
SF
 +
VF
+
NF
 ,

1176 (0x96<<8)+
SF
 +
VF
+
NF
 ,

1177 (0x97<<8)+
SF
 +
NF
 ,

1178 (0x98<<8)+
SF
 +
XF
 +
NF
 ,

1179 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
 ,

1180 (0x34<<8Ë+
YF
 +
NF
+
CF
,

1181 (0x35<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1182 (0x36<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1183 (0x37<<8Ë+
YF
 +
NF
+
CF
,

1184 (0x38<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1185 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1186 (0x40<<8Ë+
NF
+
CF
,

1187 (0x41<<8Ë+
VF
+
NF
+
CF
,

1188 (0x42<<8Ë+
VF
+
NF
+
CF
,

1189 (0x43<<8Ë+
NF
+
CF
,

1190 (0x44<<8Ë+
VF
+
NF
+
CF
,

1191 (0x45<<8Ë+
NF
+
CF
,

1192 (0x46<<8Ë+
NF
+
CF
,

1193 (0x47<<8Ë+
VF
+
NF
+
CF
,

1194 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1195 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1196 (0x44<<8Ë+
VF
+
NF
+
CF
,

1197 (0x45<<8Ë+
NF
+
CF
,

1198 (0x46<<8Ë+
NF
+
CF
,

1199 (0x47<<8Ë+
VF
+
NF
+
CF
,

1200 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1201 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1202 (0x50<<8Ë+
VF
+
NF
+
CF
,

1203 (0x51<<8Ë+
NF
+
CF
,

1204 (0x52<<8Ë+
NF
+
CF
,

1205 (0x53<<8Ë+
VF
+
NF
+
CF
,

1206 (0x54<<8Ë+
NF
+
CF
,

1207 (0x55<<8Ë+
VF
+
NF
+
CF
,

1208 (0x56<<8Ë+
VF
+
NF
+
CF
,

1209 (0x57<<8Ë+
NF
+
CF
,

1210 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1211 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1212 (0x54<<8Ë+
NF
+
CF
,

1213 (0x55<<8Ë+
VF
+
NF
+
CF
,

1214 (0x56<<8Ë+
VF
+
NF
+
CF
,

1215 (0x57<<8Ë+
NF
+
CF
,

1216 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1217 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1218 (0x60<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1219 (0x61<<8Ë+
YF
 +
NF
+
CF
,

1220 (0x62<<8Ë+
YF
 +
NF
+
CF
,

1221 (0x63<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1222 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1223 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1224 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1225 (0x67<<8Ë+
YF
 +
NF
+
CF
,

1226 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1227 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1228 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1229 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1230 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1231 (0x67<<8Ë+
YF
 +
NF
+
CF
,

1232 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1233 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1234 (0x70<<8Ë+
YF
 +
NF
+
CF
,

1235 (0x71<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1236 (0x72<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1237 (0x73<<8Ë+
YF
 +
NF
+
CF
,

1238 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1239 (0x75<<8Ë+
YF
 +
NF
+
CF
,

1240 (0x76<<8Ë+
YF
 +
NF
+
CF
,

1241 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1242 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1243 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1244 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1245 (0x75<<8Ë+
YF
 +
NF
+
CF
,

1246 (0x76<<8Ë+
YF
 +
NF
+
CF
,

1247 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1248 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1249 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1250 (0x80<<8)+
SF
 +
NF
+
CF
,

1251 (0x81<<8)+
SF
 +
VF
+
NF
+
CF
,

1252 (0x82<<8)+
SF
 +
VF
+
NF
+
CF
,

1253 (0x83<<8)+
SF
 +
NF
+
CF
,

1254 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

1255 (0x85<<8)+
SF
 +
NF
+
CF
,

1256 (0x86<<8)+
SF
 +
NF
+
CF
,

1257 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

1258 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1259 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

1260 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

1261 (0x85<<8)+
SF
 +
NF
+
CF
,

1262 (0x86<<8)+
SF
 +
NF
+
CF
,

1263 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

1264 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1265 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

1266 (0x90<<8)+
SF
 +
VF
+
NF
+
CF
,

1267 (0x91<<8)+
SF
 +
NF
+
CF
,

1268 (0x92<<8)+
SF
 +
NF
+
CF
,

1269 (0x93<<8)+
SF
 +
VF
+
NF
+
CF
,

1270 (0x94<<8)+
SF
 +
NF
+
CF
,

1271 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

1272 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

1273 (0x97<<8)+
SF
 +
NF
+
CF
,

1274 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

1275 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1276 (0x94<<8)+
SF
 +
NF
+
CF
,

1277 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

1278 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

1279 (0x97<<8)+
SF
 +
NF
+
CF
,

1280 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

1281 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1282 (0xA0<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1283 (0xA1<<8)+
SF
 +
YF
 +
NF
+
CF
,

1284 (0xA2<<8)+
SF
 +
YF
 +
NF
+
CF
,

1285 (0xA3<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1286 (0xA4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1287 (0xA5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1288 (0xA6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1289 (0xA7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1290 (0xA8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1291 (0xA9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1292 (0xA4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1293 (0xA5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1294 (0xA6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1295 (0xA7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1296 (0xA8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1297 (0xA9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1298 (0xB0<<8)+
SF
 +
YF
 +
NF
+
CF
,

1299 (0xB1<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1300 (0xB2<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1301 (0xB3<<8)+
SF
 +
YF
 +
NF
+
CF
,

1302 (0xB4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1303 (0xB5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1304 (0xB6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1305 (0xB7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1306 (0xB8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1307 (0xB9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1308 (0xB4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1309 (0xB5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1310 (0xB6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1311 (0xB7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1312 (0xB8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1313 (0xB9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1314 (0xC0<<8)+
SF
 +
VF
+
NF
+
CF
,

1315 (0xC1<<8)+
SF
 +
NF
+
CF
,

1316 (0xC2<<8)+
SF
 +
NF
+
CF
,

1317 (0xC3<<8)+
SF
 +
VF
+
NF
+
CF
,

1318 (0xC4<<8)+
SF
 +
NF
+
CF
,

1319 (0xC5<<8)+
SF
 +
VF
+
NF
+
CF
,

1320 (0xC6<<8)+
SF
 +
VF
+
NF
+
CF
,

1321 (0xC7<<8)+
SF
 +
NF
+
CF
,

1322 (0xC8<<8)+
SF
 +
XF
 +
NF
+
CF
,

1323 (0xC9<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1324 (0xC4<<8)+
SF
 +
NF
+
CF
,

1325 (0xC5<<8)+
SF
 +
VF
+
NF
+
CF
,

1326 (0xC6<<8)+
SF
 +
VF
+
NF
+
CF
,

1327 (0xC7<<8)+
SF
 +
NF
+
CF
,

1328 (0xC8<<8)+
SF
 +
XF
 +
NF
+
CF
,

1329 (0xC9<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1330 (0xD0<<8)+
SF
 +
NF
+
CF
,

1331 (0xD1<<8)+
SF
 +
VF
+
NF
+
CF
,

1332 (0xD2<<8)+
SF
 +
VF
+
NF
+
CF
,

1333 (0xD3<<8)+
SF
 +
NF
+
CF
,

1334 (0xD4<<8)+
SF
 +
VF
+
NF
+
CF
,

1335 (0xD5<<8)+
SF
 +
NF
+
CF
,

1336 (0xD6<<8)+
SF
 +
NF
+
CF
,

1337 (0xD7<<8)+
SF
 +
VF
+
NF
+
CF
,

1338 (0xD8<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1339 (0xD9<<8)+
SF
 +
XF
 +
NF
+
CF
,

1340 (0xD4<<8)+
SF
 +
VF
+
NF
+
CF
,

1341 (0xD5<<8)+
SF
 +
NF
+
CF
,

1342 (0xD6<<8)+
SF
 +
NF
+
CF
,

1343 (0xD7<<8)+
SF
 +
VF
+
NF
+
CF
,

1344 (0xD8<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1345 (0xD9<<8)+
SF
 +
XF
 +
NF
+
CF
,

1346 (0xE0<<8)+
SF
 +
YF
 +
NF
+
CF
,

1347 (0xE1<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1348 (0xE2<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1349 (0xE3<<8)+
SF
 +
YF
 +
NF
+
CF
,

1350 (0xE4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1351 (0xE5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1352 (0xE6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1353 (0xE7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1354 (0xE8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1355 (0xE9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1356 (0xE4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1357 (0xE5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1358 (0xE6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1359 (0xE7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1360 (0xE8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1361 (0xE9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1362 (0xF0<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1363 (0xF1<<8)+
SF
 +
YF
 +
NF
+
CF
,

1364 (0xF2<<8)+
SF
 +
YF
 +
NF
+
CF
,

1365 (0xF3<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1366 (0xF4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1367 (0xF5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1368 (0xF6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1369 (0xF7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1370 (0xF8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1371 (0xF9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1372 (0xF4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1373 (0xF5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1374 (0xF6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1375 (0xF7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1376 (0xF8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1377 (0xF9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1378 (0x00<<8Ë+
ZF
 +
VF
+
NF
+
CF
,

1379 (0x01<<8Ë+
NF
+
CF
,

1380 (0x02<<8Ë+
NF
+
CF
,

1381 (0x03<<8Ë+
VF
+
NF
+
CF
,

1382 (0x04<<8Ë+
NF
+
CF
,

1383 (0x05<<8Ë+
VF
+
NF
+
CF
,

1384 (0x06<<8Ë+
VF
+
NF
+
CF
,

1385 (0x07<<8Ë+
NF
+
CF
,

1386 (0x08<<8Ë+
XF
 +
NF
+
CF
,

1387 (0x09<<8Ë+
XF
+
VF
+
NF
+
CF
,

1388 (0x04<<8Ë+
NF
+
CF
,

1389 (0x05<<8Ë+
VF
+
NF
+
CF
,

1390 (0x06<<8Ë+
VF
+
NF
+
CF
,

1391 (0x07<<8Ë+
NF
+
CF
,

1392 (0x08<<8Ë+
XF
 +
NF
+
CF
,

1393 (0x09<<8Ë+
XF
+
VF
+
NF
+
CF
,

1394 (0x10<<8Ë+
NF
+
CF
,

1395 (0x11<<8Ë+
VF
+
NF
+
CF
,

1396 (0x12<<8Ë+
VF
+
NF
+
CF
,

1397 (0x13<<8Ë+
NF
+
CF
,

1398 (0x14<<8Ë+
VF
+
NF
+
CF
,

1399 (0x15<<8Ë+
NF
+
CF
,

1400 (0x16<<8Ë+
NF
+
CF
,

1401 (0x17<<8Ë+
VF
+
NF
+
CF
,

1402 (0x18<<8Ë+
XF
+
VF
+
NF
+
CF
,

1403 (0x19<<8Ë+
XF
 +
NF
+
CF
,

1404 (0x14<<8Ë+
VF
+
NF
+
CF
,

1405 (0x15<<8Ë+
NF
+
CF
,

1406 (0x16<<8Ë+
NF
+
CF
,

1407 (0x17<<8Ë+
VF
+
NF
+
CF
,

1408 (0x18<<8Ë+
XF
+
VF
+
NF
+
CF
,

1409 (0x19<<8Ë+
XF
 +
NF
+
CF
,

1410 (0x20<<8Ë+
YF
 +
NF
+
CF
,

1411 (0x21<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1412 (0x22<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1413 (0x23<<8Ë+
YF
 +
NF
+
CF
,

1414 (0x24<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1415 (0x25<<8Ë+
YF
 +
NF
+
CF
,

1416 (0x26<<8Ë+
YF
 +
NF
+
CF
,

1417 (0x27<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1418 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1419 (0x29<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1420 (0x24<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1421 (0x25<<8Ë+
YF
 +
NF
+
CF
,

1422 (0x26<<8Ë+
YF
 +
NF
+
CF
,

1423 (0x27<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1424 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1425 (0x29<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1426 (0x30<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1427 (0x31<<8Ë+
YF
 +
NF
+
CF
,

1428 (0x32<<8Ë+
YF
 +
NF
+
CF
,

1429 (0x33<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1430 (0x34<<8Ë+
YF
 +
NF
+
CF
,

1431 (0x35<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1432 (0x36<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1433 (0x37<<8Ë+
YF
 +
NF
+
CF
,

1434 (0x38<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1435 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1436 (0x34<<8Ë+
YF
 +
NF
+
CF
,

1437 (0x35<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1438 (0x36<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1439 (0x37<<8Ë+
YF
 +
NF
+
CF
,

1440 (0x38<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1441 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1442 (0x40<<8Ë+
NF
+
CF
,

1443 (0x41<<8Ë+
VF
+
NF
+
CF
,

1444 (0x42<<8Ë+
VF
+
NF
+
CF
,

1445 (0x43<<8Ë+
NF
+
CF
,

1446 (0x44<<8Ë+
VF
+
NF
+
CF
,

1447 (0x45<<8Ë+
NF
+
CF
,

1448 (0x46<<8Ë+
NF
+
CF
,

1449 (0x47<<8Ë+
VF
+
NF
+
CF
,

1450 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1451 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1452 (0x44<<8Ë+
VF
+
NF
+
CF
,

1453 (0x45<<8Ë+
NF
+
CF
,

1454 (0x46<<8Ë+
NF
+
CF
,

1455 (0x47<<8Ë+
VF
+
NF
+
CF
,

1456 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1457 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1458 (0x50<<8Ë+
VF
+
NF
+
CF
,

1459 (0x51<<8Ë+
NF
+
CF
,

1460 (0x52<<8Ë+
NF
+
CF
,

1461 (0x53<<8Ë+
VF
+
NF
+
CF
,

1462 (0x54<<8Ë+
NF
+
CF
,

1463 (0x55<<8Ë+
VF
+
NF
+
CF
,

1464 (0x56<<8Ë+
VF
+
NF
+
CF
,

1465 (0x57<<8Ë+
NF
+
CF
,

1466 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1467 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1468 (0x54<<8Ë+
NF
+
CF
,

1469 (0x55<<8Ë+
VF
+
NF
+
CF
,

1470 (0x56<<8Ë+
VF
+
NF
+
CF
,

1471 (0x57<<8Ë+
NF
+
CF
,

1472 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1473 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1474 (0x60<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1475 (0x61<<8Ë+
YF
 +
NF
+
CF
,

1476 (0x62<<8Ë+
YF
 +
NF
+
CF
,

1477 (0x63<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1478 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1479 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1480 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1481 (0x67<<8Ë+
YF
 +
NF
+
CF
,

1482 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1483 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1484 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1485 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1486 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1487 (0x67<<8Ë+
YF
 +
NF
+
CF
,

1488 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1489 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1490 (0x70<<8Ë+
YF
 +
NF
+
CF
,

1491 (0x71<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1492 (0x72<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1493 (0x73<<8Ë+
YF
 +
NF
+
CF
,

1494 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1495 (0x75<<8Ë+
YF
 +
NF
+
CF
,

1496 (0x76<<8Ë+
YF
 +
NF
+
CF
,

1497 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1498 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1499 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1500 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1501 (0x75<<8Ë+
YF
 +
NF
+
CF
,

1502 (0x76<<8Ë+
YF
 +
NF
+
CF
,

1503 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1504 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1505 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1506 (0x80<<8)+
SF
 +
NF
+
CF
,

1507 (0x81<<8)+
SF
 +
VF
+
NF
+
CF
,

1508 (0x82<<8)+
SF
 +
VF
+
NF
+
CF
,

1509 (0x83<<8)+
SF
 +
NF
+
CF
,

1510 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

1511 (0x85<<8)+
SF
 +
NF
+
CF
,

1512 (0x86<<8)+
SF
 +
NF
+
CF
,

1513 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

1514 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1515 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

1516 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

1517 (0x85<<8)+
SF
 +
NF
+
CF
,

1518 (0x86<<8)+
SF
 +
NF
+
CF
,

1519 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

1520 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1521 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

1522 (0x90<<8)+
SF
 +
VF
+
NF
+
CF
,

1523 (0x91<<8)+
SF
 +
NF
+
CF
,

1524 (0x92<<8)+
SF
 +
NF
+
CF
,

1525 (0x93<<8)+
SF
 +
VF
+
NF
+
CF
,

1526 (0x94<<8)+
SF
 +
NF
+
CF
,

1527 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

1528 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

1529 (0x97<<8)+
SF
 +
NF
+
CF
,

1530 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

1531 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1532 (0x94<<8)+
SF
 +
NF
+
CF
,

1533 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

1534 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

1535 (0x97<<8)+
SF
 +
NF
+
CF
,

1536 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

1537 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1538 (0xFA<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
 ,

1539 (0xFB<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
 ,

1540 (0xFC<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
 ,

1541 (0xFD<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
 ,

1542 (0xFE<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
 ,

1543 (0xFF<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
 ,

1544 (0x00<<8Ë+
ZF
 +
VF
+
NF
 ,

1545 (0x01<<8Ë+
NF
 ,

1546 (0x02<<8Ë+
NF
 ,

1547 (0x03<<8Ë+
VF
+
NF
 ,

1548 (0x04<<8Ë+
NF
 ,

1549 (0x05<<8Ë+
VF
+
NF
 ,

1550 (0x06<<8Ë+
VF
+
NF
 ,

1551 (0x07<<8Ë+
NF
 ,

1552 (0x08<<8Ë+
XF
 +
NF
 ,

1553 (0x09<<8Ë+
XF
+
VF
+
NF
 ,

1554 (0x0A<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1555 (0x0B<<8Ë+
HF
+
XF
 +
NF
 ,

1556 (0x0C<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1557 (0x0D<<8Ë+
HF
+
XF
 +
NF
 ,

1558 (0x0E<<8Ë+
HF
+
XF
 +
NF
 ,

1559 (0x0F<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1560 (0x10<<8Ë+
NF
 ,

1561 (0x11<<8Ë+
VF
+
NF
 ,

1562 (0x12<<8Ë+
VF
+
NF
 ,

1563 (0x13<<8Ë+
NF
 ,

1564 (0x14<<8Ë+
VF
+
NF
 ,

1565 (0x15<<8Ë+
NF
 ,

1566 (0x16<<8Ë+
NF
 ,

1567 (0x17<<8Ë+
VF
+
NF
 ,

1568 (0x18<<8Ë+
XF
+
VF
+
NF
 ,

1569 (0x19<<8Ë+
XF
 +
NF
 ,

1570 (0x1A<<8Ë+
HF
+
XF
 +
NF
 ,

1571 (0x1B<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1572 (0x1C<<8Ë+
HF
+
XF
 +
NF
 ,

1573 (0x1D<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1574 (0x1E<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1575 (0x1F<<8Ë+
HF
+
XF
 +
NF
 ,

1576 (0x20<<8Ë+
YF
 +
NF
 ,

1577 (0x21<<8Ë+
YF
 +
VF
+
NF
 ,

1578 (0x22<<8Ë+
YF
 +
VF
+
NF
 ,

1579 (0x23<<8Ë+
YF
 +
NF
 ,

1580 (0x24<<8Ë+
YF
 +
VF
+
NF
 ,

1581 (0x25<<8Ë+
YF
 +
NF
 ,

1582 (0x26<<8Ë+
YF
 +
NF
 ,

1583 (0x27<<8Ë+
YF
 +
VF
+
NF
 ,

1584 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1585 (0x29<<8Ë+
YF
 +
XF
 +
NF
 ,

1586 (0x2A<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1587 (0x2B<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1588 (0x2C<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1589 (0x2D<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1590 (0x2E<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1591 (0x2F<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1592 (0x30<<8Ë+
YF
 +
VF
+
NF
 ,

1593 (0x31<<8Ë+
YF
 +
NF
 ,

1594 (0x32<<8Ë+
YF
 +
NF
 ,

1595 (0x33<<8Ë+
YF
 +
VF
+
NF
 ,

1596 (0x34<<8Ë+
YF
 +
NF
 ,

1597 (0x35<<8Ë+
YF
 +
VF
+
NF
 ,

1598 (0x36<<8Ë+
YF
 +
VF
+
NF
 ,

1599 (0x37<<8Ë+
YF
 +
NF
 ,

1600 (0x38<<8Ë+
YF
 +
XF
 +
NF
 ,

1601 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1602 (0x3A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1603 (0x3B<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1604 (0x3C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1605 (0x3D<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1606 (0x3E<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1607 (0x3F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1608 (0x40<<8Ë+
NF
 ,

1609 (0x41<<8Ë+
VF
+
NF
 ,

1610 (0x42<<8Ë+
VF
+
NF
 ,

1611 (0x43<<8Ë+
NF
 ,

1612 (0x44<<8Ë+
VF
+
NF
 ,

1613 (0x45<<8Ë+
NF
 ,

1614 (0x46<<8Ë+
NF
 ,

1615 (0x47<<8Ë+
VF
+
NF
 ,

1616 (0x48<<8Ë+
XF
+
VF
+
NF
 ,

1617 (0x49<<8Ë+
XF
 +
NF
 ,

1618 (0x4A<<8Ë+
HF
+
XF
 +
NF
 ,

1619 (0x4B<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1620 (0x4C<<8Ë+
HF
+
XF
 +
NF
 ,

1621 (0x4D<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1622 (0x4E<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1623 (0x4F<<8Ë+
HF
+
XF
 +
NF
 ,

1624 (0x50<<8Ë+
VF
+
NF
 ,

1625 (0x51<<8Ë+
NF
 ,

1626 (0x52<<8Ë+
NF
 ,

1627 (0x53<<8Ë+
VF
+
NF
 ,

1628 (0x54<<8Ë+
NF
 ,

1629 (0x55<<8Ë+
VF
+
NF
 ,

1630 (0x56<<8Ë+
VF
+
NF
 ,

1631 (0x57<<8Ë+
NF
 ,

1632 (0x58<<8Ë+
XF
 +
NF
 ,

1633 (0x59<<8Ë+
XF
+
VF
+
NF
 ,

1634 (0x5A<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1635 (0x5B<<8Ë+
HF
+
XF
 +
NF
 ,

1636 (0x5C<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1637 (0x5D<<8Ë+
HF
+
XF
 +
NF
 ,

1638 (0x5E<<8Ë+
HF
+
XF
 +
NF
 ,

1639 (0x5F<<8Ë+
HF
+
XF
+
VF
+
NF
 ,

1640 (0x60<<8Ë+
YF
 +
VF
+
NF
 ,

1641 (0x61<<8Ë+
YF
 +
NF
 ,

1642 (0x62<<8Ë+
YF
 +
NF
 ,

1643 (0x63<<8Ë+
YF
 +
VF
+
NF
 ,

1644 (0x64<<8Ë+
YF
 +
NF
 ,

1645 (0x65<<8Ë+
YF
 +
VF
+
NF
 ,

1646 (0x66<<8Ë+
YF
 +
VF
+
NF
 ,

1647 (0x67<<8Ë+
YF
 +
NF
 ,

1648 (0x68<<8Ë+
YF
 +
XF
 +
NF
 ,

1649 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1650 (0x6A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1651 (0x6B<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1652 (0x6C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1653 (0x6D<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1654 (0x6E<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1655 (0x6F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1656 (0x70<<8Ë+
YF
 +
NF
 ,

1657 (0x71<<8Ë+
YF
 +
VF
+
NF
 ,

1658 (0x72<<8Ë+
YF
 +
VF
+
NF
 ,

1659 (0x73<<8Ë+
YF
 +
NF
 ,

1660 (0x74<<8Ë+
YF
 +
VF
+
NF
 ,

1661 (0x75<<8Ë+
YF
 +
NF
 ,

1662 (0x76<<8Ë+
YF
 +
NF
 ,

1663 (0x77<<8Ë+
YF
 +
VF
+
NF
 ,

1664 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
 ,

1665 (0x79<<8Ë+
YF
 +
XF
 +
NF
 ,

1666 (0x7A<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1667 (0x7B<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1668 (0x7C<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1669 (0x7D<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1670 (0x7E<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
 ,

1671 (0x7F<<8Ë+
YF
+
HF
+
XF
 +
NF
 ,

1672 (0x80<<8)+
SF
 +
NF
 ,

1673 (0x81<<8)+
SF
 +
VF
+
NF
 ,

1674 (0x82<<8)+
SF
 +
VF
+
NF
 ,

1675 (0x83<<8)+
SF
 +
NF
 ,

1676 (0x84<<8)+
SF
 +
VF
+
NF
 ,

1677 (0x85<<8)+
SF
 +
NF
 ,

1678 (0x86<<8)+
SF
 +
NF
 ,

1679 (0x87<<8)+
SF
 +
VF
+
NF
 ,

1680 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
 ,

1681 (0x89<<8)+
SF
 +
XF
 +
NF
 ,

1682 (0x8A<<8)+
SF
 +
HF
+
XF
 +
NF
 ,

1683 (0x8B<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
 ,

1684 (0x8C<<8)+
SF
 +
HF
+
XF
 +
NF
 ,

1685 (0x8D<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
 ,

1686 (0x8E<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
 ,

1687 (0x8F<<8)+
SF
 +
HF
+
XF
 +
NF
 ,

1688 (0x90<<8)+
SF
 +
VF
+
NF
 ,

1689 (0x91<<8)+
SF
 +
NF
 ,

1690 (0x92<<8)+
SF
 +
NF
 ,

1691 (0x93<<8)+
SF
 +
VF
+
NF
 ,

1692 (0x34<<8Ë+
YF
 +
NF
+
CF
,

1693 (0x35<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1694 (0x36<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1695 (0x37<<8Ë+
YF
 +
NF
+
CF
,

1696 (0x38<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1697 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1698 (0x3A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1699 (0x3B<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1700 (0x3C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1701 (0x3D<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1702 (0x3E<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1703 (0x3F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1704 (0x40<<8Ë+
NF
+
CF
,

1705 (0x41<<8Ë+
VF
+
NF
+
CF
,

1706 (0x42<<8Ë+
VF
+
NF
+
CF
,

1707 (0x43<<8Ë+
NF
+
CF
,

1708 (0x44<<8Ë+
VF
+
NF
+
CF
,

1709 (0x45<<8Ë+
NF
+
CF
,

1710 (0x46<<8Ë+
NF
+
CF
,

1711 (0x47<<8Ë+
VF
+
NF
+
CF
,

1712 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1713 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1714 (0x4A<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1715 (0x4B<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1716 (0x4C<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1717 (0x4D<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1718 (0x4E<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1719 (0x4F<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1720 (0x50<<8Ë+
VF
+
NF
+
CF
,

1721 (0x51<<8Ë+
NF
+
CF
,

1722 (0x52<<8Ë+
NF
+
CF
,

1723 (0x53<<8Ë+
VF
+
NF
+
CF
,

1724 (0x54<<8Ë+
NF
+
CF
,

1725 (0x55<<8Ë+
VF
+
NF
+
CF
,

1726 (0x56<<8Ë+
VF
+
NF
+
CF
,

1727 (0x57<<8Ë+
NF
+
CF
,

1728 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1729 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1730 (0x5A<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1731 (0x5B<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1732 (0x5C<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1733 (0x5D<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1734 (0x5E<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1735 (0x5F<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1736 (0x60<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1737 (0x61<<8Ë+
YF
 +
NF
+
CF
,

1738 (0x62<<8Ë+
YF
 +
NF
+
CF
,

1739 (0x63<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1740 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1741 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1742 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1743 (0x67<<8Ë+
YF
 +
NF
+
CF
,

1744 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1745 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1746 (0x6A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1747 (0x6B<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1748 (0x6C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1749 (0x6D<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1750 (0x6E<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1751 (0x6F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1752 (0x70<<8Ë+
YF
 +
NF
+
CF
,

1753 (0x71<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1754 (0x72<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1755 (0x73<<8Ë+
YF
 +
NF
+
CF
,

1756 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1757 (0x75<<8Ë+
YF
 +
NF
+
CF
,

1758 (0x76<<8Ë+
YF
 +
NF
+
CF
,

1759 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1760 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1761 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1762 (0x7A<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1763 (0x7B<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1764 (0x7C<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1765 (0x7D<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1766 (0x7E<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1767 (0x7F<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1768 (0x80<<8)+
SF
 +
NF
+
CF
,

1769 (0x81<<8)+
SF
 +
VF
+
NF
+
CF
,

1770 (0x82<<8)+
SF
 +
VF
+
NF
+
CF
,

1771 (0x83<<8)+
SF
 +
NF
+
CF
,

1772 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

1773 (0x85<<8)+
SF
 +
NF
+
CF
,

1774 (0x86<<8)+
SF
 +
NF
+
CF
,

1775 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

1776 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1777 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

1778 (0x8A<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1779 (0x8B<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1780 (0x8C<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1781 (0x8D<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1782 (0x8E<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1783 (0x8F<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1784 (0x90<<8)+
SF
 +
VF
+
NF
+
CF
,

1785 (0x91<<8)+
SF
 +
NF
+
CF
,

1786 (0x92<<8)+
SF
 +
NF
+
CF
,

1787 (0x93<<8)+
SF
 +
VF
+
NF
+
CF
,

1788 (0x94<<8)+
SF
 +
NF
+
CF
,

1789 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

1790 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

1791 (0x97<<8)+
SF
 +
NF
+
CF
,

1792 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

1793 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1794 (0x9A<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1795 (0x9B<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1796 (0x9C<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1797 (0x9D<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1798 (0x9E<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1799 (0x9F<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1800 (0xA0<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1801 (0xA1<<8)+
SF
 +
YF
 +
NF
+
CF
,

1802 (0xA2<<8)+
SF
 +
YF
 +
NF
+
CF
,

1803 (0xA3<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1804 (0xA4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1805 (0xA5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1806 (0xA6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1807 (0xA7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1808 (0xA8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1809 (0xA9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1810 (0xAA<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1811 (0xAB<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1812 (0xAC<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1813 (0xAD<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1814 (0xAE<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1815 (0xAF<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1816 (0xB0<<8)+
SF
 +
YF
 +
NF
+
CF
,

1817 (0xB1<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1818 (0xB2<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1819 (0xB3<<8)+
SF
 +
YF
 +
NF
+
CF
,

1820 (0xB4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1821 (0xB5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1822 (0xB6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1823 (0xB7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1824 (0xB8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1825 (0xB9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1826 (0xBA<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1827 (0xBB<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1828 (0xBC<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1829 (0xBD<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1830 (0xBE<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1831 (0xBF<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1832 (0xC0<<8)+
SF
 +
VF
+
NF
+
CF
,

1833 (0xC1<<8)+
SF
 +
NF
+
CF
,

1834 (0xC2<<8)+
SF
 +
NF
+
CF
,

1835 (0xC3<<8)+
SF
 +
VF
+
NF
+
CF
,

1836 (0xC4<<8)+
SF
 +
NF
+
CF
,

1837 (0xC5<<8)+
SF
 +
VF
+
NF
+
CF
,

1838 (0xC6<<8)+
SF
 +
VF
+
NF
+
CF
,

1839 (0xC7<<8)+
SF
 +
NF
+
CF
,

1840 (0xC8<<8)+
SF
 +
XF
 +
NF
+
CF
,

1841 (0xC9<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1842 (0xCA<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1843 (0xCB<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1844 (0xCC<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1845 (0xCD<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1846 (0xCE<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1847 (0xCF<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1848 (0xD0<<8)+
SF
 +
NF
+
CF
,

1849 (0xD1<<8)+
SF
 +
VF
+
NF
+
CF
,

1850 (0xD2<<8)+
SF
 +
VF
+
NF
+
CF
,

1851 (0xD3<<8)+
SF
 +
NF
+
CF
,

1852 (0xD4<<8)+
SF
 +
VF
+
NF
+
CF
,

1853 (0xD5<<8)+
SF
 +
NF
+
CF
,

1854 (0xD6<<8)+
SF
 +
NF
+
CF
,

1855 (0xD7<<8)+
SF
 +
VF
+
NF
+
CF
,

1856 (0xD8<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

1857 (0xD9<<8)+
SF
 +
XF
 +
NF
+
CF
,

1858 (0xDA<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1859 (0xDB<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1860 (0xDC<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1861 (0xDD<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1862 (0xDE<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

1863 (0xDF<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

1864 (0xE0<<8)+
SF
 +
YF
 +
NF
+
CF
,

1865 (0xE1<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1866 (0xE2<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1867 (0xE3<<8)+
SF
 +
YF
 +
NF
+
CF
,

1868 (0xE4<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1869 (0xE5<<8)+
SF
 +
YF
 +
NF
+
CF
,

1870 (0xE6<<8)+
SF
 +
YF
 +
NF
+
CF
,

1871 (0xE7<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1872 (0xE8<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1873 (0xE9<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1874 (0xEA<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1875 (0xEB<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1876 (0xEC<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1877 (0xED<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1878 (0xEE<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1879 (0xEF<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1880 (0xF0<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1881 (0xF1<<8)+
SF
 +
YF
 +
NF
+
CF
,

1882 (0xF2<<8)+
SF
 +
YF
 +
NF
+
CF
,

1883 (0xF3<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1884 (0xF4<<8)+
SF
 +
YF
 +
NF
+
CF
,

1885 (0xF5<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1886 (0xF6<<8)+
SF
 +
YF
 +
VF
+
NF
+
CF
,

1887 (0xF7<<8)+
SF
 +
YF
 +
NF
+
CF
,

1888 (0xF8<<8)+
SF
 +
YF
 +
XF
 +
NF
+
CF
,

1889 (0xF9<<8)+
SF
 +
YF
 +
XF
+
VF
+
NF
+
CF
,

1890 (0xFA<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1891 (0xFB<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1892 (0xFC<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1893 (0xFD<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1894 (0xFE<<8)+
SF
 +
YF
+
HF
+
XF
 +
NF
+
CF
,

1895 (0xFF<<8)+
SF
 +
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1896 (0x00<<8Ë+
ZF
 +
VF
+
NF
+
CF
,

1897 (0x01<<8Ë+
NF
+
CF
,

1898 (0x02<<8Ë+
NF
+
CF
,

1899 (0x03<<8Ë+
VF
+
NF
+
CF
,

1900 (0x04<<8Ë+
NF
+
CF
,

1901 (0x05<<8Ë+
VF
+
NF
+
CF
,

1902 (0x06<<8Ë+
VF
+
NF
+
CF
,

1903 (0x07<<8Ë+
NF
+
CF
,

1904 (0x08<<8Ë+
XF
 +
NF
+
CF
,

1905 (0x09<<8Ë+
XF
+
VF
+
NF
+
CF
,

1906 (0x0A<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1907 (0x0B<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1908 (0x0C<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1909 (0x0D<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1910 (0x0E<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1911 (0x0F<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1912 (0x10<<8Ë+
NF
+
CF
,

1913 (0x11<<8Ë+
VF
+
NF
+
CF
,

1914 (0x12<<8Ë+
VF
+
NF
+
CF
,

1915 (0x13<<8Ë+
NF
+
CF
,

1916 (0x14<<8Ë+
VF
+
NF
+
CF
,

1917 (0x15<<8Ë+
NF
+
CF
,

1918 (0x16<<8Ë+
NF
+
CF
,

1919 (0x17<<8Ë+
VF
+
NF
+
CF
,

1920 (0x18<<8Ë+
XF
+
VF
+
NF
+
CF
,

1921 (0x19<<8Ë+
XF
 +
NF
+
CF
,

1922 (0x1A<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1923 (0x1B<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1924 (0x1C<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1925 (0x1D<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1926 (0x1E<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1927 (0x1F<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1928 (0x20<<8Ë+
YF
 +
NF
+
CF
,

1929 (0x21<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1930 (0x22<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1931 (0x23<<8Ë+
YF
 +
NF
+
CF
,

1932 (0x24<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1933 (0x25<<8Ë+
YF
 +
NF
+
CF
,

1934 (0x26<<8Ë+
YF
 +
NF
+
CF
,

1935 (0x27<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1936 (0x28<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1937 (0x29<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1938 (0x2A<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1939 (0x2B<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1940 (0x2C<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1941 (0x2D<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1942 (0x2E<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1943 (0x2F<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1944 (0x30<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1945 (0x31<<8Ë+
YF
 +
NF
+
CF
,

1946 (0x32<<8Ë+
YF
 +
NF
+
CF
,

1947 (0x33<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1948 (0x34<<8Ë+
YF
 +
NF
+
CF
,

1949 (0x35<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1950 (0x36<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1951 (0x37<<8Ë+
YF
 +
NF
+
CF
,

1952 (0x38<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

1953 (0x39<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

1954 (0x3A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1955 (0x3B<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1956 (0x3C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1957 (0x3D<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1958 (0x3E<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

1959 (0x3F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

1960 (0x40<<8Ë+
NF
+
CF
,

1961 (0x41<<8Ë+
VF
+
NF
+
CF
,

1962 (0x42<<8Ë+
VF
+
NF
+
CF
,

1963 (0x43<<8Ë+
NF
+
CF
,

1964 (0x44<<8Ë+
VF
+
NF
+
CF
,

1965 (0x45<<8Ë+
NF
+
CF
,

1966 (0x46<<8Ë+
NF
+
CF
,

1967 (0x47<<8Ë+
VF
+
NF
+
CF
,

1968 (0x48<<8Ë+
XF
+
VF
+
NF
+
CF
,

1969 (0x49<<8Ë+
XF
 +
NF
+
CF
,

1970 (0x4A<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1971 (0x4B<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1972 (0x4C<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1973 (0x4D<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1974 (0x4E<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1975 (0x4F<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1976 (0x50<<8Ë+
VF
+
NF
+
CF
,

1977 (0x51<<8Ë+
NF
+
CF
,

1978 (0x52<<8Ë+
NF
+
CF
,

1979 (0x53<<8Ë+
VF
+
NF
+
CF
,

1980 (0x54<<8Ë+
NF
+
CF
,

1981 (0x55<<8Ë+
VF
+
NF
+
CF
,

1982 (0x56<<8Ë+
VF
+
NF
+
CF
,

1983 (0x57<<8Ë+
NF
+
CF
,

1984 (0x58<<8Ë+
XF
 +
NF
+
CF
,

1985 (0x59<<8Ë+
XF
+
VF
+
NF
+
CF
,

1986 (0x5A<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1987 (0x5B<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1988 (0x5C<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1989 (0x5D<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1990 (0x5E<<8Ë+
HF
+
XF
 +
NF
+
CF
,

1991 (0x5F<<8Ë+
HF
+
XF
+
VF
+
NF
+
CF
,

1992 (0x60<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1993 (0x61<<8Ë+
YF
 +
NF
+
CF
,

1994 (0x62<<8Ë+
YF
 +
NF
+
CF
,

1995 (0x63<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1996 (0x64<<8Ë+
YF
 +
NF
+
CF
,

1997 (0x65<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1998 (0x66<<8Ë+
YF
 +
VF
+
NF
+
CF
,

1999 (0x67<<8Ë+
YF
 +
NF
+
CF
,

2000 (0x68<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

2001 (0x69<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

2002 (0x6A<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2003 (0x6B<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2004 (0x6C<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2005 (0x6D<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2006 (0x6E<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2007 (0x6F<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2008 (0x70<<8Ë+
YF
 +
NF
+
CF
,

2009 (0x71<<8Ë+
YF
 +
VF
+
NF
+
CF
,

2010 (0x72<<8Ë+
YF
 +
VF
+
NF
+
CF
,

2011 (0x73<<8Ë+
YF
 +
NF
+
CF
,

2012 (0x74<<8Ë+
YF
 +
VF
+
NF
+
CF
,

2013 (0x75<<8Ë+
YF
 +
NF
+
CF
,

2014 (0x76<<8Ë+
YF
 +
NF
+
CF
,

2015 (0x77<<8Ë+
YF
 +
VF
+
NF
+
CF
,

2016 (0x78<<8Ë+
YF
 +
XF
+
VF
+
NF
+
CF
,

2017 (0x79<<8Ë+
YF
 +
XF
 +
NF
+
CF
,

2018 (0x7A<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2019 (0x7B<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2020 (0x7C<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2021 (0x7D<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2022 (0x7E<<8Ë+
YF
+
HF
+
XF
+
VF
+
NF
+
CF
,

2023 (0x7F<<8Ë+
YF
+
HF
+
XF
 +
NF
+
CF
,

2024 (0x80<<8)+
SF
 +
NF
+
CF
,

2025 (0x81<<8)+
SF
 +
VF
+
NF
+
CF
,

2026 (0x82<<8)+
SF
 +
VF
+
NF
+
CF
,

2027 (0x83<<8)+
SF
 +
NF
+
CF
,

2028 (0x84<<8)+
SF
 +
VF
+
NF
+
CF
,

2029 (0x85<<8)+
SF
 +
NF
+
CF
,

2030 (0x86<<8)+
SF
 +
NF
+
CF
,

2031 (0x87<<8)+
SF
 +
VF
+
NF
+
CF
,

2032 (0x88<<8)+
SF
 +
XF
+
VF
+
NF
+
CF
,

2033 (0x89<<8)+
SF
 +
XF
 +
NF
+
CF
,

2034 (0x8A<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

2035 (0x8B<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

2036 (0x8C<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

2037 (0x8D<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

2038 (0x8E<<8)+
SF
 +
HF
+
XF
+
VF
+
NF
+
CF
,

2039 (0x8F<<8)+
SF
 +
HF
+
XF
 +
NF
+
CF
,

2040 (0x90<<8)+
SF
 +
VF
+
NF
+
CF
,

2041 (0x91<<8)+
SF
 +
NF
+
CF
,

2042 (0x92<<8)+
SF
 +
NF
+
CF
,

2043 (0x93<<8)+
SF
 +
VF
+
NF
+
CF
,

2044 (0x94<<8)+
SF
 +
NF
+
CF
,

2045 (0x95<<8)+
SF
 +
VF
+
NF
+
CF
,

2046 (0x96<<8)+
SF
 +
VF
+
NF
+
CF
,

2047 (0x97<<8)+
SF
 +
NF
+
CF
,

2048 (0x98<<8)+
SF
 +
XF
 +
NF
+
CF
,

2049 (0x99<<8)+
SF
 +
XF
+
VF
+
NF
+
CF


	@src/mamez80_interf.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

24 #ifde‡
USE_MAMEZ80


26 
	~"emu.h
"

27 
	~"mem‹y.h
"

28 
	~"mamez80/z80.h
"

29 
	~"°©e.h
"

31 
Uöt8
 *
	gz80m≠1
, *
	gz80m≠2
, *
	gz80m≠3
, *
	gz80m≠4
;

33 
Uöt8
 
	gmame_z80mem
[0x10000];

46 
	$mame_z80_wrôemem16
(
Uöt16
 
addr
, 
Uöt8
 
vÆ
)

49 i‡(
addr
 >= 0xf800)

50 
mem‹y
.
z80_øm
[
addr
 - 0xf800] = 
vÆ
;

52 
	}
}

54 
Uöt8
 
	$mame_z80_ªadmem16
(
Uöt16
 
addr
)

56 i‡(
addr
 <= 0x7fff)

57  
mem‹y
.
rom
.
˝u_z80
.
p
[
addr
];

58 i‡(
addr
 <= 0xbfff)

59  
z80m≠1
[
addr
 - 0x8000];

60 i‡(
addr
 <= 0xdfff)

61  
z80m≠2
[
addr
 - 0xc000];

62 i‡(
addr
 <= 0xefff)

63  
z80m≠3
[
addr
 - 0xe000];

64 i‡(
addr
 <= 0xf7ff)

65  
z80m≠4
[
addr
 - 0xf000];

66  
mem‹y
.
z80_øm
[
addr
 - 0xf800];

67 
	}
}

70 
Uöt8
 
	$mame_z80_ªad›
(
Uöt16
 
addr
)

72  
	`mame_z80_ªadmem16
(
addr
);

73 
	}
}

75 
Uöt8
 
	$mame_z80_ªad›_¨g
(
Uöt16
 
addr
)

77  
	`mame_z80_ªadmem16
(
addr
);

78 
	}
}

81 
	$mame_z80_wrôï‹t16
(
Uöt16
 
p‹t
, 
Uöt8
 
vÆue
)

84 
	`z80_p‹t_wrôe
(
p‹t
, 
vÆue
);

85 
	}
}

87 
Uöt8
 
	$mame_z80_ªadp‹t16
(
Uöt16
 
p‹t
)

90  
	`z80_p‹t_ªad
(
p‹t
);

91 
	}
}

95 
	$˝u_z80_swôchb™k
(
Uöt8
 
b™k
, 
Uöt16
 
P‹tNo
)

97 i‡(
b™k
<=3)

98 
z80_b™k
[
b™k
]=
P‹tNo
;

100 
b™k
) {

102 
z80m≠1
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x4000 * ((
P‹tNo
 >> 8) & 0x0f));

103 i‡((0x4000 * ((
P‹tNo
 >> 8Ë& 0x0f))<
mem‹y
.
rom
.
˝u_z80
.
size
)

104 #ifde‡
GP2X


105 
	`mem˝y
(
mame_z80mem
 + 0x8000, 
z80m≠1
, 0x4000);

107 
	`mem˝y
(
mame_z80mem
 + 0x8000, 
z80m≠1
, 0x4000);

111 
z80m≠2
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x2000 * ((
P‹tNo
 >> 8) & 0x1f));

112 i‡((0x2000 * ((
P‹tNo
 >> 8Ë& 0x1f))<
mem‹y
.
rom
.
˝u_z80
.
size
)

113 #ifde‡
GP2X


114 
	`mem˝y
(
mame_z80mem
 + 0xc000, 
z80m≠2
, 0x2000);

116 
	`mem˝y
(
mame_z80mem
 + 0xc000, 
z80m≠2
, 0x2000);

120 
z80m≠3
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x1000 * ((
P‹tNo
 >> 8) & 0x3f));

121 i‡((0x1000 * ((
P‹tNo
 >> 8Ë& 0x3f))<
mem‹y
.
rom
.
˝u_z80
.
size
)

122 #ifde‡
GP2X


123 
	`mem˝y
(
mame_z80mem
 + 0xe000, 
z80m≠3
, 0x1000);

125 
	`mem˝y
(
mame_z80mem
 + 0xe000, 
z80m≠3
, 0x1000);

129 
z80m≠4
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x0800 * ((
P‹tNo
 >> 8) & 0x7f));

130 i‡((0x0800 * ((
P‹tNo
 >> 8Ë& 0x7f))<
mem‹y
.
rom
.
˝u_z80
.
size
)

131 #ifde‡
GP2X


132 
	`mem˝y
(
mame_z80mem
 + 0xf000, 
z80m≠3
, 0x0800);

134 
	`mem˝y
(
mame_z80mem
 + 0xf000, 
z80m≠4
, 0x0800);

138 
	}
}

140 
	$mame_z80_úq_ˇŒback
(
a
)

143 
	}
}

146 
	$˝u_z80_mk°©e
(
gzFûe
 
gzf
,
mode
) {

151 i‡(
°©e_vîsi⁄
==
ST_VER2
 && 
mode
==
STREAD
) {

152 
Uöt8
 
z80_°_dummy
[2088];

153 
	`mk°©e_d©a
(
gzf
, &
z80_°_dummy
, 2088, 
mode
);

155 
	`mk°©e_d©a
(
gzf
, 
	`z80_°©eD©a
(), 
z80_°©eD©aSize
, 
mode
);

156 
	`mk°©e_d©a
(
gzf
, 
mame_z80mem
, 0x10000, 
mode
);

157 i‡(
mode
==
STREAD
) {

158 
i
;

159 
i
 = 0; i < 4; i++) {

160 
	`˝u_z80_swôchb™k
(
i
, 
z80_b™k
[i]);

164 
	}
}

166 
	$˝u_z80_öô
()

169 
	`z80_öô
();

172 
z80m≠1
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0x8000;

173 
z80m≠2
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xc000;

174 
z80m≠3
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xe000;

175 
z80m≠4
 = 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xf000;

177 
z80_b™k
[0]=0x8000;

178 
z80_b™k
[1]=0xc000;

179 
z80_b™k
[2]=0xe000;

180 
z80_b™k
[3]=0xf000;

182 
	`mem˝y
(
mame_z80mem
, 
mem‹y
.
rom
.
˝u_z80
.
p
, 0xf800);

183 
	`z80_ª£t
(
NULL
);

184 
	`z80_£t_úq_ˇŒback
(
mame_z80_úq_ˇŒback
);

186 
	}
}

188 
	$˝u_z80_run
(
nbcy˛e
)

191 
	`z80_execuã
(
nbcy˛e
);

192 
	}
}

193 
	$˝u_z80_nmi
()

196 
	`z80_£t_úq_löe
(
IRQ_LINE_NMI
, 
ASSERT_LINE
);

197 
	`z80_£t_úq_löe
(
IRQ_LINE_NMI
, 
CLEAR_LINE
);

198 
	}
}

199 
	$˝u_z80_øi£_úq
(
l
)

201 
	`z80_£t_úq_löe
(
l
, 
ASSERT_LINE
);

202 
	}
}

203 
	$˝u_z80_lowî_úq
()

205 
	`z80_£t_úq_löe
(0, 
CLEAR_LINE
);

206 
	}
}

208 
Uöt16
 
	$˝u_z80_gë_pc
()

211 
	}
}

	@src/memory.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~"emu.h
"

24 
	~"video.h
"

25 
	~"mem‹y.h
"

26 
	~"pd4990a.h
"

27 
	~"å™•ack.h
"

29 #ifde‡
GP2X


30 
	~"ym2610-940/940sh¨ed.h
"

33 
	$Uöt8
 (*
mem68k_„tch_bksw_byã
)(
Uöt32
);

34 
	$Uöt16
 (*
mem68k_„tch_bksw_w‹d
)(
Uöt32
);

35 
	$Uöt32
 (*
mem68k_„tch_bksw_l⁄g
)(
Uöt32
);

36 (*
mem68k_°‹e_bksw_byã
)(
Uöt32
,
Uöt8
);

37 (*
mem68k_°‹e_bksw_w‹d
)(
Uöt32
,
Uöt16
);

38 (*
mem68k_°‹e_bksw_l⁄g
)(
Uöt32
,Uint32);

40 
√o_mem
 
mem‹y
;

42 
Uöt8
 *
cuºít_∑l
;

43 
Uöt32
 *
cuºít_pc_∑l
;

44 
Uöt8
 *
cuºít_fix
;

45 
Uöt8
 *
fix_ußge
;

46 
Uöt8
 
§am_lock
;

47 
Uöt8
 
sound_code
;

48 
Uöt8
 
≥ndög_comm™d
;

49 
Uöt8
 
ªsu…_code
;

50 
Uöt16
 
z80_b™k
[4];

52 
Uöt32
 
b™kaddªss
 = 0;

53 
cuºít_löe
;

57 
	$√ogeo_sound_úq
(
úq
) {

59 #i‚de‡
ENABLE_940T


60 i‡(
úq
) {

61 
	`˝u_z80_øi£_úq
(0);

63 
	`˝u_z80_lowî_úq
();

66 
	}
}

68 
__ölöe__
 
Uöt16
 
	$ªad_√o_c⁄åﬁ
() {

69 
sˇn
;

71 i‡(!
c⁄f
.
ø°î
) {

73 #ifde‡
PROCESSOR_ARM


74 #ifde‡
USE_CYCLONE


75 
sˇn
 = 
cuºít_löe
;

82 
sˇn
 = 
	`˝u_68k_gëcy˛e
()/3;

83 
sˇn
 = scan>>7;

86 
sˇn
 = 
	`˝u_68k_gëcy˛e
() / 766.28;

91 
sˇn
 += 0xF8;

93  (
sˇn
 << 7Ë| (
c⁄f
.
∑l
 << 3Ë| (
√ogeo_‰ame_cou¡î
 & 0x0007);

96 
sˇn
 = 
cuºít_löe
 ;

99 
sˇn
 += 0xF8;

101  (
sˇn
 << 7Ë| (
c⁄f
.
∑l
 << 3Ë| (
√ogeo_‰ame_cou¡î
 & 0x0007);

103 
	}
}

105 
__ölöe__
 
	$wrôe_√o_c⁄åﬁ
(
Uöt16
 
d©a
) {

106 
√ogeo_‰ame_cou¡î_•ìd
 = (((
d©a
 >> 8) & 0xff) + 1);

107 
mem‹y
.
vid
.
úq2c⁄åﬁ
 = 
d©a
 & 0xff;

109 
	}
}

111 
__ölöe__
 
	$wrôe_úq2pos
(
Uöt32
 
d©a
) {

112 
mem‹y
.
vid
.
úq2pos
 = 
d©a
;

113 i‡(
mem‹y
.
vid
.
úq2c⁄åﬁ
 & 0x20) {

114 
löe
 = (
mem‹y
.
vid
.
úq2pos
 + 0x3b) / 0x180;

115 
mem‹y
.
vid
.
úq2°¨t
 = 
löe
 + 
cuºít_löe
;

117 
	}
}

119 #i‚de‡
ENABLE_940T


121 
Uöt8
 
	$z80_p‹t_ªad
(
Uöt16
 
P‹tNo
)

125 
P‹tNo
 & 0xff) {

127 
≥ndög_comm™d
 = 0;

129  
sound_code
;

134  
	`YM2610_°©us_p‹t_A_r
(0);

139  
	`YM2610_ªad_p‹t_r
(0);

144  
	`YM2610_°©us_p‹t_B_r
(0);

149 
	`˝u_z80_swôchb™k
(3, 
P‹tNo
);

155 
	`˝u_z80_swôchb™k
(2, 
P‹tNo
);

161 
	`˝u_z80_swôchb™k
(1, 
P‹tNo
);

167 
	`˝u_z80_swôchb™k
(0, 
P‹tNo
);

173 
	}
}

175 
	$z80_p‹t_wrôe
(
Uöt16
 
P‹tNb
, 
Uöt8
 
VÆue
)

177 
Uöt8
 
d©a
 = 
VÆue
;

180 
P‹tNb
 & 0xff) {

182 
	`YM2610_c⁄åﬁ_p‹t_A_w
(0, 
d©a
);

186 
	`YM2610_d©a_p‹t_A_w
(0, 
d©a
);

190 
	`YM2610_c⁄åﬁ_p‹t_B_w
(0, 
d©a
);

194 
	`YM2610_d©a_p‹t_B_w
(0, 
d©a
);

199 
ªsu…_code
 = 
VÆue
;

202 
	}
}

206 
Uöt16
 
	$¥Ÿe˘i⁄_9a37
(
Uöt32
 
addr
) {

208 
	}
}

212 
Uöt8
 
	$mem68k_„tch_övÆid_byã
(
Uöt32
 
addr
) {

214 
	}
}

216 
Uöt16
 
	$mem68k_„tch_övÆid_w‹d
(
Uöt32
 
addr
) {

218 
	}
}

220 
Uöt32
 
	$mem68k_„tch_övÆid_l⁄g
(
Uöt32
 
addr
) {

222 
	}
}

225 
Uöt8
 
	$mem68k_„tch_øm_byã
(
Uöt32
 
addr
) {

227 
addr
 &= 0xffff;

228  (
	`READ_BYTE_ROM
(
mem‹y
.
øm
 + 
addr
));

229 
	}
}

231 
Uöt16
 
	$mem68k_„tch_øm_w‹d
(
Uöt32
 
addr
) {

233 
addr
 &= 0xffff;

234  (
	`READ_WORD_ROM
(
mem‹y
.
øm
 + 
addr
));

235 
	}
}

237 
LONG_FETCH
(
mem68k_„tch_øm
)

241 
Uöt8
 
	$mem68k_„tch_˝u_byã
(
Uöt32
 
addr
) {

242 
addr
 &= 0xFFFFF;

244  (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
));

245 
	}
}

247 
Uöt16
 
	$mem68k_„tch_˝u_w‹d
(
Uöt32
 
addr
) {

248 
addr
 &= 0xFFFFF;

250  (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addr
));

251 
	}
}

253 
LONG_FETCH
(
mem68k_„tch_˝u
)

257 
Uöt8
 
	$mem68k_„tch_bios_byã
(
Uöt32
 
addr
) {

258 
addr
 &= 0x1FFFF;

259  (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
));

260 
	}
}

262 
Uöt16
 
	$mem68k_„tch_bios_w‹d
(
Uöt32
 
addr
) {

263 
addr
 &= 0x1FFFF;

264  (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
bios_m68k
.
p
 + 
addr
));

265 
	}
}

267 
LONG_FETCH
(
mem68k_„tch_bios
)

271 
Uöt8
 
	$mem68k_„tch_§am_byã
(
Uöt32
 
addr
) {

272  
mem‹y
.
§am
[
addr
 - 0xd00000];

273 
	}
}

275 
Uöt16
 
	$mem68k_„tch_§am_w‹d
(
Uöt32
 
addr
) {

276 
addr
 -= 0xd00000;

277  (
mem‹y
.
§am
[
addr
] << 8) | (memory.sram[addr + 1] & 0xff);

278 
	}
}

280 
LONG_FETCH
(
mem68k_„tch_§am
)

284 
Uöt8
 
	$mem68k_„tch_∑l_byã
(
Uöt32
 
addr
) {

285 
addr
 &= 0xffff;

286 i‡(
addr
 <= 0x1fff)

287  
cuºít_∑l
[
addr
];

289 
	}
}

291 
Uöt16
 
	$mem68k_„tch_∑l_w‹d
(
Uöt32
 
addr
) {

292 
addr
 &= 0xffff;

293 i‡(
addr
 <= 0x1fff)

294  
	`READ_WORD
(&
cuºít_∑l
[
addr
]);

296 
	}
}

298 
LONG_FETCH
(
mem68k_„tch_∑l
)

302 
Uöt8
 
	$mem68k_„tch_video_byã
(
Uöt32
 
addr
) {

304 i‡(!(
addr
&0x1))

305  
	`mem68k_„tch_video_w‹d
(
addr
)>>8;

307 
Uöt32
 
Õc
=
	`˝u_68k_gëpc
()+2;

308 (
Õc
&0xF00000)>>20) {

310  
	`READ_WORD
(&
mem‹y
.
rom
.
˝u_m68k
.
p
+(
Õc
&0xFFFFF));

313  
	`READ_WORD
(&
mem‹y
.
rom
.
˝u_m68k
.
p
+
b™kaddªss
+(
Õc
&0xFFFFF));

316 i‡(
Õc
<=0xc1FFff)

317  
	`READ_WORD
(&
mem‹y
.
rom
.
bios_m68k
.
p
+(
Õc
&0xFFFFF));

325 
	}
}

327 
Uöt16
 
	$mem68k_„tch_video_w‹d
(
Uöt32
 
addr
) {

329 
addr
 &= 0x7;

334 i‡(
addr
 == 0x00 ||áddr == 0x02 ||áddr == 0x0a)

335  
mem‹y
.
vid
.
rbuf
;

336 i‡(
addr
 == 0x04)

337  
mem‹y
.
vid
.
modulo
;

338 i‡(
addr
 == 0x06)

339  
	`ªad_√o_c⁄åﬁ
();

341 
	}
}

342 
LONG_FETCH
(
mem68k_„tch_video
)

346 
Uöt8
 
	$mem68k_„tch_˘l1_byã
(
Uöt32
 
addr
) {

347 
addr
 &= 0xFFFF;

348 i‡(
addr
 == 0x00)

349  
mem‹y
.
öã∫_p1
;

350 i‡(
addr
 == 0x01)

351  (
c⁄f
.
ã°_swôch
 ? 0xFE : 0xFF);

353 i‡(
addr
 == 0x81) {

354  (
c⁄f
.
ã°_swôch
 ? 0x00 : 0x80);

358 
	}
}

360 
Uöt16
 
	$mem68k_„tch_˘l1_w‹d
(
Uöt32
 
addr
) {

363 
	}
}

365 
Uöt32
 
	$mem68k_„tch_˘l1_l⁄g
(
Uöt32
 
addr
) {

368 
	}
}

370 
Uöt8
 
	$mem68k_„tch_˘l2_byã
(
Uöt32
 
addr
) {

371 i‡((
addr
 & 0xFFFF) == 0x00)

372  
mem‹y
.
öã∫_p2
;

373 i‡((
addr
 & 0xFFFF) == 0x01)

376 
	}
}

378 
Uöt16
 
	$mem68k_„tch_˘l2_w‹d
(
Uöt32
 
addr
) {

380 
	}
}

382 
Uöt32
 
	$mem68k_„tch_˘l2_l⁄g
(
Uöt32
 
addr
) {

384 
	}
}

386 
Uöt8
 
	$mem68k_„tch_˘l3_byã
(
Uöt32
 
addr
) {

388 i‡((
addr
 & 0xFFFF) == 0x0)

389  
mem‹y
.
öã∫_°¨t
;

391 
	}
}

393 
Uöt16
 
	$mem68k_„tch_˘l3_w‹d
(
Uöt32
 
addr
) {

400 
	}
}

402 
Uöt32
 
	$mem68k_„tch_˘l3_l⁄g
(
Uöt32
 
addr
) {

404 
	}
}

406 
Uöt8
 
	$mem68k_„tch_coö_byã
(
Uöt32
 
addr
) {

407 
addr
 &= 0xFFFF;

408 i‡(
addr
 == 0x1) {

409 
coöÊù
 = 
	`ªad_4990_ã°bô
();

410 
d©abô
 = 
	`ªad_4990_d©abô
();

411  
mem‹y
.
öã∫_coö
 ^ (
coöÊù
 << 6Ë^ (
d©abô
 << 7);

413 i‡(
addr
 == 0x0) {

414 
ªs
 = 0;

415 i‡(
c⁄f
.
sound
) {

417 #ifde‡
ENABLE_940T


419 
ªs
 |
sh¨ed_˘l
->
ªsu…_code
;

420 i‡(
sh¨ed_˘l
->
≥ndög_comm™d
)

421 
ªs
 &= 0x7f;

423 
ªs
 |
ªsu…_code
;

424 i‡(
≥ndög_comm™d
)

425 
ªs
 &= 0x7f;

428 
ªs
 |= 0x01;

430  
ªs
;

433 
	}
}

435 
Uöt16
 
	$mem68k_„tch_coö_w‹d
(
Uöt32
 
addr
) {

437 
	}
}

439 
Uöt32
 
	$mem68k_„tch_coö_l⁄g
(
Uöt32
 
addr
) {

441 
	}
}

447 
Uöt8
 
	$mem68k_„tch_mem¸d_byã
(
Uöt32
 
addr
) {

448 
addr
 &= 0xFFF;

449 i‡(
addr
 & 1)

452  
mem‹y
.
memˇrd
[
addr
 >> 1];

453 
	}
}

455 
Uöt16
 
	$mem68k_„tch_mem¸d_w‹d
(
Uöt32
 
addr
) {

456 
addr
 &= 0xFFF;

457  
mem‹y
.
memˇrd
[
addr
 >> 1] | 0xff00;

458 
	}
}

460 
Uöt32
 
	$mem68k_„tch_mem¸d_l⁄g
(
Uöt32
 
addr
) {

462 
	}
}

466 
	$mem68k_°‹e_övÆid_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

467 i‡(
addr
 != 0x300001)

468 
	`¥ötf
("InvÆid wrôêb %x %x \n", 
addr
, 
d©a
);

470 
mem‹y
.
w©chdog
 = 0;

473 
	}
}

474 
	$mem68k_°‹e_övÆid_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

475 
	`¥ötf
("InvÆid wrôêw %x %x \n", 
addr
, 
d©a
);

476 
	}
}

477 
	$mem68k_°‹e_övÆid_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) {

478 
	`¥ötf
("InvÆid wrôê»%x %x \n", 
addr
, 
d©a
);

479 
	}
}

482 
	$mem68k_°‹e_øm_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

483 
addr
 &= 0xffff;

484 
	`WRITE_BYTE_ROM
(
mem‹y
.
øm
 + 
addr
,
d©a
);

486 
	}
}

488 
	$mem68k_°‹e_øm_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

490 
addr
 &= 0xffff;

491 
	`WRITE_WORD_ROM
(
mem‹y
.
øm
 + 
addr
,
d©a
);

493 
	}
}

495 
LONG_STORE
(
mem68k_°‹e_øm
)

499 
	$mem68k_°‹e_§am_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

500 i‡(
§am_lock
)

506 
mem‹y
.
§am
[
addr
 - 0xd00000] = 
d©a
;

507 
	}
}

509 
	$mem68k_°‹e_§am_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

510 i‡(
§am_lock
)

517 
addr
 -= 0xd00000;

518 
mem‹y
.
§am
[
addr
] = 
d©a
 >> 8;

519 
mem‹y
.
§am
[
addr
 + 1] = 
d©a
 & 0xff;

520 
	}
}

522 
LONG_STORE
(
mem68k_°‹e_§am
)

526  
Uöt16
 
	$c⁄vît_∑l
(
Uöt16
 
≈Æ
) {

527 
r
 = 0, 
g
 = 0, 
b
 = 0;

528 
r
 = ((
≈Æ
 >> 7) & 0x1e) | ((npal >> 14) & 0x01);

529 
g
 = ((
≈Æ
 >> 3) & 0x1e) | ((npal >> 13) & 0x01);

530 
b
 = ((
≈Æ
 << 1) & 0x1e) | ((npal >> 12) & 0x01);

532  (
r
 << 11Ë+ (
g
 << 6Ë+ 
b
;

533 
	}
}

535 
	$upd©e_Æl_∑l
() {

536 
i
;

537 
Uöt32
 *
pc_∑l1
 = (Uöt32*Ë
mem‹y
.
vid
.
∑l_ho°
[0];

538 
Uöt32
 *
pc_∑l2
 = (Uöt32*Ë
mem‹y
.
vid
.
∑l_ho°
[1];

539 
i
 = 0; i < 0x1000; i++) {

542 
pc_∑l1
[
i
] = 
	`c⁄vît_∑l
(
	`READ_WORD
(&
mem‹y
.
vid
.
∑l_√o
[0][i<<1]));

543 
pc_∑l2
[
i
] = 
	`c⁄vît_∑l
(
	`READ_WORD
(&
mem‹y
.
vid
.
∑l_√o
[1][i<<1]));

545 
	}
}

547 
	$mem68k_°‹e_∑l_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

549 
addr
 &= 0xffff;

550 i‡(
addr
 <= 0x1fff) {

551 
Uöt16
 
a
 = 
	`READ_WORD
(&
cuºít_∑l
[
addr
 & 0xfffe]);

552 i‡(
addr
 & 0x1)

553 
a
 = 
d©a
 | (a & 0xff00);

555 
a
 = (®& 0xffË| (
d©a
 << 8);

556 
	`WRITE_WORD
(&
cuºít_∑l
[
addr
 & 0xff„], 
a
);

557 i‡((
addr
 >> 1) & 0xF)

558 
cuºít_pc_∑l
[(
addr
Ë>> 1] = 
	`c⁄vît_∑l
(
a
);

560 
cuºít_pc_∑l
[(
addr
) >> 1] = 0xF81F;

562 
	}
}

564 
	$mem68k_°‹e_∑l_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

566 
addr
 &= 0xffff;

567 i‡(
addr
 <= 0x1fff) {

568 
	`WRITE_WORD
(&
cuºít_∑l
[
addr
], 
d©a
);

569 i‡((
addr
 >> 1) & 0xF)

570 
cuºít_pc_∑l
[(
addr
Ë>> 1] = 
	`c⁄vît_∑l
(
d©a
);

572 
cuºít_pc_∑l
[(
addr
) >> 1] = 0xF81F;

574 
	}
}

576 
LONG_STORE
(
mem68k_°‹e_∑l
)

580 
	$mem68k_°‹e_video_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

584 i‡(!(
addr
&0x1)) {

585 
	`mem68k_°‹e_video_w‹d
(
addr
,(
d©a
<<8)|data);

587 
	}
}

589 
	$mem68k_°‹e_video_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

592 
addr
 &= 0xF;

593 
addr
) {

595 
mem‹y
.
vid
.
v±r
 = 
d©a
 & 0xffff;

596 
mem‹y
.
vid
.
rbuf
 = 
	`READ_WORD
(&mem‹y.vid.
øm
[mem‹y.vid.
v±r
 << 1]);

600 
	`WRITE_WORD
(&
mem‹y
.
vid
.
øm
[mem‹y.vid.
v±r
 << 1], 
d©a
);

601 
mem‹y
.
vid
.
v±r
 = (memory.vid.vptr & 0x8000) + ((memory.vid.vptr

602 + 
mem‹y
.
vid
.
modulo
) & 0x7fff);

603 
mem‹y
.
vid
.
rbuf
 = 
	`READ_WORD
(&mem‹y.vid.
øm
[mem‹y.vid.
v±r
 << 1]);

606 i‡(
d©a
&0x4000)

607 
d©a
|=0x8000;

609 
d©a
&=0x7FFF;

611 
mem‹y
.
vid
.
modulo
 = (Ë
d©a
;

614 
	`wrôe_√o_c⁄åﬁ
(
d©a
);

617 
	`wrôe_úq2pos
((
mem‹y
.
vid
.
úq2pos
 & 0xffffË| ((
Uöt32
Ë
d©a
 << 16));

620 
	`wrôe_úq2pos
((
mem‹y
.
vid
.
úq2pos
 & 0xffff0000Ë| (
Uöt32
Ë
d©a
);

628 
	}
}

629 
LONG_STORE
(
mem68k_°‹e_video
)

634 
	$mem68k_°‹e_pd4990_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

635 
	`wrôe_4990_c⁄åﬁ_w
(
addr
, 
d©a
);

636 
	}
}

638 
	$mem68k_°‹e_pd4990_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

639 
	`wrôe_4990_c⁄åﬁ_w
(
addr
, 
d©a
);

640 
	}
}

642 
	$mem68k_°‹e_pd4990_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) {

643 
	`wrôe_4990_c⁄åﬁ_w
(
addr
, 
d©a
);

644 
	}
}

647 
	$mem68k_°‹e_z80_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

648 i‡(
addr
 == 0x320000) {

649 
sound_code
 = 
d©a
 & 0xff;

650 
≥ndög_comm™d
 = 1;

652 i‡(
c⁄f
.
sound
) {

653 #ifde‡
ENABLE_940T


655 
sh¨ed_˘l
->
sound_code
 = sound_code;

656 
sh¨ed_˘l
->
≥ndög_comm™d
 =Öending_command;

658 
sh¨ed_˘l
->
nmi_≥ndög
 = 1;

660 i‡(
c⁄f
.
accuøã940
) {

661 
	`CHECK_BUSY
(
JOB940_RUN_Z80
)

662 && 
sh¨ed_˘l
->
≥ndög_comm™d
)

664 i‡(
sh¨ed_˘l
->
nmi_≥ndög
) {

665 
	`gp2x_add_job940
(
JOB940_RUN_Z80_NMI
);

666 
	`CHECK_BUSY
(
JOB940_RUN_Z80_NMI
))

671 
	`˝u_z80_nmi
();

672 
	`˝u_z80_run
(300);

676 
	}
}

677 
	$mem68k_°‹e_z80_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

679 i‡(
addr
 == 0x320000) {

680 
sound_code
 = 
d©a
 >> 8;

681 
≥ndög_comm™d
 = 1;

683 i‡(
c⁄f
.
sound
) {

684 #ifde‡
ENABLE_940T


685 
sh¨ed_˘l
->
sound_code
 = sound_code;

686 
sh¨ed_˘l
->
≥ndög_comm™d
 =Öending_command;

687 
sh¨ed_˘l
->
nmi_≥ndög
 = 1;

688 i‡(
c⁄f
.
accuøã940
) {

689 
	`CHECK_BUSY
(
JOB940_RUN_Z80
))

691 i‡(
sh¨ed_˘l
->
nmi_≥ndög
) {

692 
	`gp2x_add_job940
(
JOB940_RUN_Z80_NMI
);

693 
	`CHECK_BUSY
(
JOB940_RUN_Z80_NMI
))

698 
	`˝u_z80_nmi
();

699 
	`˝u_z80_run
(300);

703 
	}
}

704 
	$mem68k_°‹e_z80_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) {

706 
	`¥ötf
("Z80L %x %04x\n", 
addr
, 
d©a
);

707 
	}
}

710 
	$mem68k_°‹e_£âög_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

712 
addr
 &= 0xFFFF;

713 i‡(
addr
 == 0x0003) {

714 
	`¥ötf
("Selecting Bios Vector\n");

715 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.
bios_m68k
.p, 0x80);

716 
mem‹y
.
cuºít_ve˘‹
=0;

719 i‡(
addr
 == 0x0013) {

720 
	`¥ötf
("Selecting Game Vector\n");

721 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.
game_ve˘‹
, 0x80);

722 
mem‹y
.
cuºít_ve˘‹
=1;

725 i‡(
addr
 == 0x000b) {

726 
cuºít_fix
 = 
mem‹y
.
rom
.
bios_sfix
.
p
;

727 
fix_ußge
 = 
mem‹y
.
fix_bﬂrd_ußge
;

728 
mem‹y
.
vid
.
cuºítfix
=0;

731 i‡(
addr
 == 0x001b) {

732 
cuºít_fix
 = 
mem‹y
.
rom
.
game_sfix
.
p
;

733 
fix_ußge
 = 
mem‹y
.
fix_game_ußge
;

734 
mem‹y
.
vid
.
cuºítfix
=1;

737 i‡(
addr
 == 0x000d) {

738 
§am_lock
 = 1;

741 i‡(
addr
 == 0x001d) {

742 
§am_lock
 = 0;

745 i‡(
addr
 == 0x000f) {

746 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[1];

747 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[1];

748 
mem‹y
.
vid
.
cuºíçÆ
=1;

751 i‡(
addr
 == 0x001f) {

752 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[0];

753 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[0];

754 
mem‹y
.
vid
.
cuºíçÆ
 = 0;

760 
	}
}

762 
	$mem68k_°‹e_£âög_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

765 
	`mem68k_°‹e_£âög_byã
(
addr
,
d©a
);

767 
addr
 &= 0xFFFFFe;

768 i‡(
addr
 == 0x3a0002) {

769 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.
bios_m68k
.p, 0x80);

772 i‡(
addr
 == 0x3a0012) {

773 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.
game_ve˘‹
, 0x80);

775 i‡(
addr
 == 0x3a000a) {

776 
cuºít_fix
 = 
mem‹y
.
rom
.
bios_sfix
.
p
;

777 
fix_ußge
 = 
mem‹y
.
fix_bﬂrd_ußge
;

780 i‡(
addr
 == 0x3a001a) {

781 
cuºít_fix
 = 
mem‹y
.
rom
.
game_sfix
.
p
;

782 
fix_ußge
 = 
mem‹y
.
fix_game_ußge
;

785 i‡(
addr
 == 0x3a000c) {

786 
§am_lock
 = 1;

789 i‡(
addr
 == 0x3a001c) {

790 
§am_lock
 = 0;

793 i‡(
addr
 == 0x3a000e) {

794 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[1];

795 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[1];

798 i‡(
addr
 == 0x3a001e) {

799 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[0];

800 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[0];

803 
	}
}

805 
	$mem68k_°‹e_£âög_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) {

807 
	}
}

810 
	$mem68k_°‹e_mem¸d_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

811 
addr
 &= 0xFFF;

812 
mem‹y
.
memˇrd
[
addr
 >> 1] = 
d©a
;

813 
	}
}

814 
	$mem68k_°‹e_mem¸d_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

815 
addr
 &= 0xFFF;

816 
mem‹y
.
memˇrd
[
addr
 >> 1] = 
d©a
 & 0xff;

817 
	}
}

818 
	$mem68k_°‹e_mem¸d_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) {

819 
	}
}

822 
Uöt16
 
	g√ogeo_∫g
 = 0x2345;

824 
Uöt16
 
	$sma_øndom
() {

825 
Uöt16
 
ﬁd
 = 
√ogeo_∫g
;

827 
Uöt16
 
√wbô
 = ((
√ogeo_∫g
 >> 2) ^ (neogeo_rng >> 3) ^ (neogeo_rng >> 5)

828 ^ (
√ogeo_∫g
 >> 6) ^ (neogeo_rng >> 7) ^ (neogeo_rng >> 11)

829 ^ (
√ogeo_∫g
 >> 12) ^ (neogeo_rng >> 15)) & 1;

831 
√ogeo_∫g
 = (√ogeo_∫g << 1Ë| 
√wbô
;

833  
ﬁd
;

834 
	}
}

837 
Uöt8
 
	$mem68k_„tch_bk_n‹mÆ_byã
(
Uöt32
 
addr
) {

838 
addr
 &= 0xFFFFF;

839 i‡(
mem‹y
.
bksw_uns¸ambÀ
) {

840 
Uöt32
 
a
=
addr
&0xFFFFFE;

841 i‡(
a
 == 0xfe446) {

843  (
addr
&0x1?0x9a:0x37);

845 i‡(
mem‹y
.
sma_∫g_addr
 && 
addr
>=0x2fff00 &&

846 (((
a
 & 0xFFË=(
mem‹y
.
sma_∫g_addr
 & 0xFF)) ||

847 ((
a
 & 0xFFË=
mem‹y
.
sma_∫g_addr
 >> 8))) {

849  (
addr
&0x1?
	`sma_øndom
()>>8:sma_random()&0xFF);

852  (
	`READ_BYTE_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + 
addr
));

853 
	}
}

855 
Uöt16
 
	$mem68k_„tch_bk_n‹mÆ_w‹d
(
Uöt32
 
addr
) {

856 
addr
 &= 0xFFFFF;

857 i‡(
mem‹y
.
bksw_uns¸ambÀ
) {

858 i‡(
addr
 == 0xfe446) {

862 i‡(
mem‹y
.
sma_∫g_addr
 && 
addr
>=0x2fff00 &&

863 (((
addr
 & 0xFFË=(
mem‹y
.
sma_∫g_addr
 & 0xFF)) ||

864 ((
addr
 & 0xFFË=
mem‹y
.
sma_∫g_addr
 >> 8))) {

866  
	`sma_øndom
();

869  (
	`READ_WORD_ROM
(
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
b™kaddªss
 + 
addr
));

870 
	}
}

872 
LONG_FETCH
(
mem68k_„tch_bk_n‹mÆ
)

875 
	$b™kswôch
(
Uöt32
 
addªss
, 
Uöt8
 
d©a
) {

877 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 <= 0x100000)

880 i‡(
addªss
 >= 0x2FFFF0) {

881 
d©a
 = data & 0x7;

882 
b™kaddªss
 = (
d©a
 + 1) * 0x100000;

886 i‡(
b™kaddªss
 >
mem‹y
.
rom
.
˝u_m68k
.
size
)

887 
b™kaddªss
 = 0x100000;

888 
	`˝u_68k_b™kswôch
(
b™kaddªss
);

889 
	}
}

891 
	$mem68k_°‹e_bk_n‹mÆ_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
) {

894 
	`b™kswôch
(
addr
, 
d©a
);

895 
	}
}

897 
	$mem68k_°‹e_bk_n‹mÆ_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
) {

900 i‡(
mem‹y
.
bksw_uns¸ambÀ
 && (
addr
 & 0xFF) == memory.bksw_unscramble[0]) {

902 
d©a
 =

903 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[1]) & 1) << 0) +

904 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[2]) & 1) << 1) +

905 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[3]) & 1) << 2) +

906 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[4]) & 1) << 3) +

907 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[5]) & 1) << 4) +

908 (((
d©a
 >> 
mem‹y
.
bksw_uns¸ambÀ
[6]) & 1) << 5);

910 
b™kaddªss
 = 0x100000 + 
mem‹y
.
bksw_off£t
[
d©a
];

911 
	`˝u_68k_b™kswôch
(
b™kaddªss
);

913 
	`b™kswôch
(
addr
, 
d©a
);

914 
	}
}

916 
LONG_STORE
(
mem68k_°‹e_bk_n‹mÆ
)

	@src/memory.h

19 #i‚de‡
_MEMORY_H_


20 
	#_MEMORY_H_


	)

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~"SDL.h
"

27 
	~"SDL_ídün.h
"

28 
	~"video.h
"

29 
	~"ym2610/2610ötf.h
"

30 
	~"°©e.h
"

31 
	~"roms.h
"

33 #ifde‡
GP2X


34 
	~"gp2x.h
"

37 
	#READ_WORD
(
a
Ë(*(
Uöt16
 *)◊))

	)

38 
	#WRITE_WORD
(
a
,
d
Ë(*(
Uöt16
 *)◊Ë(d))

	)

39 
	#READ_BYTE
(
a
Ë(*(
Uöt8
 *)◊))

	)

40 
	#WRITE_BYTE
(
a
,
d
Ë(*(
Uöt8
 *)◊Ë(d))

	)

41 
	#SWAP_BYTE_ADDRESS
(
a
Ë((
Uöçå
)◊)^1)

	)

42 
	#SWAP16
(
y
Ë
	`SDL_Sw≠16
(y)

	)

43 
	#SWAP32
(
y
Ë
	`SDL_Sw≠32
(y)

	)

45 #i‡
deföed
(
USE_GENERATOR68K
)

47 #ifde‡
WORDS_BIGENDIAN


48 
	#WRITE_WORD_ROM
 
WRITE_WORD


	)

49 
	#READ_WORD_ROM
 
READ_WORD


	)

50 
	#WRITE_BYTE_ROM
 
WRITE_BYTE


	)

51 
	#READ_BYTE_ROM
 
READ_BYTE


	)

53 
	#WRITE_WORD_ROM
(
a
,
d
Ë(
	`WRITE_WORD
◊,
	`SWAP16
(d)))

	)

54 
	#READ_WORD_ROM
(
a
Ë(
	`SWAP16
(
	`READ_WORD
◊)))

	)

55 
	#WRITE_BYTE_ROM
 
WRITE_BYTE


	)

56 
	#READ_BYTE_ROM
 
READ_BYTE


	)

60 
	#WRITE_WORD_ROM
 
WRITE_WORD


	)

61 
	#READ_WORD_ROM
 
READ_WORD


	)

62 
	#WRITE_BYTE_ROM
(
a
,
d
Ë
	`WRITE_BYTE
(
	`SWAP_BYTE_ADDRESS
◊),(d))

	)

63 
	#READ_BYTE_ROM
(
a
Ë
	`READ_BYTE
(
	`SWAP_BYTE_ADDRESS
◊))

	)

66 #i‡
deföed
(
USE_CYCLONE
)

67 #unde‡
WRITE_WORD_ROM


68 #unde‡
READ_WORD_ROM


69 #unde‡
WRITE_BYTE_ROM


70 #unde‡
READ_BYTE_ROM


72 
	#WRITE_WORD_ROM
 
WRITE_WORD


	)

73 
	#READ_WORD_ROM
 
READ_WORD


	)

75 
	#WRITE_BYTE_ROM
(
a
,
d
Ë
	`WRITE_BYTE
(
	`SWAP_BYTE_ADDRESS
◊),(d))

	)

76 
	#READ_BYTE_ROM
(
a
Ë
	`READ_BYTE
(
	`SWAP_BYTE_ADDRESS
◊))

	)

80 
	#GFX_MAPPED
 1

	)

81 
	#GZX_MAPPED
 2

	)

85 
	s√o_mem
 {

86 
GAME_ROMS
 
	mrom
;

87 
Uöt8
 
	møm
[0x10000];

88 
VIDEO
 
	mvid
;

89 
Uöt8
 *
	mng_lo
;

91 
Uöt32
 
	mnb_of_tûes
;

93 
Uöt8
 
	m§am
[0x10000];

96 
Uöt8
 
	mfix_bﬂrd_ußge
[4096];

97 
Uöt8
 *
	mfix_game_ußge
;

99 
Uöt8
 
	mz80_øm
[0x800];

100 
Uöt8
 
	mgame_ve˘‹
[0x80];

101 
	mcuºít_ve˘‹
;

103 
Uöt8
 
	möã∫_p1
, 
	möã∫_p2
, 
	möã∫_coö
, 
	möã∫_°¨t
;

107 
Uöt32
 
	mbksw_h™dÀr
;

109 
Uöt8
 *
	mbksw_uns¸ambÀ
;

110 *
	mbksw_off£t
;

111 
Uöt16
 
	msma_∫g_addr
;

112 
Uöt8
 
	mmemˇrd
[0x800];

114 
Uöt32
 
	mw©chdog
;

115 } 
	t√o_mem
;

117 
√o_mem
 
mem‹y
;

121 
Uöt8
 *
cuºít_∑l
;

122 
Uöt32
 *
cuºít_pc_∑l
;

123 
Uöt8
 *
cuºít_fix
;

124 
Uöt8
 *
fix_ußge
;

127 
Uöt8
 
§am_lock
;

132 
Uöt8
 
sound_code
;

133 
Uöt8
 
≥ndög_comm™d
;

134 
Uöt8
 
ªsu…_code
;

138 
Uöt32
 
b™kaddªss
;

140 
Uöt16
 
z80_b™k
[4];

143 
upd©e_Æl_∑l
();

144 
dump_h¨dw¨e_ªg
();

147 
˝u_68k_gëcy˛e
();

148 
˝u_68k_öô
();

149 
˝u_68k_ª£t
();

150 
˝u_68k_run
(
Uöt32
 
nb_cy˛e
);

151 
˝u_68k_öãºu±
(
a
);

152 
˝u_68k_b™kswôch
(
Uöt32
 
addªss
);

153 
˝u_68k_dißs£mbÀ
(
pc
, 
nb_ö°r
);

154 
˝u_68k_dum¥eg
();

155 
˝u_68k_run_°ï
();

156 
Uöt32
 
˝u_68k_gëpc
();

157 
˝u_68k_debugî
((*
exec°ï
)(),(*
dump
)());

161 
	`˝u_z80_run
(
nbcy˛e
);

162 
	`˝u_z80_nmi
();

163 
	`˝u_z80_øi£_úq
(
l
);

164 
	`˝u_z80_lowî_úq
();

165 
	`˝u_z80_öô
();

166 
	`˝u_z80_swôchb™k
(
Uöt8
 
b™k
, 
Uöt16
 
P‹tNo
);

167 
Uöt8
 
	`z80_p‹t_ªad
(
Uöt16
 
P‹tNo
);

168 
	`z80_p‹t_wrôe
(
Uöt16
 
P‹tNb
, 
Uöt8
 
VÆue
);

171 
	`√ogeo_sound_úq
(
úq
);

174 
	#LONG_FETCH
(
„tch«me
Ë
Uöt32
 fëch«mê## 
	`_l⁄g
(Uöt32 
addr
) { \

175  (
„tch«me
 ## 
	`_w‹d
(
addr
) << 16) | fetchname ## _word(addr+2); \

176 
	}

	)
}

178 
	#LONG_STORE
(
°‹íame
Ë°‹íamê## 
	`_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
) { \

179 
°‹íame
 ## 
	`_w‹d
(
addr
,
d©a
>>16); \

180 
°‹íame
 ## 
	`_w‹d
(
addr
+2,
d©a
 & 0xffff); \

181 }

	)

184 
Uöt8
 
mem68k_„tch_øm_byã
(
Uöt32
 
addr
);

185 
Uöt16
 
mem68k_„tch_øm_w‹d
(
Uöt32
 
addr
);

186 
Uöt32
 
mem68k_„tch_øm_l⁄g
(Uöt32 
addr
);

187 
Uöt8
 
mem68k_„tch_övÆid_byã
(
Uöt32
 
addr
);

188 
Uöt16
 
mem68k_„tch_övÆid_w‹d
(
Uöt32
 
addr
);

189 
Uöt32
 
mem68k_„tch_övÆid_l⁄g
(Uöt32 
addr
);

190 
Uöt8
 
mem68k_„tch_bk_n‹mÆ_byã
(
Uöt32
 
addr
);

191 
Uöt16
 
mem68k_„tch_bk_n‹mÆ_w‹d
(
Uöt32
 
addr
);

192 
Uöt32
 
mem68k_„tch_bk_n‹mÆ_l⁄g
(Uöt32 
addr
);

193 
Uöt8
 
mem68k_„tch_˝u_byã
(
Uöt32
 
addr
);

194 
Uöt16
 
mem68k_„tch_˝u_w‹d
(
Uöt32
 
addr
);

195 
Uöt32
 
mem68k_„tch_˝u_l⁄g
(Uöt32 
addr
);

196 
Uöt8
 
mem68k_„tch_bios_byã
(
Uöt32
 
addr
);

197 
Uöt16
 
mem68k_„tch_bios_w‹d
(
Uöt32
 
addr
);

198 
Uöt32
 
mem68k_„tch_bios_l⁄g
(Uöt32 
addr
);

199 
Uöt8
 
mem68k_„tch_§am_byã
(
Uöt32
 
addr
);

200 
Uöt16
 
mem68k_„tch_§am_w‹d
(
Uöt32
 
addr
);

201 
Uöt32
 
mem68k_„tch_§am_l⁄g
(Uöt32 
addr
);

202 
Uöt8
 
mem68k_„tch_∑l_byã
(
Uöt32
 
addr
);

203 
Uöt16
 
mem68k_„tch_∑l_w‹d
(
Uöt32
 
addr
);

204 
Uöt32
 
mem68k_„tch_∑l_l⁄g
(Uöt32 
addr
);

205 
Uöt8
 
mem68k_„tch_video_byã
(
Uöt32
 
addr
);

206 
Uöt16
 
mem68k_„tch_video_w‹d
(
Uöt32
 
addr
);

207 
Uöt32
 
mem68k_„tch_video_l⁄g
(Uöt32 
addr
);

208 
Uöt8
 
mem68k_„tch_˘l1_byã
(
Uöt32
 
addr
);

209 
Uöt16
 
mem68k_„tch_˘l1_w‹d
(
Uöt32
 
addr
);

210 
Uöt32
 
mem68k_„tch_˘l1_l⁄g
(Uöt32 
addr
);

211 
Uöt8
 
mem68k_„tch_˘l2_byã
(
Uöt32
 
addr
);

212 
Uöt16
 
mem68k_„tch_˘l2_w‹d
(
Uöt32
 
addr
);

213 
Uöt32
 
mem68k_„tch_˘l2_l⁄g
(Uöt32 
addr
);

214 
Uöt8
 
mem68k_„tch_˘l3_byã
(
Uöt32
 
addr
);

215 
Uöt16
 
mem68k_„tch_˘l3_w‹d
(
Uöt32
 
addr
);

216 
Uöt32
 
mem68k_„tch_˘l3_l⁄g
(Uöt32 
addr
);

217 
Uöt8
 
mem68k_„tch_coö_byã
(
Uöt32
 
addr
);

218 
Uöt16
 
mem68k_„tch_coö_w‹d
(
Uöt32
 
addr
);

219 
Uöt32
 
mem68k_„tch_coö_l⁄g
(Uöt32 
addr
);

220 
Uöt8
 
mem68k_„tch_mem¸d_byã
(
Uöt32
 
addr
);

221 
Uöt16
 
mem68k_„tch_mem¸d_w‹d
(
Uöt32
 
addr
);

222 
Uöt32
 
mem68k_„tch_mem¸d_l⁄g
(Uöt32 
addr
);

223 
Uöt8
 
mem68k_„tch_bk_kof2003_byã
(
Uöt32
 
addr
);

224 
Uöt16
 
mem68k_„tch_bk_kof2003_w‹d
(
Uöt32
 
addr
);

225 
Uöt32
 
mem68k_„tch_bk_kof2003_l⁄g
(Uöt32 
addr
);

228 
mem68k_°‹e_övÆid_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

229 
mem68k_°‹e_övÆid_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

230 
mem68k_°‹e_övÆid_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

231 
mem68k_°‹e_øm_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

232 
mem68k_°‹e_øm_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

233 
mem68k_°‹e_øm_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

234 
mem68k_°‹e_bk_n‹mÆ_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

235 
mem68k_°‹e_bk_n‹mÆ_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

236 
mem68k_°‹e_bk_n‹mÆ_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

237 
mem68k_°‹e_§am_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

238 
mem68k_°‹e_§am_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

239 
mem68k_°‹e_§am_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

240 
mem68k_°‹e_∑l_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

241 
mem68k_°‹e_∑l_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

242 
mem68k_°‹e_∑l_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

243 
mem68k_°‹e_video_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

244 
mem68k_°‹e_video_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

245 
mem68k_°‹e_video_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

246 
mem68k_°‹e_pd4990_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

247 
mem68k_°‹e_pd4990_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

248 
mem68k_°‹e_pd4990_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

249 
mem68k_°‹e_z80_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

250 
mem68k_°‹e_z80_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

251 
mem68k_°‹e_z80_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

252 
mem68k_°‹e_£âög_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

253 
mem68k_°‹e_£âög_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

254 
mem68k_°‹e_£âög_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

255 
mem68k_°‹e_mem¸d_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

256 
mem68k_°‹e_mem¸d_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

257 
mem68k_°‹e_mem¸d_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

258 
mem68k_°‹e_bk_kof2003_byã
(
Uöt32
 
addr
, 
Uöt8
 
d©a
);

259 
mem68k_°‹e_bk_kof2003_w‹d
(
Uöt32
 
addr
, 
Uöt16
 
d©a
);

260 
mem68k_°‹e_bk_kof2003_l⁄g
(
Uöt32
 
addr
, Uöt32 
d©a
);

262 
	$Uöt8
 (*
mem68k_„tch_bksw_byã
)(
Uöt32
);

263 
	$Uöt16
 (*
mem68k_„tch_bksw_w‹d
)(
Uöt32
);

264 
	$Uöt32
 (*
mem68k_„tch_bksw_l⁄g
)(
Uöt32
);

265 (*
mem68k_°‹e_bksw_byã
)(
Uöt32
,
Uöt8
);

266 (*
mem68k_°‹e_bksw_w‹d
)(
Uöt32
,
Uöt16
);

267 (*
mem68k_°‹e_bksw_l⁄g
)(
Uöt32
,Uint32);

	@src/menu.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~"c⁄fig.h
"

22 
	~<î∫o.h
>

24 
	~"SDL.h
"

25 
	~"SDL_thªad.h
"

27 
	~<°d¨g.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/°©.h
>

32 
	~<uni°d.h
>

33 
	~<dúít.h
>

34 
	~<m©h.h
>

36 
	~"míu.h
"

38 
	~"mesßges.h
"

39 
	~"mem‹y.h
"

40 
	~"s¸ìn.h
"

41 
	~"video.h
"

42 
	~"evít.h
"

43 
	~"°©e.h
"

44 
	~"emu.h
"

45 
	~"‰ame_skù.h
"

46 
	~"video.h
"

47 
	~"c⁄f.h
"

48 
	~"ªsfûe.h
"

49 
	~"sound.h
"

50 
	~"ef„˘.h
"

51 
	~"gnutû.h
"

52 
	~"roms.h
"

54 #i‡
deföed
 (
WII
)

55 
	#ROOTPATH
 "sd:/≠ps/gngeo/"

	)

56 #ñi‡
deföed
 (
__AMIGA__
)

57 
	#ROOTPATH
 "/PROGDIR/d©a/"

	)

59 
	#ROOTPATH
 ""

	)

62 
	#ICOL_BLACK
 0

	)

63 
	#ICOL_RED
 1

	)

64 
	#ICOL_GREEN
 2

	)

65 
	#ICOL_GREY_L
 3

	)

66 
	#ICOL_GREY_M
 4

	)

67 
	#ICOL_GREY_D
 5

	)

68 
	#ICOL_MAX
 6

	)

70 
	#COL_BLACK
 0x000000

	)

71 
	#COL_RED
 0x1010FF

	)

72 
	#COL_GREEN
 0x10FF10

	)

73 
	#COL_GREY_L
 0xA0A0A0

	)

74 
	#COL_GREY_M
 0x808080

	)

75 
	#COL_GREY_D
 0x404040

	)

77 
Uöt32
 
	gf⁄t_cﬁ‹
[] = { 
COL_BLACK
, 
COL_RED
, 
COL_GREEN
, 
COL_GREY_L
, 
COL_GREY_M
,

78 
COL_GREY_D
 };

80 
	sGNFONT
 {

81 
SDL_SurÁ˚
 *
	mbmp
;

82 
SDL_SurÁ˚
 *
	mcbmp
[
ICOL_MAX
];

83 
Uöt8
 
	mysize
;

84 
Uöt16
 
	mxpos
[128 - 32];

85 
Uöt8
 
	mxsize
[128 - 32];

86 
Söt8
 
	m∑d
;

87 } 
	tGNFONT
;

89 
SDL_SurÁ˚
 *
	gmíu_buf
;

90 
SDL_SurÁ˚
 *
	gmíu_back
;

91 
SDL_SurÁ˚
 *
	gback
;

92 
GNFONT
 *
	gsf⁄t
;

93 
GNFONT
 *
	gmf⁄t
;

94 
SDL_SurÁ˚
 *
	ggngeo_logo
, *
	ggngeo_mask
, *
	gpb¨_logo
;

96 
SDL_SurÁ˚
 *
	g¨row_l
, *
	g¨row_r
, *
	g¨row_u
, *
	g¨row_d
;

99 
	#MENU_BIG
 0

	)

100 
	#MENU_SMALL
 1

	)

102 
	#MENU_TITLE_X
 (24 + 30)

	)

103 
	#MENU_TITLE_Y
 (16 + 20)

	)

105 
	#MENU_TEXT_X
 (24 + 26)

	)

106 
	#MENU_TEXT_Y
 (16 + 43)

	)

108 
	#MENU_TEXT_X_END
 (24 + 277)

	)

109 
	#MENU_TEXT_Y_END
 (16 + 198)

	)

111 
	#ALIGN_LEFT
 (1<<16)

	)

112 
	#ALIGN_RIGHT
 (2<<16)

	)

113 
	#ALIGN_CENTER
 (3<<16)

	)

114 
	#ALIGN_UP
 (1<<16)

	)

115 
	#ALIGN_DOWN
 (2<<16)

	)

117 
	#MENU_CLOSE
 1

	)

118 
	#MENU_STAY
 0

	)

119 
	#MENU_EXIT
 2

	)

120 
	#MENU_RETURNTOGAME
 3

	)

122 
GN_MENU
 *
	gmaö_míu
;

123 
GN_MENU
 *
	grbrow£r_míu
;

124 
GN_MENU
 *
	g›ti⁄_míu
;

125 
GN_MENU
 *
	gef„˘_míu
;

126 
GN_MENU
 *
	g§©e_míu
;

127 
GN_MENU
 *
	gye¢o_míu
;

129 *
	gromli°
[] = { "/2020bb.zip", "/2020bba.zip", "/2020bbh.zip",

187 "/zöåckb.zù", "/zu∑∑.zù", 
NULL
 };

189 
	#COL32_TO_16
(
cﬁ
Ë((((cﬁ&0xff0000)>>19)<<11)|(((cﬁ&0xFF00)>>10)<<5)|((cﬁ&0xFF)>>3))

	)

190 
	sRGB_£t
 {

191 
	mr
;

192 
	mg
;

193 
	mb
;

194 } 
	gRGB_£t
;

196 
	sHSV_£t
 {

197 sig√d 
	mh
;

198 
	ms
;

199 
	mv
;

200 } 
	gHSV_£t
;

202 
Uöt32
 
	$RGB2HSV
(
Uöt32
 
RGB
) {

203 
mö
, 
max
, 
dñè
;

204 
Uöt16
 
h
;

205 
Uöt8
 
s
, 
v
;

206 
Uöt8
 
r
, 
g
, 
b
;

207 
r
 = (
RGB
 >> 16) & 0xFF;

208 
g
 = (
RGB
 >> 8) & 0xFF;

209 
b
 = 
RGB
 & 0xFF;

211 i‡(
r
 < 
g
)

212 
mö
 = 
r
;

214 
mö
 = 
g
;

215 i‡(
b
 < 
mö
)

216 
mö
 = 
b
;

218 i‡(
r
 > 
g
)

219 
max
 = 
r
;

221 
max
 = 
g
;

222 i‡(
b
 > 
max
)

223 
max
 = 
b
;

225 
v
 = 
max
;

227 
dñè
 = 
max
 - 
mö
;

229 i‡(
max
 != 0)

230 
s
 = (Ë(
dñè
Ë* 255 / 
max
;

233 
s
 = 0;

234 
h
 = 0;

235  (
h
 << 16Ë| (
s
 << 8Ë| 
v
;

238 i‡(
r
 =
max
)

239 
h
 = (
g
 - 
b
Ë* 60 / 
dñè
;

240 i‡(
g
 =
max
)

241 
h
 = 120 + (
b
 - 
r
Ë* 60 / 
dñè
;

243 
h
 = 240 + (
r
 - 
g
Ë* 60 / 
dñè
;

245 i‡(
h
 < 0)

246 
h
 += 360;

248  (
h
 << 16Ë| (
s
 << 8Ë| 
v
;

249 
	}
}

250 
Uöt32
 
	$HSV2RGB
(
Uöt32
 
HSV
) {

251 
i
;

252 
f
, 
p
, 
q
, 
t
, 
h
, 
s
, 
v
;

253 
Uöt8
 
r
, 
g
, 
b
;

255 
h
 = (Ë(
HSV
 >> 16);

256 
s
 = (Ë((
HSV
 >> 8) & 0xFF);

257 
v
 = (Ë(
HSV
 & 0xFF);

259 
s
 /= 255.0;

261 i‡(
s
 == 0) {

262 
r
 = 
g
 = 
b
 = 
v
;

263  (
r
 << 16Ë| (
g
 << 8Ë| 
b
;

266 
h
 /= 60;

267 
i
 = 
	`Êo‹
(
h
);

268 
f
 = 
h
 - 
i
;

269 
p
 = (Ë(
v
 * (1 - 
s
));

270 
q
 = (Ë(
v
 * (1 - 
s
 * 
f
));

271 
t
 = (Ë(
v
 * (1 - 
s
 * (1 - 
f
)));

273 
i
) {

275 
r
 = 
v
;

276 
g
 = 
t
;

277 
b
 = 
p
;

280 
r
 = 
q
;

281 
g
 = 
v
;

282 
b
 = 
p
;

285 
r
 = 
p
;

286 
g
 = 
v
;

287 
b
 = 
t
;

290 
r
 = 
p
;

291 
g
 = 
q
;

292 
b
 = 
v
;

295 
r
 = 
t
;

296 
g
 = 
p
;

297 
b
 = 
v
;

300 
r
 = 
v
;

301 
g
 = 
p
;

302 
b
 = 
q
;

305  (
r
 << 16Ë| (
g
 << 8Ë| 
b
;

306 
	}
}

308 
	$f⁄t_£t_cﬁ‹
(
GNFONT
 *
·
, 
cﬁ
) {

309 i‡(
cﬁ
 >
ICOL_MAX
)

310 
cﬁ
 = 0;

311 
·
->
bmp
 = ft->
cbmp
[
cﬁ
];

312 
	}
}

314 
GNFONT
 *
	$lﬂd_f⁄t
(*
fûe
) {

315 
GNFONT
 *
·
 = 
	`mÆloc
((GNFONT));

316 
Uöt32
 
HSV
;

317 
Uöt32
 
RGB
;

318 
i
;

319 
x
 = 0;

320 
Uöt32
 *
b
;

321 i‡(!
·
)

322  
NULL
;

323 
	`mem£t
(
·
, 0, (
GNFONT
));

324 
i
 = 0; i < 
ICOL_MAX
; i++)

325 
·
->
cbmp
[
i
] = 
	`ªs_lﬂd_°bi
(
fûe
);

326 
·
->
bmp
 = ft->
cbmp
[0];

327 i‡(!
·
->
bmp
) {

328 
	`‰ì
(
·
);

329  
NULL
;

332 
b
 = 
·
->
bmp
->
pixñs
;

336 i‡(
·
->
bmp
->
f‹m©
->
BôsPîPixñ
 != 32) {

337 
	`¥ötf
("Unsuµ‹ãd f⁄à(bµ=%d)\n", 
·
->
bmp
->
f‹m©
->
BôsPîPixñ
);

338 
	`SDL_FªeSurÁ˚
(
·
->
bmp
);

339 
	`‰ì
(
·
);

340  
NULL
;

342 
·
->
xpos
[0] = 0;

343 
i
 = 0; i < 
·
->
bmp
->
w
; i++) {

345 i‡(
b
[
i
] != b[0]) {

346 
·
->
xpos
[
x
 + 1] = 
i
 + 1;

347 i‡(
x
 > 0)

348 
·
->
xsize
[
x
] = 
i
 - ft->
xpos
[x];

350 
·
->
xsize
[
x
] = 
i
;

351 
x
++;

356 i‡(
x
 <= 0 || x > 95)

357  
NULL
;

363 
·
->
xsize
[94] = ft->
bmp
->
w
 - ft->
xpos
[94];

364 
·
->
ysize
 = ft->
bmp
->
h
;

367 
·
->
∑d
 = 0;

369 
x
 = 1; x < 
ICOL_MAX
; x++) {

370 
j
;

371 
b
 = 
·
->
cbmp
[
x
]->
pixñs
;

372 
i
 = 0; i < 
·
->
bmp
->
w
; i++) {

373 
j
 = 0; j < 
·
->
bmp
->
h
; j++) {

374 
b
[
i
 * 
·
->
bmp
->
h
 + 
j
] &= 0xFF000000;

375 
b
[
i
 * 
·
->
bmp
->
h
 + 
j
] |
f⁄t_cﬁ‹
[
x
];

380  
·
;

381 
	}
}

383 
Uöt32
 
	$°rög_Àn
(
GNFONT
 *
f
, *
°r
) {

384 
i
;

385 
size
 = 0;

386 i‡(
°r
) {

387 
i
 = 0; i < 
	`°æí
(
°r
); i++) {

388 
°r
[
i
]) {

390 
size
 +
f
->
xsize
[0];

393 
size
 +(
f
->
xsize
[0] * 8);

396 
size
 +(
f
->
xsize
[(Ë
°r
[
i
] - 32] + f->
∑d
);

400  
size
;

403 
	}
}

405 
	$døw_°rög
(
SDL_SurÁ˚
 *
d°
, 
GNFONT
 *
f
, 
x
, 
y
, *
°r
) {

406 
SDL_Re˘
 
§e˘
, 
dª˘
;

407 
i
, 
s
;

409 i‡(!
f
) {

410 i‡((
x
 & 0xff0000Ë=
ALIGN_LEFT
)

411 
x
 +
MENU_TEXT_X
;

412 i‡((
x
 & 0xff0000Ë=
ALIGN_RIGHT
)

413 
x
 +(
MENU_TEXT_X_END
 - 
	`°æí
(
°r
) * 8);

414 i‡((
x
 & 0xff0000Ë=
ALIGN_CENTER
)

415 
x
 +(
MENU_TEXT_X


416 + (
MENU_TEXT_X_END
 - 
MENU_TEXT_X
 - 
	`°æí
(
°r
) * 8) / 2);

417 i‡((
y
 & 0xff0000Ë=
ALIGN_UP
)

418 
y
 +
MENU_TEXT_Y
;

419 i‡((
y
 & 0xff0000Ë=
ALIGN_DOWN
)

420 
y
 +(
MENU_TEXT_Y_END
 - 8);

421 i‡((
y
 & 0xff0000Ë=
ALIGN_CENTER
)

422 
y
 +(
MENU_TEXT_Y
 + (
MENU_TEXT_Y_END
 - MENU_TEXT_Y - 8) / 2);

423 
	`SDL_ãxtout
(
d°
, 
x
 & 0xffff, 
y
 & 0xffff, 
°r
);

427 i‡((
x
 & 0xff0000Ë=
ALIGN_LEFT
)

428 
x
 +
MENU_TEXT_X
;

429 i‡((
x
 & 0xff0000Ë=
ALIGN_RIGHT
)

430 
x
 +(
MENU_TEXT_X_END
 - 
	`°rög_Àn
(
f
, 
°r
));

431 i‡((
x
 & 0xff0000Ë=
ALIGN_CENTER
)

432 
x
 +(
MENU_TEXT_X


433 + (
MENU_TEXT_X_END
 - 
MENU_TEXT_X
 - 
	`°rög_Àn
(
f
, 
°r
)) / 2);

434 i‡((
y
 & 0xff0000Ë=
ALIGN_UP
)

435 
y
 +
MENU_TEXT_Y
;

436 i‡((
y
 & 0xff0000Ë=
ALIGN_DOWN
)

437 
y
 +(
MENU_TEXT_Y_END
 - 
f
->
ysize
);

438 i‡((
y
 & 0xff0000Ë=
ALIGN_CENTER
)

439 
y
 +(
MENU_TEXT_Y
 + (
MENU_TEXT_Y_END
 - MENU_TEXT_Y - 
f
->
ysize
) / 2);

441 
x
 &= 0xffff;

442 
y
 &= 0xffff;

444 
dª˘
.
x
 = x;

445 
dª˘
.
y
 = y;

446 
dª˘
.
w
 = 32;

447 
dª˘
.
h
 = 
f
->
bmp
->h;

448 
§e˘
.
h
 = 
f
->
bmp
->h;

449 
§e˘
.
y
 = 0;

450 
i
 = 0; i < 
	`°æí
(
°r
); i++) {

451 
°r
[
i
]) {

453 
dª˘
.
x
 +
f
->
xsize
[0];

456 
dª˘
.
x
 +(
f
->
xsize
[0] * 8);

459 
dª˘
.
x
 = x;

460 
dª˘
.
y
 +
f
->
bmp
->
h
;

463 
s
 = (Ë(
°r
[
i
]);

464 i‡(
s
 >= 96 + 32) {

465 
s
 = () '.';

468 
§e˘
.
x
 = 
f
->
xpos
[
s
 - 32];

469 
§e˘
.
w
 = 
f
->
xsize
[
s
 - 32];

471 
	`SDL_BlôSurÁ˚
(
f
->
bmp
, &
§e˘
, 
d°
, &
dª˘
);

472 
dª˘
.
x
 +(
f
->
xsize
[
s
 - 32] + f->
∑d
);

477 
	}
}

479 
	$öô_back
() {

480 
SDL_Re˘
 
d°_r
 = { 24, 16, 304, 224 };

481 
SDL_Re˘
 
s¸ìn_ª˘
 = { 0, 0, 304, 224 };

482 
	`SDL_BlôSurÁ˚
(
°©e_img
, &
s¸ìn_ª˘
, 
míu_back
, &
d°_r
);

483 
	`SDL_BlôSurÁ˚
(
back
, 
NULL
, 
míu_back
, &
d°_r
);

484 
	}
}

486 
	$døw_back
() {

487 
SDL_Re˘
 
d°_r
 = { 24, 16, 304, 224 };

488 
SDL_Re˘
 
s¸ìn_ª˘
 = { 0, 0, 304, 224 };

489 i‡(
back
) {

492 
	`SDL_BlôSurÁ˚
(
míu_back
, 
NULL
, 
míu_buf
, NULL);

494 
SDL_Re˘
 
r1
 = { 24 + 16, 16 + 16, 271, 191 };

495 
SDL_Re˘
 
r2
 = { 24 + 22, 16 + 35, 259, 166 };

496 
SDL_Re˘
 
r3
 = { 24 + 24, 16 + 24, 271, 191 };

498 
	`SDL_FûlRe˘
(
míu_buf
, &
r3
, 
	`COL32_TO_16
(0x111111));

499 
	`SDL_FûlRe˘
(
míu_buf
, &
r1
, 
	`COL32_TO_16
(0xE8E8E8));

500 
	`SDL_FûlRe˘
(
míu_buf
, &
r2
, 
	`COL32_TO_16
(0x1C57A2));

503 
	}
}

505 
	#ALEFT
 0

	)

506 
	#ARIGHT
 1

	)

507 
	#ADOWN
 2

	)

508 
	#AUP
 3

	)

510 
	$døw_¨row
(
ty≥
, 
x
, 
y
) {

511 
SDL_Re˘
 
d°_r
 = { 
x
, 
y
 - 13, 32, 32 };

512 
ty≥
) {

513 
ARIGHT
:

514 
	`SDL_BlôSurÁ˚
(
¨row_r
, 
NULL
, 
míu_buf
, &
d°_r
);

516 
ALEFT
:

517 
	`SDL_BlôSurÁ˚
(
¨row_l
, 
NULL
, 
míu_buf
, &
d°_r
);

519 
AUP
:

520 
	`SDL_BlôSurÁ˚
(
¨row_u
, 
NULL
, 
míu_buf
, &
d°_r
);

522 
ADOWN
:

523 
	`SDL_BlôSurÁ˚
(
¨row_d
, 
NULL
, 
míu_buf
, &
d°_r
);

526 
	}
}

528 
	$gn_öô_skö
() {

530 
míu_buf
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 352, 256, 16, 0xF800, 0x7E0,

533 
míu_back
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 352, 256, 16, 0xF800, 0x7E0,

535 i‡(
	`ªs_vîify_d©afûe
(
NULL
Ë=
GN_FALSE
) {

536 
	`¥ötf
("D©afûêNŸ Found! GngeÿcouldÇŸ föd hi†\¿d©afûê:–\n\n%s", 
g√º‹
);

537  
GN_FALSE
;

539 
back
 = 
	`ªs_lﬂd_°bi
("skin/back.tga");

540 
sf⁄t
 = 
	`lﬂd_f⁄t
("skin/font_small.tga");

541 
mf⁄t
 = 
	`lﬂd_f⁄t
("skin/font_large.tga");

542 
¨row_r
 = 
	`ªs_lﬂd_°bi
("skin/arrow_right.tga");

543 
¨row_l
 = 
	`ªs_lﬂd_°bi
("skin/arrow_left.tga");

544 
¨row_d
 = 
	`ªs_lﬂd_°bi
("skin/arrow_down.tga");

545 
¨row_u
 = 
	`ªs_lﬂd_°bi
("skin/arrow_up.tga");

546 
gngeo_logo
 = 
	`ªs_lﬂd_°bi
("skin/gngeo.tga");

547 
gngeo_mask
 = 
	`ªs_lﬂd_°bi
("skin/gngeo_mask.tga");

549 
pb¨_logo
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 
gngeo_logo
->
w
,

550 
gngeo_logo
->
h
, 32, 0xFF, 0xFF00, 0xFF0000, 0xFF000000);

551 
	`SDL_SëAÕha
(
gngeo_logo
, 0, 0);

553 
	`öô_back
();

555 i‡(!
back
 || !
sf⁄t
 || !
mf⁄t
 || !
¨row_r
 || !
¨row_l
 || !
¨row_u


556 || !
¨row_d
 || !
gngeo_logo
 || !
míu_buf
)

557  
GN_FALSE
;

558  
GN_TRUE
;

559 
	}
}

561 
	gpb¨_y
;

563 
	$gn_ª£t_pb¨
() {

564 
pb¨_y
 = 0;

565 
	}
}

567 
SDL_Thªad
 *
	gpb¨_th
;

569 
	spb¨_d©a
 {

570 *
	m«me
;

571 
	mpos
;

572 
	msize
;

573 
	mru¬ög
;

574 } 
	tpb¨_d©a
;

576 vﬁ©ûê
pb¨_d©a
 
	gpb¨
;

578 
	$pb¨_™im_thªad
(*
d©a
) {

579 
pb¨_d©a
 *
p
 = (pb¨_d©a*Ë
d©a
;

580 
SDL_Re˘
 
§c_r
 = { 2, 0, 
gngeo_logo
->
w
, gngeo_logo->
h
 };

581 
SDL_Re˘
 
d°_r
 = { 219 + 26, 146 + 16, 
gngeo_logo
->
w
, gngeo_logo->
h
 };

582 
SDL_Re˘
 
d°2_r
 = { 0, 0, 
gngeo_logo
->
w
, gngeo_logo->
h
 };

583 
x
 = 0;

585 
p
->
ru¬ög
) {

586 
	`døw_back
();

587 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
 + 150, 
p
->
«me
);

588 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
 + 165,

591 
	`SDL_BlôSurÁ˚
(
gngeo_logo
, 
NULL
, 
pb¨_logo
, NULL);

593 
d°2_r
.
y
 = -22 - (
p
->
pos
 * 64.0Ë/Ö->
size
;

594 
x
 += 3;

595 i‡(
x
 > 
gngeo_logo
->
w
)

596 
x
 -
gngeo_logo
->
w
;

598 
d°2_r
.
x
 = x;

599 
	`SDL_BlôSurÁ˚
(
gngeo_mask
, 
NULL
, 
pb¨_logo
, &
d°2_r
);

601 
d°2_r
.
x
 = x - 
gngeo_logo
->
w
;

602 
d°2_r
.
y
 = -22 - (
p
->
pos
 * 64.0Ë/Ö->
size
;

603 
	`SDL_BlôSurÁ˚
(
gngeo_mask
, 
NULL
, 
pb¨_logo
, &
d°2_r
);

605 
	`SDL_BlôSurÁ˚
(
pb¨_logo
, &
§c_r
, 
míu_buf
, &
d°_r
);

607 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

608 
	`s¸ìn_upd©e
();

609 
	`‰ame_skù
(0);

612 
	`SDL_BlôSurÁ˚
(
gngeo_logo
, 
NULL
, 
pb¨_logo
, NULL);

613 
	`SDL_BlôSurÁ˚
(
pb¨_logo
, &
§c_r
, 
míu_buf
, &
d°_r
);

614 
	`s¸ìn_upd©e
();

615 
	`‰ame_skù
(0);

617 
	}
}

619 
	$gn_öô_pb¨
(*
«me
, 
size
) {

620 
pb¨
.
«me
 =Çame;

621 
pb¨
.
pos
 = 0;

622 
pb¨
.
size
 = size;

623 
pb¨
.
ru¬ög
 = 1;

624 
pb¨_th
 = 
	`SDL_Cª©eThªad
(
pb¨_™im_thªad
, (*Ë&
pb¨
);

625 
	}
}

627 
	$gn_upd©e_pb¨
(
pos
) {

628 
pb¨
.
pos
 =Öos;

629 
	}
}

631 
	$gn_ãrmö©e_pb¨
() {

632 
pb¨
.
ru¬ög
 = 0;

633 
	`SDL_WaôThªad
(
pb¨_th
, 
NULL
);

634 
	}
}

636 
	$gn_p›up_îr‹
(*
«me
, *
fmt
, ...) {

637 
buf
[512];

638 
va_li°
 
pv¨
;

639 
	`va_°¨t
(
pv¨
, 
fmt
);

641 
	`ª£t_evít
();

643 
	`døw_back
();

644 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
, 
«me
);

646 
	`v¢¥ötf
(
buf
, 511, 
fmt
, 
pv¨
);

648 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
MENU_TEXT_X
, 
MENU_TEXT_Y
, 
buf
);

650 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_RIGHT
, 
ALIGN_DOWN
, "Pressány key ...");

651 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

652 
	`s¸ìn_upd©e
();

654 
	`waô_evít
() == 0)

656 
	}
}

658 
	$yes_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

660 
	}
}

662 
	$no_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

664 
	}
}

666 
	$gn_p›up_que°i⁄
(*
«me
, *
fmt
, ...) {

667 
buf
[512];

668 
va_li°
 
pv¨
;

669 
	`va_°¨t
(
pv¨
, 
fmt
);

670 
a
;

672 
	`ª£t_evít
();

675 
	`døw_back
();

677 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
, 
«me
);

679 
	`v¢¥ötf
(
buf
, 511, 
fmt
, 
pv¨
);

680 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
MENU_TEXT_X
, 
MENU_TEXT_Y
, 
buf
);

682 i‡(
ye¢o_míu
->
cuºít
 == 0)

683 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_RIGHT
, 
ALIGN_DOWN
,

686 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_RIGHT
, 
ALIGN_DOWN
,

688 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

689 
	`s¸ìn_upd©e
();

692 i‡((
a
 = 
ye¢o_míu
->
	`evít_h™dlög
(yesno_menu)) >= 0) {

693 
	`¥ötf
("ªtu∫ %d\n", 
a
);

694  
a
;

698 
	}
}

702 
	$døw_míu
(
GN_MENU
 *
m
) {

703 
°¨t
, 
íd
, 
i
;

704 
cx
 = 0;

705 
cy
 = 0;

707 
cx_vÆ
[] = { 0, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, -1, -1,

709 
nb_ôem
;

710 
ypos
, 
˝os
;

711 
GNFONT
 *
‚t
;

712 
LIST
 *
l
 = 
m
->
ôem
;

713 
j
;

715 i‡(
m
->
døw_ty≥
 =
MENU_BIG
)

716 
‚t
 = 
mf⁄t
;

718 
‚t
 = 
sf⁄t
;

721 
cx
++;

722 i‡(
cx
 > 25)

723 
cx
 = 0;

725 
nb_ôem
 = (
MENU_TEXT_Y_END
 - 
MENU_TEXT_Y
Ë/ 
‚t
->
ysize
 - 1;

727 
	`døw_back
();

729 i‡(
m
->
tôÀ
) {

730 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
, 
m
->
tôÀ
);

736 
°¨t
 = 
m
->
cuºít
 - 
nb_ôem
 / 2;

737 
íd
 = 
m
->
cuºít
 + 
nb_ôem
 / 2;

738 i‡(
°¨t
 < 0)

739 
°¨t
 = 0;

740 i‡(
íd
 >
m
->
nb_ñem
 - 1) {

741 
íd
 = 
m
->
nb_ñem
 - 1;

743 
	`døw_¨row
(
ADOWN
, 24, 200 + 
cx_vÆ
[
cx
]);

746 i‡(
m
->
cuºít
 <
nb_ôem
 / 2) {

747 
j
 = 
nb_ôem
 / 2 - 
m
->
cuºít
;

749 
j
 = 0;

750 
	`døw_¨row
(
AUP
, 24, 76 - 
cx_vÆ
[
cx
]);

754 
i
 = 0; i < 
°¨t
; i++, 
l
 =Ü->
√xt
) {

755 
GN_MENU_ITEM
 *
mi
 = (GN_MENU_ITEM *Ë
l
->
d©a
;

756 i‡(
mi
->
íabÀd
 == 0) {

757 
i
--;

760 
i
 = 
°¨t
; i <
íd
; i++, 
l
 =Ü->
√xt
) {

761 
GN_MENU_ITEM
 *
mi
 = (GN_MENU_ITEM *Ë
l
->
d©a
;

762 i‡(
mi
->
íabÀd
 == 0) {

763 
i
--;

768 i‡(
m
->
døw_ty≥
 =
MENU_BIG
) {

769 
	`f⁄t_£t_cﬁ‹
(
‚t
, 
ICOL_GREY_L
);

770 
	`døw_°rög
(
míu_buf
, 
‚t
, 
ALIGN_CENTER
 + 2,

771 
MENU_TEXT_Y
 + 2 + (
j
 * 
‚t
->
ysize
 + 2), 
mi
->
«me
);

772 
	`f⁄t_£t_cﬁ‹
(
‚t
, 
ICOL_BLACK
);

773 
	`døw_°rög
(
míu_buf
, 
‚t
, 
ALIGN_CENTER
,

774 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), 
mi
->
«me
);

775 i‡(
i
 =
m
->
cuºít
) {

776 
Àn
 = 
	`°rög_Àn
(
‚t
, 
mi
->
«me
) / 2;

777 
	`døw_¨row
(
ARIGHT
, 176 - 
Àn
 - 32 + 
cx_vÆ
[
cx
],

778 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2) + fnt->ysize / 2);

779 
	`døw_¨row
(
ALEFT
, 176 + 
Àn
 - 
cx_vÆ
[
cx
],

780 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2) + fnt->ysize / 2);

784 
	`døw_°rög
(
míu_buf
, 
‚t
, 
MENU_TEXT_X
 + 10,

785 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), 
mi
->
«me
);

786 i‡(
i
 =
m
->
cuºít
)

787 
	`døw_°rög
(
míu_buf
, 
‚t
, 
MENU_TEXT_X
,

788 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), ">");

789 i‡(
mi
->
ty≥
 =
MENU_CHECK
) {

790 i‡(
mi
->
vÆ
)

791 
	`døw_°rög
(
míu_buf
, 
‚t
, 
MENU_TEXT_X
 + 210,

792 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), "true");

794 
	`døw_°rög
(
míu_buf
, 
‚t
, 
MENU_TEXT_X
 + 210,

795 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), "false");

797 i‡(
mi
->
ty≥
 =
MENU_LIST
) {

798 
	`døw_°rög
(
míu_buf
, 
‚t
, 
MENU_TEXT_X
 + 210,

799 
MENU_TEXT_Y
 + (
j
 * 
‚t
->
ysize
 + 2), 
mi
->
°r
);

802 
j
++;

804 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

805 
	`s¸ìn_upd©e
();

806 
	`‰ame_skù
(0);

807 
	}
}

811 
GN_MENU_ITEM
 *
	$gn_míu_¸óã_ôem
(*
«me
, 
Uöt32
 
ty≥
,

812 (*
a˘i⁄
)(
GN_MENU_ITEM
 *
£lf
, *
∑øm
), *param) {

813 
GN_MENU_ITEM
 *
t
 = 
	`mÆloc
((GN_MENU_ITEM));

814 
t
->
«me
 = 
	`°rdup
(name);

816 
t
->
ty≥
 =Åype;

817 
t
->
a˘i⁄
 =áction;

818 
t
->
¨g
 = 
∑øm
;

819 
t
->
íabÀd
 = 1;

820  
t
;

821 
	}
}

823 
GN_MENU_ITEM
 *
	$gn_míu_gë_ôem_by_ödex
(
GN_MENU
 *
gmíu
, 
ödex
) {

824 
GN_MENU_ITEM
 *
gôem
;

825 
LIST
 *
l
 = 
gmíu
->
ôem
;

826 
i
 = 0;

827 
l
 = 
gmíu
->
ôem
;Ü;Ü =Ü->
√xt
) {

828 
gôem
 = (
GN_MENU_ITEM
 *Ë
l
->
d©a
;

829 i‡(
gôem
->
íabÀd
) {

830 i‡(
i
 =
ödex
)

831  
gôem
;

832 
i
++;

836  
NULL
;

837 
	}
}

839 
	$ã°_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

840 
	`¥ötf
("Action!!\n");

842 
	}
}

844 
	$lﬂd_°©e_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

845 
Uöt32
 
¶Ÿ
 = 0;

846 
SDL_Re˘
 
d°ª˘
 = { 24 + 75, 16 + 66, 304 / 2, 224 / 2 };

847 
SDL_Re˘
 
d°ª˘_bödög
 = { 24 + 73, 16 + 64, 304 / 2 + 4, 224 / 2 + 4 };

850 
SDL_SurÁ˚
 *
tmps
, *
¶Ÿ_img
;

851 
¶Ÿ_°r
[32];

853 
Uöt32
 
nb_¶Ÿ
 = 
	`how_m™y_¶Ÿ
(
c⁄f
.
game
);

855 i‡(
¶Ÿ
 > 
nb_¶Ÿ
 - 1)

856 
¶Ÿ
 = 
nb_¶Ÿ
 - 1;

858 i‡(
nb_¶Ÿ
 == 0) {

859 
	`gn_p›up_öfo
("Load State",

865 
tmps
 = 
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
);

866 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
tmps
, 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

871 
	`døw_back
();

872 
	`SDL_FûlRe˘
(
míu_buf
, &
d°ª˘_bödög
, 
	`COL32_TO_16
(0xFEFEFE));

873 
	`SDL_So·Såëch
(
¶Ÿ_img
, 
NULL
, 
míu_buf
, &
d°ª˘
);

875 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
, "Load State");

876 
	`•rötf
(
¶Ÿ_°r
, "SlŸ Numbî %03d", 
¶Ÿ
);

878 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_CENTER
, 
ALIGN_UP
, 
¶Ÿ_°r
);

880 i‡(
¶Ÿ
 > 0)

881 
	`døw_¨row
(
ALEFT
, 44 + 16, 224 / 2 + 16);

882 i‡(
¶Ÿ
 < 
nb_¶Ÿ
 - 1)

883 
	`døw_¨row
(
ARIGHT
, 304 - 43, 224 / 2 + 16);

885 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

886 
	`s¸ìn_upd©e
();

887 
	`‰ame_skù
(0);

888 
	`waô_evít
()) {

889 
GN_LEFT
:

890 i‡(
¶Ÿ
 > 0)

891 
¶Ÿ
--;

892 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
),

893 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

895 
GN_RIGHT
:

896 i‡(
¶Ÿ
 < 
nb_¶Ÿ
 - 1)

897 
¶Ÿ
++;

898 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
),

899 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

901 
GN_A
:

902  
MENU_STAY
;

904 
GN_B
:

905 
GN_C
:

906 
	`¥ötf
("Lﬂdög sèã %p!!\n", 
buf„r
);

907 
	`lﬂd_°©e
(
c⁄f
.
game
, 
¶Ÿ
);

908 
	`¥ötf
("Lﬂded sèã %p!!\n", 
buf„r
);

909  
MENU_RETURNTOGAME
;

916 
	}
}

918 
	$ßve_°©e_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

919 
Uöt32
 
¶Ÿ
 = 0;

920 
SDL_Re˘
 
d°ª˘
 = { 24 + 75, 16 + 66, 304 / 2, 224 / 2 };

921 
SDL_Re˘
 
d°ª˘_bödög
 = { 24 + 73, 16 + 64, 304 / 2 + 4, 224 / 2 + 4 };

922 
SDL_SurÁ˚
 *
tmps
, *
¶Ÿ_img
 = 
NULL
;

923 
¶Ÿ_°r
[32];

924 
Uöt32
 
nb_¶Ÿ
 = 
	`how_m™y_¶Ÿ
(
c⁄f
.
game
);

926 i‡(
¶Ÿ
 > 
nb_¶Ÿ
)

927 
¶Ÿ
 = 
nb_¶Ÿ
;

929 i‡(
nb_¶Ÿ
 !0 && 
¶Ÿ
 <Çb_slot) {

930 
tmps
 = 
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
);

931 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
tmps
, 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

935 
	`døw_back
();

936 i‡(
¶Ÿ
 !
nb_¶Ÿ
) {

937 
	`SDL_FûlRe˘
(
míu_buf
, &
d°ª˘_bödög
, 
	`COL32_TO_16
(0xFEFEFE));

938 
	`SDL_So·Såëch
(
¶Ÿ_img
, 
NULL
, 
míu_buf
, &
d°ª˘
);

940 
	`SDL_FûlRe˘
(
míu_buf
, &
d°ª˘_bödög
, 
	`COL32_TO_16
(0xFEFEFE));

941 
	`SDL_FûlRe˘
(
míu_buf
, &
d°ª˘
, 
	`COL32_TO_16
(0xA0B0B0));

942 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_CENTER
, ALIGN_CENTER,

946 
	`døw_°rög
(
míu_buf
, 
mf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
, "Save State");

947 
	`•rötf
(
¶Ÿ_°r
, "SlŸ Numbî %03d", 
¶Ÿ
);

948 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
ALIGN_CENTER
, 
ALIGN_UP
, 
¶Ÿ_°r
);

950 i‡(
¶Ÿ
 > 0)

951 
	`døw_¨row
(
ALEFT
, 44 + 16, 224 / 2 + 16);

952 i‡(
¶Ÿ
 < 
nb_¶Ÿ
)

953 
	`døw_¨row
(
ARIGHT
, 304 - 43, 224 / 2 + 16);

955 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

956 
	`s¸ìn_upd©e
();

957 
	`‰ame_skù
(0);

959 
	`waô_evít
()) {

960 
GN_LEFT
:

961 i‡(
¶Ÿ
 > 0)

962 
¶Ÿ
--;

963 i‡(
¶Ÿ
 !
nb_¶Ÿ
)

964 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
),

965 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

967 
GN_RIGHT
:

968 i‡(
¶Ÿ
 < 
nb_¶Ÿ
)

969 
¶Ÿ
++;

970 i‡(
¶Ÿ
 !
nb_¶Ÿ
)

971 
¶Ÿ_img
 = 
	`SDL_C⁄vîtSurÁ˚
(
	`lﬂd_°©e_img
(
c⁄f
.
game
, 
¶Ÿ
),

972 
míu_buf
->
f‹m©
, 
SDL_SWSURFACE
);

974 
GN_A
:

975  
MENU_STAY
;

977 
GN_B
:

978 
GN_C
:

980 
	`ßve_°©e
(
c⁄f
.
game
, 
¶Ÿ
);

981 
	`¥ötf
("Save state!!\n");

982  
MENU_RETURNTOGAME
;

989 
	}
}

991 
	$¸edô_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

993  
MENU_STAY
;

994 
	}
}

996 
	$exô_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1000 
	`¥ötf
("Saveáll\n");

1005  
MENU_EXIT
;

1006 
	}
}

1008 
	$míu_evít_h™dlög
(
GN_MENU
 *
£lf
) {

1010 
GN_MENU_ITEM
 *
mi
;

1011 
a
;

1012 
LIST
 *
l
;

1013 
	`waô_evít
()) {

1014 
GN_UP
:

1015 i‡(
£lf
->
cuºít
 > 0)

1016 
£lf
->
cuºít
--;

1018 
£lf
->
cuºít
 = sñf->
nb_ñem
 - 1;

1020 
GN_DOWN
:

1021 i‡(
£lf
->
cuºít
 < sñf->
nb_ñem
 - 1)

1022 
£lf
->
cuºít
++;

1024 
£lf
->
cuºít
 = 0;

1027 
GN_LEFT
:

1028 
£lf
->
cuºít
 -= 10;

1029 i‡(
£lf
->
cuºít
 < 0)

1030 
£lf
->
cuºít
 = 0;

1032 
GN_RIGHT
:

1033 
£lf
->
cuºít
 += 10;

1034 i‡(
£lf
->
cuºít
 >£lf->
nb_ñem
)

1035 
£lf
->
cuºít
 = sñf->
nb_ñem
 - 1;

1037 
GN_A
:

1038  
MENU_CLOSE
;

1040 
GN_B
:

1041 
GN_C
:

1043 
mi
 = 
	`gn_míu_gë_ôem_by_ödex
(
£lf
, sñf->
cuºít
);

1044 i‡(
mi
 && mi->
a˘i⁄
) {

1045 
	`ª£t_evít
();

1046 i‡((
a
 = 
mi
->
	`a˘i⁄
(mi, 
NULL
)) > 0)

1051  
a
;

1059 
	}
}

1061 
GN_MENU
 *
	$¸óã_míu
(*
«me
, 
ty≥
, (*
a˘i⁄
)(
GN_MENU
 *
£lf
),

1062 (*
døw
)(
GN_MENU
 *
£lf
)) {

1063 
GN_MENU
 *
gmíu
;

1064 
gmíu
 = 
	`mÆloc
((
GN_MENU
));

1065 
gmíu
->
tôÀ
 = 
«me
;

1066 
gmíu
->
nb_ñem
 = 0;

1067 
gmíu
->
cuºít
 = 0;

1068 
gmíu
->
døw_ty≥
 = 
ty≥
;

1069 i‡(
a˘i⁄
)

1070 
gmíu
->
evít_h™dlög
 = 
a˘i⁄
;

1072 
gmíu
->
evít_h™dlög
 = 
míu_evít_h™dlög
;

1073 i‡(
døw
)

1074 
gmíu
->
døw
 = draw;

1076 
gmíu
->
døw
 = 
døw_míu
;

1077 
gmíu
->
ôem
 = 
NULL
;

1078  
gmíu
;

1079 
	}
}

1081 
GN_MENU_ITEM
 *
	$gn_míu_add_ôem
(
GN_MENU
 *
gmíu
, *
«me
, 
ty≥
,

1082 (*
a˘i⁄
)(
GN_MENU_ITEM
 *
£lf
, *
∑øm
), *param) {

1083 
GN_MENU_ITEM
 *
gôem
;

1084 
gôem
 = 
	`gn_míu_¸óã_ôem
(
«me
, 
ty≥
, 
a˘i⁄
, 
∑øm
);

1085 
gmíu
->
ôem
 = 
	`li°_≠≥nd
(gmíu->ôem, (*Ë
gôem
);

1086 
gmíu
->
nb_ñem
++;

1087  
gôem
;

1088 
	}
}

1090 
GN_MENU_ITEM
 *
	$gn_míu_gë_ôem_by_«me
(
GN_MENU
 *
gmíu
, *
«me
) {

1091 
GN_MENU_ITEM
 *
gôem
;

1092 
LIST
 *
l
 = 
gmíu
->
ôem
;

1094 
l
 = 
gmíu
->
ôem
;Ü;Ü =Ü->
√xt
) {

1095 
gôem
 = (
GN_MENU_ITEM
 *Ë
l
->
d©a
;

1096 i‡(
	`°∫cmp
(
gôem
->
«me
,Çame, 128Ë=0 && gôem->
íabÀd
 != 0) {

1097  
gôem
;

1100  
NULL
;

1101 
	}
}

1103 
	$gn_míu_dißbÀ_ôem
(
GN_MENU
 *
gmíu
, *
«me
) {

1104 
GN_MENU_ITEM
 *
gôem
;

1105 
LIST
 *
l
 = 
gmíu
->
ôem
;

1107 
l
 = 
gmíu
->
ôem
;Ü;Ü =Ü->
√xt
) {

1108 
gôem
 = (
GN_MENU_ITEM
 *Ë
l
->
d©a
;

1109 i‡(
	`°∫cmp
(
gôem
->
«me
,Çame, 128Ë=0 && gôem->
íabÀd
 != 0) {

1110 
gôem
->
íabÀd
 = 0;

1111 
gmíu
->
nb_ñem
--;

1115 
	}
}

1117 
	$gn_míu_íabÀ_ôem
(
GN_MENU
 *
gmíu
, *
«me
) {

1118 
GN_MENU_ITEM
 *
gôem
;

1119 
LIST
 *
l
 = 
gmíu
->
ôem
;

1121 
l
 = 
gmíu
->
ôem
;Ü;Ü =Ü->
√xt
) {

1122 
gôem
 = (
GN_MENU_ITEM
 *Ë
l
->
d©a
;

1123 i‡(
	`°rcmp
(
gôem
->
«me
,ÇameË=0 && gôem->
íabÀd
 == 0) {

1124 
gôem
->
íabÀd
 = 1;

1125 
gmíu
->
nb_ñem
++;

1129 
	}
}

1131 
	$iˇ£s‹t
(c⁄° 
dúít
 **
a
, c⁄° dúíà**
b
) {

1132 c⁄° *
ˇ
 = (*
a
)->
d_«me
;

1133 c⁄° *
cb
 = (*
b
)->
d_«me
;

1134  
	`°rˇ£cmp
(
ˇ
, 
cb
);

1135 
	}
}

1137 
	$rom«mes‹t
(*
a
, *
b
) {

1138 
GN_MENU_ITEM
 *
ga
 = (GN_MENU_ITEM *Ë
a
;

1139 
GN_MENU_ITEM
 *
gb
 = (GN_MENU_ITEM *Ë
b
;

1141  
	`°rcmp
(
ga
->
«me
, 
gb
->name);

1142 
	}
}

1144 
	$lﬂdrom_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1145 *
game
 = (*Ë
£lf
->
¨g
;

1147 
	`¥ötf
("Lﬂdög %s\n", 
game
);

1148 
	`˛o£_game
();

1151 i‡(
	`öô_game
(
game
Ë!
GN_TRUE
) {

1152 
	`¥ötf
("C™'àöô %s...\n", 
game
);

1153 
	`gn_p›up_îr‹
("Error! :", "Gngeo Couldn't init %s: \n\n%s\n"

1154 "Maybêthêrom£àyou'ª usög i†toÿﬁd", 
game
, 
g√º‹
);

1155  
MENU_STAY
;

1158  
MENU_RETURNTOGAME
;

1159 
	}
}

1161 vﬁ©ûê
	gsˇnög
 = 0;

1163 
	$rom_brow£r_sˇ¬ög_™im
(*
d©a
) {

1164 
i
 = 0;

1165 
sˇnög
) {

1166 
	`døw_back
();

1167 i‡(
i
 > 20)

1168 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
,

1171 
	`døw_°rög
(
míu_buf
, 
sf⁄t
, 
MENU_TITLE_X
, 
MENU_TITLE_Y
,

1173 
	`SDL_BlôSurÁ˚
(
míu_buf
, 
NULL
, 
buf„r
, NULL);

1174 
	`s¸ìn_upd©e
();

1175 
	`‰ame_skù
(0);

1176 
i
++;

1177 i‡(
i
 > 40)

1178 
i
 = 0;

1181 
	}
}

1182 
‰ì_rom_brow£r_míu
();

1183 
öô_rom_brow£r_míu
();

1184 
	$ch™gedú_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1185 *
dú
 = (*Ë
£lf
->
¨g
;

1186 
SDL_Thªad
 *
™im_th
;

1196 
	`gn_°∫ˇt_dú
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rom∑th")), 
dú
, 
CF_MAXSTRLEN
);

1198 
	`cf_ßve_›ti⁄
(
NULL
, "rompath", 0);

1200 
sˇnög
 = 1;

1201 
™im_th
 = 
	`SDL_Cª©eThªad
(
rom_brow£r_sˇ¬ög_™im
, 
NULL
);

1202 
	`‰ì_rom_brow£r_míu
();

1203 
	`öô_rom_brow£r_míu
();

1204 
sˇnög
 = 0;

1205 
	`SDL_WaôThªad
(
™im_th
, 
NULL
);

1207  
MENU_STAY
;

1208 
	}
}

1209 
	$‰ì_rom_brow£r_míu
() {

1210 
LIST
 *
i
, *
t
;

1211 i‡(
rbrow£r_míu
 =
NULL
)

1214 
i
 = 
rbrow£r_míu
->
ôem
; i; i = i->
√xt
) {

1215 
GN_MENU_ITEM
 *
gôem
;

1216 
gôem
 = (
GN_MENU_ITEM
*Ë
i
->
d©a
;

1217 i‡(
gôem
->
«me
)

1218 
	`‰ì
(
gôem
->
«me
);

1219 i‡(
gôem
->
¨g
)

1220 
	`‰ì
(
gôem
->
¨g
);

1221 
	`‰ì
(
gôem
);

1223 
i
 = 
rbrow£r_míu
->
ôem
;

1224 
i
) {

1225 
t
 = 
i
;

1226 
i
 = i->
√xt
;

1227 
	`‰ì
(
t
);

1229 
	}
}

1231 
	$öô_rom_brow£r_míu
() {

1232 
i
;

1233 
nbf
;

1234 
fûíame
[
	`°æí
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rompath"))) + 256];

1235 
°©
 
fûe°©
;

1236 
dúít
 **
«mñi°
;

1237 
ROM_DEF
 *
drv
 = 
NULL
;

1239 
nb_roms
 = 0;

1240 
DIR
 *
dh
;

1241 
dúít
 *
fûe
;

1243 
rbrow£r_míu
 = 
	`¸óã_míu
("Lﬂd Game", 
MENU_SMALL
, 
NULL
, NULL);

1245 i‡((
dh
 = 
	`›ídú
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rom∑th")))Ë!
NULL
) {

1246 (
fûe
 = 
	`ªaddú
(
dh
)Ë!
NULL
) {

1247 
	`•rötf
(
fûíame
, "%s/%s", 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rompath")),

1248 
fûe
->
d_«me
);

1249 i‡(
	`°©
(
fûíame
, &
fûe°©
) == 0) {

1251 i‡(
	`S_ISDIR
(
fûe°©
.
°_mode
)

1252 || (
	`°rcmp
(
fûe
->
d_«me
, ".") == 0

1253 && 
	`°rcmp
(
fûe
->
d_«me
, "..") == 0)) {

1254 
rbrow£r_míu
->
ôem
 = 
	`li°_ö£π_s‹t
(

1255 
rbrow£r_míu
->
ôem
,

1256 (*Ë
	`gn_míu_¸óã_ôem
(
fûe
->
d_«me
,

1257 
MENU_ACTION
, 
ch™gedú_a˘i⁄
,

1258 
	`°rdup
(
fûe
->
d_«me
)), 
rom«mes‹t
);

1259 
rbrow£r_míu
->
nb_ñem
++;

1262 i‡(
	`S_ISREG
(
fûe°©
.
°_mode
)) {

1264 i‡(
	`°r°r
(
fûíame
, ".gno"Ë!
NULL
) {

1265 
	`¥ötf
("GNO %s\n",
fûíame
);

1266 *
gn⁄ame
 = 
	`dr_gno_rom«me
(
fûíame
);

1267 
	`¥ötf
("gn⁄amê%s\n",
gn⁄ame
);

1268 i‡(
gn⁄ame
 !
NULL
 && (
drv
 = 
	`ªs_lﬂd_drv
(gnoname))!=NULL) {

1269 
rbrow£r_míu
->
ôem
 = 
	`li°_ö£π_s‹t
(

1270 
rbrow£r_míu
->
ôem
,

1271 (*Ë
	`gn_míu_¸óã_ôem
(
drv
->
l⁄g«me
,

1272 
MENU_ACTION
, 
lﬂdrom_a˘i⁄
,

1273 
	`°rdup
(
fûíame
)), 
rom«mes‹t
);

1274 
rbrow£r_míu
->
nb_ñem
++;

1275 
nb_roms
++;

1276 
	`‰ì
(
drv
);

1280 i‡(
	`°r°r
(
fûíame
, ".zù"Ë=
NULL
)

1282 
i
 = 0;

1284 
romli°
[
i
]) {

1285 i‡(
	`°r°r
(
fûíame
, 
romli°
[
i
]Ë!
NULL
) {

1286 i‡((
drv
 = 
	`dr_check_zù
(
fûíame
)Ë!
NULL
) {

1287 
rbrow£r_míu
->
ôem
 = 
	`li°_ö£π_s‹t
(

1288 
rbrow£r_míu
->
ôem
,

1289 (*Ë
	`gn_míu_¸óã_ôem
(

1290 
drv
->
l⁄g«me
, 
MENU_ACTION
,

1291 
lﬂdrom_a˘i⁄
,

1292 
	`°rdup
(
drv
->
«me
)),

1293 
rom«mes‹t
);

1294 
rbrow£r_míu
->
nb_ñem
++;

1296 
	`‰ì
(
drv
);

1297 
nb_roms
++;

1300 
i
++;

1306 
	`˛o£dú
(
dh
);

1343 i‡(
nb_roms
 == 0) {

1344 
rbrow£r_míu
->
ôem
 = 
	`li°_≠≥nd
(

1345 
rbrow£r_míu
->
ôem
,

1346 (*Ë
	`gn_míu_¸óã_ôem
("NÿGame†Found...", 
MENU_ACTION
,

1347 
NULL
, NULL));

1348 
rbrow£r_míu
->
nb_ñem
++;

1350 
	}
}

1352 
	$rom_brow£r_míu
() {

1353 
Uöt32
 
öô
 = 0;

1354 
a
;

1355 
SDL_Thªad
 *
™im_th
;

1357 i‡(
öô
 == 0) {

1358 *
Ω©h
 = 
	`°rdup
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rompath")));

1359 *
≠©h
;

1360 
öô
 = 1;

1363 
≠©h
 = 
	`ªÆ∑th
(
Ω©h
, 
NULL
);

1364 i‡(
≠©h
 =
NULL
)

1365 #ifde‡
EMBEDDED_FS


1366 
≠©h
=
	`ªÆ∑th
(
ROOTPATH
"roms/", 
NULL
);

1368 
≠©h
 = 
	`ªÆ∑th
(".", 
NULL
);

1370 
	`¢¥ötf
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rom∑th")), 
CF_MAXSTRLEN
, "%s", 
≠©h
);

1371 
	`‰ì
(
≠©h
);

1372 
	`‰ì
(
Ω©h
);

1374 
sˇnög
 = 1;

1375 
™im_th
 = 
	`SDL_Cª©eThªad
(
rom_brow£r_sˇ¬ög_™im
, 
NULL
);

1376 
	`öô_rom_brow£r_míu
();

1377 
sˇnög
 = 0;

1378 
	`SDL_WaôThªad
(
™im_th
, 
NULL
);

1382 
rbrow£r_míu
->
	`døw
(rbrowser_menu);

1383 i‡((
a
 = 
rbrow£r_míu
->
	`evít_h™dlög
(rbrowser_menu)) > 0) {

1384 i‡(
a
 =
MENU_CLOSE
)

1385  
MENU_STAY
;

1387  
a
;

1391  
MENU_STAY
;

1392 
	}
}

1394 
	$rbrow£r_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1396  
	`rom_brow£r_míu
();

1397 
	}
}

1399 
	$toggÀ_fuŒs¸ìn
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1400 
	`s¸ìn_fuŒs¸ìn
();

1401 
£lf
->
vÆ
 = 1 - self->val;

1402 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("fullscreen"));

1403 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("fuŒs¸ìn")Ë
£lf
->
vÆ
;

1404  
MENU_STAY
;

1405 
	}
}

1406 #ifde‡
PANDORA


1407 
	$toggÀ_wide
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1408 
£lf
->
vÆ
 = 1 - self->val;

1410 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("wide"));

1411 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("wide")Ë
£lf
->
vÆ
;

1412 
	`s¸ìn_ªöô
();

1413  
MENU_STAY
;

1414 
	}
}

1416 
	$toggÀ_vsync
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1418 
£lf
->
vÆ
 = 1 - self->val;

1419 
c⁄f
.
vsync
 = 
£lf
->
vÆ
;

1420 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("vsync"));

1421 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync")Ë
£lf
->
vÆ
;

1422 
	`s¸ìn_ªöô
();

1423  
MENU_STAY
;

1424 
	}
}

1426 
	$toggÀ_auto‰ameskù
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1427 
£lf
->
vÆ
 = 1 - self->val;

1428 
c⁄f
.
auto‰ameskù
 = 
£lf
->
vÆ
;

1429 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("autoframeskip"));

1430 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("auto‰ameskù")Ë
£lf
->
vÆ
;

1431 
	`ª£t_‰ame_skù
();

1432  
MENU_STAY
;

1433 
	}
}

1435 
	$toggÀ_¶ìpidÀ
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1436 
£lf
->
vÆ
 = 1 - self->val;

1437 
c⁄f
.
¶ìp_idÀ
 = 
£lf
->
vÆ
;

1438 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("sleepidle"));

1439 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("¶ìpidÀ")Ë
£lf
->
vÆ
;

1441  
MENU_STAY
;

1442 
	}
}

1444 
	$toggÀ_ø°î
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1445 
£lf
->
vÆ
 = 1 - self->val;

1446 
c⁄f
.
ø°î
 = 
£lf
->
vÆ
;

1447 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("raster"));

1448 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("ø°î")Ë
£lf
->
vÆ
;

1450  
MENU_STAY
;

1451 
	}
}

1453 
	$toggÀ_showÂs
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1454 
£lf
->
vÆ
 = 1 - self->val;

1455 
c⁄f
.
show_Âs
 = 
£lf
->
vÆ
;

1456 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("showfps"));

1457 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("showÂs")Ë
£lf
->
vÆ
;

1459  
MENU_STAY
;

1460 
	}
}

1462 
	$ch™ge_ef„˘_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1463 *
íame
 = (*Ë
£lf
->
¨g
;

1464 
	`¥ötf
("ToggÀÅÿef„˘ %s\n", 
£lf
->
«me
);

1465 i‡(
	`°rcmp
(
íame
, "none") != 0 || strcmp(ename, "soft") != 0) {

1466 
sˇÀ
 = 1;

1468 
	`°∫˝y
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("ef„˘")), 
íame
, 254);

1469 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("effect"));

1470 
	`s¸ìn_ªöô
();

1471  
MENU_STAY
;

1472 
	}
}

1473 
ef„˘_func
 
ef„˘
[];

1475 
	$ch™ge_ef„˘
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1476 
öô
 = 0;

1477 
a
;

1478 
i
;

1479 i‡(
öô
 == 0) {

1481 
öô
 = 1;

1482 
ef„˘_míu
 = 
	`¸óã_míu
("Choo£á¿Ef„˘", 
MENU_SMALL
, 
NULL
, NULL);

1484 
i
 = 0;

1485 
ef„˘
[
i
].
«me
 !
NULL
) {

1486 
ef„˘_míu
->
ôem
 = 
	`li°_≠≥nd
(

1487 
ef„˘_míu
->
ôem
,

1488 (*Ë
	`gn_míu_¸óã_ôem
(
ef„˘
[
i
].
desc
, 
MENU_ACTION
,

1489 
ch™ge_ef„˘_a˘i⁄
, (*Ë
ef„˘
[
i
].
«me
));

1490 
ef„˘_míu
->
nb_ñem
++;

1491 
i
++;

1495 
ef„˘_míu
->
	`døw
(effect_menu);

1496 i‡((
a
 = 
ef„˘_míu
->
	`evít_h™dlög
(effect_menu)) > 0) {

1497 
£lf
->
°r
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("effect"));

1498  
MENU_STAY
;

1502 
	}
}

1504 
	$ch™ge_ßm∂î©e_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1505 
øã
 = (Ë
£lf
->
¨g
;

1507 i‡(
øã
 != 0) {

1509 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("ßm∂î©e")Ë
øã
;

1510 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("samplerate"));

1511 i‡(
c⁄f
.
sound
 && c⁄f.
game
)

1512 
	`˛o£_sdl_audio
();

1514 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("sound"));

1515 
c⁄f
.
sound
 = 1;

1516 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sound")) = 1;

1517 
c⁄f
.
ßm∂e_øã
 = 
øã
;

1520 i‡(
c⁄f
.
game
) {

1521 
	`öô_sdl_audio
();

1522 
	`YM2610Ch™geSam∂î©e
(
c⁄f
.
ßm∂e_øã
);

1526 i‡(
c⁄f
.
sound
)

1527 
	`cf_ôem_has_bìn_ch™ged
(
	`cf_gë_ôem_by_«me
("sound"));

1528 
c⁄f
.
sound
 = 0;

1529 
c⁄f
.
ßm∂e_øã
 = 0;

1530 i‡(
c⁄f
.
game
)

1531 
	`˛o£_sdl_audio
();

1532 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sound")) = 0;

1535  
MENU_CLOSE
;

1536 
	}
}

1538 
	$ch™ge_ßm∂î©e
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1539 
öô
 = 0;

1540 
a
;

1541 
GN_MENU_ITEM
 *
gôem
;

1542 i‡(
öô
 == 0) {

1543 
öô
 = 1;

1544 
§©e_míu
 = 
	`¸óã_míu
("Choo£á sam∂êøã", 
MENU_SMALL
, 
NULL
, NULL);

1545 
gôem
 = 
	`gn_míu_¸óã_ôem
("Nÿsound", 
MENU_ACTION
,

1546 
ch™ge_ßm∂î©e_a˘i⁄
, (*) 0);

1547 
§©e_míu
->
ôem
 = 
	`li°_≠≥nd
(§©e_míu->ôem, (*Ë
gôem
);

1548 
§©e_míu
->
nb_ñem
++;

1550 
gôem
 = 
	`gn_míu_¸óã_ôem
("11025 (Fa° buàpo‹ quÆôy)", 
MENU_ACTION
,

1551 
ch™ge_ßm∂î©e_a˘i⁄
, (*) 11025);

1552 
§©e_míu
->
ôem
 = 
	`li°_≠≥nd
(§©e_míu->ôem, (*Ë
gôem
);

1553 
§©e_míu
->
nb_ñem
++;

1555 
gôem
 = 
	`gn_míu_¸óã_ôem
("22050 (Good com¥omi£)", 
MENU_ACTION
,

1556 
ch™ge_ßm∂î©e_a˘i⁄
, (*) 22050);

1557 
§©e_míu
->
ôem
 = 
	`li°_≠≥nd
(§©e_míu->ôem, (*Ë
gôem
);

1558 
§©e_míu
->
nb_ñem
++;

1560 
gôem
 = 
	`gn_míu_¸óã_ôem
("44100 (Be° quÆôy)", 
MENU_ACTION
,

1561 
ch™ge_ßm∂î©e_a˘i⁄
, (*) 44100);

1562 
§©e_míu
->
ôem
 = 
	`li°_≠≥nd
(§©e_míu->ôem, (*Ë
gôem
);

1563 
§©e_míu
->
nb_ñem
++;

1569 
§©e_míu
->
	`døw
(srate_menu);

1570 i‡((
a
 = 
§©e_míu
->
	`evít_h™dlög
(srate_menu)) > 0) {

1571 i‡(
c⁄f
.
sound
)

1572 
	`•rötf
(
£lf
->
°r
, "%d", 
c⁄f
.
ßm∂e_øã
);

1574 
	`•rötf
(
£lf
->
°r
, "No sound");

1576  
MENU_STAY
;

1580 
	}
}

1582 
	$ßve_c⁄f_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1583 
ty≥
 = (Ë
£lf
->
¨g
;

1584 i‡(
ty≥
 == 0)

1585 
	`cf_ßve_fûe
(
NULL
, 0);

1587 *
g∑th
;

1588 *
drc⁄f
;

1589 *
«me
 = 
mem‹y
.
rom
.
öfo
.name;

1590 #ifde‡
EMBEDDED_FS


1591 
g∑th
 = 
ROOTPATH
"conf/";

1593 
g∑th
 = 
	`gë_gngeo_dú
();

1595 
drc⁄f
 = 
	`Æloˇ
(
	`°æí
(
g∑th
Ë+ såÀn(
«me
) + strlen(".cf") + 1);

1596 
	`•rötf
(
drc⁄f
, "%s%s.cf", 
g∑th
, 
«me
);

1597 
	`cf_ßve_fûe
(
drc⁄f
, 0);

1599  
GN_TRUE
;

1600 
	}
}

1602 
	#RESET_BOOL
(
«me
,
id
Ë
gôem
=
	`gn_míu_gë_ôem_by_«me
(
›ti⁄_míu
,name);\

1603 i‡(
gôem
Ëgôem->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
(
id
));

	)

1605 
	$ª£t_míu_›ti⁄
() {

1606 
GN_MENU_ITEM
 *
gôem
;

1609 
	`RESET_BOOL
("Fullscreen", "fullscreen");

1610 
	`RESET_BOOL
("Vsync", "vsync");

1611 
	`RESET_BOOL
("Auto Frame Skip", "autoframeskip");

1612 
	`RESET_BOOL
("Sleep while idle", "sleepidle");

1613 
	`RESET_BOOL
("Show FPS", "showfps");

1614 #ifde‡
PANDORA


1615 
	`RESET_BOOL
("16/9","wide");

1617 
gôem
 = 
	`gn_míu_gë_ôem_by_«me
(
›ti⁄_míu
, "Effect");

1618 
gôem
->
°r
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("effect"));

1620 
gôem
 = 
	`gn_míu_gë_ôem_by_«me
(
›ti⁄_míu
, "Sample Rate");

1621 i‡(
c⁄f
.
sound
)

1622 
	`•rötf
(
gôem
->
°r
, "%d", 
c⁄f
.
ßm∂e_øã
);

1624 
	`•rötf
(
gôem
->
°r
, "No sound");

1625 
	}
}

1627 
	$›ti⁄_a˘i⁄
(
GN_MENU_ITEM
 *
£lf
, *
∑øm
) {

1629 
a
;

1630 
	`ª£t_míu_›ti⁄
();

1632 
›ti⁄_míu
->
	`døw
(option_menu);

1633 i‡((
a
 = 
›ti⁄_míu
->
	`evít_h™dlög
(option_menu)) > 0) {

1634 
	`ª£t_míu_›ti⁄
();

1635  
MENU_STAY
;

1640 
	}
}

1642 
	$gn_öô_míu
() {

1643 
GN_MENU_ITEM
 *
gôem
;

1644 
maö_míu
 = 
	`¸óã_míu
(
NULL
, 
MENU_BIG
, NULL, NULL);

1646 
maö_míu
->
ôem
 = 
	`li°_≠≥nd
(

1647 
maö_míu
->
ôem
,

1648 (*Ë
	`gn_míu_¸óã_ôem
("Lﬂd game", 
MENU_ACTION
, 
rbrow£r_a˘i⁄
,

1649 
NULL
));

1650 
maö_míu
->
nb_ñem
++;

1652 
maö_míu
->
ôem
 = 
	`li°_≠≥nd
(

1653 
maö_míu
->
ôem
,

1654 (*Ë
	`gn_míu_¸óã_ôem
("Lﬂd sèã", 
MENU_ACTION
,

1655 
lﬂd_°©e_a˘i⁄
, 
NULL
));

1656 
maö_míu
->
nb_ñem
++;

1657 
maö_míu
->
ôem
 = 
	`li°_≠≥nd
(

1658 
maö_míu
->
ôem
,

1659 (*Ë
	`gn_míu_¸óã_ôem
("Savê°©e", 
MENU_ACTION
,

1660 
ßve_°©e_a˘i⁄
, 
NULL
));

1661 
maö_míu
->
nb_ñem
++;

1663 
maö_míu
->
ôem
 = 
	`li°_≠≥nd
(

1664 
maö_míu
->
ôem
,

1665 (*Ë
	`gn_míu_¸óã_ôem
("O±i⁄", 
MENU_ACTION
, 
›ti⁄_a˘i⁄
,

1666 
NULL
));

1667 
maö_míu
->
nb_ñem
++;

1675 
maö_míu
->
ôem
 = 
	`li°_≠≥nd
(main_menu->item,

1676 (*Ë
	`gn_míu_¸óã_ôem
("Exô", 
MENU_ACTION
, 
exô_a˘i⁄
, 
NULL
));

1677 
maö_míu
->
nb_ñem
++;

1679 
›ti⁄_míu
 = 
	`¸óã_míu
("O±i⁄s", 
MENU_SMALL
, 
NULL
, NULL);

1681 
gôem
 = 
	`gn_míu_¸óã_ôem
("FuŒs¸ìn", 
MENU_CHECK
, 
toggÀ_fuŒs¸ìn
, 
NULL
);

1682 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("fullscreen"));

1683 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1684 
›ti⁄_míu
->
nb_ñem
++;

1685 #ifde‡
PANDORA


1686 
gôem
 = 
	`gn_míu_¸óã_ôem
("16/9", 
MENU_CHECK
, 
toggÀ_wide
, 
NULL
);

1687 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("wide"));

1688 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1689 
›ti⁄_míu
->
nb_ñem
++;

1691 
gôem
 = 
	`gn_míu_¸óã_ôem
("Vsync", 
MENU_CHECK
, 
toggÀ_vsync
, 
NULL
);

1692 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("vsync"));

1693 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1694 
›ti⁄_míu
->
nb_ñem
++;

1696 
gôem
 = 
	`gn_míu_¸óã_ôem
("AutÿFømêSkù", 
MENU_CHECK
, 
toggÀ_auto‰ameskù
,

1697 
NULL
);

1698 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("autoframeskip"));

1699 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1700 
›ti⁄_míu
->
nb_ñem
++;

1702 
gôem
 = 
	`gn_míu_¸óã_ôem
("SÀï whûêidÀ", 
MENU_CHECK
, 
toggÀ_¶ìpidÀ
,

1703 
NULL
);

1704 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("sleepidle"));

1705 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1706 
›ti⁄_míu
->
nb_ñem
++;

1708 
gôem
 = 
	`gn_míu_¸óã_ôem
("Show FPS", 
MENU_CHECK
, 
toggÀ_showÂs
, 
NULL
);

1709 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("showfps"));

1710 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1711 
›ti⁄_míu
->
nb_ñem
++;

1713 
gôem
 = 
	`gn_míu_¸óã_ôem
("E«bÀ Ra°îÉf„˘", 
MENU_CHECK
, 
toggÀ_ø°î
,

1714 
NULL
);

1715 
gôem
->
vÆ
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("raster"));

1716 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1717 
›ti⁄_míu
->
nb_ñem
++;

1719 
gôem
 = 
	`gn_míu_¸óã_ôem
("Ef„˘", 
MENU_LIST
, 
ch™ge_ef„˘
, 
NULL
);

1720 
gôem
->
°r
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("effect"));

1721 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1722 
›ti⁄_míu
->
nb_ñem
++;

1724 
gôem
 = 
	`gn_míu_¸óã_ôem
("Sam∂êR©e", 
MENU_LIST
, 
ch™ge_ßm∂î©e
, 
NULL
);

1725 
gôem
->
°r
 = 
	`mÆloc
(32);

1726 i‡(
c⁄f
.
sound
)

1727 
	`•rötf
(
gôem
->
°r
, "%d", 
c⁄f
.
ßm∂e_øã
);

1729 
	`•rötf
(
gôem
->
°r
, "No sound");

1730 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1731 
›ti⁄_míu
->
nb_ñem
++;

1733 
gôem
 = 
	`gn_míu_¸óã_ôem
("Savêc⁄‡f‹Évîy game", 
MENU_ACTION
,

1734 
ßve_c⁄f_a˘i⁄
, (*) 0);

1735 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1736 
›ti⁄_míu
->
nb_ñem
++;

1738 
gôem
 = 
	`gn_míu_¸óã_ôem
("Savêc⁄‡f‹Åhi†game", 
MENU_ACTION
,

1739 
ßve_c⁄f_a˘i⁄
, (*) 1);

1740 
›ti⁄_míu
->
ôem
 = 
	`li°_≠≥nd
(›ti⁄_míu->ôem, (*Ë
gôem
);

1741 
›ti⁄_míu
->
nb_ñem
++;

1743 
ye¢o_míu
 = 
	`¸óã_míu
(
NULL
, 
MENU_SMALL
, NULL, NULL);

1744 
gôem
 = 
	`gn_míu_¸óã_ôem
("Yes", 
MENU_ACTION
, 
yes_a˘i⁄
, 
NULL
);

1745 
ye¢o_míu
->
ôem
 = 
	`li°_≠≥nd
(ye¢o_míu->ôem, (*Ë
gôem
);

1746 
ye¢o_míu
->
nb_ñem
++;

1747 
gôem
 = 
	`gn_míu_¸óã_ôem
("no", 
MENU_ACTION
, 
no_a˘i⁄
, 
NULL
);

1748 
ye¢o_míu
->
ôem
 = 
	`li°_≠≥nd
(ye¢o_míu->ôem, (*Ë
gôem
);

1749 
ye¢o_míu
->
nb_ñem
++;

1750 
	}
}

1752 
Uöt32
 
	$run_míu
() {

1753 
Uöt32
 
öô
 = 0;

1754 
a
;

1756 i‡(
öô
 == 0) {

1757 
öô
 = 1;

1758 
	`gn_öô_míu
();

1761 
	`öô_back
();

1763 
	`ª£t_evít
();

1765 
	`ª£t_‰ame_skù
();

1767 
	`gn_míu_dißbÀ_ôem
(
maö_míu
, "Load state");

1768 i‡(
c⁄f
.
game
 =
NULL
) {

1769 
	`gn_míu_dißbÀ_ôem
(
maö_míu
, "Save state");

1770 
	`gn_míu_dißbÀ_ôem
(
›ti⁄_míu
, "Save conf forÅhis game");

1772 
Uöt32
 
nb_¶Ÿ
 = 
	`how_m™y_¶Ÿ
(
c⁄f
.
game
);

1773 
	`gn_míu_íabÀ_ôem
(
maö_míu
, "Save state");

1774 
	`gn_míu_íabÀ_ôem
(
›ti⁄_míu
, "Save conf forÅhis game");

1775 i‡(
nb_¶Ÿ
 > 0)

1776 
	`gn_míu_íabÀ_ôem
(
maö_míu
, "Load state");

1780 
maö_míu
->
	`døw
(main_menu);

1781 i‡((
a
 = 
maö_míu
->
	`evít_h™dlög
(main_menu)) > 0)

1783  
a
;

1786 i‡(
c⁄f
.
game
 =
NULL
)

1789 
	}
}

	@src/menu.h

19 #i‚de‡
_MENU_H_


20 
	#_MENU_H_


	)

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~"SDL.h
"

27 
	~"li°.h
"

29 
	#MENU_ACTION
 1

	)

30 
	#MENU_CHECK
 2

	)

31 
	#MENU_VALUE
 3

	)

32 
	#MENU_LIST
 4

	)

34 
	sGN_MENU_ITEM
 {

35 *
	m«me
;

36 
Uöt32
 
	mty≥
;

37 
	míabÀd
;

38 
	mvÆ
;

39 **
	mlvÆ
;

40 *
	m°r
;

41 *
	m¨g
;

42 (*
	ma˘i⁄
)(
GN_MENU_ITEM
 *
	m£lf
,*
	m∑øm
);

43 (*
	mdøw
)(
GN_MENU_ITEM
 *
	m£lf
);

44 }
	tGN_MENU_ITEM
;

46 
	sGN_MENU
 {

47 *
	mtôÀ
;

48 
	mnb_ñem
;

49 
	mcuºít
;

50 
	mœ°pos
;

51 
	mdøw_ty≥
;

52 
LIST
 *
	môem
;

53 (*
	mevít_h™dlög
)(
GN_MENU
 *
	m£lf
);

54 (*
	mdøw
)(
GN_MENU
 *
	m£lf
);

55 }
	tGN_MENU
;

59 
	#MENU_TXT_X
 62

	)

60 
	#MENU_TXT_Y
 62

	)

63 
GN_MENU_ITEM
* 
gn_míu_¸óã_ôem
(*
«me
,
Uöt32
 
ty≥
,

64 (*
a˘i⁄
)(
GN_MENU_ITEM
 *
£lf
,*
∑øm
),*param);

65 
	`gn_míu_dñëe_ôem
(
GN_MENU_ITEM
 *
míu
);

67 
	`gn_öô_skö
();

68 
	`gn_lo›_míu
(
GN_MENU
 *
m
);

69 
Uöt32
 
	`run_míu
();

70 
	`gn_ª£t_pb¨
();

71 
	`gn_öô_pb¨
(*
«me
,
size
);

72 
	`gn_upd©e_pb¨
(
pos
);

73 
	`gn_ãrmö©e_pb¨
();

75 
	`gn_p›up_îr‹
(*
«me
,*
fmt
,...);

76 
	`gn_p›up_que°i⁄
(*
«me
,*
fmt
,...);

78 
	#gn_p›up_öfo
 
gn_p›up_îr‹


	)

	@src/messages.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<°rög.h
>

24 
	~"SDL.h
"

25 
	~"mesßges.h
"

26 
	~"video.h
"

27 
	~"emu.h
"

28 
	~"timî.h
"

29 
	~"‰ame_skù.h
"

30 
	~"s¸ìn.h
"

31 
	~"sound.h
"

32 
	~<°d¨g.h
>

35 
	gf⁄t_w
=8;

36 
	gf⁄t_h
=9;

38 
	$SDL_putch¨
(
SDL_SurÁ˚
 * 
de°
, 
x
, 
y
, 
c
)

40 
SDL_Re˘
 
f⁄t_ª˘
, 
de°_ª˘
;

41 
ödi˚
 = 
c
 - 32;

43 i‡(
c
 < 32 || c > 127)

46 
f⁄t_ª˘
.
x
 = 
ödi˚
 * 
f⁄t_w
;

47 
f⁄t_ª˘
.
y
 = 0;

48 
f⁄t_ª˘
.
w
 = 
f⁄t_w
;

49 
f⁄t_ª˘
.
h
 = 
f⁄t_h
;

50 
de°_ª˘
.
x
 = x;

51 
de°_ª˘
.
y
 = y;

52 
de°_ª˘
.
w
 = 
f⁄t_w
;

53 
de°_ª˘
.
h
 = 
f⁄t_h
;

55 
	`SDL_BlôSurÁ˚
(
f⁄tbuf
, &
f⁄t_ª˘
, 
de°
, &
de°_ª˘
);

57 
	}
}

59 
	$SDL_ãxtout
(
SDL_SurÁ˚
 * 
de°
, 
x
, 
y
, c⁄° *
°rög
)

61 
i
;
xx
=
x
;

62 
i
 = 0; i < 
	`°æí
(
°rög
); i++) {

63 i‡(
°rög
[
i
]=='\n'Ë{
xx
=
x
;
y
+=
f⁄t_h
;;}

64 
	`SDL_putch¨
(
de°
, 
xx
 , 
y
, 
°rög
[
i
]);

65 
xx
+=
f⁄t_w
;

67 
	}
}

72 
	$îr‹_box
(*
fmt
,...) {

73 
buf
[512];

74 
va_li°
 
pv¨
;

75 
	`va_°¨t
(
pv¨
,
fmt
);

76 
SDL_Re˘
 
r
={32,32,320-64,240-64};

78 
	`SDL_FûlRe˘
(
s¸ìn
,&
r
,0xF011);

80 
	`v¢¥ötf
(
buf
,511,
fmt
,
pv¨
);

81 
	`SDL_ãxtout
(
s¸ìn
,40,40,
buf
);

83 
	`¶ìp
(5);

84 
	}
}

95 
	$døw_mesßge
(c⁄° *
°rög
)

102 
	`°r˝y
(
c⁄f
.
mesßge
, 
°rög
);

103 
c⁄f
.
do_mesßge
 = 75;

105 
	}
}

108 
	#LEFT
 1

	)

109 
	#RIGHT
 2

	)

110 
	#BACKSPACE
 3

	)

111 
	#DEL
 4

	)

113 
	$SDL_gëch¨
()

115 
SDL_Evít
 
evít
;

116 
	`SDL_WaôEvít
(&
evít
);

118 
evít
.
ty≥
) {

119 
SDL_KEYDOWN
:

120 
evít
.
key
.
keysym
.
sym
) {

121 
SDLK_RETURN
:

123 
SDLK_LEFT
:

124  
LEFT
;

125 
SDLK_RIGHT
:

126  
RIGHT
;

127 
SDLK_DELETE
:

128  
DEL
;

129 
SDLK_BACKSPACE
:

130  
BACKSPACE
;

135 i‡–(
evít
.
key
.
keysym
.
unicode
 & 0xFF80) == 0 ) {

136  (
evít
.
key
.
keysym
.
unicode
 & 0x7F);

141 
	}
}

143 
	$ãxt_öput
(c⁄° *
mesßge
,
x
,
y
,*
°rög
,
size
)

145 
sx
;

146 
a
;

147 
s
=0;

148 
i
;

149 
pos
=0;

150 
SDL_SurÁ˚
 *
ßve
=
NULL
;

151 
SDL_Re˘
 
˛ór_ª˘
={16,227,320,16};

152 i‡(!
ßve
)

153 
ßve
=
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,320,16,16, 0xF800, 0x7E0,0x1F, 0);

155 i‡(
c⁄f
.
sound
Ë
	`∑u£_audio
(1);

157 
	`mem£t
(
°rög
,0,
size
+1);

159 
	`SDL_FûlRe˘
(
buf„r
,&
˛ór_ª˘
,0);

161 
	`SDL_ãxtout
(
buf„r
,
x
,
y
,
mesßge
);

162 
sx
=
x
+
	`°æí
(
mesßge
)* 
f⁄t_w
;

163 
	`SDL_E«bÀUNICODE
(1);

164 (
a
=
	`SDL_gëch¨
())!=-1) {

165 i‡(
a
==
LEFT
 && 
pos
>0)Öos--;

166 i‡(
a
==
RIGHT
 && 
pos
<
s
)Öos++;

167 i‡(
a
==
BACKSPACE
 && 
pos
>0) {

168 
i
=
pos
-1;i<
s
;i++)

169 
°rög
[
i
]=string[i+1];

170 
s
--;

171 
pos
--;

173 i‡(
a
==
DEL
 && 
pos
<
s
) {

174 
i
=
pos
;i<
s
;i++)

175 
°rög
[
i
]=string[i+1];

176 
s
--;

178 i‡(
a
>32 && 
s
<
size
 ) {

179 
i
=
s
;i>
pos
;i--)

180 
°rög
[
i
]=string[i-1];

181 
°rög
[
pos
]=()
a
;

183 
s
++;

184 
pos
++;

186 
	`SDL_FûlRe˘
(
buf„r
,&
˛ór_ª˘
,0);

188 
	`SDL_ãxtout
(
buf„r
,
x
,
y
,
mesßge
);

189 
	`SDL_ãxtout
(
buf„r
,
sx
,
y
,
°rög
);

191 ((
Uöt16
*)
buf„r
->
pixñs
)[352*(16+222)+
sx
+
pos
* 
f⁄t_w
-1]=0;

192 
i
=
sx
+
pos
* 
f⁄t_w
;i<sx+pos* font_w+ font_w;i++) {

193 ((
Uöt16
*)
buf„r
->
pixñs
)[352*(16+222)+
i
]=0xFFFF;

194 ((
Uöt16
*)
buf„r
->
pixñs
)[352*(16+221)+
i
]=0;

195 ((
Uöt16
*)
buf„r
->
pixñs
)[352*(16+223)+
i
]=0;

197 ((
Uöt16
*)
buf„r
->
pixñs
)[352*(16+222)+
sx
+
pos
* 
f⁄t_w
+font_w]=0;

198 
	`s¸ìn_upd©e
();

200 
	`SDL_E«bÀUNICODE
(0);

201 i‡(
c⁄f
.
sound
Ë
	`∑u£_audio
(0);

202 
	`ª£t_‰ame_skù
();

203 
	}
}

	@src/messages.h

19 #i‚de‡
_MESSAGES_H_


20 
	#_MESSAGES_H_


	)

22 
	~<SDL.h
>

24 
døw_mesßge
(c⁄° *
°rög
);

25 
°›_mesßge
(
∑øm
);

26 
SDL_ãxtout
(
SDL_SurÁ˚
 * 
de°
, 
x
, 
y
, c⁄° *
°rög
);

27 
ãxt_öput
(c⁄° *
mesßge
,
x
,
y
,*
°rög
,
size
);

28 
îr‹_box
(*
fmt
,...);

	@src/neoboot.c

17 
	~"mame_œyî.h
"

23 
	$√ogeo_boŸÀg_cx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

25 
i
;

26 
cx_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "sprites" );

27 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "sprites" );

28 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
cx_size
 );

30 
	`mem˝y
–
buf
, 
rom
, 
cx_size
 );

32  
i
 = 0; i < 
cx_size
 / 0x40; i++ ){

33 
	`mem˝y
–&
rom
[ 
i
 * 0x40 ], &
buf
[ (i ^ 1) * 0x40 ], 0x40 );

36 
	`‰ì
–
buf
 );

37 
	}
}

40 
	$√ogeo_boŸÀg_sx_de¸y±
–
ru¬ög_machöe
 *
machöe
, 
vÆue
 )

42 
sx_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "fixed" );

43 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

44 
i
;

46 i‡(
vÆue
 == 1)

48 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
sx_size
 );

49 
	`mem˝y
–
buf
, 
rom
, 
sx_size
 );

51  
i
 = 0; i < 
sx_size
; i += 0x10 )

53 
	`mem˝y
–&
rom
[ 
i
 ], &
buf
[ i + 8 ], 8 );

54 
	`mem˝y
–&
rom
[ 
i
 + 8 ], &
buf
[ i ], 8 );

56 
	`‰ì
–
buf
 );

58 i‡(
vÆue
 == 2)

60  
i
 = 0; i < 
sx_size
; i++ )

61 
rom
[ 
i
 ] = 
	`BITSWAP8
(Ñom[ i ], 7, 6, 0, 4, 3, 2, 1, 5 );

63 
	}
}

72 
	$kog_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

75 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

76 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x600000 );

77 
UINT16
 *
rom
 = (UINT16 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

78 
i
;

79 c⁄° 
£c
[] = { 0x3, 0x8, 0x7, 0xC, 0x1, 0xA, 0x6, 0xD };

81 
i
 = 0; i < 8; i++){

82 
	`mem˝y
 (
d°
 + 
i
 * 0x20000, 
§c
 + 
£c
[i] * 0x20000, 0x20000);

85 
	`mem˝y
 (
d°
 + 0x0007A6, 
§c
 + 0x0407A6, 0x000006);

86 
	`mem˝y
 (
d°
 + 0x0007C6, 
§c
 + 0x0407C6, 0x000006);

87 
	`mem˝y
 (
d°
 + 0x0007E6, 
§c
 + 0x0407E6, 0x000006);

88 
	`mem˝y
 (
d°
 + 0x090000, 
§c
 + 0x040000, 0x004000);

89 
	`mem˝y
 (
d°
 + 0x100000, 
§c
 + 0x200000, 0x400000);

90 
	`mem˝y
 (
§c
, 
d°
, 0x600000);

91 
	`‰ì
 (
d°
);

93 
i
 = 0x90000/2; i < 0x94000/2; i++){

94 i‡(((
rom
[
i
]&0xFFBF) == 0x4EB9 ||Ñom[i] == 0x43F9) && !rom[i + 1])

95 
rom
[
i
 + 1] = 0x0009;

97 i‡(
rom
[
i
] == 0x4EB8)

98 
rom
[
i
] = 0x6100;

101 
rom
[0x007A8/2] = 0x0009;

102 
rom
[0x007C8/2] = 0x0009;

103 
rom
[0x007E8/2] = 0x0009;

104 
rom
[0x93408/2] = 0xF168;

105 
rom
[0x9340C/2] = 0xFB7A;

106 
rom
[0x924AC/2] = 0x0009;

107 
rom
[0x9251C/2] = 0x0009;

108 
rom
[0x93966/2] = 0xFFDA;

109 
rom
[0x93974/2] = 0xFFCC;

110 
rom
[0x93982/2] = 0xFFBE;

111 
rom
[0x93990/2] = 0xFFB0;

112 
rom
[0x9399E/2] = 0xFFA2;

113 
rom
[0x939AC/2] = 0xFF94;

114 
rom
[0x939BA/2] = 0xFF86;

115 
rom
[0x939C8/2] = 0xFF78;

116 
rom
[0x939D4/2] = 0xFA5C;

117 
rom
[0x939E0/2] = 0xFA50;

118 
rom
[0x939EC/2] = 0xFA44;

119 
rom
[0x939F8/2] = 0xFA38;

120 
rom
[0x93A04/2] = 0xFA2C;

121 
rom
[0x93A10/2] = 0xFA20;

122 
rom
[0x93A1C/2] = 0xFA14;

123 
rom
[0x93A28/2] = 0xFA08;

124 
rom
[0x93A34/2] = 0xF9FC;

125 
rom
[0x93A40/2] = 0xF9F0;

126 
rom
[0x93A4C/2] = 0xFD14;

127 
rom
[0x93A58/2] = 0xFD08;

128 
rom
[0x93A66/2] = 0xF9CA;

129 
rom
[0x93A72/2] = 0xF9BE;

131 
	}
}

187 
	$de¸y±_kof10th
(
ru¬ög_machöe
 *
machöe
)

189 
i
, 
j
;

190 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x900000);

191 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

193 
	`mem˝y
(
d°
 + 0x000000, 
§c
 + 0x700000, 0x100000);

194 
	`mem˝y
(
d°
 + 0x100000, 
§c
 + 0x000000, 0x800000);

196 
i
 = 0; i < 0x900000; i++) {

197 
j
 = 
	`BITSWAP24
(
i
,23,22,21,20,19,18,17,16,15,14,13,12,11,2,9,8,7,1,5,4,3,10,6,0);

198 
§c
[
j
] = 
d°
[
i
];

201 
	`‰ì
(
d°
);

204 ((
UINT16
*)
§c
)[0x0124/2] = 0x000d;

205 ((
UINT16
*)
§c
)[0x0126/2] = 0xf7a8;

207 ((
UINT16
*)
§c
)[0x8bf4/2] = 0x4ef9;

208 ((
UINT16
*)
§c
)[0x8bf6/2] = 0x000d;

209 ((
UINT16
*)
§c
)[0x8bf8/2] = 0xf980;

210 
	}
}

216 
	$de¸y±_kf10thï
(
ru¬ög_machöe
 *
machöe
)

218 
i
;

219 
UINT16
 *
rom
 = (UINT16*)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

220 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

221 
UINT16
 *
buf
 = (UINT16*)
	`mem‹y_ªgi⁄
(
machöe
, "audiocrypt");

222 
UINT8
 *
§om
 = (UINT8*)
	`mem‹y_ªgi⁄
(
machöe
, "fixed");

223 
UINT8
 *
sbuf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x20000);

225 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x200000);

227 
	`mem˝y
(
d°
,
buf
,0x200000);

228 
	`mem˝y
(
§c
+0x000000,
d°
+0x060000,0x20000);

229 
	`mem˝y
(
§c
+0x020000,
d°
+0x100000,0x20000);

230 
	`mem˝y
(
§c
+0x040000,
d°
+0x0e0000,0x20000);

231 
	`mem˝y
(
§c
+0x060000,
d°
+0x180000,0x20000);

232 
	`mem˝y
(
§c
+0x080000,
d°
+0x020000,0x20000);

233 
	`mem˝y
(
§c
+0x0a0000,
d°
+0x140000,0x20000);

234 
	`mem˝y
(
§c
+0x0c0000,
d°
+0x0c0000,0x20000);

235 
	`mem˝y
(
§c
+0x0e0000,
d°
+0x1a0000,0x20000);

236 
	`mem˝y
(
§c
+0x0002e0,
d°
+0x0402e0,0x6a);

237 
	`mem˝y
(
§c
+0x0f92bc,
d°
+0x0492bc,0xb9e);

238 
i
=0xf92bc/2;i < 0xf9e58/2 ;i++)

240 i‡(
rom
[
i
+0] == 0x4eb9 &&Ñom[i+1] == 0x0000)Ñom[i+1] = 0x000F;

241 i‡(
rom
[
i
+0] == 0x4ef9 &&Ñom[i+1] == 0x0000)Ñom[i+1] = 0x000F;

243 
rom
[0x00342/2] = 0x000f;

244 
	`‰ì
(
d°
);

246 
i
=0;i<0x20000;i++)

247 
sbuf
[
i
]=
§om
[i^0x8];

249 
	`mem˝y
(
§om
,
sbuf
,0x20000);

250 
	`‰ì
(
sbuf
);

251 
	}
}

257 
	$kf2k5uni_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

259 
i
, 
j
, 
of°
;

260 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

261 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x80);

263 
i
 = 0; i < 0x800000; i+=0x80)

265 
j
 = 0; j < 0x80; j+=2)

267 
of°
 = 
	`BITSWAP8
(
j
, 0, 3, 4, 5, 6, 1, 2, 7);

268 
	`mem˝y
(
d°
 + 
j
, 
§c
 + 
i
 + 
of°
, 2);

270 
	`mem˝y
(
§c
 + 
i
, 
d°
, 0x80);

272 
	`‰ì
(
d°
);

274 
	`mem˝y
(
§c
, src + 0x600000, 0x100000);

275 
	}
}

277 
	$kf2k5uni_sx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

279 
i
;

280 
UINT8
 *
§om
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

282 
i
 = 0; i < 0x20000; i++)

283 
§om
[
i
] = 
	`BITSWAP8
(srom[i], 4, 5, 6, 7, 0, 1, 2, 3);

284 
	}
}

286 
	$kf2k5uni_mx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

288 
i
;

289 
UINT8
 *
mrom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "audiocpu" );

291 
i
 = 0; i < 0x30000; i++)

292 
mrom
[
i
] = 
	`BITSWAP8
(mrom[i], 4, 5, 6, 7, 0, 1, 2, 3);

293 
	}
}

295 
	$de¸y±_kf2k5uni
–
ru¬ög_machöe
 *
machöe
 )

297 
	`kf2k5uni_px_de¸y±
(
machöe
);

298 
	`kf2k5uni_sx_de¸y±
(
machöe
);

299 
	`kf2k5uni_mx_de¸y±
(
machöe
);

300 
	}
}

307 
	$kof2002b_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
UINT8
 *
§c
, 
size
)

309 
i
, 
j
;

310 
t
[ 8 ][ 10 ] =

322 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x10000 );

324  
i
 = 0; i < 
size
; i+=0x10000 )

326 
	`mem˝y
–
d°
, 
§c
+
i
, 0x10000 );

328  
j
 = 0; j < 0x200; j++ )

330 
n
 = (–
j
 % 0x40) / 8 );

331 
of°
 = 
	`BITSWAP16
(
j
, 15, 14, 13, 12, 11, 10, 9, 
t
[
n
][0],Å[n][1],Å[n][2],

332 
t
[
n
][3],Å[n][4],Å[n][5],Å[n][6],Å[n][7],Å[n][8]);

333 
	`mem˝y
–
§c
+
i
+
of°
*128, 
d°
+
j
*128, 128 );

336 
	`‰ì
–
d°
 );

337 
	}
}

343 
	$kf2k2mp_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

345 
i
,
j
;

347 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

348 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x80);

350 
	`memmove
(
§c
, src + 0x300000, 0x500000);

352 
i
 = 0; i < 0x800000; i+=0x80)

354 
j
 = 0; j < 0x80 / 2; j++)

356 
of°
 = 
	`BITSWAP8
–
j
, 6, 7, 2, 3, 4, 5, 0, 1 );

357 
	`mem˝y
(
d°
 + 
j
 * 2, 
§c
 + 
i
 + 
of°
 * 2, 2);

359 
	`mem˝y
(
§c
 + 
i
, 
d°
, 0x80);

361 
	`‰ì
(
d°
);

362 
	}
}

368 
	$kf2k2mp2_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

370 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

371 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x600000);

373 
	`mem˝y
 (
d°
 + 0x000000, 
§c
 + 0x1C0000, 0x040000);

374 
	`mem˝y
 (
d°
 + 0x040000, 
§c
 + 0x140000, 0x080000);

375 
	`mem˝y
 (
d°
 + 0x0C0000, 
§c
 + 0x100000, 0x040000);

376 
	`mem˝y
 (
d°
 + 0x100000, 
§c
 + 0x200000, 0x400000);

377 
	`mem˝y
 (
§c
 + 0x000000, 
d°
 + 0x000000, 0x600000);

378 
	`‰ì
 (
d°
);

379 
	}
}

386 
	$˘hd2003_√ogeo_gfx_addªss_fix_do
(
ru¬ög_machöe
 *
machöe
, 
°¨t
, 
íd
, 
bô3shi·
, 
bô2shi·
, 
bô1shi·
, 
bô0shi·
)

388 
i
,
j
;

389 
tûesize
=128;

391 
UINT8
* 
rom
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 16*
tûesize
);

392 
UINT8
* 
ªÆrom
 = 
	`mem‹y_ªgi⁄
(
machöe
, "•rôes"Ë+ 
°¨t
*
tûesize
;

394 
i
 = 0; i < (
íd
-
°¨t
)/16; i++) {

395 
j
 = 0; j < 16; j++) {

396 
off£t
 = (((
j
&1)>>0)<<
bô0shi·
)

397 +(((
j
&2)>>1)<<
bô1shi·
)

398 +(((
j
&4)>>2)<<
bô2shi·
)

399 +(((
j
&8)>>3)<<
bô3shi·
);

401 
	`mem˝y
(
rom
+
j
*
tûesize
, 
ªÆrom
+
off£t
*tilesize,Åilesize);

403 
	`mem˝y
(
ªÆrom
,
rom
,
tûesize
*16);

404 
ªÆrom
+=16*
tûesize
;

406 
	`‰ì
(
rom
);

407 
	}
}

409 
	$˘hd2003_√ogeo_gfx_addªss_fix
(
ru¬ög_machöe
 *
machöe
, 
°¨t
, 
íd
)

411 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*0, 
íd
+512*0, 0,3,2,1);

412 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*1, 
íd
+512*1, 1,0,3,2);

413 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*2, 
íd
+512*2, 2,1,0,3);

415 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*5, 
íd
+512*5, 0,1,2,3);

416 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*6, 
íd
+512*6, 0,1,2,3);

417 
	`˘hd2003_√ogeo_gfx_addªss_fix_do
(
machöe
, 
°¨t
+512*7, 
íd
+512*7, 0,2,3,1);

418 
	}
}

420 
	$˘hd2003_c
(
ru¬ög_machöe
 *
machöe
, 
pow
)

422 
i
;

424 
i
=0; i<=192; i+=8)

425 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

427 
i
=200; i<=392; i+=8)

428 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

430 
i
=400; i<=592; i+=8)

431 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

433 
i
=600; i<=792; i+=8)

434 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

436 
i
=800; i<=992; i+=8)

437 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

439 
i
=1000; i<=1016; i+=8)

440 
	`˘hd2003_√ogeo_gfx_addªss_fix
(
machöe
, 
i
*512,i*512+512);

441 
	}
}

443 
	$de¸y±_˘hd2003
–
ru¬ög_machöe
 *
machöe
 )

445 
UINT8
 *
romd©a
 = 
	`mem‹y_ªgi⁄
(
machöe
, "fixed");

446 
UINT8
 *
tmp
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 8*128*128);

448 
	`mem˝y
(
tmp
+8*0*128, 
romd©a
+8*0*128, 8*32*128);

449 
	`mem˝y
(
tmp
+8*32*128, 
romd©a
+8*64*128, 8*32*128);

450 
	`mem˝y
(
tmp
+8*64*128, 
romd©a
+8*32*128, 8*32*128);

451 
	`mem˝y
(
tmp
+8*96*128, 
romd©a
+8*96*128, 8*32*128);

452 
	`mem˝y
(
romd©a
, 
tmp
, 8*128*128);

454 
romd©a
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocpu")+0x10000;

455 
	`mem˝y
(
tmp
+8*0*128, 
romd©a
+8*0*128, 8*32*128);

456 
	`mem˝y
(
tmp
+8*32*128, 
romd©a
+8*64*128, 8*32*128);

457 
	`mem˝y
(
tmp
+8*64*128, 
romd©a
+8*32*128, 8*32*128);

458 
	`mem˝y
(
tmp
+8*96*128, 
romd©a
+8*96*128, 8*32*128);

459 
	`mem˝y
(
romd©a
, 
tmp
, 8*128*128);

461 
	`‰ì
(
tmp
);

463 
	`mem˝y
(
romd©a
-0x10000,romdata,0x10000);

465 
	`˘hd2003_c
(
machöe
, 0);

466 
	}
}

528 
	$˘2k3•_sx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

530 
rom_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "fixed" );

531 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

532 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

533 
i
;

534 
of°
;

536 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

538  
i
 = 0; i < 
rom_size
; i++ ){

539 
of°
 = 
	`BITSWAP24
–(
i
 & 0x1ffff), 23, 22, 21, 20, 19, 18, 17, 3,

543 
of°
 +(
i
 >> 17) << 17;

545 
rom
[ 
i
 ] = 
buf
[ 
of°
 ];

548 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

550 
	`mem˝y
–&
rom
[ 0x08000 ], &
buf
[ 0x10000 ], 0x8000 );

551 
	`mem˝y
–&
rom
[ 0x10000 ], &
buf
[ 0x08000 ], 0x8000 );

552 
	`mem˝y
–&
rom
[ 0x28000 ], &
buf
[ 0x30000 ], 0x8000 );

553 
	`mem˝y
–&
rom
[ 0x30000 ], &
buf
[ 0x28000 ], 0x8000 );

555 
	`‰ì
–
buf
 );

556 
	}
}

558 
	$de¸y±_˘2k3•
–
ru¬ög_machöe
 *
machöe
 )

560 
UINT8
 *
romd©a
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocpu")+0x10000;

561 
UINT8
*
tmp
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 8*128*128);

562 
	`mem˝y
(
tmp
+8*0*128, 
romd©a
+8*0*128, 8*32*128);

563 
	`mem˝y
(
tmp
+8*32*128, 
romd©a
+8*64*128, 8*32*128);

564 
	`mem˝y
(
tmp
+8*64*128, 
romd©a
+8*32*128, 8*32*128);

565 
	`mem˝y
(
tmp
+8*96*128, 
romd©a
+8*96*128, 8*32*128);

566 
	`mem˝y
(
romd©a
, 
tmp
, 8*128*128);

568 
	`‰ì
(
tmp
);

569 
	`mem˝y
(
romd©a
-0x10000,romdata,0x10000);

570 
	`˘2k3•_sx_de¸y±
(
machöe
);

571 
	`˘hd2003_c
(
machöe
, 0);

572 
	}
}

578 
	$de¸y±_˘2k3ß
–
ru¬ög_machöe
 *
machöe
 )

580 
UINT8
 *
romd©a
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocpu")+0x10000;

581 
UINT8
*
tmp
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 8*128*128);

582 
	`mem˝y
(
tmp
+8*0*128, 
romd©a
+8*0*128, 8*32*128);

583 
	`mem˝y
(
tmp
+8*32*128, 
romd©a
+8*64*128, 8*32*128);

584 
	`mem˝y
(
tmp
+8*64*128, 
romd©a
+8*32*128, 8*32*128);

585 
	`mem˝y
(
tmp
+8*96*128, 
romd©a
+8*96*128, 8*32*128);

586 
	`mem˝y
(
romd©a
, 
tmp
, 8*128*128);

588 
	`‰ì
(
tmp
);

589 
	`mem˝y
(
romd©a
-0x10000,romdata,0x10000);

590 
	`˘hd2003_c
(
machöe
, 0);

591 
	}
}

593 
	$∑tch_˘2k3ß
–
ru¬ög_machöe
 *
machöe
 )

596 
i
;

597 
UINT16
 *
mem16
 = (UINT16 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

603 
mem16
[0xf415a/2] = 0x4ef9;

604 
mem16
[0xf415c/2] = 0x000f;

605 
mem16
[0xf415e/2] = 0x4cf2;

608 
i
=0x1ae290/2;i < 0x1ae8d0/2; i=i+1)

610 
mem16
[
i
] = 0x0000;

614 
i
=0x1f8ef0/2;i < 0x1fa1f0/2; i=i+2)

616 
mem16
[
i
] -= 0x7000;

617 
mem16
[
i
+1] -= 0x0010;

621 
i
=0xac500/2;i < 0xac520/2; i=i+1)

623 
mem16
[
i
] = 0xFFFF;

626 
mem16
[0x991d0/2] = 0xdd03;

627 
mem16
[0x99306/2] = 0xdd03;

628 
mem16
[0x99354/2] = 0xdd03;

629 
mem16
[0x9943e/2] = 0xdd03;

630 
	}
}

636 
	$de¸y±_kof2k4£_68k
–
ru¬ög_machöe
 *
machöe
 )

638 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu")+0x100000;

639 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x400000);

640 
i
;

641 c⁄° 
£c
[] = {0x300000,0x200000,0x100000,0x000000};

642 
	`mem˝y
(
d°
,
§c
,0x400000);

644 
i
 = 0; i < 4; ++i)

646 
	`mem˝y
(
§c
+
i
*0x100000,
d°
+
£c
[i],0x100000);

648 
	`‰ì
(
d°
);

649 
	}
}

655 
	$œns2004_vx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

657 
i
;

658 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "ym" );

659 
i
 = 0; i < 0xA00000; i++)

660 
rom
[
i
] = 
	`BITSWAP8
(rom[i], 0, 1, 5, 4, 3, 2, 6, 7);

661 
	}
}

663 
	$œns2004_de¸y±_68k
–
ru¬ög_machöe
 *
machöe
 )

666 
i
;

667 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

668 
UINT16
 *
rom
 = (UINT16*)
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

669 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x600000);

672 c⁄° 
£c
[] = { 0x3, 0x8, 0x7, 0xC, 0x1, 0xA, 0x6, 0xD };

674 
i
 = 0; i < 8; i++)

675 
	`mem˝y
 (
d°
 + 
i
 * 0x20000, 
§c
 + 
£c
[i] * 0x20000, 0x20000);

677 
	`mem˝y
 (
d°
 + 0x0BBB00, 
§c
 + 0x045B00, 0x001710);

678 
	`mem˝y
 (
d°
 + 0x02FFF0, 
§c
 + 0x1A92BE, 0x000010);

679 
	`mem˝y
 (
d°
 + 0x100000, 
§c
 + 0x200000, 0x400000);

680 
	`mem˝y
 (
§c
, 
d°
, 0x600000);

681 
	`‰ì
 (
d°
);

684 
i
 = 0xBBB00/2; i < 0xBE000/2; i++) {

685 i‡((((
rom
[
i
]&0xFFBF)==0x4EB9) || ((rom[i]&0xFFBF)==0x43B9)) && (rom[i+1]==0x0000)) {

686 
rom
[
i
 + 1] = 0x000B;

687 
rom
[
i
 + 2] += 0x6000;

692 
rom
[0x2D15C/2] = 0x000B;

693 
rom
[0x2D15E/2] = 0xBB00;

694 
rom
[0x2D1E4/2] = 0x6002;

695 
rom
[0x2EA7E/2] = 0x6002;

696 
rom
[0xBBCD0/2] = 0x6002;

697 
rom
[0xBBDF2/2] = 0x6002;

698 
rom
[0xBBE42/2] = 0x6002;

699 
	}
}

742 
	$svcboŸ_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

744 c⁄° 
UINT8
 
£c
[] = {

747 
i
;

748 
size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "maincpu" );

749 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

750 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
size
 );

751 
of°
;

752  
i
 = 0; i < 
size
 / 0x100000; i++ ){

753 
	`mem˝y
–&
d°
[ 
i
 * 0x100000 ], &
§c
[ 
£c
[ i ] * 0x100000 ], 0x100000 );

755  
i
 = 0; i < 
size
 / 2; i++ ){

756 
of°
 = 
	`BITSWAP8
–(
i
 & 0x0000ff), 7, 6, 1, 0, 3, 2, 5, 4 );

757 
of°
 +(
i
 & 0xffff00);

758 
	`mem˝y
–&
§c
[ 
i
 * 2 ], &
d°
[ 
of°
 * 2 ], 0x02 );

760 
	`‰ì
–
d°
 );

761 
	}
}

763 
	$svcboŸ_cx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

765 c⁄° 
UINT8
 
idx_tbl
[ 0x10 ] = {

768 c⁄° 
UINT8
 
bôsw≠4_tbl
[ 6 ][ 4 ] = {

776 
i
;

777 
size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "sprites" );

778 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "sprites" );

779 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
size
 );

780 
of°
;

781 
	`mem˝y
–
d°
, 
§c
, 
size
 );

782  
i
 = 0; i < 
size
 / 0x80; i++ ){

783 
idx
 = 
idx_tbl
[ (
i
 & 0xf00) >> 8 ];

784 
bô0
 = 
bôsw≠4_tbl
[ 
idx
 ][ 0 ];

785 
bô1
 = 
bôsw≠4_tbl
[ 
idx
 ][ 1 ];

786 
bô2
 = 
bôsw≠4_tbl
[ 
idx
 ][ 2 ];

787 
bô3
 = 
bôsw≠4_tbl
[ 
idx
 ][ 3 ];

788 
of°
 = 
	`BITSWAP8
–(
i
 & 0x0000ff), 7, 6, 5, 4, 
bô3
, 
bô2
, 
bô1
, 
bô0
 );

789 
of°
 +(
i
 & 0xfffff00);

790 
	`mem˝y
–&
§c
[ 
i
 * 0x80 ], &
d°
[ 
of°
 * 0x80 ], 0x80 );

792 
	`‰ì
–
d°
 );

793 
	}
}

799 
	$sv˝lus_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

801 c⁄° 
£c
[] = {

804 
size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "maincpu" );

805 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

806 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
size
 );

807 
i
;

808 
of°
;

809 
	`mem˝y
–
d°
, 
§c
, 
size
 );

810  
i
 = 0; i < 
size
 / 2; i++ ){

811 
of°
 = 
	`BITSWAP24
–(
i
 & 0xfffff), 0x17, 0x16, 0x15, 0x14, 0x13, 0x00, 0x01, 0x02,

814 
of°
 ^= 0x0f0007;

815 
of°
 +(
i
 & 0xff00000);

816 
	`mem˝y
–&
§c
[ 
i
 * 0x02 ], &
d°
[ 
of°
 * 0x02 ], 0x02 );

818 
	`mem˝y
–
d°
, 
§c
, 
size
 );

819  
i
 = 0; i < 6; i++ ){

820 
	`mem˝y
–&
§c
[ 
i
 * 0x100000 ], &
d°
[ 
£c
[ i ] * 0x100000 ], 0x100000 );

822 
	`‰ì
–
d°
 );

823 
	}
}

825 
	$sv˝lus_px_hack
–
ru¬ög_machöe
 *
machöe
 )

828 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

829 
§c
[ 0x0f8010 ] = 0x40;

830 
§c
[ 0x0f8011 ] = 0x04;

831 
§c
[ 0x0f8012 ] = 0x00;

832 
§c
[ 0x0f8013 ] = 0x10;

833 
§c
[ 0x0f8014 ] = 0x40;

834 
§c
[ 0x0f8015 ] = 0x46;

835 
§c
[ 0x0f8016 ] = 0xc1;

836 
§c
[ 0x0f802c ] = 0x16;

837 
	}
}

843 
	$sv˝luß_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

845 
i
;

846 c⁄° 
£c
[] = {

849 
size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "maincpu" );

850 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

851 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
size
 );

852 
	`mem˝y
–
d°
, 
§c
, 
size
 );

853  
i
 = 0; i < 6; i++ ){

854 
	`mem˝y
–&
§c
[ 
i
 * 0x100000 ], &
d°
[ 
£c
[ i ] * 0x100000 ], 0x100000 );

856 
	`‰ì
–
d°
 );

857 
	}
}

863 
	$svc•lus_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

865 c⁄° 
£c
[] = {

868 
size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "maincpu" );

869 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

870 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
size
 );

871 
i
;

872 
of°
;

873 
	`mem˝y
–
d°
, 
§c
, 
size
 );

874  
i
 = 0; i < 
size
 / 2; i++ ){

875 
of°
 = 
	`BITSWAP16
–(
i
 & 0x007fff), 0x0f, 0x00, 0x08, 0x09, 0x0b, 0x0a, 0x0c, 0x0d,

878 
of°
 +(
i
 & 0x078000);

879 
of°
 +
£c
[ (
i
 & 0xf80000) >> 19 ] << 19;

880 
	`mem˝y
–&
§c
[ 
i
 * 2 ], &
d°
[ 
of°
 * 2 ], 0x02 );

882 
	`‰ì
–
d°
 );

883 
	}
}

885 
	$svc•lus_px_hack
–
ru¬ög_machöe
 *
machöe
 )

888 
UINT16
 *
mem16
 = (UINT16 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

889 
mem16
[0x9e90/2] = 0x000f;

890 
mem16
[0x9e92/2] = 0xc9c0;

891 
mem16
[0xa10c/2] = 0x4eb9;

892 
mem16
[0xa10e/2] = 0x000e;

893 
mem16
[0xa110/2] = 0x9750;

894 
	}
}

896 #ifde‡
UNUSED_FUNCTION


897 
UINT16
 
	gmv0_b™k_øm
[ 0x10/2 ];

899 
	$READ16_HANDLER
–
mv0_b™kswôch_r
 )

901  
mv0_b™k_øm
[ 
off£t
 ];

902 
	}
}

904 
	$WRITE16_HANDLER
–
mv0_b™kswôch_w
 )

906 
UINT32
 
b™kaddªss
 = (
mv0_b™k_øm
[ 0 ] >> 8) + (mv0_bank_ram[ 1 ] << 8) + 0x100000;

907 
	`COMBINE_DATA
–&
mv0_b™k_øm
[ 
off£t
 ] );

908 
	`√ogeo_£t_maö_˝u_b™k_addªss
–
•a˚
, 
b™kaddªss
 );

909 
	}
}

985 
	$kf2k3∂_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

987 
UINT16
*
tmp
 = 
	`Æloc_¨øy_‹_dõ
(UINT16, 0x100000/2);

988 
UINT16
*
rom
 = (UINT16*)
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

989 
j
;

990 
i
;

992 
i
 = 0;i < 0x700000/2;i+=0x100000/2)

994 
	`mem˝y
(
tmp
,&
rom
[
i
],0x100000);

995 
j
 = 0;j < 0x100000/2;j++)

996 
rom
[
i
+
j
] = 
tmp
[
	`BITSWAP24
(j,23,22,21,20,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)];

998 
	`‰ì
(
tmp
);

1001 
rom
[0xf38ac/2] = 0x4e75;

1002 
	}
}

1013 
	$kf2k3u∂_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

1016 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1017 
	`memmove
(
§c
+0x100000, src, 0x600000);

1018 
	`memmove
(
§c
, src+0x700000, 0x100000);

1023 
of°
;

1024 
i
;

1025 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" ) + 0xfe000;

1026 
UINT8
 *
buf
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" ) + 0xd0610;

1028  
i
 = 0; i < 0x2000 / 2; i++ ){

1029 
of°
 = (
i
 & 0xff00Ë+ 
	`BITSWAP8
( (i & 0x00ff), 7, 6, 0, 4, 3, 2, 1, 5 );

1030 
	`mem˝y
–&
rom
[ 
i
 * 2 ], &
buf
[ 
of°
 * 2 ], 2 );

1033 
	}
}

1044 
	$ßmsho5b_px_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

1046 
px_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "maincpu" );

1047 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1048 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
px_size
 );

1049 
of°
;

1050 
i
;

1052 
	`mem˝y
–
buf
, 
rom
, 
px_size
 );

1054  
i
 = 0; i < 
px_size
 / 2; i++ ){

1055 
of°
 = 
	`BITSWAP8
–(
i
 & 0x000ff), 7, 6, 5, 4, 3, 0, 1, 2 );

1056 
of°
 +(
i
 & 0xfffff00);

1057 
of°
 ^= 0x060005;

1059 
	`mem˝y
–&
rom
[ 
i
 * 2 ], &
buf
[ 
of°
 * 2 ], 0x02 );

1062 
	`mem˝y
–
buf
, 
rom
, 
px_size
 );

1064 
	`mem˝y
–&
rom
[ 0x000000 ], &
buf
[ 0x700000 ], 0x100000 );

1065 
	`mem˝y
–&
rom
[ 0x100000 ], &
buf
[ 0x000000 ], 0x700000 );

1067 
	`‰ì
–
buf
 );

1068 
	}
}

1071 
	$ßmsho5b_vx_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

1073 
vx_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "ym" );

1074 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "ym" );

1075 
i
;

1077  
i
 = 0; i < 
vx_size
; i++ )

1078 
rom
[ 
i
 ] = 
	`BITSWAP8
(Ñom[ i ], 0, 1, 5, 4, 3, 2, 6, 7 );

1079 
	}
}

1085 
	#MATRIMBLZ80
–
i
 ) ( i^(
	`BITSWAP8
(i&0x3,4,3,1,2,0,7,6,5)<<8Ë)

	)

1087 
	$m©rimbl_de¸y±
–
ru¬ög_machöe
 *
machöe
 )

1090 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "audiocpu" )+0x10000;

1091 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x20000 );

1092 
i
, 
j
=0;

1093 
	`mem˝y
–
buf
, 
rom
, 0x20000 );

1094  
i
=0x00000; i<0x20000; i++ )

1096 i‡–
i
&0x10000 )

1098 i‡–
i
&0x800 )

1100 
j
=
	`MATRIMBLZ80
–
i
 );

1101 
j
=j^0x10000;

1105 
j
=
	`MATRIMBLZ80
(–
i
^0x01 ));

1110 i‡–
i
&0x800 )

1112 
j
=
	`MATRIMBLZ80
(–
i
^0x01 ));

1113 
j
=j^0x10000;

1117 
j
=
	`MATRIMBLZ80
–
i
 );

1120 
rom
[ 
j
 ]=
buf
[ 
i
 ];

1122 
	`‰ì
–
buf
 );

1123 
	`mem˝y
–
rom
-0x10000,Ñom, 0x10000 );

1126 
	`˘hd2003_c
–
machöe
, 0 );

1127 
	}
}

	@src/neocrypt.c

51 
	~"ªsfûe.h
"

52 
	~"mame_œyî.h
"

53 
	~"míu.h
"

113 
UINT8
 *
	gty≥0_t03
;

114 
UINT8
 *
	gty≥0_t12
;

115 
UINT8
 *
	gty≥1_t03
;

116 
UINT8
 *
	gty≥1_t12
;

117 
UINT8
 *
	gaddªss_8_15_x‹1
;

118 
UINT8
 *
	gaddªss_8_15_x‹2
;

119 
UINT8
 *
	gaddªss_16_23_x‹1
;

120 
UINT8
 *
	gaddªss_16_23_x‹2
;

121 
UINT8
 *
	gaddªss_0_7_x‹
;

122 
UINT8
 *
	gm1_addªss_8_15_x‹
;

123 
UINT8
 *
	gm1_addªss_0_7_x‹
;

125 c⁄° 
UINT8
 
	gkof99_ty≥0_t03
[256] =

146 c⁄° 
UINT8
 
	gkof99_ty≥0_t12
[256] =

167 c⁄° 
UINT8
 
	gkof99_ty≥1_t03
[256] =

188 c⁄° 
UINT8
 
	gkof99_ty≥1_t12
[256] =

211 c⁄° 
UINT8
 
	gkof99_addªss_8_15_x‹1
[256] =

233 c⁄° 
UINT8
 
	gkof99_addªss_8_15_x‹2
[256] =

254 c⁄° 
UINT8
 
	gkof99_addªss_16_23_x‹1
[256] =

275 c⁄° 
UINT8
 
	gkof99_addªss_16_23_x‹2
[256] =

296 c⁄° 
UINT8
 
	gkof99_addªss_0_7_x‹
[256] =

317 c⁄° 
UINT8
 
	gkof2000_ty≥0_t03
[256] =

338 c⁄° 
UINT8
 
	gkof2000_ty≥0_t12
[256] =

359 c⁄° 
UINT8
 
	gkof2000_ty≥1_t03
[256] =

380 c⁄° 
UINT8
 
	gkof2000_ty≥1_t12
[256] =

401 c⁄° 
UINT8
 
	gkof2000_addªss_8_15_x‹1
[256] =

422 c⁄° 
UINT8
 
	gkof2000_addªss_8_15_x‹2
[256] =

443 c⁄° 
UINT8
 
	gkof2000_addªss_16_23_x‹1
[256] =

464 c⁄° 
UINT8
 
	gkof2000_addªss_16_23_x‹2
[256] =

485 c⁄° 
UINT8
 
	gkof2000_addªss_0_7_x‹
[256] =

507 
	$de¸y±
(
UINT8
 *
r0
, UINT8 *
r1
,

508 
UINT8
 
c0
, UINT8 
c1
,

509 c⁄° 
UINT8
 *
èbÀ0hi
,

510 c⁄° 
UINT8
 *
èbÀ0lo
,

511 c⁄° 
UINT8
 *
èbÀ1
,

512 
ba£
,

513 
övît
)

515 
UINT8
 
tmp
,
x‹0
,
x‹1
;

517 
tmp
 = 
èbÀ1
[(
ba£
 & 0xffË^ 
addªss_0_7_x‹
[(base >> 8) & 0xff]];

518 
x‹0
 = (
èbÀ0hi
[(
ba£
 >> 8Ë& 0xff] & 0x„Ë| (
tmp
 & 0x01);

519 
x‹1
 = (
tmp
 & 0x„Ë| (
èbÀ0lo
[(
ba£
 >> 8) & 0xff] & 0x01);

521 i‡(
övît
)

523 *
r0
 = 
c1
 ^ 
x‹0
;

524 *
r1
 = 
c0
 ^ 
x‹1
;

528 *
r0
 = 
c0
 ^ 
x‹0
;

529 *
r1
 = 
c1
 ^ 
x‹1
;

531 
	}
}

534 
	$√ogeo_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
exåa_x‹
)

536 
rom_size
;

537 
UINT8
 *
buf
;

538 
UINT8
 *
rom
;

539 
Ωos
;

540 
˙t
;

541 
rom_size
 = 
	`mem‹y_ªgi⁄_Àngth
(
machöe
, "sprites");

543 
buf
 = 
	`Æloc_¨øy_‹_dõ
(
UINT8
, 
rom_size
);

545 
rom
 = 
	`mem‹y_ªgi⁄
(
machöe
, "sprites");

546 
	`gn_öô_pb¨
("De¸y±ög...", 
rom_size
/2);

548 
˙t
=0;

549 
Ωos
 = 0;Ωo†< 
rom_size
/4;rpos++)

551 
	`de¸y±
(
buf
+4*
Ωos
+0, buf+4*Ωos+3, 
rom
[4*Ωos+0],Ñom[4*Ωos+3], 
ty≥0_t03
, 
ty≥0_t12
, 
ty≥1_t03
,Ñpos, (rpos>>8) & 1);

552 
	`de¸y±
(
buf
+4*
Ωos
+1, buf+4*Ωos+2, 
rom
[4*Ωos+1],Ñom[4*Ωos+2], 
ty≥0_t12
, 
ty≥0_t03
, 
ty≥1_t12
,Ñpos, (‘pos>>16Ë^ 
addªss_16_23_x‹2
[(rpos>>8) & 0xff]) & 1);

553 i‡(
˙t
++ > 32768) {

554 
˙t
=0;

555 
	`gn_upd©e_pb¨
(
Ωos
);

558 
˙t
=0;

560 
Ωos
 = 0;Ωo†< 
rom_size
/4;rpos++)

562 
ba£r
;

563 i‡(
˙t
++>32768) {

564 
	`gn_upd©e_pb¨
(
Ωos
 + (
rom_size
 >> 2));

565 
˙t
++;

567 
ba£r
 = 
Ωos
;

569 
ba£r
 ^
exåa_x‹
;

571 
ba£r
 ^
addªss_8_15_x‹1
[(baser >> 16) & 0xff] << 8;

572 
ba£r
 ^
addªss_8_15_x‹2
[baser & 0xff] << 8;

573 
ba£r
 ^
addªss_16_23_x‹1
[baser & 0xff] << 16;

574 
ba£r
 ^
addªss_16_23_x‹2
[(baser >> 8) & 0xff] << 16;

575 
ba£r
 ^
addªss_0_7_x‹
[(baser >> 8) & 0xff];

578 i‡(
rom_size
 == 0x3000000)

580 i‡(
Ωos
 < 0x2000000/4)

581 
ba£r
 &= (0x2000000/4)-1;

583 
ba£r
 = 0x2000000/4 + (baser & ((0x1000000/4)-1));

585 i‡(
rom_size
 == 0x6000000)

587 i‡(
Ωos
 < 0x4000000/4)

588 
ba£r
 &= (0x4000000/4)-1;

590 
ba£r
 = 0x4000000/4 + (baser & ((0x1000000/4)-1));

593 
ba£r
 &(
rom_size
/4)-1;

595 
rom
[4*
Ωos
+0] = 
buf
[4*
ba£r
+0];

596 
rom
[4*
Ωos
+1] = 
buf
[4*
ba£r
+1];

597 
rom
[4*
Ωos
+2] = 
buf
[4*
ba£r
+2];

598 
rom
[4*
Ωos
+3] = 
buf
[4*
ba£r
+3];

600 
	`gn_ãrmö©e_pb¨
();

601 
	`‰ì
(
buf
);

602 
	}
}

606 
	$√ogeo_sfix_de¸y±
(
ru¬ög_machöe
 *
machöe
)

608 
i
;

609 
rom_size
 = 
	`mem‹y_ªgi⁄_Àngth
(
machöe
, "sprites");

610 
tx_size
 = 
	`mem‹y_ªgi⁄_Àngth
(
machöe
, "fixed");

611 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "•rôes")+
rom_size
-
tx_size
;

612 
UINT8
 *
d°
 = 
	`mem‹y_ªgi⁄
(
machöe
, "fixed");

614 
i
 = 0;ò< 
tx_size
;i++)

615 
d°
[
i
] = 
§c
[(i & ~0x1f) + ((i & 7) << 2) + ((~i & 8) >> 2) + ((i & 0x10) >> 4)];

616 
	}
}

618 
	$lﬂd_cmc42_èbÀ
() {

626 
ty≥0_t03
=(
UINT8
*)
	`ªs_lﬂd_d©a
("rom/cmc42.xor");

627 
ty≥0_t12
 = 
ty≥0_t03
 +256;

628 
ty≥1_t03
 = 
ty≥0_t12
 +256;

629 
ty≥1_t12
 = 
ty≥1_t03
 +256;

630 
addªss_8_15_x‹1
 = 
ty≥1_t12
 +256;

631 
addªss_8_15_x‹2
 = 
addªss_8_15_x‹1
 +256;

632 
addªss_16_23_x‹1
 = 
addªss_8_15_x‹2
 +256;

633 
addªss_16_23_x‹2
 = 
addªss_16_23_x‹1
 +256;

634 
addªss_0_7_x‹
 = 
addªss_16_23_x‹2
 +256;

635 
	}
}

636 
	$lﬂd_cmc50_èbÀ
() {

644 
ty≥0_t03
=(
UINT8
*)
	`ªs_lﬂd_d©a
("rom/cmc50.xor");

645 
ty≥0_t12
 = 
ty≥0_t03
 +256;

646 
ty≥1_t03
 = 
ty≥0_t12
 +256;

647 
ty≥1_t12
 = 
ty≥1_t03
 +256;

648 
addªss_8_15_x‹1
 = 
ty≥1_t12
 +256;

649 
addªss_8_15_x‹2
 = 
addªss_8_15_x‹1
 +256;

650 
addªss_16_23_x‹1
 = 
addªss_8_15_x‹2
 +256;

651 
addªss_16_23_x‹2
 = 
addªss_16_23_x‹1
 +256;

652 
addªss_0_7_x‹
 = 
addªss_16_23_x‹2
 +256;

654 
m1_addªss_8_15_x‹
 = 
addªss_0_7_x‹
 +256;

655 
m1_addªss_0_7_x‹
 = 
m1_addªss_8_15_x‹
 +256;

656 
	}
}

659 
	$kof99_√ogeo_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
exåa_x‹
)

672 
	`lﬂd_cmc42_èbÀ
();

673 
	`√ogeo_gfx_de¸y±
(
machöe
, 
exåa_x‹
);

674 
	`√ogeo_sfix_de¸y±
(
machöe
);

675 
	`‰ì
(
ty≥0_t03
);

676 
	}
}

680 
	$kof2000_√ogeo_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
exåa_x‹
)

693 
	`lﬂd_cmc50_èbÀ
();

694 
	`√ogeo_gfx_de¸y±
(
machöe
, 
exåa_x‹
);

695 
	`√ogeo_sfix_de¸y±
(
machöe
);

696 
	`‰ì
(
ty≥0_t03
);

697 
	}
}

701 
	$cmc42_√ogeo_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
exåa_x‹
)

714 
	`lﬂd_cmc42_èbÀ
();

715 
	`√ogeo_gfx_de¸y±
(
machöe
, 
exåa_x‹
);

716 
	`‰ì
(
ty≥0_t03
);

717 
	}
}

721 
	$cmc50_√ogeo_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
, 
exåa_x‹
)

734 
	`lﬂd_cmc50_èbÀ
();

735 
	`√ogeo_gfx_de¸y±
(
machöe
, 
exåa_x‹
);

736 
	`‰ì
(
ty≥0_t03
);

737 
	}
}

741 
	$sv˝cb_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
)

743 c⁄° 
UINT8
 
x‹vÆ
[ 4 ] = { 0x34, 0x21, 0xc4, 0xe9 };

744 
i
;

745 
of°
;

746 
rom_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "sprites" );

747 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "sprites" );

748 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

750  
i
 = 0; i < 
rom_size
; i++ )

752 
rom
[ 
i
 ] ^
x‹vÆ
[ (i % 4) ];

754  
i
 = 0; i < 
rom_size
; i += 4 )

756 
UINT32
 
rom32
 = 
rom
[
i
] |Ñom[i+1]<<8 |Ñom[i+2]<<16 |Ñom[i+3]<<24;

757 
rom32
 = 
	`BITSWAP32
(Ñom32, 0x09, 0x0d, 0x13, 0x00, 0x17, 0x0f, 0x03, 0x05, 0x04, 0x0c, 0x11, 0x1e, 0x12, 0x15, 0x0b, 0x06, 0x1b, 0x0a, 0x1a, 0x1c, 0x14, 0x02, 0x0e, 0x1d, 0x18, 0x08, 0x01, 0x10, 0x19, 0x1f, 0x07, 0x16 );

758 
rom
[
i
] = 
rom32
&0xff;

759 
rom
[
i
+1] = (
rom32
>>8)&0xff;

760 
rom
[
i
+2] = (
rom32
>>16)&0xff;

761 
rom
[
i
+3] = (
rom32
>>24)&0xff;

763 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

764  
i
 = 0; i < 
rom_size
 / 4; i++ )

766 
of°
 = 
	`BITSWAP24
–(
i
 & 0x1fffff), 0x17, 0x16, 0x15, 0x04, 0x0b, 0x0e, 0x08, 0x0c, 0x10, 0x00, 0x0a, 0x13, 0x03, 0x06, 0x02, 0x07, 0x0d, 0x01, 0x11, 0x09, 0x14, 0x0f, 0x12, 0x05 );

767 
of°
 ^= 0x0c8923;

768 
of°
 +(
i
 & 0xffe00000);

769 
	`mem˝y
–&
rom
[ 
i
 * 4 ], &
buf
[ 
of°
 * 4 ], 0x04 );

771 
	`‰ì
–
buf
 );

772 
	}
}

776 
	$sv˝cb_s1d©a_de¸y±
(
ru¬ög_machöe
 *
machöe
)

778 
i
;

779 
UINT8
 *
s1
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

780 
size_t
 
s1_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "fixed" );

782  
i
 = 0; i < 
s1_size
; i++ )

784 
s1
[ 
i
 ] = 
	`BITSWAP8
( s1[ i ] ^ 0xd2, 4, 0, 7, 2, 5, 1, 6, 3 );

786 
	}
}

791 
	$kf2k3pcb_gfx_de¸y±
(
ru¬ög_machöe
 *
machöe
)

793 c⁄° 
UINT8
 
x‹vÆ
[ 4 ] = { 0x34, 0x21, 0xc4, 0xe9 };

794 
i
;

795 
of°
;

796 
rom_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "sprites" );

797 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "sprites" );

798 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

800  
i
 = 0; i < 
rom_size
; i++ )

802 
rom
[ 
i
 ] ^
x‹vÆ
[ (i % 4) ];

804  
i
 = 0; i < 
rom_size
; i+=4 )

806 
UINT32
 *
rom32
 = (UINT32*)&
rom
[ 
i
 ];

807 *
rom32
 = 
	`BITSWAP32
( *rom32, 0x09, 0x0d, 0x13, 0x00, 0x17, 0x0f, 0x03, 0x05, 0x04, 0x0c, 0x11, 0x1e, 0x12, 0x15, 0x0b, 0x06, 0x1b, 0x0a, 0x1a, 0x1c, 0x14, 0x02, 0x0e, 0x1d, 0x18, 0x08, 0x01, 0x10, 0x19, 0x1f, 0x07, 0x16 );

809 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

810  
i
 = 0; i < 
rom_size
; i+=4 )

812 
of°
 = 
	`BITSWAP24
–(
i
 & 0x7fffff), 0x17, 0x15, 0x0a, 0x14, 0x13, 0x16, 0x12, 0x11, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x09, 0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00 );

813 
of°
 ^= 0x000000;

814 
of°
 +(
i
 & 0xff800000);

815 
	`mem˝y
–&
rom
[ 
of°
 ], &
buf
[ 
i
 ], 0x04 );

817 
	`‰ì
–
buf
 );

818 
	}
}

822 
	$kf2k3pcb_de¸y±_s1d©a
(
ru¬ög_machöe
 *
machöe
)

824 
UINT8
 *
§c
;

825 
UINT8
 *
d°
;

826 
i
;

827 
tx_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "fixed" );

828 
§om_size
 = 
	`mem‹y_ªgi⁄_Àngth
–
machöe
, "sprites" );

830 
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "•rôes" ) + 
§om_size
 - 0x1000000 - 0x80000;

831 
d°
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

833  
i
 = 0; i < 
tx_size
 / 2; i++ )

835 
d°
[ 
i
 ] = 
§c
[ (i & ~0x1f) + ((i & 7) << 2) + ((~i & 8) >> 2) + ((i & 0x10) >> 4) ];

838 
§c
 = 
	`mem‹y_ªgi⁄
–
machöe
, "•rôes" ) + 
§om_size
 - 0x80000;

839 
d°
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" ) + 0x80000;

841  
i
 = 0; i < 
tx_size
 / 2; i++ )

843 
d°
[ 
i
 ] = 
§c
[ (i & ~0x1f) + ((i & 7) << 2) + ((~i & 8) >> 2) + ((i & 0x10) >> 4) ];

846 
d°
 = 
	`mem‹y_ªgi⁄
–
machöe
, "fixed" );

848  
i
 = 0; i < 
tx_size
; i++ )

850 
d°
[ 
i
 ] = 
	`BITSWAP8
( dst[ i ] ^ 0xd2, 4, 0, 7, 2, 5, 1, 6, 3 );

852 
	}
}

908 
UINT16
 
	$gíî©e_cs16
(
UINT8
 *
rom
, 
size
)

910 
UINT16
 
cs16
;

911 
i
;

912 
cs16
 = 0x0000;

913 
i
=0;i<
size
;i++ )

915 
cs16
 +
rom
[
i
];

917  
cs16
&0xFFFF;

918 
	}
}

921 
	$m1_addªss_s¸ambÀ
(
addªss
, 
UINT16
 
key
)

923 
block
;

924 
aux
;

926 c⁄° 
p1
[8][16] = {

937 
block
 = (
addªss
>>16)&7;

938 
aux
 = 
addªss
&0xffff;

940 
aux
 ^
	`BITSWAP16
(
key
,12,0,2,4,8,15,7,13,10,1,3,6,11,9,14,5);

941 
aux
 = 
	`BITSWAP16
(aux,

942 
p1
[
block
][15],p1[block][14],p1[block][13],p1[block][12],

943 
p1
[
block
][11],p1[block][10],p1[block][9],p1[block][8],

944 
p1
[
block
][7],p1[block][6],p1[block][5],p1[block][4],

945 
p1
[
block
][3],p1[block][2],p1[block][1],p1[block][0]);

946 
aux
 ^
m1_addªss_0_7_x‹
[(aux>>8)&0xff];

947 
aux
 ^
m1_addªss_8_15_x‹
[aux&0xff]<<8;

948 
aux
 = 
	`BITSWAP16
(aux, 7,15,14,6,5,13,12,4,11,3,10,2,9,1,8,0);

950  (
block
<<16)|
aux
;

951 
	}
}

954 
	$√ogeo_cmc50_m1_de¸y±
(
ru¬ög_machöe
 *
machöe
)

956 
UINT8
* 
rom
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocrypt");

957 
size_t
 
rom_size
 = 0x80000;

959 
UINT8
* 
rom2
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocpu");

961 
UINT8
* 
buf„r
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
);

963 
UINT32
 
i
;

965 
UINT16
 
key
=
	`gíî©e_cs16
(
rom
,0x10000);

968 
	`lﬂd_cmc50_èbÀ
();

971 
i
=0; i<
rom_size
; i++)

973 
buf„r
[
i
] = 
rom
[
	`m1_addªss_s¸ambÀ
(i,
key
)];

976 
	`mem˝y
(
rom
,
buf„r
,
rom_size
);

978 
	`mem˝y
(
rom2
,
rom
,0x10000);

979 
	`mem˝y
(
rom2
+0x10000,
rom
,0x80000);

983 
FILE
 *
Â
;

984 c⁄° *
gamíame
 = 
machöe
->
gamedrv
->
«me
;

985 
fûíame
[256];

986 
	`•rötf
(
fûíame
, "%s_m1.dump", 
gamíame
);

988 
Â
=
	`f›í
(
fûíame
, "w+b");

989 i‡(
Â
)

991 
	`fwrôe
(
rom
, 
rom_size
, 1, 
Â
);

992 
	`f˛o£
(
Â
);

1000 
FILE
 *
Â
;

1001 c⁄° *
gamíame
 = 
machöe
->
gamedrv
->
«me
;

1002 
fûíame
[256];

1003 
	`•rötf
(
fûíame
, "%s_m1exåa.dump", 
gamíame
);

1005 
Â
=
	`f›í
(
fûíame
, "w+b");

1006 i‡(
Â
)

1008 
	`fwrôe
(&
rom
[0xf800], 0x800, 1, 
Â
);

1009 
	`f˛o£
(
Â
);

1014 
	`‰ì
–
buf„r
 );

1015 
	`‰ì
(
ty≥0_t03
);

1016 
	}
}

1027 
	$kof98_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1029 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1030 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x200000);

1031 
i
, 
j
, 
k
;

1032 c⁄° 
UINT32
 
£c
[]={0x000000,0x100000,0x000004,0x100004,0x10000a,0x00000a,0x10000e,0x00000e};

1033 c⁄° 
UINT32
 
pos
[]={0x000,0x004,0x00a,0x00e};

1035 
	`mem˝y
–
d°
, 
§c
, 0x200000);

1036  
i
=0x800; i<0x100000; i+=0x200 )

1038  
j
=0; j<0x100; j+=0x10 )

1040  
k
=0; k<16; k+=2)

1042 
	`mem˝y
–&
§c
[
i
+
j
+
k
], &
d°
[ i+j+
£c
[k/2]+0x100 ], 2 );

1043 
	`mem˝y
–&
§c
[
i
+
j
+
k
+0x100], &
d°
[ i+j+
£c
[k/2] ], 2 );

1045 if–
i
 >= 0x080000 && i < 0x0c0000)

1047  
k
=0; k<4; k++ )

1049 
	`mem˝y
–&
§c
[
i
+
j
+
pos
[
k
]], &
d°
[i+j+pos[k]], 2 );

1050 
	`mem˝y
–&
§c
[
i
+
j
+
pos
[
k
]+0x100], &
d°
[i+j+pos[k]+0x100], 2 );

1053 if–
i
 >= 0x0c0000 )

1055  
k
=0; k<4; k++ )

1057 
	`mem˝y
–&
§c
[
i
+
j
+
pos
[
k
]], &
d°
[i+j+pos[k]+0x100], 2 );

1058 
	`mem˝y
–&
§c
[
i
+
j
+
pos
[
k
]+0x100], &
d°
[i+j+pos[k]], 2 );

1062 
	`mem˝y
–&
§c
[
i
+0x000000], &
d°
[i+0x000000], 2 );

1063 
	`mem˝y
–&
§c
[
i
+0x000002], &
d°
[i+0x100000], 2 );

1064 
	`mem˝y
–&
§c
[
i
+0x000100], &
d°
[i+0x000100], 2 );

1065 
	`mem˝y
–&
§c
[
i
+0x000102], &
d°
[i+0x100100], 2 );

1067 
	`memmove
–&
§c
[0x100000], &src[0x200000], 0x400000 );

1069 
	`‰ì
(
d°
);

1070 
	}
}

1074 
	$kof99_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1076 
UINT16
 *
rom
;

1077 
i
,
j
;

1079 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1081 
i
 = 0;i < 0x800000/2;i++)

1083 
rom
[
i
] = 
	`BITSWAP16
(rom[i],13,7,3,0,9,4,5,6,1,12,8,14,10,11,2,15);

1087 
i
 = 0;i < 0x600000/2;i+=0x800/2)

1089 
UINT16
 
buf„r
[0x800/2];

1090 
	`mem˝y
(
buf„r
,&
rom
[
i
],0x800);

1091 
j
 = 0;j < 0x800/2;j++)

1093 
rom
[
i
+
j
] = 
buf„r
[
	`BITSWAP24
(j,23,22,21,20,19,18,17,16,15,14,13,12,11,10,6,2,4,9,8,3,1,7,0,5)];

1098 
rom
 = (
UINT16
 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1099 
i
 = 0;i < 0x0c0000/2;i++)

1101 
rom
[
i
] =Ñom[0x700000/2 + 
	`BITSWAP24
(i,23,22,21,20,19,18,11,6,14,17,16,5,8,10,12,0,4,3,2,7,9,15,13,1)];

1103 
	}
}

1106 
	$g¨ou_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1108 
UINT16
 *
rom
;

1109 
i
,
j
;

1112 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1114 
i
 = 0;i < 0x800000/2;i++)

1116 
rom
[
i
] = 
	`BITSWAP16
(rom[i],13,12,14,10,8,2,3,1,5,9,11,4,15,0,6,7);

1120 
rom
 = (
UINT16
 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1121 
i
 = 0;i < 0x0c0000/2;i++)

1123 
rom
[
i
] =Ñom[0x710000/2 + 
	`BITSWAP24
(i,23,22,21,20,19,18,4,5,16,14,7,9,6,13,17,15,3,1,2,12,11,8,10,0)];

1127 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1128 
i
 = 0;i < 0x800000/2;i+=0x8000/2)

1130 
UINT16
 
buf„r
[0x8000/2];

1131 
	`mem˝y
(
buf„r
,&
rom
[
i
],0x8000);

1132 
j
 = 0;j < 0x8000/2;j++)

1134 
rom
[
i
+
j
] = 
buf„r
[
	`BITSWAP24
(j,23,22,21,20,19,18,17,16,15,14,9,4,8,3,13,6,2,7,0,12,1,11,10,5)];

1137 
	}
}

1140 
	$g¨ouo_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1142 
UINT16
 *
rom
;

1143 
i
,
j
;

1146 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1148 
i
 = 0;i < 0x800000/2;i++)

1150 
rom
[
i
] = 
	`BITSWAP16
(rom[i],14,5,1,11,7,4,10,15,3,12,8,13,0,2,9,6);

1154 
rom
 = (
UINT16
 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1155 
i
 = 0;i < 0x0c0000/2;i++)

1157 
rom
[
i
] =Ñom[0x7f8000/2 + 
	`BITSWAP24
(i,23,22,21,20,19,18,5,16,11,2,6,7,17,3,12,8,14,4,0,9,1,10,15,13)];

1161 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1162 
i
 = 0;i < 0x800000/2;i+=0x8000/2)

1164 
UINT16
 
buf„r
[0x8000/2];

1165 
	`mem˝y
(
buf„r
,&
rom
[
i
],0x8000);

1166 
j
 = 0;j < 0x8000/2;j++)

1168 
rom
[
i
+
j
] = 
buf„r
[
	`BITSWAP24
(j,23,22,21,20,19,18,17,16,15,14,12,8,1,7,11,3,13,10,6,9,5,4,0,2)];

1171 
	}
}

1174 
	$m¶ug3_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1176 
UINT16
 *
rom
;

1177 
i
,
j
;

1180 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1182 
i
 = 0;i < 0x800000/2;i++)

1184 
rom
[
i
] = 
	`BITSWAP16
(rom[i],4,11,14,3,1,13,0,7,2,8,12,15,10,9,5,6);

1188 
rom
 = (
UINT16
 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1189 
i
 = 0;i < 0x0c0000/2;i++)

1191 
rom
[
i
] =Ñom[0x5d0000/2 + 
	`BITSWAP24
(i,23,22,21,20,19,18,15,2,1,13,3,0,9,6,16,4,11,5,7,12,17,14,10,8)];

1195 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1196 
i
 = 0;i < 0x800000/2;i+=0x10000/2)

1198 
UINT16
 
buf„r
[0x10000/2];

1199 
	`mem˝y
(
buf„r
,&
rom
[
i
],0x10000);

1200 
j
 = 0;j < 0x10000/2;j++)

1202 
rom
[
i
+
j
] = 
buf„r
[
	`BITSWAP24
(j,23,22,21,20,19,18,17,16,15,2,11,0,14,6,4,13,8,9,3,10,7,5,12,1)];

1205 
	}
}

1208 
	$kof2000_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1210 
UINT16
 *
rom
;

1211 
i
,
j
;

1214 
rom
 = (
UINT16
 *)(
	`mem‹y_ªgi⁄
(
machöe
, "maincpu") + 0x100000);

1216 
i
 = 0;i < 0x800000/2;i++)

1218 
rom
[
i
] = 
	`BITSWAP16
(rom[i],12,8,11,3,15,14,7,0,10,13,6,5,9,2,1,4);

1222 
i
 = 0;i < 0x63a000/2;i+=0x800/2)

1224 
UINT16
 
buf„r
[0x800/2];

1225 
	`mem˝y
(
buf„r
,&
rom
[
i
],0x800);

1226 
j
 = 0;j < 0x800/2;j++)

1228 
rom
[
i
+
j
] = 
buf„r
[
	`BITSWAP24
(j,23,22,21,20,19,18,17,16,15,14,13,12,11,10,4,1,3,8,6,2,7,0,9,5)];

1233 
rom
 = (
UINT16
 *)
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1234 
i
 = 0;i < 0x0c0000/2;i++)

1236 
rom
[
i
] =Ñom[0x73a000/2 + 
	`BITSWAP24
(i,23,22,21,20,19,18,8,4,15,13,3,14,16,2,6,17,7,12,10,0,5,11,1,9)];

1238 
	}
}

1242 
	$kof2002_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1244 
i
;

1245 c⁄° 
£c
[]={0x100000,0x280000,0x300000,0x180000,0x000000,0x380000,0x200000,0x080000};

1246 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu")+0x100000;

1247 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x400000);

1248 
	`mem˝y
–
d°
, 
§c
, 0x400000 );

1249  
i
=0; i<8; ++i )

1251 
	`mem˝y
–
§c
+
i
*0x80000, 
d°
+
£c
[i], 0x80000 );

1253 
	`‰ì
(
d°
);

1254 
	}
}

1257 
	$m©rim_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1259 
i
;

1260 c⁄° 
£c
[]={0x100000,0x280000,0x300000,0x180000,0x000000,0x380000,0x200000,0x080000};

1261 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu")+0x100000;

1262 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x400000);

1263 
	`mem˝y
–
d°
, 
§c
, 0x400000);

1264  
i
=0; i<8; ++i )

1266 
	`mem˝y
–
§c
+
i
*0x80000, 
d°
+
£c
[i], 0x80000 );

1268 
	`‰ì
(
d°
);

1269 
	}
}

1272 
	$ßmsho5_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1274 
i
;

1275 c⁄° 
£c
[]={0x000000,0x080000,0x700000,0x680000,0x500000,0x180000,0x200000,0x480000,0x300000,0x780000,0x600000,0x280000,0x100000,0x580000,0x400000,0x380000};

1276 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1277 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x800000);

1279 
	`mem˝y
–
d°
, 
§c
, 0x800000 );

1280  
i
=0; i<16; ++i )

1282 
	`mem˝y
–
§c
+
i
*0x80000, 
d°
+
£c
[i], 0x80000 );

1284 
	`‰ì
(
d°
);

1285 
	}
}

1288 
	$ßmsh5•_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1290 
i
;

1291 c⁄° 
£c
[]={0x000000,0x080000,0x500000,0x480000,0x600000,0x580000,0x700000,0x280000,0x100000,0x680000,0x400000,0x780000,0x200000,0x380000,0x300000,0x180000};

1292 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "maincpu");

1293 
UINT8
 *
d°
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x800000);

1295 
	`mem˝y
–
d°
, 
§c
, 0x800000 );

1296  
i
=0; i<16; ++i )

1298 
	`mem˝y
–
§c
+
i
*0x80000, 
d°
+
£c
[i], 0x80000 );

1300 
	`‰ì
(
d°
);

1301 
	}
}

1305 
	$m¶ug5_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1307 c⁄° 
UINT8
 
x‹1
[ 0x20 ] = { 0xc2, 0x4b, 0x74, 0xfd, 0x0b, 0x34, 0xeb, 0xd7, 0x10, 0x6d, 0xf9, 0xce, 0x5d, 0xd5, 0x61, 0x29, 0xf5, 0xbe, 0x0d, 0x82, 0x72, 0x45, 0x0f, 0x24, 0xb3, 0x34, 0x1b, 0x99, 0xea, 0x09, 0xf3, 0x03 };

1308 c⁄° 
UINT8
 
x‹2
[ 0x20 ] = { 0x36, 0x09, 0xb0, 0x64, 0x95, 0x0f, 0x90, 0x42, 0x6e, 0x0f, 0x30, 0xf6, 0xe5, 0x08, 0x30, 0x64, 0x08, 0x04, 0x00, 0x2f, 0x72, 0x09, 0xa0, 0x13, 0xc9, 0x0b, 0xa0, 0x3e, 0xc2, 0x00, 0x40, 0x2b };

1309 
i
;

1310 
of°
;

1311 
rom_size
 = 0x800000;

1312 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1313 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

1315  
i
 = 0; i < 0x100000; i++ )

1317 
rom
[ 
i
 ] ^
x‹1
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1319  
i
 = 0x100000; i < 0x800000; i++ )

1321 
rom
[ 
i
 ] ^
x‹2
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1324  
i
 = 0x100000; i < 0x0800000; i += 4 )

1326 
UINT16
 
rom16
;

1327 
rom16
 = 
rom
[
	`BYTE_XOR_LE
(
i
+1)] |Ñom[BYTE_XOR_LE(i+2)]<<8;

1328 
rom16
 = 
	`BITSWAP16
(Ñom16, 15, 14, 13, 12, 10, 11, 8, 9, 6, 7, 4, 5, 3, 2, 1, 0 );

1329 
rom
[
	`BYTE_XOR_LE
(
i
+1)] = 
rom16
&0xff;

1330 
rom
[
	`BYTE_XOR_LE
(
i
+2)] = 
rom16
>>8;

1332 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

1333  
i
 = 0; i < 0x0100000 / 0x10000; i++ )

1335 
of°
 = (
i
 & 0xf0Ë+ 
	`BITSWAP8
( (i & 0x0f), 7, 6, 5, 4, 1, 0, 3, 2 );

1336 
	`mem˝y
–&
rom
[ 
i
 * 0x10000 ], &
buf
[ 
of°
 * 0x10000 ], 0x10000 );

1338  
i
 = 0x100000; i < 0x800000; i += 0x100 )

1340 
of°
 = (
i
 & 0xf000ffË+ ((ò& 0x000f00Ë^ 0x00700Ë+ (
	`BITSWAP8
( ((i & 0x0ff000) >> 12), 5, 4, 7, 6, 1, 0, 3, 2 ) << 12);

1341 
	`mem˝y
–&
rom
[ 
i
 ], &
buf
[ 
of°
 ], 0x100 );

1343 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

1344 
	`mem˝y
–&
rom
[ 0x100000 ], &
buf
[ 0x700000 ], 0x100000 );

1345 
	`mem˝y
–&
rom
[ 0x200000 ], &
buf
[ 0x100000 ], 0x600000 );

1346 
	`‰ì
–
buf
 );

1347 
	}
}

1350 
	$svc_px_de¸y±
(
ru¬ög_machöe
 *
machöe
)

1352 c⁄° 
UINT8
 
x‹1
[ 0x20 ] = { 0x3b, 0x6a, 0xf7, 0xb7, 0xe8, 0xa9, 0x20, 0x99, 0x9f, 0x39, 0x34, 0x0c, 0xc3, 0x9a, 0xa5, 0xc8, 0xb8, 0x18, 0xce, 0x56, 0x94, 0x44, 0xe3, 0x7a, 0xf7, 0xdd, 0x42, 0xf0, 0x18, 0x60, 0x92, 0x9f };

1353 c⁄° 
UINT8
 
x‹2
[ 0x20 ] = { 0x69, 0x0b, 0x60, 0xd6, 0x4f, 0x01, 0x40, 0x1a, 0x9f, 0x0b, 0xf0, 0x75, 0x58, 0x0e, 0x60, 0xb4, 0x14, 0x04, 0x20, 0xe4, 0xb9, 0x0d, 0x10, 0x89, 0xeb, 0x07, 0x30, 0x90, 0x50, 0x0e, 0x20, 0x26 };

1354 
i
;

1355 
of°
;

1356 
rom_size
 = 0x800000;

1357 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1358 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

1360  
i
 = 0; i < 0x100000; i++ )

1362 
rom
[ 
i
 ] ^
x‹1
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1364  
i
 = 0x100000; i < 0x800000; i++ )

1366 
rom
[ 
i
 ] ^
x‹2
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1369  
i
 = 0x100000; i < 0x0800000; i += 4 )

1371 
UINT16
 
rom16
;

1372 
rom16
 = 
rom
[
	`BYTE_XOR_LE
(
i
+1)] |Ñom[BYTE_XOR_LE(i+2)]<<8;

1373 
rom16
 = 
	`BITSWAP16
(Ñom16, 15, 14, 13, 12, 10, 11, 8, 9, 6, 7, 4, 5, 3, 2, 1, 0 );

1374 
rom
[
	`BYTE_XOR_LE
(
i
+1)] = 
rom16
&0xff;

1375 
rom
[
	`BYTE_XOR_LE
(
i
+2)] = 
rom16
>>8;

1377 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

1378  
i
 = 0; i < 0x0100000 / 0x10000; i++ )

1380 
of°
 = (
i
 & 0xf0Ë+ 
	`BITSWAP8
( (i & 0x0f), 7, 6, 5, 4, 2, 3, 0, 1 );

1381 
	`mem˝y
–&
rom
[ 
i
 * 0x10000 ], &
buf
[ 
of°
 * 0x10000 ], 0x10000 );

1383  
i
 = 0x100000; i < 0x800000; i += 0x100 )

1385 
of°
 = (
i
 & 0xf000ffË+ ((ò& 0x000f00Ë^ 0x00a00Ë+ (
	`BITSWAP8
( ((i & 0x0ff000) >> 12), 4, 5, 6, 7, 1, 0, 3, 2 ) << 12);

1386 
	`mem˝y
–&
rom
[ 
i
 ], &
buf
[ 
of°
 ], 0x100 );

1388 
	`mem˝y
–
buf
, 
rom
, 
rom_size
 );

1389 
	`mem˝y
–&
rom
[ 0x100000 ], &
buf
[ 0x700000 ], 0x100000 );

1390 
	`mem˝y
–&
rom
[ 0x200000 ], &
buf
[ 0x100000 ], 0x600000 );

1391 
	`‰ì
–
buf
 );

1392 
	}
}

1395 
	$kf2k3pcb_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1397 c⁄° 
UINT8
 
x‹2
[ 0x20 ] = { 0xb4, 0x0f, 0x40, 0x6c, 0x38, 0x07, 0xd0, 0x3f, 0x53, 0x08, 0x80, 0xaa, 0xbe, 0x07, 0xc0, 0xfa, 0xd0, 0x08, 0x10, 0xd2, 0xf1, 0x03, 0x70, 0x7e, 0x87, 0x0b, 0x40, 0xf6, 0x2a, 0x0a, 0xe0, 0xf9 };

1398 
i
;

1399 
of°
;

1400 
rom_size
 = 0x900000;

1401 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1402 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

1404 
i
 = 0; i < 0x100000; i++)

1406 
rom
[ 0x800000 + 
i
 ] ^rom[ 0x100002 | 
	`BYTE_XOR_LE
(i) ];

1408  
i
 = 0x100000; i < 0x800000; i++ )

1410 
rom
[ 
i
 ] ^
x‹2
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1412  
i
 = 0x100000; i < 0x800000; i += 4 )

1414 
UINT16
 
rom16
;

1415 
rom16
 = 
rom
[
	`BYTE_XOR_LE
(
i
+1)] |Ñom[BYTE_XOR_LE(i+2)]<<8;

1416 
rom16
 = 
	`BITSWAP16
(Ñom16, 15, 14, 13, 12, 4, 5, 6, 7, 8, 9, 10, 11, 3, 2, 1, 0 );

1417 
rom
[
	`BYTE_XOR_LE
(
i
+1)] = 
rom16
&0xff;

1418 
rom
[
	`BYTE_XOR_LE
(
i
+2)] = 
rom16
>>8;

1420  
i
 = 0; i < 0x0100000 / 0x10000; i++ )

1422 
of°
 = (
i
 & 0xf0Ë+ 
	`BITSWAP8
( (i & 0x0f), 7, 6, 5, 4, 1, 0, 3, 2 );

1423 
	`mem˝y
–&
buf
[ 
i
 * 0x10000 ], &
rom
[ 
of°
 * 0x10000 ], 0x10000 );

1425  
i
 = 0x100000; i < 0x900000; i += 0x100 )

1427 
of°
 = (
i
 & 0xf000ffË+ ((ò& 0x000f00Ë^ 0x00300Ë+ (
	`BITSWAP8
( ((i & 0x0ff000) >> 12), 4, 5, 6, 7, 1, 0, 3, 2 ) << 12);

1428 
	`mem˝y
–&
buf
[ 
i
 ], &
rom
[ 
of°
 ], 0x100 );

1430 
	`mem˝y
 (&
rom
[0x000000], &
buf
[0x000000], 0x100000);

1431 
	`mem˝y
 (&
rom
[0x100000], &
buf
[0x800000], 0x100000);

1432 
	`mem˝y
 (&
rom
[0x200000], &
buf
[0x100000], 0x700000);

1433 
	`‰ì
–
buf
 );

1434 
	}
}

1437 
	$kof2003_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1439 c⁄° 
UINT8
 
x‹1
[0x20] = { 0x3b, 0x6a, 0xf7, 0xb7, 0xe8, 0xa9, 0x20, 0x99, 0x9f, 0x39, 0x34, 0x0c, 0xc3, 0x9a, 0xa5, 0xc8, 0xb8, 0x18, 0xce, 0x56, 0x94, 0x44, 0xe3, 0x7a, 0xf7, 0xdd, 0x42, 0xf0, 0x18, 0x60, 0x92, 0x9f };

1440 c⁄° 
UINT8
 
x‹2
[0x20] = { 0x2f, 0x02, 0x60, 0xbb, 0x77, 0x01, 0x30, 0x08, 0xd8, 0x01, 0xa0, 0xdf, 0x37, 0x0a, 0xf0, 0x65, 0x28, 0x03, 0xd0, 0x23, 0xd3, 0x03, 0x70, 0x42, 0xbb, 0x06, 0xf0, 0x28, 0xba, 0x0f, 0xf0, 0x7a };

1441 
i
;

1442 
of°
;

1443 
rom_size
 = 0x900000;

1444 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1445 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

1447 
i
 = 0; i < 0x100000; i++)

1449 
rom
[ 0x800000 + 
i
 ] ^rom[ 0x100002 | 
	`BYTE_XOR_LE
(i) ];

1451  
i
 = 0; i < 0x100000; i++)

1453 
rom
[ 
i
 ] ^
x‹1
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1455  
i
 = 0x100000; i < 0x800000; i++)

1457 
rom
[ 
i
 ] ^
x‹2
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1459  
i
 = 0x100000; i < 0x800000; i += 4)

1461 
UINT16
 
rom16
;

1462 
rom16
 = 
rom
[
	`BYTE_XOR_LE
(
i
+1)] |Ñom[BYTE_XOR_LE(i+2)]<<8;

1463 
rom16
 = 
	`BITSWAP16
(Ñom16, 15, 14, 13, 12, 5, 4, 7, 6, 9, 8, 11, 10, 3, 2, 1, 0 );

1464 
rom
[
	`BYTE_XOR_LE
(
i
+1)] = 
rom16
&0xff;

1465 
rom
[
	`BYTE_XOR_LE
(
i
+2)] = 
rom16
>>8;

1467  
i
 = 0; i < 0x0100000 / 0x10000; i++ )

1469 
of°
 = (
i
 & 0xf0Ë+ 
	`BITSWAP8
((i & 0x0f), 7, 6, 5, 4, 0, 1, 2, 3);

1470 
	`mem˝y
–&
buf
[ 
i
 * 0x10000 ], &
rom
[ 
of°
 * 0x10000 ], 0x10000 );

1472  
i
 = 0x100000; i < 0x900000; i += 0x100)

1474 
of°
 = (
i
 & 0xf000ffË+ ((ò& 0x000f00Ë^ 0x00800Ë+ (
	`BITSWAP8
( ((i & 0x0ff000) >> 12), 4, 5, 6, 7, 1, 0, 3, 2 ) << 12);

1475 
	`mem˝y
–&
buf
[ 
i
 ], &
rom
[ 
of°
 ], 0x100 );

1477 
	`mem˝y
 (&
rom
[0x000000], &
buf
[0x000000], 0x100000);

1478 
	`mem˝y
 (&
rom
[0x100000], &
buf
[0x800000], 0x100000);

1479 
	`mem˝y
 (&
rom
[0x200000], &
buf
[0x100000], 0x700000);

1480 
	`‰ì
–
buf
 );

1481 
	}
}

1485 
	$kof2003h_de¸y±_68k
(
ru¬ög_machöe
 *
machöe
)

1487 c⁄° 
UINT8
 
x‹1
[0x20] = { 0xc2, 0x4b, 0x74, 0xfd, 0x0b, 0x34, 0xeb, 0xd7, 0x10, 0x6d, 0xf9, 0xce, 0x5d, 0xd5, 0x61, 0x29, 0xf5, 0xbe, 0x0d, 0x82, 0x72, 0x45, 0x0f, 0x24, 0xb3, 0x34, 0x1b, 0x99, 0xea, 0x09, 0xf3, 0x03 };

1488 c⁄° 
UINT8
 
x‹2
[0x20] = { 0x2b, 0x09, 0xd0, 0x7f, 0x51, 0x0b, 0x10, 0x4c, 0x5b, 0x07, 0x70, 0x9d, 0x3e, 0x0b, 0xb0, 0xb6, 0x54, 0x09, 0xe0, 0xcc, 0x3d, 0x0d, 0x80, 0x99, 0x87, 0x03, 0x90, 0x82, 0xfe, 0x04, 0x20, 0x18 };

1489 
i
;

1490 
of°
;

1491 
rom_size
 = 0x900000;

1492 
UINT8
 *
rom
 = 
	`mem‹y_ªgi⁄
–
machöe
, "maincpu" );

1493 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 
rom_size
 );

1495 
i
 = 0; i < 0x100000; i++)

1497 
rom
[ 0x800000 + 
i
 ] ^rom[ 0x100002 | 
	`BYTE_XOR_LE
(i) ];

1499  
i
 = 0; i < 0x100000; i++)

1501 
rom
[ 
i
 ] ^
x‹1
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1503  
i
 = 0x100000; i < 0x800000; i++)

1505 
rom
[ 
i
 ] ^
x‹2
[ (
	`BYTE_XOR_LE
(i) % 0x20) ];

1507  
i
 = 0x100000; i < 0x800000; i += 4)

1509 
UINT16
 
rom16
;

1510 
rom16
 = 
rom
[
	`BYTE_XOR_LE
(
i
+1)] |Ñom[BYTE_XOR_LE(i+2)]<<8;

1511 
rom16
 = 
	`BITSWAP16
(Ñom16, 15, 14, 13, 12, 10, 11, 8, 9, 6, 7, 4, 5, 3, 2, 1, 0 );

1512 
rom
[
	`BYTE_XOR_LE
(
i
+1)] = 
rom16
&0xff;

1513 
rom
[
	`BYTE_XOR_LE
(
i
+2)] = 
rom16
>>8;

1515  
i
 = 0; i < 0x0100000 / 0x10000; i++ )

1517 
of°
 = (
i
 & 0xf0Ë+ 
	`BITSWAP8
((i & 0x0f), 7, 6, 5, 4, 1, 0, 3, 2);

1518 
	`mem˝y
–&
buf
[ 
i
 * 0x10000 ], &
rom
[ 
of°
 * 0x10000 ], 0x10000 );

1520  
i
 = 0x100000; i < 0x900000; i += 0x100)

1522 
of°
 = (
i
 & 0xf000ffË+ ((ò& 0x000f00Ë^ 0x00400Ë+ (
	`BITSWAP8
( ((i & 0x0ff000) >> 12), 6, 7, 4, 5, 0, 1, 2, 3 ) << 12);

1523 
	`mem˝y
–&
buf
[ 
i
 ], &
rom
[ 
of°
 ], 0x100 );

1525 
	`mem˝y
 (&
rom
[0x000000], &
buf
[0x000000], 0x100000);

1526 
	`mem˝y
 (&
rom
[0x100000], &
buf
[0x800000], 0x100000);

1527 
	`mem˝y
 (&
rom
[0x200000], &
buf
[0x100000], 0x700000);

1528 
	`‰ì
–
buf
 );

1529 
	}
}

1540 
	$√o_pcm2_¢k_1999
(
ru¬ög_machöe
 *
machöe
, 
vÆue
)

1542 
UINT16
 *
rom
 = (UINT16 *)
	`mem‹y_ªgi⁄
(
machöe
, "ym");

1543 
size
 = 
	`mem‹y_ªgi⁄_Àngth
(
machöe
, "ym");

1544 
i
, 
j
;

1546 if–
rom
 !
NULL
 )

1548 
UINT16
 *
buf„r
 = 
	`Æloc_¨øy_‹_dõ
(UINT16, 
vÆue
 / 2);

1550  
i
 = 0; i < 
size
 / 2; i +–
vÆue
 / 2 ) )

1552 
	`mem˝y
–
buf„r
, &
rom
[ 
i
 ], 
vÆue
 );

1553  
j
 = 0; j < (
vÆue
 / 2); j++ )

1555 
rom
[ 
i
 + 
j
 ] = 
buf„r
[ j ^ (
vÆue
/4) ];

1558 
	`‰ì
(
buf„r
);

1560 
	}
}

1564 
	$√o_pcm2_sw≠
(
ru¬ög_machöe
 *
machöe
, 
vÆue
)

1566 c⁄° 
UINT32
 
addrs
[7][2]={

1574 c⁄° 
UINT8
 
x‹d©a
[7][8]={

1582 
UINT8
 *
§c
 = 
	`mem‹y_ªgi⁄
(
machöe
, "ym");

1583 
UINT8
 *
buf
 = 
	`Æloc_¨øy_‹_dõ
(UINT8, 0x1000000);

1584 
i
, 
j
, 
d
;

1586 
	`mem˝y
(
buf
,
§c
,0x1000000);

1587 
i
=0;i<0x1000000;i++)

1589 
j
=
	`BITSWAP24
(
i
,23,22,21,20,19,18,17,0,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16);

1590 
j
=j^
addrs
[
vÆue
][1];

1591 
d
=((
i
+
addrs
[
vÆue
][0])&0xffffff);

1592 
§c
[
j
]=
buf
[
d
]^
x‹d©a
[
vÆue
][j&0x7];

1594 
	`‰ì
(
buf
);

1595 
	}
}

1606 
	$kof2003biosdecode
(
ru¬ög_machöe
 *
machöe
)

1608 c⁄° 
UINT8
 
addªss
[0x80]={

1626 
UINT16
*
§c
(UINT16*)
	`mem‹y_ªgi⁄
–
machöe
, "mainbios" );

1627 
UINT16
*
buf

	`Æloc_¨øy_‹_dõ
(UINT16, 0x80000/2);

1628 
a
,
addr
;

1630 
a
=0;a<0x80000/2;a++)

1632 i‡(
§c
[
a
] & (0x0004 << (8*
	`BYTE_XOR_LE
(0)))) src[a] ^= 0x0001 << (8*BYTE_XOR_LE(0));

1633 i‡(
§c
[
a
] & (0x0010 << (8*
	`BYTE_XOR_LE
(0)))) src[a] ^= 0x0002 << (8*BYTE_XOR_LE(0));

1634 i‡(
§c
[
a
] & (0x0020 << (8*
	`BYTE_XOR_LE
(0)))) src[a] ^= 0x0008 << (8*BYTE_XOR_LE(0));

1636 
addr
 = 
a
 & ~0xff;

1637 
addr
 |
addªss
[
	`BYTE_XOR_LE
(
a
 & 0x7f)];

1638 i‡–
a
 & 0x00008Ë
addr
 ^= 0x0008;

1639 i‡–
a
 & 0x00080Ë
addr
 ^= 0x0080;

1640 i‡–
a
 & 0x00200Ë
addr
 ^= 0x0100;

1641 i‡(~
a
 & 0x02000Ë
addr
 ^= 0x0400;

1642 i‡(~
a
 & 0x10000Ë
addr
 ^= 0x1000;

1643 i‡–
a
 & 0x02000Ë
addr
 ^= 0x8000;

1644 
buf
[
addr
]=
§c
[
a
];

1646 
	`mem˝y
(
§c
,
buf
,0x80000);

1647 
	`‰ì
(
buf
);

1648 
	}
}

	@src/neocrypt.h

1 #i‚de‡
_NEOCRYPT_H_


2 
	#_NEOCRYPT_H_


	)

4 
kof99_√ogeo_gfx_de¸y±
(
exåa_x‹
);

5 
kof2000_√ogeo_gfx_de¸y±
(
exåa_x‹
);

6 
√ogeo_sfix_de¸y±
();

	@src/pbar.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

24 #ifde‡
USE_GUI


25 
	~"gui_öãrf.h
"

28 
	~"SDL.h
"

30 #ifde‡
GP2X


31 
	~"mesßges.h
"

32 
	~"s¸ìn.h
"

33 
	~"míu.h
"

42 
Uöt8
 
	gpg_œ°
;

43 
Uöt8
 
	gpg_size
;

44 
Uöt32
 
	gﬁdpos
=0;

46 
	$¸óã_¥ogªss_b¨
(c⁄° *
desc
) {

47 
i
;

48 #ifde‡
GP2X


60 
	`gn_öô_pb¨
(
desc
);

62 #ifde‡
USE_GUI


63 
	`lﬂdög_pb¨_£t_œbñ
(
desc
);

64 
ﬁdpos
=0;

66 
pg_size
=62;

67 
pg_œ°
=0;

69 
	`¥ötf
("%12†[",
desc
);

70 
i
=0;i<
pg_size
;i++)

71 
	`¥ötf
("-");

72 
	`¥ötf
("]\r%12†[",
desc
);

73 
	`fÊush
(
°dout
);

76 
	}
}

78 
	$upd©e_¥ogªss_b¨
(
Uöt32
 
cuºít_pos
,Uöt32 
size
) {

79 #ifde‡
GP2X


80 i‡(((
cuºít_pos
-
ﬁdpos
)*100.0/()
size
)>=5.0) {

88 
	`gn_upd©e_pb¨
(
cuºít_pos
,
size
);

89 
ﬁdpos
=
cuºít_pos
;

92 #ifde‡
USE_GUI


94 i‡(((
cuºít_pos
-
ﬁdpos
)*100.0/()
size
)>=5.0) {

95 
	`lﬂdög_pb¨_upd©e
(
cuºít_pos
,
size
);

96 
ﬁdpos
=
cuºít_pos
;

99 
Uöt8
 
pg_cuºít
=(
pg_size
*
cuºít_pos
)/()
size
;

100 
i
;

103 
i
=
pg_œ°
;i<
pg_cuºít
;i++) {

104 
	`putch¨
('*');

106 
pg_œ°
=
pg_cuºít
;

107 
	`fÊush
(
°dout
);

110 
	}
}

112 
	$ãrmö©e_¥ogªss_b¨
() {

113 #ifde‡
GP2X


125 
	`gn_ãrmö©e_pb¨
();

127 #ifde‡
USE_GUI


128 
	`lﬂdög_pb¨_£t_œbñ
(
NULL
);

130 
i
;

131 
i
=
pg_œ°
;i<
pg_size
;i++) {

132 
	`putch¨
('*');

134 
	`¥ötf
("\r");

137 
	}
}

	@src/pbar.h

1 #i‚de‡
_PBAR_H_


2 
	#_PBAR_H_


	)

4 
¸óã_¥ogªss_b¨
(c⁄° *
desc
);

5 
upd©e_¥ogªss_b¨
(
Uöt32
 
cuºít_pos
,Uöt32 
size
);

6 
ãrmö©e_¥ogªss_b¨
();

7 #ifde‡
GP2X


8 
öô_¥ogªss_b¨
(*
desc
);

	@src/pd4990a.c

7 #ifde‡
HAVE_CONFIG_H


8 
	~"c⁄fig.h
"

12 
	~"SDL.h
"

13 
	~<time.h
>

14 
	~"pd4990a.h
"

15 
	~"°©e.h
"

20 
pd4990a_s
 
	gpd4990a
 =

31 
Uöt32
 
	gshi·lo
,
	gshi·hi
;

32 
	gªåa˚s
 = 0;

33 
	gã°waôs
 = 0;

34 
	gmaxwaôs
 = 1;

35 
	gã°bô
 = 0;

37 
	gouçutbô
 = 0;

38 
	gbôno
 = 0;

40 
	gªadög
=0;

41 
	gwrôög
=0;

43 
	#DATA_BIT
 0x1

	)

44 
	#CLOCK_BIT
 0x2

	)

45 
	#END_BIT
 0x4

	)

47 
	$pd4990a_addªåa˚
()

49 ++
ã°waôs
;

50 if(
ã°waôs
>=
maxwaôs
)

52 
ã°bô
 ^= 1;

53 
ã°waôs
=0;

55 
ªåa˚s
++;

56 i‡(
ªåa˚s
 < 60)

58 
ªåa˚s
 = 0;

59 
pd4990a
.
£c⁄ds
++;

60 i‡–(
pd4990a
.
£c⁄ds
 & 0x0f) < 10 )

62 
pd4990a
.
£c⁄ds
 &= 0xf0;

63 
pd4990a
.
£c⁄ds
 += 0x10;

64 i‡(
pd4990a
.
£c⁄ds
 < 0x60)

66 
pd4990a
.
£c⁄ds
 = 0;

67 
pd4990a
.
möuãs
++;

68 i‡–(
pd4990a
.
möuãs
 & 0x0f) < 10 )

70 
pd4990a
.
möuãs
 &= 0xf0;

71 
pd4990a
.
möuãs
 += 0x10;

72 i‡(
pd4990a
.
möuãs
 < 0x60)

74 
pd4990a
.
möuãs
 = 0;

75 
pd4990a
.
hours
++;

76 i‡–(
pd4990a
.
hours
 & 0x0f) < 10 )

78 
pd4990a
.
hours
 &= 0xf0;

79 
pd4990a
.
hours
 += 0x10;

80 i‡(
pd4990a
.
hours
 < 0x24)

82 
pd4990a
.
hours
 = 0;

83 
	`pd4990a_ö¸emít_day
();

84 
	}
}

86 
	$pd4990a_öô
() {

87 
time_t
 
…ime
;

88 
tm
 *
today
;

92 
pd4990a
.
£c⁄ds
 = 0x00;

93 
pd4990a
.
möuãs
 = 0x00;

94 
pd4990a
.
hours
 = 0x00;

95 
pd4990a
.
days
 = 0x09;

96 
pd4990a
.
m⁄th
 = 9;

97 
pd4990a
.
yór
 = 0x73;

98 
pd4990a
.
wìkday
 = 1;

100 
ªåa˚s
 = 0;

101 
ã°bô
 = 0;

102 
ªadög
=0;

103 
wrôög
=0;

104 
shi·lo
=0;

105 
shi·hi
=0;

107 
ouçutbô
 = 0;

108 
bôno
 = 0;

110 
	`time
(&
…ime
);

111 
today
 = 
	`loˇ…ime
(&
…ime
);

113 
pd4990a
.
£c⁄ds
 = ((
today
->
tm_£c
 / 10) << 4) + (today->tm_sec % 10);

114 
pd4990a
.
möuãs
 = ((
today
->
tm_mö
 / 10) << 4) + (today->tm_min % 10);

115 
pd4990a
.
hours
 = ((
today
->
tm_hour
 / 10) << 4) + (today->tm_hour % 10);

116 
pd4990a
.
days
 = ((
today
->
tm_mday
 / 10) << 4) + (today->tm_mday % 10);

117 
pd4990a
.
m⁄th
 = (
today
->
tm_m⁄
 + 1);

118 
pd4990a
.
yór
 = ((
today
->
tm_yór
 / 10) << 4) + (today->tm_year % 10);

119 
pd4990a
.
wìkday
 = 
today
->
tm_wday
;

122 
	}
}

124 
	$pd4990a_ö¸emít_day
()

126 
ªÆ_yór
;

128 
pd4990a
.
days
++;

129 i‡((
pd4990a
.
days
 & 0x0f) >= 10)

131 
pd4990a
.
days
 &= 0xf0;

132 
pd4990a
.
days
 += 0x10;

135 
pd4990a
.
wìkday
++;

136 i‡(
pd4990a
.
wìkday
 == 7)

137 
pd4990a
.
wìkday
=0;

139 
pd4990a
.
m⁄th
)

142 i‡(
pd4990a
.
days
 == 0x32)

144 
pd4990a
.
days
 = 1;

145 
	`pd4990a_ö¸emít_m⁄th
();

149 
ªÆ_yór
 = (
pd4990a
.
yór
>>4)*10 + (pd4990a.year&0xf);

150 i‡((
ªÆ_yór
 % 4) && (!(real_year % 100) || (real_year % 400)))

152 i‡(
pd4990a
.
days
 == 0x29)

154 
pd4990a
.
days
 = 1;

155 
	`pd4990a_ö¸emít_m⁄th
();

160 i‡(
pd4990a
.
days
 == 0x30)

162 
pd4990a
.
days
 = 1;

163 
	`pd4990a_ö¸emít_m⁄th
();

168 i‡(
pd4990a
.
days
 == 0x31)

170 
pd4990a
.
days
 = 1;

171 
	`pd4990a_ö¸emít_m⁄th
();

175 
	}
}

177 
	$pd4990a_ö¸emít_m⁄th
()

179 
pd4990a
.
m⁄th
++;

180 i‡(
pd4990a
.
m⁄th
 == 13)

182 
pd4990a
.
m⁄th
 = 1;

183 
pd4990a
.
yór
++;

184 i‡–(
pd4990a
.
yór
 & 0x0f) >= 10 )

186 
pd4990a
.
yór
 &= 0xf0;

187 
pd4990a
.
yór
 += 0x10;

189 i‡(
pd4990a
.
yór
 == 0xA0)

190 
pd4990a
.
yór
 = 0;

192 
	}
}

194 
	$ªad_4990_ã°bô
()

196  (
ã°bô
);

197 
	}
}

199 
	$ªad_4990_d©abô
()

201  (
ouçutbô
);

202 
	}
}

204 
	$pd4990a_ªadbô
()

206 
bôno
)

210 
ouçutbô
=(
pd4990a
.
£c⁄ds
 >> 
bôno
) & 0x01;

214 
ouçutbô
=(
pd4990a
.
möuãs
 >> (
bôno
-0x08)) & 0x01;

218 
ouçutbô
=(
pd4990a
.
hours
 >> (
bôno
-0x10)) & 0x01;

222 
ouçutbô
=(
pd4990a
.
days
 >> (
bôno
-0x18)) & 0x01;

225 
ouçutbô
=(
pd4990a
.
wìkday
 >> (
bôno
-0x20)) & 0x01;

228 
ouçutbô
=(
pd4990a
.
m⁄th
 >> (
bôno
-0x24)) & 0x01;

232 
ouçutbô
=(
pd4990a
.
yór
 >> (
bôno
-0x28)) & 0x01;

238 
	}
}

243 
	$pd4990a_ª£tbô°ªam
()

245 
shi·lo
=0;

246 
shi·hi
=0;

247 
bôno
=0;

248 
	}
}

250 
	$pd4990a_wrôebô
(
Uöt8
 
bô
)

252 if(
bôno
<=31)

253 
shi·lo
|=
bô
<<
bôno
;

255 
shi·hi
|=
bô
<<(
bôno
-32);

256 
	}
}

258 
	$pd4990a_√xtbô
()

260 ++
bôno
;

261 if(
ªadög
)

262 
	`pd4990a_ªadbô
();

263 if(
ªadög
 && 
bôno
==0x34)

265 
ªadög
=0;

266 
	`pd4990a_ª£tbô°ªam
();

269 
	}
}

271 
Uöt8
 
	$pd4990a_gëcomm™d
()

275 if(
bôno
<=31)

276  
shi·lo
>>(
bôno
-4);

278  
shi·hi
>>(
bôno
-32-4);

279 
	}
}

281 
	$pd4990a_upd©e_d©e
()

283 
pd4990a
.
£c⁄ds
=(
shi·lo
>>0 )&0xff;

284 
pd4990a
.
möuãs
=(
shi·lo
>>8 )&0xff;

285 
pd4990a
.
hours
 =(
shi·lo
>>16)&0xff;

286 
pd4990a
.
days
 =(
shi·lo
>>24)&0xff;

287 
pd4990a
.
wìkday
=(
shi·hi
>>0 )&0x0f;

288 
pd4990a
.
m⁄th
 =(
shi·hi
>>4 )&0x0f;

289 
pd4990a
.
yór
 =(
shi·hi
>>8 )&0xff;

290 
	}
}

292 
	$pd4990a_¥o˚ss_comm™d
()

294 
	`pd4990a_gëcomm™d
())

297 
bôno
=0;

298 if(
ªadög
)

299 
	`pd4990a_ªadbô
();

300 
shi·lo
=0;

301 
shi·hi
=0;

304 
wrôög
=0;

305 
	`pd4990a_upd©e_d©e
();

308 
ªadög
=1;

311 
maxwaôs
=1;

314 
maxwaôs
=30;

317 
	}
}

320 
	$pd4990a_£rül_c⁄åﬁ
(
d©a
)

322 
˛ock_löe
=0;

323 
comm™d_löe
=0;

326 if(
comm™d_löe
 && !(
d©a
&
END_BIT
))

328 
	`pd4990a_¥o˚ss_comm™d
();

329 
	`pd4990a_ª£tbô°ªam
();

331 
comm™d_löe
=
d©a
&
END_BIT
;

333 if(
˛ock_löe
 && !(
d©a
&
CLOCK_BIT
))

335 
	`pd4990a_wrôebô
(
d©a
&
DATA_BIT
);

336 
	`pd4990a_√xtbô
();

338 
˛ock_löe
=
d©a
&
CLOCK_BIT
;

339 
	}
}

341 
	$wrôe_4990_c⁄åﬁ_w
(
Uöt32
 
addªss
, Uöt32 
d©a
) {

342 
	`pd4990a_£rül_c⁄åﬁ
(
d©a
&0x7);

343 
	}
}

	@src/pd4990a.h

4 
	~"mem‹y.h
"

5 
	spd4990a_s


7 
	m£c⁄ds
;

8 
	mmöuãs
;

9 
	mhours
;

10 
	mdays
;

11 
	mm⁄th
;

12 
	myór
;

13 
	mwìkday
;

16 
pd4990a_öô
();

18 
pd4990a_addªåa˚
();

19 
ªad_4990_ã°bô
();

20 
ªad_4990_d©abô
();

21 
wrôe_4990_c⁄åﬁ_w
(
Uöt32
 
addªss
, Uöt32 
d©a
);

22 
pd4990a_ö¸emít_day
();

23 
pd4990a_ö¸emít_m⁄th
();

	@src/profiler.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~<SDL.h
>

7 
	~"¥ofûî.h
"

8 
	~"mesßges.h
"

15 
Uöt32
 
	gcou¡î
[
MAX_BLOCK
];

16 
__ölöe__
 
Uöt32
 
	$¥of_gë_tick
()

18  
	`SDL_GëTicks
();

19 
	}
}

21 
	$¥ofûî_°¨t
(
block
)

23 
cou¡î
[
block
] = 
	`¥of_gë_tick
();

25 
	}
}

27 
	$¥ofûî_°›
(
block
)

29 
cou¡î
[
block
] = 
	`¥of_gë_tick
() - counter[block];

31 
	}
}

33 
	$¥ofûî_show_°©
()

35 
cou¡
;

36 
buf„r
[256];

38 
Uöt32
 
Æl
 = 
	`¥of_gë_tick
(Ë- 
cou¡î
[
PROF_ALL
];

40 
Uöt32
 
video
=0;

42 i‡(
cou¡î
[
PROF_VIDEO
]>
video
) video=counter[PROF_VIDEO];

45 
	`•rötf
(
buf„r
, "V:%d (%d) A:%d M:%d Z:%d ALL:%d",

46 
cou¡î
[
PROF_VIDEO
], 
video
, cou¡î[
PROF_SOUND
],

47 
cou¡î
[
PROF_68K
],cou¡î[
PROF_Z80
],
Æl
);

51 
	`døw_mesßge
(
buf„r
);

58 
	}
}

	@src/profiler.h

1 #i‚de‡
_PROFILER_H_


2 
	#_PROFILER_H_


	)

4 
	eBLOCK
 {

5 
	mPROF_ALL
 = 0,

6 
	mPROF_VIDEO
,

7 
	mPROF_68K
,

8 
	mPROF_Z80
,

9 
	mPROF_SDLBLIT
,

10 
	mPROF_SOUND
,

11 
	mMAX_BLOCK


	@src/raze/raze.h

10 #i‚de‡
__RAZE_H_INCLUDED__


11 
	#__RAZE_H_INCLUDED__


	)

13 #ifde‡
__˝lu•lus


18 #i‚de‡
UBYTE


19 
	#UBYTE
 

	)

21 #i‚de‡
UWORD


22 
	#UWORD
 

	)

26 
	#Z80_MAP_DIRECT
 0

	)

27 
	#Z80_MAP_HANDLED
 1

	)

31 
Z80_REG_AF
=0,

32 
Z80_REG_BC
,

33 
Z80_REG_DE
,

34 
Z80_REG_HL
,

35 
Z80_REG_IX
,

36 
Z80_REG_IY
,

37 
Z80_REG_PC
,

38 
Z80_REG_SP
,

39 
Z80_REG_AF2
,

40 
Z80_REG_BC2
,

41 
Z80_REG_DE2
,

42 
Z80_REG_HL2
,

43 
Z80_REG_IFF1
,

44 
Z80_REG_IFF2
,

45 
Z80_REG_IR
,

46 
Z80_REG_IM
,

47 
Z80_REG_IRQVe˘‹
,

48 
Z80_REG_IRQLöe


49 } 
	tz80_ªgi°î
;

52 
z80_ª£t
();

53 
z80_emuœã
(
cy˛es
);

54 
z80_øi£_IRQ
(
UBYTE
 
ve˘‹
);

55 
z80_lowî_IRQ
();

56 
z80_ˇu£_NMI
();

59 
z80_gë_c⁄ãxt_size
();

60 
z80_£t_c⁄ãxt
(*
c⁄ãxt
);

61 
z80_gë_c⁄ãxt
(*
c⁄ãxt
);

62 
UWORD
 
z80_gë_ªg
(
z80_ªgi°î
 
ªg
);

63 
z80_£t_ªg
(
z80_ªgi°î
 
ªg
, 
UWORD
 
vÆue
);

66 
z80_gë_cy˛es_ñ≠£d
();

67 
z80_°›_emuœtög
();

68 
z80_skù_idÀ
();

69 
z80_do_waô_°©es
(
n
);

72 
z80_öô_memm≠
();

73 
z80_m≠_„tch
(
UWORD
 
°¨t
, UWORD 
íd
, 
UBYTE
 *
mem‹y
);

74 
z80_m≠_ªad
(
UWORD
 
°¨t
, UWORD 
íd
, 
UBYTE
 *
mem‹y
);

75 
z80_m≠_wrôe
(
UWORD
 
°¨t
, UWORD 
íd
, 
UBYTE
 *
mem‹y
);

76 
z80_add_ªad
(
UWORD
 
°¨t
, UWORD 
íd
, 
mëhod
, *
d©a
);

77 
z80_add_wrôe
(
UWORD
 
°¨t
, UWORD 
íd
, 
mëhod
, *
d©a
);

78 
z80_£t_ö
(
UBYTE
 (*
h™dÀr
)(
UWORD
 
p‹t
));

79 
z80_£t_out
((*
h™dÀr
)(
UWORD
 
p‹t
, 
UBYTE
 
vÆue
));

80 
z80_£t_ªti
((*
h™dÀr
)());

81 
z80_£t_„tch_ˇŒback
((*
h™dÀr
)(
UWORD
 
pc
));

82 
z80_íd_memm≠
();

84 #ifde‡
__˝lu•lus


	@src/raze_interf.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 #ifde‡
USE_RAZE


26 
	~"emu.h
"

27 
	~"mem‹y.h
"

28 
	~"øze/øze.h
"

33 
	$˝u_z80_swôchb™k
(
Uöt8
 
b™k
, 
Uöt16
 
P‹tNo
)

35 i‡(
b™k
<3)

36 
z80_b™k
[
b™k
]=
P‹tNo
;

38 
b™k
) {

40 
	`z80_m≠_„tch
(0x8000, 0xbfff,

41 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x4000 * ((
P‹tNo
 >> 8) & 0x0f)));

42 
	`z80_m≠_ªad
(0x8000, 0xbfff,

43 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x4000 * ((
P‹tNo
 >> 8) & 0x0f)));

46 
	`z80_m≠_„tch
(0xc000, 0xdfff,

47 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x2000 * ((
P‹tNo
 >> 8) & 0x1f)));

48 
	`z80_m≠_ªad
(0xc000, 0xdfff,

49 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x2000 * ((
P‹tNo
 >> 8) & 0x1f)));

52 
	`z80_m≠_„tch
(0xe000, 0xefff,

53 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x1000 * ((
P‹tNo
 >> 8) & 0x3f)));

54 
	`z80_m≠_ªad
(0xe000, 0xefff,

55 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x1000 * ((
P‹tNo
 >> 8) & 0x3f)));

58 
	`z80_m≠_„tch
(0xf000, 0xf7ff,

59 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x0800 * ((
P‹tNo
 >> 8) & 0x7f)));

60 
	`z80_m≠_ªad
(0xf000, 0xf7ff,

61 
mem‹y
.
rom
.
˝u_z80
.
p
 + (0x0800 * ((
P‹tNo
 >> 8) & 0x7f)));

64 
	}
}

67 
Z80_STATE
 
	gz80_°
;

69 * 
	gøze_c⁄ãxt
=
NULL
;

71 
	$z80dum¥eg
(){

72 
	`¥ötf
("PC %04x\n",
	`z80_gë_ªg
(
Z80_REG_PC
));

73 
	`¥ötf
("SP %04x\n",
	`z80_gë_ªg
(
Z80_REG_SP
));

74 
	`¥ötf
("AF %04x\n",
	`z80_gë_ªg
(
Z80_REG_AF
));

75 
	`¥ötf
("BC %04x\n",
	`z80_gë_ªg
(
Z80_REG_BC
));

76 
	`¥ötf
("DE %04x\n",
	`z80_gë_ªg
(
Z80_REG_DE
));

77 
	`¥ötf
("HL %04x\n",
	`z80_gë_ªg
(
Z80_REG_HL
));

78 
	`¥ötf
("IX %04x\n",
	`z80_gë_ªg
(
Z80_REG_IX
));

79 
	`¥ötf
("IY %04x\n",
	`z80_gë_ªg
(
Z80_REG_IY
));

81 
	`¥ötf
("AF2 %04x\n",
	`z80_gë_ªg
(
Z80_REG_AF2
));

82 
	`¥ötf
("BC2 %04x\n",
	`z80_gë_ªg
(
Z80_REG_BC2
));

83 
	`¥ötf
("DE2 %04x\n",
	`z80_gë_ªg
(
Z80_REG_DE2
));

84 
	`¥ötf
("HL2 %04x\n",
	`z80_gë_ªg
(
Z80_REG_HL2
));

86 
	`¥ötf
("IFF1 %04x\n",
	`z80_gë_ªg
(
Z80_REG_IFF1
));

87 
	`¥ötf
("IFF2 %04x\n",
	`z80_gë_ªg
(
Z80_REG_IFF2
));

88 
	`¥ötf
("IM %04x\n",
	`z80_gë_ªg
(
Z80_REG_IM
));

90 
	`¥ötf
("IRQV %04x\n",
	`z80_gë_ªg
(
Z80_REG_IRQVe˘‹
));

91 
	`¥ötf
("IRQL %04x\n",
	`z80_gë_ªg
(
Z80_REG_IRQLöe
));

92 
	}
}

97 
	$debug
(
UWORD
 
pc
)

100 i‡(
pc
==0x145c) {

101 
	`¥ötf
("Z %04x %02x\n",
pc
,
mem‹y
.
rom
.
˝u_z80
.
p
[pc]);

102 
	`z80dum¥eg
();

104 i‡(
pc
==0x1450) {

105 
	`¥ötf
("Z %04x %02x\n",
pc
,
mem‹y
.
rom
.
˝u_z80
.
p
[pc]);

106 
	`z80dum¥eg
();

109 
	}
}

112 
	$˝u_z80_mk°©e
(
gzFûe
 
gzf
,
mode
) {

114 
	}
}

116 
	$˝u_z80_öô
()

118 
	`z80_öô_memm≠
();

119 
	`z80_m≠_„tch
(0x0000, 0x7fff, 
mem‹y
.
rom
.
˝u_z80
.
p
);

120 
	`z80_m≠_„tch
(0x8000, 0xbfff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0x8000);

121 
	`z80_m≠_„tch
(0xc000, 0xdfff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xc000);

122 
	`z80_m≠_„tch
(0xe000, 0xefff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xe000);

123 
	`z80_m≠_„tch
(0xf000, 0xf7ff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xf000);

124 
	`z80_m≠_„tch
(0xf800, 0xffff, 
mem‹y
.
z80_øm
);

126 
	`z80_add_ªad
(0x0000, 0x7fff, 
Z80_MAP_DIRECT
, 
mem‹y
.
rom
.
˝u_z80
.
p
);

127 
	`z80_m≠_ªad
(0x8000, 0xbfff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0x8000);

128 
	`z80_m≠_ªad
(0xc000, 0xdfff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xc000);

129 
	`z80_m≠_ªad
(0xe000, 0xefff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xe000);

130 
	`z80_m≠_ªad
(0xf000, 0xf7ff, 
mem‹y
.
rom
.
˝u_z80
.
p
 + 0xf000);

131 
	`z80_add_ªad
(0xf800, 0xffff, 
Z80_MAP_DIRECT
, 
mem‹y
.
z80_øm
);

133 
z80_b™k
[0]=0x8000;

134 
z80_b™k
[1]=0xc000;

135 
z80_b™k
[2]=0xe000;

136 
z80_b™k
[3]=0xf000;

138 
	`z80_add_wrôe
(0xf800, 0xffff, 
Z80_MAP_DIRECT
, 
mem‹y
.
z80_øm
);

140 
	`z80_íd_memm≠
();

142 
	`z80_£t_ö
(
z80_p‹t_ªad
);

143 
	`z80_£t_out
(
z80_p‹t_wrôe
);

147 
	`˝u_z80_öô_ßve_°©e
();

149 
	`z80_ª£t
();

150 
	}
}

152 
	$˝u_z80_run
(
nbcy˛e
)

154 
	`z80_emuœã
(
nbcy˛e
);

155 
	}
}

157 
	$˝u_z80_nmi
()

159 
	`z80_ˇu£_NMI
();

160 
	}
}

162 
	$˝u_z80_øi£_úq
(
l
)

164 
	`z80_øi£_IRQ
(
l
);

165 
	}
}

167 
	$˝u_z80_lowî_úq
()

169 
	`z80_lowî_IRQ
();

170 
	}
}

172 
Uöt16
 
	$˝u_z80_gë_pc
() {

173  
	`z80_gë_ªg
(
Z80_REG_PC
);

174 
	}
}

176 
	$˝u_z80_£t_°©e
(
Z80_STATE
 *
°
)

178 
	`z80_£t_ªg
(
Z80_REG_PC
,
°
->
PC
);

179 
	`z80_£t_ªg
(
Z80_REG_SP
,
°
->
SP
);

180 
	`z80_£t_ªg
(
Z80_REG_AF
,
°
->
AF
);

181 
	`z80_£t_ªg
(
Z80_REG_BC
,
°
->
BC
);

182 
	`z80_£t_ªg
(
Z80_REG_DE
,
°
->
DE
);

183 
	`z80_£t_ªg
(
Z80_REG_HL
,
°
->
HL
);

184 
	`z80_£t_ªg
(
Z80_REG_IX
,
°
->
IX
);

185 
	`z80_£t_ªg
(
Z80_REG_IY
,
°
->
IY
);

187 
	`z80_£t_ªg
(
Z80_REG_AF2
,
°
->
AF2
);

188 
	`z80_£t_ªg
(
Z80_REG_BC2
,
°
->
BC2
);

189 
	`z80_£t_ªg
(
Z80_REG_DE2
,
°
->
DE2
);

190 
	`z80_£t_ªg
(
Z80_REG_HL2
,
°
->
HL2
);

194 
	`z80_£t_ªg
(
Z80_REG_IFF1
,
°
->
IFF1
);

195 
	`z80_£t_ªg
(
Z80_REG_IFF2
,
°
->
IFF2
);

196 
	`z80_£t_ªg
(
Z80_REG_IM
,
°
->
IM
);

199 
	}
}

202 
	$˝u_z80_fûl_°©e
(
Z80_STATE
 *
°
) {

203 
°
->
PC
=
	`z80_gë_ªg
(
Z80_REG_PC
);

204 
°
->
SP
=
	`z80_gë_ªg
(
Z80_REG_SP
);

205 
°
->
AF
=
	`z80_gë_ªg
(
Z80_REG_AF
);

206 
°
->
BC
=
	`z80_gë_ªg
(
Z80_REG_BC
);

207 
°
->
DE
=
	`z80_gë_ªg
(
Z80_REG_DE
);

208 
°
->
HL
=
	`z80_gë_ªg
(
Z80_REG_HL
);

209 
°
->
IX
=
	`z80_gë_ªg
(
Z80_REG_IX
);

210 
°
->
IY
=
	`z80_gë_ªg
(
Z80_REG_IY
);

212 
°
->
AF2
=
	`z80_gë_ªg
(
Z80_REG_AF2
);

213 
°
->
BC2
=
	`z80_gë_ªg
(
Z80_REG_BC2
);

214 
°
->
DE2
=
	`z80_gë_ªg
(
Z80_REG_DE2
);

215 
°
->
HL2
=
	`z80_gë_ªg
(
Z80_REG_HL2
);

219 
°
->
IFF1
=
	`z80_gë_ªg
(
Z80_REG_IFF1
);

220 
°
->
IFF2
=
	`z80_gë_ªg
(
Z80_REG_IFF2
);

221 
°
->
IM

	`z80_gë_ªg
(
Z80_REG_IM
);

223 
	}
}

	@src/resfile.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

4 
	~<sys/°©.h
>

5 
	~"SDL.h
"

6 
	~"emu.h
"

7 
	~"roms.h
"

8 
	~"ªsfûe.h
"

9 
	~"unzù.h
"

11 
	~"c⁄f.h
"

12 
	~"°b_image.h
"

13 
	~"gnutû.h
"

16 
	$zªad_ch¨
(
ZFILE
 *
gz
, *
c
, 
Àn
) {

17 
rc
;

18 
rc
 = 
	`gn_unzù_‰ód
(
gz
, (
Uöt8
*)
c
, 
Àn
);

20 
	}
}

21 
	$zªad_uöt8
(
ZFILE
 *
gz
, 
Uöt8
 *
c
) {

22 
rc
;

23 
rc
 = 
	`gn_unzù_‰ód
(
gz
, 
c
, 1);

25 
	}
}

26 
	$zªad_uöt32À
(
ZFILE
 *
gz
, 
Uöt32
 *
c
) {

27 
rc
;

28 
rc
 = 
	`gn_unzù_‰ód
(
gz
, (
Uöt8
*)
c
, (
Uöt32
));

29 #ifde‡
WORDS_BIGENDIAN


30 *
c
=
	`SDL_Sw≠32
(*c);

33 
	}
}

36 
	$ªs_vîify_d©afûe
(*
fûe
) {

37 
°©
 
sb
;

39 i‡(!
fûe
Ëfûe=
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile"));

41 i‡(
	`l°©
(
fûe
,&
sb
)==-1) {

42 
	`gn_£t_îr‹_msg
("%†nŸ found",
fûe
);

43  
GN_FALSE
;

47 i‡(
	`S_ISDIR
(
sb
.
°_mode
)) {

48 *
buf
=
	`mÆloc
(
	`°æí
(
fûe
)+strlen("/gngeo_data.zip")+1);

49 
	`¢¥ötf
(
buf
,254,"%s/%s",
fûe
,"gngeo_data.zip");

50 if(
	`ªs_vîify_d©afûe
(
buf
)==
GN_TRUE
) {

51 
	`°∫˝y
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("d©afûe")), 
buf
, 254);

52 
	`‰ì
(
buf
);

53  
GN_TRUE
;

55 
	`gn_£t_îr‹_msg
("%†nŸ found",
buf
);

56 
	`‰ì
(
buf
);

57  
GN_FALSE
;

60 i‡(
	`S_ISREG
(
sb
.
°_mode
)Ë 
GN_TRUE
;

61 
	`gn_£t_îr‹_msg
("%†nŸá vÆid fûe",
fûe
);

62  
GN_FALSE
;

65 
	}
}

71 
ROM_DEF
 *
	$ªs_lﬂd_drv
(*
«me
) {

72 *
gngeo_d©
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile"));

73 
ROM_DEF
 *
drv
;

74 
drv‚ame
[32];

75 
PKZIP
 *
pz
;

76 
ZFILE
 *
z
;

77 
i
;

79 
drv
 = 
	`ˇŒoc
((
ROM_DEF
), 1);

82 
pz
 = 
	`gn_›í_zù
(
gngeo_d©
);

83 i‡(
pz
 =
NULL
) {

84 
	`‰ì
(
drv
);

86  
NULL
;

88 
	`•rötf
(
drv‚ame
, "rom/%s.drv", 
«me
);

90 i‡((
z
=
	`gn_unzù_f›í
(
pz
,
drv‚ame
,0x0)Ë=
NULL
) {

91 
	`‰ì
(
drv
);

92 
	`gn_˛o£_zù
(
pz
);

94  
NULL
;

98 
	`zªad_ch¨
(
z
, 
drv
->
«me
, 32);

99 
	`zªad_ch¨
(
z
, 
drv
->
∑ª¡
, 32);

100 
	`zªad_ch¨
(
z
, 
drv
->
l⁄g«me
, 128);

101 
	`zªad_uöt32À
(
z
, &
drv
->
yór
);

102 
i
 = 0; i < 10; i++)

103 
	`zªad_uöt32À
(
z
, &
drv
->
romsize
[
i
]);

104 
	`zªad_uöt32À
(
z
, &
drv
->
nb_romfûe
);

105 
i
 = 0; i < 
drv
->
nb_romfûe
; i++) {

106 
	`zªad_ch¨
(
z
, 
drv
->
rom
[
i
].
fûíame
, 32);

107 
	`zªad_uöt8
(
z
, &
drv
->
rom
[
i
].
ªgi⁄
);

108 
	`zªad_uöt32À
(
z
, &
drv
->
rom
[
i
].
§c
);

109 
	`zªad_uöt32À
(
z
, &
drv
->
rom
[
i
].
de°
);

110 
	`zªad_uöt32À
(
z
, &
drv
->
rom
[
i
].
size
);

111 
	`zªad_uöt32À
(
z
, &
drv
->
rom
[
i
].
¸c
);

113 
	`gn_unzù_f˛o£
(
z
);

114 
	`gn_˛o£_zù
(
pz
);

115  
drv
;

116 
	}
}

124 
SDL_SurÁ˚
 *
	$ªs_lﬂd_°bi
(*
bmp
) {

125 
PKZIP
 *
pz
;

126 
SDL_SurÁ˚
 *
s
;

127 
Uöt8
 * 
buf„r
;

128 
size
;

129 
x
, 
y
, 
comp
;

130 
°bi_uc
 *
d©a
 = 
NULL
;

131 
	`¥ötf
("DATAFILE = %s\n",
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile")));

132 
pz
 = 
	`gn_›í_zù
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile")));

133 i‡(!
pz
)

134  
NULL
;

135 
buf„r
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, 
bmp
, 0x0, &
size
);

136 i‡(!
buf„r
)

137  
NULL
;

139 
d©a
 = 
	`°bi_lﬂd_‰om_mem‹y
(
buf„r
, 
size
, &
x
, &
y
, &
comp
, 0);

141 
	`¥ötf
("STBILOAD %∞%d %d %d %d\n", 
d©a
, 
x
, 
y
, 
comp
, x * comp);

142 
comp
) {

143 #ifde‡
WORDS_BIGENDIAN


145 
s
 = 
	`SDL_Cª©eRGBSurÁ˚From
((*Ë
d©a
, 
x
, 
y
, 
comp
 * 8, x * comp,

149 
s
 = 
	`SDL_Cª©eRGBSurÁ˚From
((*Ë
d©a
, 
x
, 
y
, 
comp
 * 8, x * comp,

154 
s
 = 
	`SDL_Cª©eRGBSurÁ˚From
((*Ë
d©a
, 
x
, 
y
, 
comp
 * 8, x * comp,

158 
s
 = 
	`SDL_Cª©eRGBSurÁ˚From
((*Ë
d©a
, 
x
, 
y
, 
comp
 * 8, x * comp,

163 
	`¥ötf
("RESÜoad STBI: Unhandled bpp surface\n");

164 
s
 = 
NULL
;

167 
	`‰ì
(
buf„r
);

168 i‡(
s
 =
NULL
)

169 
	`¥ötf
("RESÜoad STBI: Couldn't create surface\n");

170 
	`gn_˛o£_zù
(
pz
);

171  
s
;

172 
	}
}

177 
SDL_SurÁ˚
 *
	$ªs_lﬂd_bmp
(*
bmp
) {

178 
PKZIP
 *
pz
;

179 
SDL_SurÁ˚
 *
s
;

180 
Uöt8
 * 
buf„r
;

181 
SDL_RW›s
 *
rw
;

182 
size
;

184 
pz
 = 
	`gn_›í_zù
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile")));

185 i‡(!
pz
)

186  
NULL
;

187 
buf„r
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, 
bmp
, 0x0, &
size
);

188 i‡(!
buf„r
) {

189 
	`gn_˛o£_zù
(
pz
);

190  
NULL
;

193 
rw
 = 
	`SDL_RWFromMem
(
buf„r
, 
size
);

194 i‡(!
rw
) {

195 
	`¥ötf
("Eº‹ wôh SDL_RWFromMem: %s\n", 
	`SDL_GëEº‹
());

196 
	`gn_˛o£_zù
(
pz
);

197  
NULL
;

201 
s
 = 
	`SDL_LﬂdBMP_RW
(
rw
, 0);

202 i‡(!
s
) {

203 
	`¥ötf
("Eº‹ÜﬂdögÅÿSDL_SurÁ˚: %s\n", 
	`SDL_GëEº‹
());

204 
	`gn_˛o£_zù
(
pz
);

205  
NULL
;

209 
	`‰ì
(
buf„r
);

210 
	`SDL_FªeRW
(
rw
);

211 
	`gn_˛o£_zù
(
pz
);

212  
s
;

213 
	}
}

214 *
	$ªs_lﬂd_d©a
(*
«me
) {

215 
PKZIP
 *
pz
;

216 
Uöt8
 * 
buf„r
;

217 
size
;

219 
pz
 = 
	`gn_›í_zù
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("datafile")));

220 i‡(!
pz
)

221  
NULL
;

222 
buf„r
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, 
«me
, 0x0, &
size
);

223 
	`gn_˛o£_zù
(
pz
);

224  
buf„r
;

225 
	}
}

	@src/resfile.h

1 #i‚de‡
RESFILE_H


2 
	#RESFILE_H


	)

4 
	~"SDL.h
"

5 
	~"roms.h
"

6 
ªs_vîify_d©afûe
(*
fûe
);

7 
ROM_DEF
 *
ªs_lﬂd_drv
(*
«me
);

8 
SDL_SurÁ˚
 *
ªs_lﬂd_bmp
(*
bmp
);

9 *
ªs_lﬂd_d©a
(*
«me
);

10 
SDL_SurÁ˚
 *
ªs_lﬂd_°bi
(*
bmp
);

	@src/roms.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rögs.h
>

8 
	~<°rög.h
>

10 
	~"roms.h
"

11 
	~"emu.h
"

12 
	~"mem‹y.h
"

14 #i‡
deföed
(
HAVE_LIBZ
)

15 
	~"zlib.h
"

17 
	~"unzù.h
"

19 
	~"video.h
"

20 
	~"å™•ack.h
"

21 
	~"c⁄f.h
"

22 
	~"ªsfûe.h
"

23 
	~"míu.h
"

24 
	~"gnutû.h
"

25 
	~"‰ame_skù.h
"

26 
	~"s¸ìn.h
"

27 #ifde‡
GP2X


28 
	~"gp2x.h
"

29 
	~"ym2610-940/940sh¨ed.h
"

33 
kof98_de¸y±_68k
(
GAME_ROMS
 *
r
);

34 
kof99_de¸y±_68k
(
GAME_ROMS
 *
r
);

35 
g¨ou_de¸y±_68k
(
GAME_ROMS
 *
r
);

36 
g¨ouo_de¸y±_68k
(
GAME_ROMS
 *
r
);

37 
m¶ug3_de¸y±_68k
(
GAME_ROMS
 *
r
);

38 
kof2000_de¸y±_68k
(
GAME_ROMS
 *
r
);

39 
kof2002_de¸y±_68k
(
GAME_ROMS
 *
r
);

40 
m©rim_de¸y±_68k
(
GAME_ROMS
 *
r
);

41 
ßmsho5_de¸y±_68k
(
GAME_ROMS
 *
r
);

42 
ßmsh5p_de¸y±_68k
(
GAME_ROMS
 *
r
);

43 
m¶ug5_de¸y±_68k
(
GAME_ROMS
 *
r
);

44 
kf2k3pcb_de¸y±_s1d©a
(
GAME_ROMS
 *
r
);

45 
kf2k3pcb_de¸y±_68k
(
GAME_ROMS
 *
r
);

46 
kof2003_de¸y±_68k
(
GAME_ROMS
 *
r
);

47 
kof99_√ogeo_gfx_de¸y±
(
GAME_ROMS
 *
r
, 
exåa_x‹
);

48 
kof2000_√ogeo_gfx_de¸y±
(
GAME_ROMS
 *
r
, 
exåa_x‹
);

49 
cmc50_√ogeo_gfx_de¸y±
(
GAME_ROMS
 *
r
, 
exåa_x‹
);

50 
cmc42_√ogeo_gfx_de¸y±
(
GAME_ROMS
 *
r
, 
exåa_x‹
);

51 
√ogeo_boŸÀg_cx_de¸y±
(
GAME_ROMS
 *
r
);

52 
√ogeo_boŸÀg_sx_de¸y±
(
GAME_ROMS
 *
r
, 
exåa_x‹
);

53 
sv˝cb_gfx_de¸y±
(
GAME_ROMS
 *
r
);

54 
sv˝cb_s1d©a_de¸y±
(
GAME_ROMS
 *
r
);

55 
√o_pcm2_sw≠
(
GAME_ROMS
 *
r
, 
vÆue
);

56 
√o_pcm2_¢k_1999
(
GAME_ROMS
 *
r
, 
vÆue
);

57 
√ogeo_cmc50_m1_de¸y±
(
GAME_ROMS
 *
r
);

59 
	g√ed_de¸y±
 = 1;

61 
	g√ogeo_fix_b™k_ty≥
 = 0;

63 
	gb™koff£t_kof99
[64] = {

72 
Uöt8
 
	gs¸ambÀcode_kof99
[7] = {0xF0, 14, 6, 8, 10, 12, 5,};

74 
	gb™koff£t_g¨ou
[64] = {

90 
Uöt8
 
	gs¸ambÀcode_g¨ou
[7] = {0xC0, 5, 9, 7, 6, 14, 12,};

91 
	gb™koff£t_g¨ouo
[64] = {

109 
Uöt8
 
	gs¸ambÀcode_g¨ouo
[7] = {0xC0, 4, 8, 14, 2, 11, 13,};

111 
	gb™koff£t_m¶ug3
[64] = {

126 
Uöt8
 
	gs¸ambÀcode_m¶ug3
[7] = {0xE4, 14, 12, 15, 6, 3, 9,};

127 
	gb™koff£t_kof2000
[64] = {

138 
Uöt8
 
	gs¸ambÀcode_kof2000
[7] = {0xEC, 15, 14, 7, 3, 10, 5,};

140 
	#LOAD_BUF_SIZE
 (128*1024)

	)

141 
Uöt8
* 
	gûﬂdbuf
 = 
NULL
;

163 
	$öô_m¶ugx
(
GAME_ROMS
 *
r
) {

164 
i
;

165 
Uöt8
 *
RAM
 = 
r
->
˝u_m68k
.
p
;

166 i‡(
√ed_de¸y±
) {

167 
i
 = 0; i < 
r
->
˝u_m68k
.
size
; i += 2) {

168 i‡((
	`READ_WORD_ROM
(&
RAM
[
i
 + 0]) == 0x0243)

169 && (
	`READ_WORD_ROM
(&
RAM
[
i
 + 2]) == 0x0001) &&

170 (
	`READ_WORD_ROM
(&
RAM
[
i
 + 4]) == 0x6600)) {

172 
	`WRITE_WORD_ROM
(&
RAM
[
i
 + 4], 0x4e71);

173 
	`WRITE_WORD_ROM
(&
RAM
[
i
 + 6], 0x4e71);

177 
	`WRITE_WORD_ROM
(&
RAM
[0x3bdc], 0x4e71);

178 
	`WRITE_WORD_ROM
(&
RAM
[0x3bde], 0x4e71);

179 
	`WRITE_WORD_ROM
(&
RAM
[0x3be0], 0x4e71);

180 
	`WRITE_WORD_ROM
(&
RAM
[0x3c0c], 0x4e71);

181 
	`WRITE_WORD_ROM
(&
RAM
[0x3c0e], 0x4e71);

182 
	`WRITE_WORD_ROM
(&
RAM
[0x3c10], 0x4e71);

184 
	`WRITE_WORD_ROM
(&
RAM
[0x3c36], 0x4e71);

185 
	`WRITE_WORD_ROM
(&
RAM
[0x3c38], 0x4e71);

188 
	}
}

190 
	$öô_kof99
(
GAME_ROMS
 *
r
) {

191 i‡(
√ed_de¸y±
) {

192 
	`kof99_de¸y±_68k
(
r
);

193 
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x00);

195 
√ogeo_fix_b™k_ty≥
 = 0;

196 
mem‹y
.
bksw_off£t
 = 
b™koff£t_kof99
;

197 
mem‹y
.
bksw_uns¸ambÀ
 = 
s¸ambÀcode_kof99
;

198 
mem‹y
.
sma_∫g_addr
 = 0xF8FA;

201 
	}
}

203 
	$öô_kof99n
(
GAME_ROMS
 *
r
) {

204 
√ogeo_fix_b™k_ty≥
 = 1;

205 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x00);

207 
	}
}

209 
	$öô_g¨ou
(
GAME_ROMS
 *
r
) {

210 i‡(
√ed_de¸y±
) {

211 
	`g¨ou_de¸y±_68k
(
r
);

212 
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x06);

214 
√ogeo_fix_b™k_ty≥
 = 1;

215 
mem‹y
.
bksw_off£t
 = 
b™koff£t_g¨ou
;

216 
mem‹y
.
bksw_uns¸ambÀ
 = 
s¸ambÀcode_g¨ou
;

217 
mem‹y
.
sma_∫g_addr
 = 0xCCF0;

219 
	`DEBUG_LOG
("I HAS INITIALIZD GAROU\n");

221 
	}
}

223 
	$öô_g¨ouo
(
GAME_ROMS
 *
r
) {

224 i‡(
√ed_de¸y±
) {

225 
	`g¨ouo_de¸y±_68k
(
r
);

226 
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x06);

228 
√ogeo_fix_b™k_ty≥
 = 1;

229 
mem‹y
.
bksw_off£t
 = 
b™koff£t_g¨ouo
;

230 
mem‹y
.
bksw_uns¸ambÀ
 = 
s¸ambÀcode_g¨ouo
;

231 
mem‹y
.
sma_∫g_addr
 = 0xCCF0;

235 
	}
}

245 
	$öô_g¨oubl
(
GAME_ROMS
 *
r
) {

247 i‡(
√ed_de¸y±
) {

248 
	`√ogeo_boŸÀg_sx_de¸y±
(
r
, 2);

249 
	`√ogeo_boŸÀg_cx_de¸y±
(
r
);

252 
	}
}

254 
	$öô_m¶ug3
(
GAME_ROMS
 *
r
) {

255 
	`¥ötf
("INIT MSLUG3\n");

256 i‡(
√ed_de¸y±
) {

257 
	`m¶ug3_de¸y±_68k
(
r
);

258 
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xad);

260 
√ogeo_fix_b™k_ty≥
 = 1;

261 
mem‹y
.
bksw_off£t
 = 
b™koff£t_m¶ug3
;

262 
mem‹y
.
bksw_uns¸ambÀ
 = 
s¸ambÀcode_m¶ug3
;

264 
mem‹y
.
sma_∫g_addr
 = 0;

268 
	}
}

270 
	$öô_m¶ug3h
(
GAME_ROMS
 *
r
) {

271 
√ogeo_fix_b™k_ty≥
 = 1;

272 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xad);

274 
	}
}

276 
	$öô_m¶ug3b6
(
GAME_ROMS
 *
r
) {

278 i‡(
√ed_de¸y±
) {

279 
	`√ogeo_boŸÀg_sx_de¸y±
(
r
, 2);

280 
	`cmc42_√ogeo_gfx_de¸y±
(
r
, 0xad);

283 
	}
}

285 
	$öô_kof2000
(
GAME_ROMS
 *
r
) {

286 i‡(
√ed_de¸y±
) {

287 
	`kof2000_de¸y±_68k
(
r
);

288 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

289 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x00);

291 
√ogeo_fix_b™k_ty≥
 = 2;

292 
mem‹y
.
bksw_off£t
 = 
b™koff£t_kof2000
;

293 
mem‹y
.
bksw_uns¸ambÀ
 = 
s¸ambÀcode_kof2000
;

294 
mem‹y
.
sma_∫g_addr
 = 0xD8DA;

298 
	}
}

300 
	$öô_kof2000n
(
GAME_ROMS
 *
r
) {

301 
√ogeo_fix_b™k_ty≥
 = 2;

302 i‡(
√ed_de¸y±
) {

303 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

304 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x00);

307 
	}
}

309 
	$öô_kof2001
(
GAME_ROMS
 *
r
) {

310 
√ogeo_fix_b™k_ty≥
 = 1;

311 i‡(
√ed_de¸y±
) {

312 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x1e);

313 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

317 
	}
}

345 
	$öô_m¶ug4
(
GAME_ROMS
 *
r
) {

346 
√ogeo_fix_b™k_ty≥
 = 1;

348 i‡(
√ed_de¸y±
) {

349 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

350 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x31);

352 
	`√o_pcm2_¢k_1999
(
r
, 8);

356 
	}
}

358 
	$öô_ms4∂us
(
GAME_ROMS
 *
r
) {

359 i‡(
√ed_de¸y±
) {

360 
	`cmc50_√ogeo_gfx_de¸y±
(
r
, 0x31);

361 
	`√o_pcm2_¢k_1999
(
r
, 8);

362 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

365 
	}
}

367 
	$öô_g™ryu
(
GAME_ROMS
 *
r
) {

368 
√ogeo_fix_b™k_ty≥
 = 1;

369 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x07);

371 
	}
}

373 
	$öô_s1945p
(
GAME_ROMS
 *
r
) {

374 
√ogeo_fix_b™k_ty≥
 = 1;

375 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x05);

377 
	}
}

379 
	$öô_¥ei¶e2
(
GAME_ROMS
 *
r
) {

380 
√ogeo_fix_b™k_ty≥
 = 1;

381 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0x9f);

383 
	}
}

385 
	$öô_b™gbód
(
GAME_ROMS
 *
r
) {

386 
√ogeo_fix_b™k_ty≥
 = 1;

387 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xf8);

389 
	}
}

391 
	$öô_nôd
(
GAME_ROMS
 *
r
) {

392 
√ogeo_fix_b™k_ty≥
 = 1;

393 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xff);

395 
	}
}

397 
	$öô_zu∑∑
(
GAME_ROMS
 *
r
) {

398 
√ogeo_fix_b™k_ty≥
 = 1;

399 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xbd);

401 
	}
}

403 
	$öô_£ngoku3
(
GAME_ROMS
 *
r
) {

404 
√ogeo_fix_b™k_ty≥
 = 1;

405 i‡(
√ed_de¸y±
Ë
	`kof99_√ogeo_gfx_de¸y±
(
r
, 0xfe);

407 
	}
}

409 
	$öô_kof98
(
GAME_ROMS
 *
r
) {

410 i‡(
√ed_de¸y±
Ë
	`kof98_de¸y±_68k
(
r
);

414 
	}
}

416 
	$öô_rŸd
(
GAME_ROMS
 *
r
) {

417 i‡(
√ed_de¸y±
) {

418 
	`√o_pcm2_¢k_1999
(
r
, 16);

419 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

420 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x3f);

422 
√ogeo_fix_b™k_ty≥
 = 1;

424 
	}
}

426 
	$öô_kof2002
(
GAME_ROMS
 *
r
) {

427 i‡(
√ed_de¸y±
) {

428 
	`kof2002_de¸y±_68k
(
r
);

429 
	`√o_pcm2_sw≠
(
r
, 0);

430 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

431 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0xec);

434 
	}
}

436 
	$öô_kof2002b
(
GAME_ROMS
 *
r
) {

438 i‡(
√ed_de¸y±
) {

439 
	`kof2002_de¸y±_68k
(
r
);

440 
	`√o_pcm2_sw≠
(
r
, 0);

441 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

446 
	}
}

448 
	$öô_kf2k2∂s
(
GAME_ROMS
 *
r
) {

449 i‡(
√ed_de¸y±
) {

450 
	`kof2002_de¸y±_68k
(
r
);

451 
	`√o_pcm2_sw≠
(
r
, 0);

452 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

453 
	`cmc50_√ogeo_gfx_de¸y±
(
r
, 0xec);

456 
	}
}

458 
	$öô_kf2k2mp
(
GAME_ROMS
 *
r
) {

460 i‡(
√ed_de¸y±
) {

462 
	`√o_pcm2_sw≠
(
r
, 0);

464 
	`cmc50_√ogeo_gfx_de¸y±
(
r
, 0xec);

467 
	}
}

469 
	$öô_kof2km2
(
GAME_ROMS
 *
r
) {

471 i‡(
√ed_de¸y±
) {

473 
	`√o_pcm2_sw≠
(
r
, 0);

475 
	`cmc50_√ogeo_gfx_de¸y±
(
r
, 0xec);

478 
	}
}

519 
	$öô_m©rim
(
GAME_ROMS
 *
r
) {

520 i‡(
√ed_de¸y±
) {

521 
	`m©rim_de¸y±_68k
(
r
);

522 
	`√o_pcm2_sw≠
(
r
, 1);

523 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

524 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x6a);

526 
√ogeo_fix_b™k_ty≥
 = 2;

528 
	}
}

530 
	$öô_≤yØ
(
GAME_ROMS
 *
r
) {

531 i‡(
√ed_de¸y±
) {

532 
	`√o_pcm2_¢k_1999
(
r
, 4);

533 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

534 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x2e);

536 
√ogeo_fix_b™k_ty≥
 = 1;

538 
	}
}

540 
	$öô_m¶ug5
(
GAME_ROMS
 *
r
) {

541 i‡(
√ed_de¸y±
) {

542 
	`m¶ug5_de¸y±_68k
(
r
);

543 
	`√o_pcm2_sw≠
(
r
, 2);

544 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

545 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x19);

547 
√ogeo_fix_b™k_ty≥
 = 1;

550 
	}
}

562 
	$öô_ms5pcb
(
GAME_ROMS
 *
r
) {

567 i‡(
√ed_de¸y±
) {

568 
	`m¶ug5_de¸y±_68k
(
r
);

569 
	`sv˝cb_gfx_de¸y±
(
r
);

570 
	`√ogeo_cmc50_m1_de¸y±
(
r
);

571 
	`kof2000_√ogeo_gfx_de¸y±
(
r
, 0x19);

572 
	`sv˝cb_s1d©a_de¸y±
(
r
);

573 
	`√o_pcm2_sw≠
(
r
, 2);

575 
√ogeo_fix_b™k_ty≥
 = 2;

578 
	}
}

580 
	$öô_ms5∂us
(
GAME_ROMS
 *
r
) {

582 i‡(
√ed_de¸y±
) {

583 
	`cmc50_√ogeo_gfx_de¸y±
(
r
, 0x19);

584 
	`√o_pcm2_sw≠
(
r
, 2);

587 
√ogeo_fix_b™k_ty≥
 = 1;

591 
	}
}

595 
	$TIMER_CALLBACK
(
sv˝cb_bios_timî_ˇŒback
) {

596 
h¨ddù3
 = 
	`öput_p‹t_ªad
(
machöe
, "HARDDIP") & 1;

597 
	`mem‹y_£t_b™k±r
(
machöe
, 
NEOGEO_BANK_BIOS
, 
	`mem‹y_ªgi⁄
(machine, "mainbios")

598 + 0x20000 + 
h¨ddù3
 * 0x20000);

599 
	}
}

601 
	$DRIVER_INIT
(
sv˝cb
) {

603 
	`timî_£t
(
machöe
, 
©tŸime_zîo
, 
NULL
, 0, 
sv˝cb_bios_timî_ˇŒback
);

604 
	`timî_pul£
(
machöe
, 
	`ATTOTIME_IN_MSEC
(1000), 
NULL
, 0, 
sv˝cb_bios_timî_ˇŒback
);

606 
	`svc_px_de¸y±
(
machöe
);

607 
	`sv˝cb_gfx_de¸y±
(
machöe
);

608 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

609 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x57);

610 
	`sv˝cb_s1d©a_de¸y±
(
machöe
);

611 
	`√o_pcm2_sw≠
(
machöe
, 3);

612 
√ogeo_fixed_œyî_b™k_ty≥
 = 2;

613 
	`DRIVER_INIT_CALL
(
√ogeo
);

614 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

615 
	}
}

617 
	$DRIVER_INIT
(
svc
) {

618 
	`svc_px_de¸y±
(
machöe
);

619 
	`√o_pcm2_sw≠
(
machöe
, 3);

620 
√ogeo_fixed_œyî_b™k_ty≥
 = 2;

621 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

622 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x57);

623 
	`DRIVER_INIT_CALL
(
√ogeo
);

624 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

625 
	}
}

627 
	$DRIVER_INIT
(
svcboŸ
) {

628 
	`svcboŸ_px_de¸y±
(
machöe
);

629 
	`svcboŸ_cx_de¸y±
(
machöe
);

630 
	`DRIVER_INIT_CALL
(
√ogeo
);

631 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

632 
	}
}

634 
	$DRIVER_INIT
(
sv˝lus
) {

635 
	`sv˝lus_px_de¸y±
(
machöe
);

636 
	`svcboŸ_cx_de¸y±
(
machöe
);

637 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

638 
	`sv˝lus_px_hack
(
machöe
);

639 
	`DRIVER_INIT_CALL
(
√ogeo
);

640 
	}
}

642 
	$DRIVER_INIT
(
sv˝luß
) {

643 
	`sv˝luß_px_de¸y±
(
machöe
);

644 
	`svcboŸ_cx_de¸y±
(
machöe
);

645 
	`sv˝lus_px_hack
(
machöe
);

646 
	`DRIVER_INIT_CALL
(
√ogeo
);

647 
	}
}

649 
	$DRIVER_INIT
(
svc•lus
) {

650 
	`svc•lus_px_de¸y±
(
machöe
);

651 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 2);

652 
	`svcboŸ_cx_de¸y±
(
machöe
);

653 
	`svc•lus_px_hack
(
machöe
);

654 
	`DRIVER_INIT_CALL
(
√ogeo
);

655 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

656 
	}
}

658 
	$DRIVER_INIT
(
ßmsho5
) {

659 
	`ßmsho5_de¸y±_68k
(
machöe
);

660 
	`√o_pcm2_sw≠
(
machöe
, 4);

661 
√ogeo_fixed_œyî_b™k_ty≥
 = 1;

662 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

663 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x0f);

664 
	`DRIVER_INIT_CALL
(
√ogeo
);

665 
	}
}

667 
	$DRIVER_INIT
(
ßmsho5b
) {

668 
	`ßmsho5b_px_de¸y±
(
machöe
);

669 
	`ßmsho5b_vx_de¸y±
(
machöe
);

670 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

671 
	`√ogeo_boŸÀg_cx_de¸y±
(
machöe
);

672 
	`DRIVER_INIT_CALL
(
√ogeo
);

673 
	}
}

675 
	$DRIVER_INIT
(
kf2k3pcb
) {

676 
	`kf2k3pcb_de¸y±_68k
(
machöe
);

677 
	`kf2k3pcb_gfx_de¸y±
(
machöe
);

678 
	`kof2003biosdecode
(
machöe
);

679 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

685 
i
;

686 
UINT8
* 
rom
 = 
	`mem‹y_ªgi⁄
(
machöe
, "audiocpu");

687 
i
 = 0; i < 0x90000; i++) {

688 
rom
[
i
] = 
	`BITSWAP8
(rom[i], 5, 6, 1, 4, 3, 0, 7, 2);

693 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

694 
	`kf2k3pcb_de¸y±_s1d©a
(
machöe
);

695 
	`√o_pcm2_sw≠
(
machöe
, 5);

696 
√ogeo_fixed_œyî_b™k_ty≥
 = 2;

697 
	`DRIVER_INIT_CALL
(
√ogeo
);

698 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

699 
	`mem‹y_ö°Æl_ªad16_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

700 
ADDRESS_SPACE_PROGRAM
), 0xc00000, 0xc7ffff, 0, 0,

701 (
ªad16_•a˚_func
Ë
	`SMH_BANK
(6));

702 
	}
}

704 
	$DRIVER_INIT
(
kof2003
) {

705 
	`kof2003_de¸y±_68k
(
machöe
);

706 
	`√o_pcm2_sw≠
(
machöe
, 5);

707 
√ogeo_fixed_œyî_b™k_ty≥
 = 2;

708 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

709 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

710 
	`DRIVER_INIT_CALL
(
√ogeo
);

711 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

712 
	}
}

714 
	$DRIVER_INIT
(
kof2003h
) {

715 
	`kof2003h_de¸y±_68k
(
machöe
);

716 
	`√o_pcm2_sw≠
(
machöe
, 5);

717 
√ogeo_fixed_œyî_b™k_ty≥
 = 2;

718 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

719 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

720 
	`DRIVER_INIT_CALL
(
√ogeo
);

721 
	`ö°Æl_pvc_¥Ÿe˘i⁄
(
machöe
);

722 
	}
}

724 
	$DRIVER_INIT
(
kf2k3bl
) {

725 
	`cmc50_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

726 
	`√o_pcm2_sw≠
(
machöe
, 5);

727 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

728 
	`DRIVER_INIT_CALL
(
√ogeo
);

729 
	`kf2k3bl_ö°Æl_¥Ÿe˘i⁄
(
machöe
);

730 
	}
}

732 
	$DRIVER_INIT
(
kf2k3∂
) {

733 
	`cmc50_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

734 
	`√o_pcm2_sw≠
(
machöe
, 5);

735 
	`kf2k3∂_px_de¸y±
(
machöe
);

736 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

737 
	`DRIVER_INIT_CALL
(
√ogeo
);

738 
	`kf2k3∂_ö°Æl_¥Ÿe˘i⁄
(
machöe
);

739 
	}
}

741 
	$DRIVER_INIT
(
kf2k3u∂
) {

742 
	`cmc50_√ogeo_gfx_de¸y±
(
machöe
, 0x9d);

743 
	`√o_pcm2_sw≠
(
machöe
, 5);

744 
	`kf2k3u∂_px_de¸y±
(
machöe
);

745 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 2);

746 
	`DRIVER_INIT_CALL
(
√ogeo
);

747 
	`kf2k3u∂_ö°Æl_¥Ÿe˘i⁄
(
machöe
);

748 
	}
}

750 
	$DRIVER_INIT
(
ßmsh5•
) {

751 
	`ßmsh5•_de¸y±_68k
(
machöe
);

752 
	`√o_pcm2_sw≠
(
machöe
, 6);

753 
√ogeo_fixed_œyî_b™k_ty≥
 = 1;

754 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

755 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0x0d);

756 
	`DRIVER_INIT_CALL
(
√ogeo
);

757 
	}
}

759 
	$DRIVER_INIT
(
jockeygp
) {

760 
UINT16
* 
exåa_øm
;

762 
√ogeo_fixed_œyî_b™k_ty≥
 = 1;

763 
	`√ogeo_cmc50_m1_de¸y±
(
machöe
);

764 
	`kof2000_√ogeo_gfx_de¸y±
(
machöe
, 0xac);

767 
exåa_øm
 = 
	`auto_Æloc_¨øy
(
machöe
, 
UINT16
, 0x2000 / 2);

768 
	`°©e_ßve_ªgi°î_globÆ_poöãr
(
machöe
, 
exåa_øm
, 0x2000 / 2);

770 
	`mem‹y_ö°Æl_ªadwrôe16_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

771 
ADDRESS_SPACE_PROGRAM
), 0x200000, 0x201fff, 0, 0,

772 (
ªad16_•a˚_func
Ë
	`SMH_BANK
(8), (
wrôe16_•a˚_func
) SMH_BANK(8));

773 
	`mem‹y_£t_b™k±r
(
machöe
, 
NEOGEO_BANK_EXTRA_RAM
, 
exåa_øm
);

780 
	`DRIVER_INIT_CALL
(
√ogeo
);

781 
	}
}

783 
	$DRIVER_INIT
(
vlöî
) {

784 
UINT16
* 
exåa_øm
;

787 
exåa_øm
 = 
	`auto_Æloc_¨øy
(
machöe
, 
UINT16
, 0x2000 / 2);

788 
	`°©e_ßve_ªgi°î_globÆ_poöãr
(
machöe
, 
exåa_øm
, 0x2000 / 2);

790 
	`mem‹y_ö°Æl_ªadwrôe16_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

791 
ADDRESS_SPACE_PROGRAM
), 0x200000, 0x201fff, 0, 0, (
ªad16_•a˚_func
)

792 
	`SMH_BANK
(8), (
wrôe16_•a˚_func
) SMH_BANK(8));

793 
	`mem‹y_£t_b™k±r
(
machöe
, 
NEOGEO_BANK_EXTRA_RAM
, 
exåa_øm
);

795 
	`mem‹y_ö°Æl_ªad_p‹t_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

796 
ADDRESS_SPACE_PROGRAM
), 0x280000, 0x280001, 0, 0, "IN5");

797 
	`mem‹y_ö°Æl_ªad_p‹t_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

798 
ADDRESS_SPACE_PROGRAM
), 0x2c0000, 0x2c0001, 0, 0, "IN6");

800 
	`DRIVER_INIT_CALL
(
√ogeo
);

801 
	}
}

803 
	$DRIVER_INIT
(
kog
) {

805 
	`mem‹y_ö°Æl_ªad_p‹t_h™dÀr
(
	`˝uèg_gë_addªss_•a˚
(
machöe
, "maincpu",

806 
ADDRESS_SPACE_PROGRAM
), 0x0ffffe, 0x0fffff, 0, 0, "JUMPER");

808 
	`kog_px_de¸y±
(
machöe
);

809 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

810 
	`√ogeo_boŸÀg_cx_de¸y±
(
machöe
);

811 
	`DRIVER_INIT_CALL
(
√ogeo
);

812 
	}
}

814 
	$DRIVER_INIT
(
œns2004
) {

815 
	`œns2004_de¸y±_68k
(
machöe
);

816 
	`œns2004_vx_de¸y±
(
machöe
);

817 
	`√ogeo_boŸÀg_sx_de¸y±
(
machöe
, 1);

818 
	`√ogeo_boŸÀg_cx_de¸y±
(
machöe
);

819 
	`DRIVER_INIT_CALL
(
√ogeo
);

820 
	}
}

824 
	sroms_öô_func
 {

825 *
	m«me
;

826 (*
	möô
)(
GAME_ROMS
 * 
	mr
);

827 } 
	göô_func_èbÀ
[] = {

829 { "kof99", 
öô_kof99
},

830 { "kof99n", 
öô_kof99n
},

831 { "g¨ou", 
öô_g¨ou
},

832 { "g¨ouo", 
öô_g¨ouo
},

834 { "g¨oubl", 
öô_g¨oubl
},

835 { "m¶ug3", 
öô_m¶ug3
},

836 { "m¶ug3h", 
öô_m¶ug3h
},

837 { "m¶ug3n", 
öô_m¶ug3h
},

838 { "m¶ug3b6", 
öô_m¶ug3b6
},

839 { "kof2000", 
öô_kof2000
},

840 { "kof2000n", 
öô_kof2000n
},

841 { "kof2001", 
öô_kof2001
},

842 { "m¶ug4", 
öô_m¶ug4
},

843 { "ms4∂us", 
öô_ms4∂us
},

844 { "g™ryu", 
öô_g™ryu
},

845 { "s1945p", 
öô_s1945p
},

846 { "¥ei¶e2", 
öô_¥ei¶e2
},

847 { "b™gbód", 
öô_b™gbód
},

848 { "nôd", 
öô_nôd
},

849 { "zu∑∑", 
öô_zu∑∑
},

850 { "£ngoku3", 
öô_£ngoku3
},

851 { "kof98", 
öô_kof98
},

852 { "rŸd", 
öô_rŸd
},

853 { "kof2002", 
öô_kof2002
},

854 { "kof2002b", 
öô_kof2002b
},

855 { "kf2k2∂s", 
öô_kf2k2∂s
},

856 { "kf2k2mp", 
öô_kf2k2mp
},

857 { "kof2km2", 
öô_kof2km2
},

858 { "m©rim", 
öô_m©rim
},

859 { "≤yØ", 
öô_≤yØ
},

860 { "m¶ug5", 
öô_m¶ug5
},

861 { "ms5pcb", 
öô_ms5pcb
},

862 { "ms5∂us", 
öô_ms5∂us
},

863 { 
NULL
, NULL}

866 
	$Æloˇã_ªgi⁄
(
ROM_REGION
 *
r
, 
Uöt32
 
size
, 
ªgi⁄
) {

867 
	`DEBUG_LOG
("AŒoˇtög 0x%08x byã f‹ Regi⁄ %d\n", 
size
, 
ªgi⁄
);

868 i‡(
size
 != 0) {

869 #ifde‡
GP2X


870 
ªgi⁄
) {

871 
REGION_AUDIO_CPU_CARTRIDGE
:

872 
r
->
p
 = 
	`gp2x_øm_mÆloc
(
size
, 1);

873 #ifde‡
ENABLE_940T


874 
sh¨ed_d©a
->
sm1
 = (
Uöt8
*Ë((
r
->
p
 - 
gp2x_øm2
) + 0x1000000);

875 
	`¥ötf
("Z80 code: %08x\n", (
Uöt32
Ë
sh¨ed_d©a
->
sm1
);

878 
REGION_AUDIO_DATA_1
:

879 
r
->
p
 = 
	`gp2x_øm_mÆloc
(
size
, 0);

880 #ifde‡
ENABLE_940T


881 
sh¨ed_d©a
->
pcmbuÁ
 = (
Uöt8
*Ë(
r
->
p
 - 
gp2x_øm
);

882 
	`¥ötf
("SOUND1 code: %08x\n", (
Uöt32
Ë
sh¨ed_d©a
->
pcmbuÁ
);

883 
sh¨ed_d©a
->
pcmbuÁ_size
 = 
size
;

886 
REGION_AUDIO_DATA_2
:

887 
r
->
p
 = 
	`gp2x_øm_mÆloc
(
size
, 0);

888 #ifde‡
ENABLE_940T


889 
sh¨ed_d©a
->
pcmbufb
 = (
Uöt8
*Ë(
r
->
p
 - 
gp2x_øm
);

890 
	`¥ötf
("SOUND2 code: %08x\n", (
Uöt32
Ë
sh¨ed_d©a
->
pcmbuÁ
);

891 
sh¨ed_d©a
->
pcmbufb_size
 = 
size
;

895 
r
->
p
 = 
	`mÆloc
(
size
);

900 
r
->
p
 = 
	`mÆloc
(
size
);

902 i‡(
r
->
p
 == 0) {

903 
r
->
size
 = 0;

904 
	`¥ötf
("Errorállocating\n");

906 
	`¥ötf
("NotÉnough memory :(Éxiting\n");

907 
	`exô
(1);

910 
	`mem£t
(
r
->
p
, 0, 
size
);

912 
r
->
p
 = 
NULL
;

913 
r
->
size
 = size;

915 
	}
}

917 
	$‰ì_ªgi⁄
(
ROM_REGION
 *
r
) {

918 
	`DEBUG_LOG
("FªêRegi⁄ %∞%∞%d\n", 
r
,Ñ->
p
,Ñ->
size
);

919 i‡(
r
->
p
)

920 
	`‰ì
(
r
->
p
);

921 
r
->
size
 = 0;

922 
r
->
p
 = 
NULL
;

923 
	}
}

925 
	$zù_£ek_cuºít_fûe
(
ZFILE
 *
gz
, 
Uöt32
 
off£t
) {

926 
Uöt8
 *
buf
;

927 
Uöt32
 
s
 = 4096, 
c
;

928 
buf
 = 
	`mÆloc
(
s
);

929 i‡(!
buf
)

931 
off£t
) {

932 
c
 = 
off£t
;

933 i‡(
c
 > 
s
)

934 
c
 = 
s
;

936 
c
 = 
	`gn_unzù_‰ód
(
gz
, 
buf
, c);

937 i‡(
c
 == 0) {

940 
off£t
 -
c
;

942 
	`‰ì
(
buf
);

945 
	}
}

947 
	gªad_cou¡î
;

949 
	$ªad_d©a_i
(
ZFILE
 *
gz
, 
ROM_REGION
 *
r
, 
Uöt32
 
de°
, Uöt32 
size
) {

951 
Uöt8
 *
p
 = 
r
->∞+ 
de°
;

952 
Uöt32
 
s
 = 
LOAD_BUF_SIZE
, 
c
, 
i
;

953 i‡(
r
->
p
 =
NULL
 ||Ñ->
size
 < (
de°
 & ~0x1) + (size * 2)) {

954 
	`¥ötf
("Regi⁄ÇŸáŒoˇãd o∏nŸ bigÉnough %08x %08x\n", 
r
->
size
,

955 
de°
 + (
size
 * 2));

959 i‡(!
ûﬂdbuf
)

962 
size
) {

963 
c
 = 
size
;

964 i‡(
c
 > 
s
)

965 
c
 = 
s
;

967 
c
 = 
	`gn_unzù_‰ód
(
gz
, 
ûﬂdbuf
, c);

968 i‡(
c
 == 0) {

972 
i
 = 0; i < 
c
; i++) {

974 *
p
 = 
ûﬂdbuf
[
i
];

975 
p
 += 2;

977 
size
 -
c
;

978 
ªad_cou¡î
 +
c
;

979 
	`gn_upd©e_pb¨
(
ªad_cou¡î
);

983 
	}
}

985 
	$ªad_d©a_p
(
ZFILE
 *
gz
, 
ROM_REGION
 *
r
, 
Uöt32
 
de°
, Uöt32 
size
) {

986 
Uöt32
 
s
 = 
LOAD_BUF_SIZE
, 
c
, 
i
 = 0;

987 i‡(
r
->
p
 =
NULL
 ||Ñ->
size
 < 
de°
 + size) {

988 
	`¥ötf
("RegionÇotállocated orÇot bigÉnough\n");

991 
size
) {

992 
c
 = 
size
;

993 i‡(
c
 > 
s
)

994 
c
 = 
s
;

995 
c
 = 
	`gn_unzù_‰ód
(
gz
, 
r
->
p
 + 
de°
 + 
i
, c);

996 i‡(
c
 == 0) {

1000 
i
 +
c
;

1001 
size
 -
c
;

1002 
ªad_cou¡î
 +
c
;

1003 
	`gn_upd©e_pb¨
(
ªad_cou¡î
);

1007 
	}
}

1009 
	$lﬂd_ªgi⁄
(
PKZIP
 *
pz
, 
GAME_ROMS
 *
r
, 
ªgi⁄
, 
Uöt32
 
§c
,

1010 
Uöt32
 
de°
, Uöt32 
size
, Uöt32 
¸c
, *
fûíame
) {

1011 
rc
;

1012 
bad¸c
 = 0;

1013 
ZFILE
 *
gz
;

1016 
gz
 = 
	`gn_unzù_f›í
(
pz
, 
fûíame
, 
¸c
);

1017 i‡(
gz
 =
NULL
) {

1018 
	`DEBUG_LOG
("KO\n");

1019 
	`DEBUG_LOG
("Lﬂd fûê%-17†öÑegi⁄ %d: KO\n", 
fûíame
, 
ªgi⁄
);

1023 i‡(
§c
 != 0) {

1025 i‡(
ªgi⁄
 =
REGION_SPRITES
)

1026 
rc
 = 
	`zù_£ek_cuºít_fûe
(
gz
, 
§c
 / 2);

1028 
rc
 = 
	`zù_£ek_cuºít_fûe
(
gz
, 
§c
);

1029 
	`DEBUG_LOG
("£toff£t: %d %08x %08x %08x\n", 
rc
, 
§c
, 
de°
, 
size
);

1032 
	`DEBUG_LOG
("TryögÅÿlﬂd fûê%-17†öÑegi⁄ %d\n", 
fûíame
, 
ªgi⁄
);

1034 
ªgi⁄
) {

1035 
REGION_SPRITES
:

1036 
	`ªad_d©a_i
(
gz
, &
r
->
tûes
, 
de°
, 
size
);

1038 
REGION_AUDIO_CPU_CARTRIDGE
:

1039 
	`ªad_d©a_p
(
gz
, &
r
->
˝u_z80
, 
de°
, 
size
);

1041 
REGION_AUDIO_CPU_ENCRYPTED
:

1042 
	`ªad_d©a_p
(
gz
, &
r
->
˝u_z80c
, 
de°
, 
size
);

1044 
REGION_MAIN_CPU_CARTRIDGE
:

1045 
	`ªad_d©a_p
(
gz
, &
r
->
˝u_m68k
, 
de°
, 
size
);

1047 
REGION_FIXED_LAYER_CARTRIDGE
:

1048 
	`ªad_d©a_p
(
gz
, &
r
->
game_sfix
, 
de°
, 
size
);

1050 
REGION_AUDIO_DATA_1
:

1051 
	`ªad_d©a_p
(
gz
, &
r
->
adpcma
, 
de°
, 
size
);

1053 
REGION_AUDIO_DATA_2
:

1054 
	`ªad_d©a_p
(
gz
, &
r
->
adpcmb
, 
de°
, 
size
);

1056 
REGION_MAIN_CPU_BIOS
:

1057 
	`ªad_d©a_p
(
gz
, &
r
->
bios_m68k
, 
de°
, 
size
);

1059 
REGION_AUDIO_CPU_BIOS
:

1060 
	`ªad_d©a_p
(
gz
, &
r
->
bios_m68k
, 
de°
, 
size
);

1062 
REGION_FIXED_LAYER_BIOS
:

1063 
	`ªad_d©a_p
(
gz
, &
r
->
bios_sfix
, 
de°
, 
size
);

1067 
	`DEBUG_LOG
("Unh™dÀdÑegi⁄ %d\n", 
ªgi⁄
);

1071 
	`DEBUG_LOG
("Lﬂd fûê%-17†öÑegi⁄ %d: OK %s\n", 
fûíame
, 
ªgi⁄
,

1072 (
bad¸c
 ? "(Bad CRC)" : ""));

1074 
	`gn_unzù_f˛o£
(
gz
);

1076 
	}
}

1078 
PKZIP
 *
	$›í_rom_zù
(*
rom_∑th
, *
«me
) {

1079 *
buf
;

1080 
size
 = 
	`°æí
(
rom_∑th
Ë+ såÀn(
«me
) + 6;

1081 
PKZIP
 *
gz
;

1082 
buf
 = 
	`mÆloc
(
size
);

1083 
	`¢¥ötf
(
buf
, 
size
, "%s/%s.zù", 
rom_∑th
, 
«me
);

1084 
gz
 = 
	`gn_›í_zù
(
buf
);

1085 
	`‰ì
(
buf
);

1086  
gz
;

1087 
	}
}

1089 
	$c⁄vît_roms_tûe
(
Uöt8
 *
g
, 
tûío
) {

1090 
sw≠
[128];

1091 *
gfxd©a
;

1092 
x
, 
y
;

1093 
≥n
, 
ußge
 = 0;

1094 
gfxd©a
 = (
Uöt32
*Ë& 
g
[
tûío
 << 7];

1096 
	`mem˝y
(
sw≠
, 
gfxd©a
, 128);

1099 
y
 = 0; y < 16; y++) {

1100 
dw
;

1102 
dw
 = 0;

1103 
x
 = 0; x < 8; x++) {

1104 
≥n
 = ((
sw≠
[64 + (
y
 << 2Ë+ 3] >> 
x
) & 1) << 3;

1105 
≥n
 |((
sw≠
[64 + (
y
 << 2Ë+ 1] >> 
x
) & 1) << 2;

1106 
≥n
 |((
sw≠
[64 + (
y
 << 2Ë+ 2] >> 
x
) & 1) << 1;

1107 
≥n
 |(
sw≠
[64 + (
y
 << 2)] >> 
x
) & 1;

1109 
dw
 |
≥n
 << ((7 - 
x
) << 2);

1111 
ußge
 |(1 << 
≥n
);

1113 *(
gfxd©a
++Ë
dw
;

1115 
dw
 = 0;

1116 
x
 = 0; x < 8; x++) {

1117 
≥n
 = ((
sw≠
[(
y
 << 2Ë+ 3] >> 
x
) & 1) << 3;

1118 
≥n
 |((
sw≠
[(
y
 << 2Ë+ 1] >> 
x
) & 1) << 2;

1119 
≥n
 |((
sw≠
[(
y
 << 2Ë+ 2] >> 
x
) & 1) << 1;

1120 
≥n
 |(
sw≠
[(
y
 << 2)] >> 
x
) & 1;

1122 
dw
 |
≥n
 << ((7 - 
x
) << 2);

1124 
ußge
 |(1 << 
≥n
);

1126 *(
gfxd©a
++Ë
dw
;

1131 i‡((
ußge
 & ~1) == 0)

1132  (
TILE_INVISIBLE
 << ((
tûío
 & 0xF) * 2));

1136 
	}
}

1138 
	$c⁄vît_Æl_tûe
(
GAME_ROMS
 *
r
) {

1139 
Uöt32
 
i
;

1140 
	`Æloˇã_ªgi⁄
(&
r
->
•r_ußge
, (r->
tûes
.
size
 >> 11Ë*  (
Uöt32
), 
REGION_SPR_USAGE
);

1141 
	`mem£t
(
r
->
•r_ußge
.
p
, 0,Ñ->•r_ußge.
size
);

1142 
i
 = 0; i < 
r
->
tûes
.
size
 >> 7; i++) {

1143 ((
Uöt32
*Ë
r
->
•r_ußge
.
p
)[
i
 >> 4] |
	`c⁄vît_roms_tûe
‘->
tûes
.p, i);

1145 
	}
}

1147 
	$c⁄vît_Æl_ch¨
(
Uöt8
 *
På
, 
TaûÀ
,

1148 
Uöt8
 *
ußge_±r
) {

1149 
i
, 
j
;

1150 
ußge
;

1152 
Uöt8
 *
Src
;

1153 
Uöt8
 *
ßv_§c
;

1155 
Src
 = (
Uöt8
*Ë
	`mÆloc
(
TaûÀ
);

1156 i‡(!
Src
) {

1157 
	`¥ötf
("NotÉnought memory!!\n");

1160 
ßv_§c
 = 
Src
;

1161 
	`mem˝y
(
Src
, 
På
, 
TaûÀ
);

1162 #ifde‡
WORDS_BIGENDIAN


1163 
	#CONVERT_TILE
 *
På
++ = *(
Src
+8);\

1164 
ußge
 |*(
Src
+8);\

1165 *
På
++ = *(
Src
);\

1166 
ußge
 |*(
Src
);\

1167 *
På
++ = *(
Src
+24);\

1168 
ußge
 |*(
Src
+24);\

1169 *
På
++ = *(
Src
+16);\

1170 
ußge
 |*(
Src
+16);\

1171 
Src
++;

	)

1173 
	#CONVERT_TILE
 *
På
++ = *(
Src
+16);\

1174 
ußge
 |*(
Src
+16);\

1175 *
På
++ = *(
Src
+24);\

1176 
ußge
 |*(
Src
+24);\

1177 *
På
++ = *(
Src
);\

1178 
ußge
 |*(
Src
);\

1179 *
På
++ = *(
Src
+8);\

1180 
ußge
 |*(
Src
+8);\

1181 
Src
++;

	)

1183 
i
 = 
TaûÀ
; i > 0; i -= 32) {

1184 
ußge
 = 0;

1185 
j
 = 0; j < 8; j++) {

1186 
CONVERT_TILE


1188 
Src
 += 24;

1189 *
ußge_±r
++ = 
ußge
;

1191 
	`‰ì
(
ßv_§c
);

1192 #unde‡
CONVERT_TILE


1193 
	}
}

1195 
	$öô_roms
(
GAME_ROMS
 *
r
) {

1196 
i
 = 0;

1198 
√ogeo_fix_b™k_ty≥
 = 0;

1199 
mem‹y
.
bksw_h™dÀr
 = 0;

1200 
mem‹y
.
bksw_uns¸ambÀ
 = 
NULL
;

1201 
mem‹y
.
bksw_off£t
 = 
NULL
;

1202 
mem‹y
.
sma_∫g_addr
 = 0;

1204 
öô_func_èbÀ
[
i
].
«me
) {

1206 i‡(
	`°rcmp
(
öô_func_èbÀ
[
i
].
«me
, 
r
->
öfo
.name) == 0

1207 && 
öô_func_èbÀ
[
i
].
öô
 !
NULL
) {

1208 
	`DEBUG_LOG
("Special init func\n");

1209  
öô_func_èbÀ
[
i
].
	`öô
(
r
);

1211 
i
++;

1213 
	`DEBUG_LOG
("DefaultÑoms init\n");

1215 
	}
}

1217 
	$dr_lﬂd_bios
(
GAME_ROMS
 *
r
) {

1218 
FILE
 *
f
;

1219 
i
;

1220 
PKZIP
 *
pz
;

1221 
ZFILE
 *
z
;

1222 
size_t
 
tŸªad
 = 0;

1223 
size
;

1224 *
Ω©h
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rompath"));

1225 *
Â©h
;

1226 c⁄° *
romfûe
;

1227 
Â©h
 = 
	`mÆloc
(
	`°æí
(
Ω©h
) + strlen("neogeo.zip") + 2);

1228 
	`•rötf
(
Â©h
, "%s/√ogeo.zù", 
Ω©h
);

1230 
pz
 = 
	`gn_›í_zù
(
Â©h
);

1231 i‡(
pz
 =
NULL
) {

1232 
	`gn_£t_îr‹_msg
–"C™'à›í BIOS\n%s\n", 
Â©h
);

1233 
	`‰ì
(
Â©h
);

1234  
GN_FALSE
;

1237 
mem‹y
.
ng_lo
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, "000-lo.lo", 0x0, &
size
);

1238 i‡(
mem‹y
.
ng_lo
 =
NULL
) {

1239 
	`gn_£t_îr‹_msg
("Couldn't find 000-lo.lo\nPlease check your bios\n");

1240  
GN_FALSE
;

1243 i‡(!(
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_SFIX_BIOS
)) {

1244 
	`¥ötf
("Load Sfix\n");

1245 
r
->
bios_sfix
.
p
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, "sfix.sfx", 0x0,

1246 &
r
->
bios_sfix
.
size
);

1247 i‡(
r
->
bios_sfix
.
p
 =
NULL
) {

1248 
	`¥ötf
("Couldn't find sfix.sfx,Åry sfix.sfix\n");

1249 
r
->
bios_sfix
.
p
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, "sfix.sfix", 0x0,

1250 &
r
->
bios_sfix
.
size
);

1251 i‡(
r
->
bios_sfix
.
p
 =
NULL
) {

1252 
	`gn_£t_îr‹_msg
("Couldn't find sfix.sfxÇor sfix.sfix\nPlease check your bios\n");

1253  
GN_FALSE
;

1258 
	`c⁄vît_Æl_ch¨
(
mem‹y
.
rom
.
bios_sfix
.
p
, 0x20000, mem‹y.
fix_bﬂrd_ußge
);

1260 i‡(!(
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_CPU_BIOS
)) {

1261 i‡(
c⁄f
.
sy°em
 =
SYS_UNIBIOS
) {

1262 *
unù©h
;

1265 
r
->
bios_m68k
.
p
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, "uni-bios.rom", 0x0, &r->bios_m68k.
size
);

1266 i‡(
r
->
bios_m68k
.
p
 =
NULL
) {

1267 
unù©h
 = 
	`mÆloc
(
	`°æí
(
Ω©h
) + strlen("uni-bios.rom") + 2);

1269 
	`•rötf
(
unù©h
, "%s/uni-bios.rom", 
Ω©h
);

1270 
f
 = 
	`f›í
(
unù©h
, "rb");

1271 i‡(!
f
) {

1272 
	`gn_£t_îr‹_msg
–"C™'à›í Univîß»BIOS\n%s\n", 
unù©h
);

1273 
	`‰ì
(
Â©h
);

1274 
	`‰ì
(
unù©h
);

1275  
GN_FALSE
;

1277 
r
->
bios_m68k
.
p
 = 
	`mÆloc
(0x20000);

1278 
tŸªad
 = 
	`‰ód
(
r
->
bios_m68k
.
p
, 0x20000, 1, 
f
);

1279 
r
->
bios_m68k
.
size
 = 0x20000;

1280 
	`f˛o£
(
f
);

1281 
	`‰ì
(
unù©h
);

1284 i‡(
c⁄f
.
sy°em
 =
SYS_HOME
) {

1285 
romfûe
 = "aes-bios.bin";

1287 
c⁄f
.
cou¡ry
) {

1288 
CTY_JAPAN
:

1289 
romfûe
 = "vs-bios.rom";

1291 
CTY_USA
:

1292 
romfûe
 = "usa_2slt.bin";

1294 
CTY_ASIA
:

1295 
romfûe
 = "asia-s3.rom";

1298 
romfûe
 = "sp-s2.sp1";

1302 
	`DEBUG_LOG
("Lﬂdög %s\n", 
romfûe
);

1303 
r
->
bios_m68k
.
p
 = 
	`gn_unzù_fûe_mÆloc
(
pz
, 
romfûe
, 0x0,

1304 &
r
->
bios_m68k
.
size
);

1305 i‡(
r
->
bios_m68k
.
p
 =
NULL
) {

1306 
	`gn_£t_îr‹_msg
("Couldn'àlﬂd bios\n%s\n", 
romfûe
);

1307 
îr‹
;

1312 
	`gn_˛o£_zù
(
pz
);

1313 
	`‰ì
(
Â©h
);

1314  
GN_TRUE
;

1316 
îr‹
:

1317 
	`gn_˛o£_zù
(
pz
);

1318 
	`‰ì
(
Â©h
);

1319  
GN_FALSE
;

1320 
	}
}

1322 
ROM_DEF
 *
	$dr_check_zù
(c⁄° *
fûíame
) {

1324 *
z
;

1325 
ROM_DEF
 *
drv
;

1326 #ifde‡
HAVE_BASENAME


1327 *
game
 = 
	`°rdup
(
	`ba£«me
(
fûíame
));

1329 *
game
 = 
	`°rdup
(
	`°ºchr
(
fûíame
, '/'));

1332 i‡(
game
 =
NULL
)

1333  
NULL
;

1334 
z
 = 
	`°r°r
(
game
, ".zip");

1336 i‡(
z
 =
NULL
)

1338 
	`‰ì
(
game
);

1339  
NULL
;

1341 
z
[0] = 0;

1342 
drv
 = 
	`ªs_lﬂd_drv
(
game
);

1343 
	`‰ì
(
game
);

1344  
drv
;

1345 
	}
}

1347 
	$dr_lﬂd_roms
(
GAME_ROMS
 *
r
, *
rom_∑th
, *
«me
) {

1349 
PKZIP
 *
gz
, *
gzp
 = 
NULL
;

1350 
ROM_DEF
 *
drv
;

1351 
i
;

1352 
romsize
;

1354 
	`mem£t
(
r
, 0,  (
GAME_ROMS
));

1356 
drv
 = 
	`ªs_lﬂd_drv
(
«me
);

1357 i‡(!
drv
) {

1358 
	`gn_£t_îr‹_msg
("C™'àfödÑom drivî f‹ %s\n", 
«me
);

1360  
GN_FALSE
;

1363 
gz
 = 
	`›í_rom_zù
(
rom_∑th
, 
«me
);

1364 i‡(
gz
 =
NULL
) {

1365 
	`gn_£t_îr‹_msg
("Rom %s/%s.zùÇŸ found\n", 
rom_∑th
, 
«me
);

1366  
GN_FALSE
;

1372 
gzp
 = 
	`›í_rom_zù
(
rom_∑th
, 
drv
->
∑ª¡
);

1373 i‡(
gzp
 =
NULL
) {

1374 
	`gn_£t_îr‹_msg
("P¨íà%s/%s.zùÇŸ found\n", 
rom_∑th
, 
«me
);

1375  
GN_FALSE
;

1381 
r
->
öfo
.
«me
 = 
	`°rdup
(
drv
->name);

1382 
r
->
öfo
.
l⁄g«me
 = 
	`°rdup
(
drv
->longname);

1383 
r
->
öfo
.
yór
 = 
drv
->year;

1384 
r
->
öfo
.
Êags
 = 0;

1385 
	`Æloˇã_ªgi⁄
(&
r
->
˝u_m68k
, 
drv
->
romsize
[
REGION_MAIN_CPU_CARTRIDGE
],

1386 
REGION_MAIN_CPU_CARTRIDGE
);

1387 i‡(
drv
->
romsize
[
REGION_AUDIO_CPU_CARTRIDGE
] == 0

1388 && 
drv
->
romsize
[
REGION_AUDIO_CPU_ENCRYPTED
] != 0) {

1391 
	`Æloˇã_ªgi⁄
(&
r
->
˝u_z80c
, 0x80000, 
REGION_AUDIO_CPU_ENCRYPTED
);

1392 
	`Æloˇã_ªgi⁄
(&
r
->
˝u_z80
, 0x90000, 
REGION_AUDIO_CPU_CARTRIDGE
);

1394 
	`Æloˇã_ªgi⁄
(&
r
->
˝u_z80
, 
drv
->
romsize
[
REGION_AUDIO_CPU_CARTRIDGE
],

1395 
REGION_AUDIO_CPU_CARTRIDGE
);

1397 
	`Æloˇã_ªgi⁄
(&
r
->
tûes
, 
drv
->
romsize
[
REGION_SPRITES
], REGION_SPRITES);

1398 
	`Æloˇã_ªgi⁄
(&
r
->
game_sfix
, 
drv
->
romsize
[
REGION_FIXED_LAYER_CARTRIDGE
],

1399 
REGION_FIXED_LAYER_CARTRIDGE
);

1400 
	`Æloˇã_ªgi⁄
(&
r
->
gfix_ußge
,Ñ->
game_sfix
.
size
 >> 5,

1401 
REGION_GAME_FIX_USAGE
);

1403 
	`Æloˇã_ªgi⁄
(&
r
->
adpcma
, 
drv
->
romsize
[
REGION_AUDIO_DATA_1
],

1404 
REGION_AUDIO_DATA_1
);

1405 
	`Æloˇã_ªgi⁄
(&
r
->
adpcmb
, 
drv
->
romsize
[
REGION_AUDIO_DATA_2
],

1406 
REGION_AUDIO_DATA_2
);

1409 
	`DEBUG_LOG
("BIOS SIZE %08x %08x %08x\n", 
drv
->
romsize
[
REGION_MAIN_CPU_BIOS
],

1410 
drv
->
romsize
[
REGION_AUDIO_CPU_BIOS
],

1411 
drv
->
romsize
[
REGION_FIXED_LAYER_BIOS
]);

1412 i‡(
drv
->
romsize
[
REGION_MAIN_CPU_BIOS
] != 0) {

1413 
r
->
öfo
.
Êags
 |
HAS_CUSTOM_CPU_BIOS
;

1414 
	`Æloˇã_ªgi⁄
(&
r
->
bios_m68k
, 
drv
->
romsize
[
REGION_MAIN_CPU_BIOS
],

1415 
REGION_MAIN_CPU_BIOS
);

1417 i‡(
drv
->
romsize
[
REGION_AUDIO_CPU_BIOS
] != 0) {

1418 
r
->
öfo
.
Êags
 |
HAS_CUSTOM_AUDIO_BIOS
;

1419 
	`Æloˇã_ªgi⁄
(&
r
->
bios_audio
, 
drv
->
romsize
[
REGION_AUDIO_CPU_BIOS
],

1420 
REGION_AUDIO_CPU_BIOS
);

1422 i‡(
drv
->
romsize
[
REGION_FIXED_LAYER_BIOS
] != 0) {

1423 
r
->
öfo
.
Êags
 |
HAS_CUSTOM_SFIX_BIOS
;

1424 
	`Æloˇã_ªgi⁄
(&
r
->
bios_sfix
, 
drv
->
romsize
[
REGION_FIXED_LAYER_BIOS
],

1425 
REGION_FIXED_LAYER_BIOS
);

1428 
ûﬂdbuf
 = 
	`mÆloc
(
LOAD_BUF_SIZE
);

1431 
ªad_cou¡î
 = 0;

1432 
romsize
 = 0;

1433 
i
 = 0; i < 
drv
->
nb_romfûe
; i++)

1434 
romsize
 +
drv
->
rom
[
i
].
size
;

1435 
	`gn_öô_pb¨
("Lﬂdög...", 
romsize
);

1436 
i
 = 0; i < 
drv
->
nb_romfûe
; i++) {

1438 i‡(
	`lﬂd_ªgi⁄
(
gz
, 
r
, 
drv
->
rom
[
i
].
ªgi⁄
, drv->rom[i].
§c
,

1439 
drv
->
rom
[
i
].
de°
, drv->rom[i].
size
, drv->rom[i].
¸c
,

1440 
drv
->
rom
[
i
].
fûíame
) != 0) {

1442 i‡(
gzp
) {

1443 
ªgi⁄
 = 
drv
->
rom
[
i
].region;

1444 
pi
;

1445 
pi
 = 
	`lﬂd_ªgi⁄
(
gzp
, 
r
, 
drv
->
rom
[
i
].
ªgi⁄
, drv->rom[i].
§c
,

1446 
drv
->
rom
[
i
].
de°
, drv->rom[i].
size
, drv->rom[i].
¸c
,

1447 
drv
->
rom
[
i
].
fûíame
);

1448 
	`DEBUG_LOG
("FromÖ¨íà%d\n", 
pi
);

1449 i‡(
pi
 && (
ªgi⁄
 != 5 &&Ñegion != 0 &&Ñegion != 7)) {

1450 
	`gn_£t_îr‹_msg
("ERROR: File %sÇot found\n",

1451 
drv
->
rom
[
i
].
fûíame
);

1452 
îr‹1
;

1455 
ªgi⁄
 = 
drv
->
rom
[
i
].region;

1456 i‡(
ªgi⁄
 != 5 &&Ñegion != 0 &&Ñegion != 7) {

1457 
	`gn_£t_îr‹_msg
("ERROR: File %sÇot found\n",

1458 
drv
->
rom
[
i
].
fûíame
);

1459 
îr‹1
;

1466 
	`gn_ãrmö©e_pb¨
();

1468 
	`gn_˛o£_zù
(
gz
);

1469 i‡(
gzp
Ë
	`gn_˛o£_zù
(gzp);

1470 
	`‰ì
(
drv
);

1472 i‡(
r
->
adpcmb
.
size
 == 0) {

1473 
r
->
adpcmb
.
p
 =Ñ->
adpcma
.p;

1474 
r
->
adpcmb
.
size
 =Ñ->
adpcma
.size;

1475 #ifde‡
ENABLE_940T


1476 
sh¨ed_d©a
->
pcmbufb
 = (
Uöt8
*Ë(
r
->
adpcmb
.
p
 - 
gp2x_øm
);

1477 
	`¥ötf
("SOUND2 code: %08x\n", (
Uöt32
Ë
sh¨ed_d©a
->
pcmbufb
);

1478 
sh¨ed_d©a
->
pcmbufb_size
 = 
r
->
adpcmb
.
size
;

1482 
mem‹y
.
fix_game_ußge
 = 
r
->
gfix_ußge
.
p
;

1487 
mem‹y
.
nb_of_tûes
 = 
r
->
tûes
.
size
 >> 7;

1489 
	`‰ì
(
ûﬂdbuf
);

1492 
	`öô_roms
(
r
);

1493 
	`c⁄vît_Æl_tûe
(
r
);

1494  
	`dr_lﬂd_bios
(
r
);

1496 
îr‹1
:

1497 
	`gn_ãrmö©e_pb¨
();

1500 
	`gn_˛o£_zù
(
gz
);

1501 i‡(
gzp
)

1502 
	`gn_˛o£_zù
(
gzp
);

1504 
	`‰ì
(
drv
);

1505  
GN_FALSE
;

1506 
	}
}

1508 
	$dr_lﬂd_game
(*
«me
) {

1510 *
Ω©h
 = 
	`CF_STR
(
	`cf_gë_ôem_by_«me
("rompath"));

1511 
rc
;

1512 
	`¥ötf
("Lﬂdög %s/%s.zù\n", 
Ω©h
, 
«me
);

1513 
mem‹y
.
bksw_h™dÀr
 = 0;

1514 
mem‹y
.
bksw_uns¸ambÀ
 = 
NULL
;

1515 
mem‹y
.
bksw_off£t
 = 
NULL
;

1517 
rc
 = 
	`dr_lﬂd_roms
(&
mem‹y
.
rom
, 
Ω©h
, 
«me
);

1518 i‡(
rc
 =
GN_FALSE
) {

1519  
GN_FALSE
;

1521 
c⁄f
.
game
 = 
mem‹y
.
rom
.
öfo
.
«me
;

1526 
	`mem˝y
(
mem‹y
.
game_ve˘‹
, mem‹y.
rom
.
˝u_m68k
.
p
, 0x80);

1527 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.
bios_m68k
.p, 0x80);

1529 
	`c⁄vît_Æl_ch¨
(
mem‹y
.
rom
.
game_sfix
.
p
, mem‹y.rom.game_sfix.
size
,

1530 
mem‹y
.
fix_game_ußge
);

1533 
	`öô_video
();

1535  
GN_TRUE
;

1537 
	}
}

1539 #i‡
deföed
(
HAVE_LIBZ
)

1541 
	$dump_ªgi⁄
(
FILE
 *
gno
, c⁄° 
ROM_REGION
 *
rom
, 
Uöt8
 
id
, Uöt8 
ty≥
,

1542 
Uöt32
 
block_size
) {

1543 i‡(
rom
->
p
 =
NULL
)

1544  
GN_FALSE
;

1545 
	`fwrôe
(&
rom
->
size
,  (
Uöt32
), 1, 
gno
);

1546 
	`fwrôe
(&
id
,  (
Uöt8
), 1, 
gno
);

1547 
	`fwrôe
(&
ty≥
,  (
Uöt8
), 1, 
gno
);

1548 i‡(
ty≥
 == 0) {

1549 
	`¥ötf
("Dum∞%d %08x\n", 
id
, 
rom
->
size
);

1550 
	`fwrôe
(
rom
->
p
,Ñom->
size
, 1, 
gno
);

1552 
Uöt32
 
nb_block
 = 
rom
->
size
 / 
block_size
;

1553 
Uöt32
 *
block_off£t
;

1554 
Uöt32
 
cur_off£t
 = 0;

1555 
off£t_pos
;

1556 
Uöt32
 
i
;

1557 c⁄° 
Uöt8
 *
öbuf
 = 
rom
->
p
;

1558 
Uöt8
 *
outbuf
;

1559 
uL⁄gf
 
outbuf_Àn
;

1560 
uL⁄gf
 
ouéí
;

1561 
Uöt32
 
ouéí32
;

1562 
Uöt32
 
cmpsize
 = 0;

1563 
rc
;

1564 
	`¥ötf
("nb_block=%d\n", 
nb_block
);

1565 
	`fwrôe
(&
block_size
,  (
Uöt32
), 1, 
gno
);

1566 i‡((
rom
->
size
 & (
block_size
 - 1)) != 0) {

1567 
	`¥ötf
("Waring: Block_sizeándÅotsizeÇot compatible %x %x\n",

1568 
rom
->
size
, 
block_size
);

1570 
block_off£t
 = 
	`mÆloc
(
nb_block
 *  (
Uöt32
));

1573 
outbuf_Àn
 = 
	`com¥essBound
(
block_size
);

1574 
outbuf
 = 
	`mÆloc
(
outbuf_Àn
);

1575 
off£t_pos
 = 
	`·ñl
(
gno
);

1576 
	`f£ek
(
gno
, 
nb_block
 * 4 + 4, 
SEEK_CUR
);

1578 
i
 = 0; i < 
nb_block
; i++) {

1579 
cur_off£t
 = 
	`·ñl
(
gno
);

1580 
block_off£t
[
i
] = 
cur_off£t
;

1581 
ouéí
 = 
outbuf_Àn
;

1582 
rc
 = 
	`com¥ess
(
outbuf
, &
ouéí
, 
öbuf
, 
block_size
);

1583 
	`¥ötf
("%d %ld\n", 
rc
, 
ouéí
);

1585 
cmpsize
 +
ouéí
;

1586 
	`¥ötf
("cmpsize=%d %ld\n", 
cmpsize
,  (
uL⁄gf
));

1587 
öbuf
 +
block_size
;

1588 
ouéí32
 = (
Uöt32
Ë
ouéí
;

1589 
	`fwrôe
(&
ouéí32
,  (
Uöt32
), 1, 
gno
);

1590 
	`¥ötf
("b™k %d ouéí=%d off£t=%d\n", 
i
, 
ouéí32
, 
cur_off£t
);

1591 
	`fwrôe
(
outbuf
, 
ouéí
, 1, 
gno
);

1593 
	`‰ì
(
outbuf
);

1595 
	`f£ek
(
gno
, 
off£t_pos
, 
SEEK_SET
);

1596 
	`fwrôe
(
block_off£t
,  (
Uöt32
), 
nb_block
, 
gno
);

1597 
	`‰ì
(
block_off£t
);

1598 
	`fwrôe
(&
cmpsize
,  (
Uöt32
), 1, 
gno
);

1599 
	`¥ötf
("cmpsize=%d\n", 
cmpsize
);

1600 
	`f£ek
(
gno
, 0, 
SEEK_END
);

1601 
off£t_pos
 = 
	`·ñl
(
gno
);

1602 
	`¥ötf
("cuºpos=%li\n", 
off£t_pos
);

1604  
GN_TRUE
;

1605 
	}
}

1607 
	$dr_ßve_gno
(
GAME_ROMS
 *
r
, *
fûíame
) {

1608 
FILE
 *
gno
;

1609 *
fid
 = "gnodmpv1";

1610 
‚ame
[9];

1611 
Uöt8
 
nb_£c
 = 0;

1612 
i
;

1614 
gno
 = 
	`f›í
(
fûíame
, "wb");

1615 i‡(!
gno
)

1616  
GN_FALSE
;

1619 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.
game_ve˘‹
, 0x80);

1620 
i
 = 0; i < 0x80; i++)

1621 
	`¥ötf
("%02x ", 
mem‹y
.
rom
.
˝u_m68k
.
p
[
i
]);

1622 
	`¥ötf
("\n");

1624 i‡(
r
->
˝u_m68k
.
p
)

1625 
nb_£c
++;

1626 i‡(
r
->
˝u_z80
.
p
)

1627 
nb_£c
++;

1628 i‡(
r
->
adpcma
.
p
)

1629 
nb_£c
++;

1630 i‡(
r
->
adpcmb
.
p
 && (r->adpcmb.∞!r->
adpcma
.p))

1631 
nb_£c
++;

1632 i‡(
r
->
game_sfix
.
p
)

1633 
nb_£c
++;

1634 i‡(
r
->
tûes
.
p
)

1635 
nb_£c
 += 2;

1636 i‡(
r
->
gfix_ußge
.
p
)

1637 
nb_£c
++;

1639 i‡((
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_CPU_BIOS
)) {

1640 
nb_£c
++;

1642 i‡((
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_SFIX_BIOS
)) {

1643 
nb_£c
++;

1648 
	`fwrôe
(
fid
, 8, 1, 
gno
);

1649 
	`¢¥ötf
(
‚ame
, 9, "%-8s", 
r
->
öfo
.
«me
);

1650 
	`fwrôe
(
‚ame
, 8, 1, 
gno
);

1651 
	`fwrôe
(&
r
->
öfo
.
Êags
,  (
Uöt32
), 1, 
gno
);

1652 
	`fwrôe
(&
nb_£c
,  (
Uöt8
), 1, 
gno
);

1655 
	`dump_ªgi⁄
(
gno
, &
r
->
˝u_m68k
, 
REGION_MAIN_CPU_CARTRIDGE
, 0, 0);

1656 
	`dump_ªgi⁄
(
gno
, &
r
->
˝u_z80
, 
REGION_AUDIO_CPU_CARTRIDGE
, 0, 0);

1657 
	`dump_ªgi⁄
(
gno
, &
r
->
adpcma
, 
REGION_AUDIO_DATA_1
, 0, 0);

1658 i‡(
r
->
adpcma
.
p
 !r->
adpcmb
.p)

1659 
	`dump_ªgi⁄
(
gno
, &
r
->
adpcmb
, 
REGION_AUDIO_DATA_2
, 0, 0);

1660 
	`dump_ªgi⁄
(
gno
, &
r
->
game_sfix
, 
REGION_FIXED_LAYER_CARTRIDGE
, 0, 0);

1661 
	`dump_ªgi⁄
(
gno
, &
r
->
•r_ußge
, 
REGION_SPR_USAGE
, 0, 0);

1662 
	`dump_ªgi⁄
(
gno
, &
r
->
gfix_ußge
, 
REGION_GAME_FIX_USAGE
, 0, 0);

1663 i‡((
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_CPU_BIOS
)) {

1664 
	`dump_ªgi⁄
(
gno
, &
r
->
bios_m68k
, 
REGION_MAIN_CPU_BIOS
, 0, 0);

1666 i‡((
r
->
öfo
.
Êags
 & 
HAS_CUSTOM_SFIX_BIOS
)) {

1667 
	`dump_ªgi⁄
(
gno
, &
r
->
bios_sfix
, 
REGION_FIXED_LAYER_BIOS
, 0, 0);

1671 
	`dump_ªgi⁄
(
gno
, &
r
->
tûes
, 
REGION_SPRITES
, 1, 4096);

1674 
	`f˛o£
(
gno
);

1675  
GN_TRUE
;

1676 
	}
}

1678 
	$ªad_ªgi⁄
(
FILE
 *
gno
, 
GAME_ROMS
 *
roms
) {

1679 
Uöt32
 
size
;

1680 
Uöt8
 
lid
, 
ty≥
;

1681 
ROM_REGION
 *
r
 = 
NULL
;

1682 
size_t
 
tŸªad
 = 0;

1683 
Uöt32
 
ˇche_size
[] = {64, 32, 24, 16, 8, 6, 4, 2, 1, 0};

1684 
i
 = 0;

1687 
tŸªad
 = 
	`‰ód
(&
size
,  (
Uöt32
), 1, 
gno
);

1688 
tŸªad
 +
	`‰ód
(&
lid
,  (
Uöt8
), 1, 
gno
);

1689 
tŸªad
 +
	`‰ód
(&
ty≥
,  (
Uöt8
), 1, 
gno
);

1691 
lid
) {

1692 
REGION_MAIN_CPU_CARTRIDGE
:

1693 
r
 = &
roms
->
˝u_m68k
;

1695 
REGION_AUDIO_CPU_CARTRIDGE
:

1696 
r
 = &
roms
->
˝u_z80
;

1698 
REGION_AUDIO_DATA_1
:

1699 
r
 = &
roms
->
adpcma
;

1701 
REGION_AUDIO_DATA_2
:

1702 
r
 = &
roms
->
adpcmb
;

1704 
REGION_FIXED_LAYER_CARTRIDGE
:

1705 
r
 = &
roms
->
game_sfix
;

1707 
REGION_SPRITES
:

1708 
r
 = &
roms
->
tûes
;

1710 
REGION_SPR_USAGE
:

1711 
r
 = &
roms
->
•r_ußge
;

1713 
REGION_GAME_FIX_USAGE
:

1714 
r
 = &
roms
->
gfix_ußge
;

1716 
REGION_FIXED_LAYER_BIOS
:

1717 
r
 = &
roms
->
bios_sfix
;

1719 
REGION_MAIN_CPU_BIOS
:;

1720 
r
 = &
roms
->
bios_m68k
;

1723  
GN_FALSE
;

1726 
	`¥ötf
("RódÑegi⁄ %d %08XÅy≥ %d\n", 
lid
, 
size
, 
ty≥
);

1727 i‡(
ty≥
 == 0) {

1729 
	`Æloˇã_ªgi⁄
(
r
, 
size
, 
lid
);

1730 
	`¥ötf
("Lﬂd %d %08x\n", 
lid
, 
r
->
size
);

1731 
tŸªad
 +
	`‰ód
(
r
->
p
,Ñ->
size
, 1, 
gno
);

1733 
Uöt32
 
nb_block
, 
block_size
;

1734 
Uöt32
 
cmp_size
;

1735 
tŸªad
 +
	`‰ód
(&
block_size
,  (
Uöt32
), 1, 
gno
);

1736 
nb_block
 = 
size
 / 
block_size
;

1738 
	`¥ötf
("Regi⁄ size=%08X\n", 
size
);

1739 
r
->
size
 = size;

1742 
mem‹y
.
vid
.
•r_ˇche
.
off£t
 = 
	`mÆloc
( (
Uöt32
Ë* 
nb_block
);

1743 
tŸªad
 +
	`‰ód
(
mem‹y
.
vid
.
•r_ˇche
.
off£t
,  (
Uöt32
), 
nb_block
, 
gno
);

1744 
mem‹y
.
vid
.
•r_ˇche
.
gno
 = gno;

1746 
tŸªad
 +
	`‰ód
(&
cmp_size
,  (
Uöt32
), 1, 
gno
);

1748 
	`f£ek
(
gno
, 
cmp_size
, 
SEEK_CUR
);

1751 
i
 = 0; 
ˇche_size
[i] != 0; i++) {

1752 i‡(
	`öô_•rôe_ˇche
(
ˇche_size
[
i
]*1024 * 1024, 
block_size
Ë=
GN_TRUE
) {

1753 
	`¥ötf
("Cachêsize=%dMB\n", 
ˇche_size
[
i
]);

1758  
GN_TRUE
;

1759 
	}
}

1761 
	$dr_›í_gno
(*
fûíame
) {

1762 
FILE
 *
gno
;

1763 
fid
[9];

1764 
«me
[9] = {0,};

1765 
GAME_ROMS
 *
r
 = &
mem‹y
.
rom
;

1766 
Uöt8
 
nb_£c
;

1767 
i
;

1768 *
a
;

1769 
size_t
 
tŸªad
 = 0;

1771 
mem‹y
.
bksw_h™dÀr
 = 0;

1772 
mem‹y
.
bksw_uns¸ambÀ
 = 
NULL
;

1773 
mem‹y
.
bksw_off£t
 = 
NULL
;

1775 
√ed_de¸y±
 = 0;

1777 
gno
 = 
	`f›í
(
fûíame
, "rb");

1778 i‡(!
gno
)

1779  
GN_FALSE
;

1781 
tŸªad
 +
	`‰ód
(
fid
, 8, 1, 
gno
);

1782 i‡(
	`°∫cmp
(
fid
, "gnodmpv1", 8) != 0) {

1783 
	`f˛o£
(
gno
);

1784 
	`¥ötf
("Invalid GNO file\n");

1785  
GN_FALSE
;

1787 
tŸªad
 +
	`‰ód
(
«me
, 8, 1, 
gno
);

1788 
a
 = 
	`°rchr
(
«me
, ' ');

1789 i‡(
a
)á[0] = 0;

1790 
r
->
öfo
.
«me
 = 
	`°rdup
(name);

1792 
tŸªad
 +
	`‰ód
(&
r
->
öfo
.
Êags
,  (
Uöt32
), 1, 
gno
);

1793 
tŸªad
 +
	`‰ód
(&
nb_£c
,  (
Uöt8
), 1, 
gno
);

1795 
	`gn_öô_pb¨
("Lﬂdög", 
nb_£c
);

1796 
i
 = 0; i < 
nb_£c
; i++) {

1797 
	`gn_upd©e_pb¨
(
i
);

1798 
	`ªad_ªgi⁄
(
gno
, 
r
);

1800 
	`gn_ãrmö©e_pb¨
();

1802 i‡(
r
->
adpcmb
.
p
 =
NULL
) {

1803 
r
->
adpcmb
.
p
 =Ñ->
adpcma
.p;

1804 
r
->
adpcmb
.
size
 =Ñ->
adpcma
.size;

1808 
mem‹y
.
fix_game_ußge
 = 
r
->
gfix_ußge
.
p
;

1812 
mem‹y
.
nb_of_tûes
 = 
r
->
tûes
.
size
 >> 7;

1815 
	`öô_roms
(
r
);

1817 i‡(
	`dr_lﬂd_bios
(
r
)==
GN_FALSE
)

1818  
GN_FALSE
;

1820 
c⁄f
.
game
 = 
mem‹y
.
rom
.
öfo
.
«me
;

1822 
	`mem˝y
(
mem‹y
.
game_ve˘‹
, mem‹y.
rom
.
˝u_m68k
.
p
, 0x80);

1823 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.
bios_m68k
.p, 0x80);

1824 
	`öô_video
();

1826  
GN_TRUE
;

1827 
	}
}

1829 *
	$dr_gno_rom«me
(*
fûíame
) {

1830 
FILE
 *
gno
;

1831 
fid
[9];

1832 
«me
[9] = {0,};

1833 *
•a˚
;

1834 
size_t
 
tŸªad
 = 0;

1836 
gno
 = 
	`f›í
(
fûíame
, "rb");

1837 i‡(!
gno
)

1838  
NULL
;

1840 
tŸªad
 +
	`‰ód
(
fid
, 8, 1, 
gno
);

1841 i‡(
	`°∫cmp
(
fid
, "gnodmpv1", 8) != 0) {

1842 
	`¥ötf
("Invalid GNO file\n");

1843  
NULL
;

1846 
tŸªad
 +
	`‰ód
(
«me
, 8, 1, 
gno
);

1848 
•a˚
=
	`°rchr
(
«me
,' ');

1849 i‡(
•a˚
!=
NULL
) space[0]=0;

1851 
	`f˛o£
(
gno
);

1852  
	`°rdup
(
«me
);

1853 
	}
}

1858 
	$dump_ªgi⁄
(
FILE
 *
gno
, 
ROM_REGION
 *
rom
, 
Uöt8
 
id
, Uöt8 
ty≥
, 
Uöt32
 
block_size
) {

1859  
GN_TRUE
;

1860 
	}
}

1862 
	$dr_ßve_gno
(
GAME_ROMS
 *
r
, *
fûíame
) {

1863  
GN_TRUE
;

1864 
	}
}

1867 
	$dr_‰ì_roms
(
GAME_ROMS
 *
r
) {

1868 
	`‰ì_ªgi⁄
(&
r
->
˝u_m68k
);

1869 
	`‰ì_ªgi⁄
(&
r
->
˝u_z80c
);

1871 i‡(!
mem‹y
.
vid
.
•r_ˇche
.
d©a
) {

1872 
	`¥ötf
("FreeÅiles\n");

1873 
	`‰ì_ªgi⁄
(&
r
->
tûes
);

1875 
	`f˛o£
(
mem‹y
.
vid
.
•r_ˇche
.
gno
);

1876 
	`‰ì_•rôe_ˇche
();

1877 
	`‰ì
(
mem‹y
.
vid
.
•r_ˇche
.
off£t
);

1879 
	`‰ì_ªgi⁄
(&
r
->
game_sfix
);

1881 #i‚de‡
ENABLE_940T


1882 
	`‰ì_ªgi⁄
(&
r
->
˝u_z80
);

1883 
	`‰ì_ªgi⁄
(&
r
->
bios_audio
);

1884 i‡(
r
->
adpcmb
.
p
 !r->
adpcma
.p)

1885 
	`‰ì_ªgi⁄
(&
r
->
adpcmb
);

1887 
r
->
adpcmb
.
p
 = 
NULL
;

1888 
r
->
adpcmb
.
size
 = 0;

1891 
	`‰ì_ªgi⁄
(&
r
->
adpcma
);

1894 
	`‰ì_ªgi⁄
(&
r
->
bios_m68k
);

1895 
	`‰ì_ªgi⁄
(&
r
->
bios_sfix
);

1897 
	`‰ì
(
mem‹y
.
ng_lo
);

1898 
	`‰ì
(
mem‹y
.
fix_game_ußge
);

1899 
	`‰ì_ªgi⁄
(&
r
->
•r_ußge
);

1901 
	`‰ì
(
r
->
öfo
.
«me
);

1902 
	`‰ì
(
r
->
öfo
.
l⁄g«me
);

1904 
c⁄f
.
game
 = 
NULL
;

1905 
	}
}

1908 
	$›í_nvøm
(*
«me
) {

1909 *
fûíame
;

1910 
size_t
 
tŸªad
 = 0;

1911 #ifde‡
EMBEDDED_FS


1912 c⁄° *
gngeo_dú
 = 
ROOTPATH
"save/";

1913 #ñi‡
	`deföed
(
__AMIGA__
)

1914 c⁄° *
gngeo_dú
 = "/PROGDIR/save/";

1916 c⁄° *
gngeo_dú
 = 
	`gë_gngeo_dú
();

1918 
FILE
 *
f
;

1919 
Àn
 = 
	`°æí
(
«me
Ë+ såÀn(
gngeo_dú
) + 4;

1921 
fûíame
 = (*Ë
	`Æloˇ
(
Àn
);

1922 
	`•rötf
(
fûíame
, "%s%s.nv", 
gngeo_dú
, 
«me
);

1924 i‡((
f
 = 
	`f›í
(
fûíame
, "rb")) == 0)

1926 
tŸªad
 = 
	`‰ód
(
mem‹y
.
§am
, 1, 0x10000, 
f
);

1927 
	`f˛o£
(
f
);

1929 
	}
}

1932 
	$›í_memˇrd
(*
«me
) {

1933 *
fûíame
;

1934 
size_t
 
tŸªad
 = 0;

1935 #ifde‡
EMBEDDED_FS


1936 c⁄° *
gngeo_dú
 = 
ROOTPATH
"save/";

1937 #ñi‡
	`deföed
(
__AMIGA__
)

1938 c⁄° *
gngeo_dú
 = "/PROGDIR/save/";

1940 c⁄° *
gngeo_dú
 = 
	`gë_gngeo_dú
();

1942 
FILE
 *
f
;

1943 
Àn
 = 
	`°æí
("memˇrd"Ë+ såÀn(
gngeo_dú
) + 1;

1945 
fûíame
 = (*Ë
	`Æloˇ
(
Àn
);

1946 
	`•rötf
(
fûíame
, "%s%s", 
gngeo_dú
, "memcard");

1948 i‡((
f
 = 
	`f›í
(
fûíame
, "rb")) == 0)

1950 
tŸªad
 = 
	`‰ód
(
mem‹y
.
memˇrd
, 1, 0x800, 
f
);

1951 
	`f˛o£
(
f
);

1952 
	}
}

1954 
	$ßve_nvøm
(*
«me
) {

1955 *
fûíame
;

1956 #ifde‡
EMBEDDED_FS


1957 c⁄° *
gngeo_dú
 = 
ROOTPATH
"save/";

1958 #ñi‡
	`deföed
(
__AMIGA__
)

1959 c⁄° *
gngeo_dú
 = 
	`°rdup
("/PROGDIR/save/");

1961 c⁄° *
gngeo_dú
 = 
	`gë_gngeo_dú
();

1963 
FILE
 *
f
;

1964 
Àn
 = 
	`°æí
(
«me
Ë+ såÀn(
gngeo_dú
) + 4;

1967 
i
;

1969 
i
 = 0xffff; i >= 0; i--) {

1970 i‡(
mem‹y
.
§am
[
i
] != 0)

1974 
fûíame
 = (*Ë
	`Æloˇ
(
Àn
);

1976 
	`•rötf
(
fûíame
, "%s%s.nv", 
gngeo_dú
, 
«me
);

1978 i‡((
f
 = 
	`f›í
(
fûíame
, "wb")Ë!
NULL
) {

1979 
	`fwrôe
(
mem‹y
.
§am
, 1, 0x10000, 
f
);

1980 
	`f˛o£
(
f
);

1982 
	}
}

1984 
	$ßve_memˇrd
(*
«me
) {

1985 *
fûíame
;

1986 #ifde‡
EMBEDDED_FS


1987 c⁄° *
gngeo_dú
 = 
ROOTPATH
"save/";

1988 #ñi‡
	`deföed
(
__AMIGA__
)

1989 c⁄° *
gngeo_dú
 = 
	`°rdup
("/PROGDIR/save/");

1991 c⁄° *
gngeo_dú
 = 
	`gë_gngeo_dú
();

1993 
FILE
 *
f
;

1994 
Àn
 = 
	`°æí
("memˇrd"Ë+ såÀn(
gngeo_dú
) + 1;

1996 
fûíame
 = (*Ë
	`Æloˇ
(
Àn
);

1997 
	`•rötf
(
fûíame
, "%s%s", 
gngeo_dú
, "memcard");

1999 i‡((
f
 = 
	`f›í
(
fûíame
, "wb")Ë!
NULL
) {

2000 
	`fwrôe
(
mem‹y
.
memˇrd
, 1, 0x800, 
f
);

2001 
	`f˛o£
(
f
);

2003 
	}
}

2005 
	$˛o£_game
() {

2006 i‡(
c⁄f
.
game
 =
NULL
Ë 
GN_FALSE
;

2007 
	`ßve_nvøm
(
c⁄f
.
game
);

2008 
	`ßve_memˇrd
(
c⁄f
.
game
);

2010 
	`dr_‰ì_roms
(&
mem‹y
.
rom
);

2011 
	`å™s_∑ck_‰ì
();

2013  
GN_TRUE
;

2014 
	}
}

2016 
	$lﬂd_game_c⁄fig
(*
rom_«me
) {

2017 *
g∑th
;

2018 *
drc⁄f
;

2019 #ifde‡
EMBEDDED_FS


2020 
g∑th
=
ROOTPATH
"conf/";

2022 
g∑th
=
	`gë_gngeo_dú
();

2024 
	`cf_ª£t_to_deÁu…
();

2025 
	`cf_›í_fûe
(
NULL
);

2026 i‡(
rom_«me
) {

2027 i‡(
	`°r°r
(
rom_«me
,".gno")!=
NULL
) {

2028 *
«me
=
	`dr_gno_rom«me
(
rom_«me
);

2029 i‡(
«me
) {

2030 
	`¥ötf
("TrögÅÿlﬂdá gnÿfûê%†%s\n",
rom_«me
,
«me
);

2031 
drc⁄f
=
	`Æloˇ
(
	`°æí
(
g∑th
)+°æí(
«me
)+strlen(".cf")+1);

2032 
	`•rötf
(
drc⁄f
,"%s%s.cf",
g∑th
,
«me
);

2034 
	`¥ötf
("Eº‹ whûêlﬂdög %s\n",
rom_«me
);

2035  
GN_FALSE
;

2038 
drc⁄f
=
	`Æloˇ
(
	`°æí
(
g∑th
)+°æí(
rom_«me
)+strlen(".cf")+1);

2039 
	`•rötf
(
drc⁄f
,"%s%s.cf",
g∑th
,
rom_«me
);

2041 
	`cf_›í_fûe
(
drc⁄f
);

2043  
GN_TRUE
;

2044 
	}
}

2046 
	$öô_game
(*
rom_«me
) {

2049 
	`lﬂd_game_c⁄fig
(
rom_«me
);

2052 
	`ª£t_‰ame_skù
();

2053 
	`s¸ìn_ªöô
();

2054 
	`¥ötf
("BBB Blôã∏%†ef„˘ %s\n",
	`CF_STR
(
	`cf_gë_ôem_by_«me
("blitter")),CF_STR(cf_get_item_by_name("effect")));

2056 
	`å™s_∑ck_›í
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("transpack")));

2058 i‡(
	`°r°r
(
rom_«me
, ".gno"Ë!
NULL
) {

2059 i‡(
	`dr_›í_gno
(
rom_«me
)==
GN_FALSE
)

2060  
GN_FALSE
;

2064 i‡(
	`dr_lﬂd_game
(
rom_«me
Ë=
GN_FALSE
) {

2065 #i‡
	`deföed
(
GP2X
)

2066 
	`gn_p›up_îr‹
(" Error! :", "Couldn'tÜoad %s",

2067 
	`fûe_ba£«me
(
rom_«me
));

2069 
	`¥ötf
("C™'àlﬂd %s\n", 
rom_«me
);

2071  
GN_FALSE
;

2076 
	`›í_nvøm
(
c⁄f
.
game
);

2077 
	`›í_memˇrd
(
c⁄f
.
game
);

2078 #i‚de‡
GP2X


2079 
	`sdl_£t_tôÀ
(
c⁄f
.
game
);

2081 
	`öô_√o
();

2082 
	`£tup_misc_∑tch
(
c⁄f
.
game
);

2084 
fix_ußge
 = 
mem‹y
.
fix_bﬂrd_ußge
;

2085 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[0];

2086 
cuºít_fix
 = 
mem‹y
.
rom
.
bios_sfix
.
p
;

2087 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[0];

2089 
mem‹y
.
vid
.
cuºíçÆ
=0;

2090 
mem‹y
.
vid
.
cuºítfix
=0;

2093  
GN_TRUE
;

2094 
	}
}

2096 *
	$ªmove_∑th_™d_exãnsi⁄
(* 
my°r
, 
dŸ
, 
£p
) {

2097 *
ªt°r
, *
œ°dŸ
, *
œ°£p
;

2098 *
fûíame
;

2101 i‡(
my°r
 =
NULL
)

2102  
NULL
;

2103 i‡((
ªt°r
 = 
	`mÆloc
 (
	`°æí
 (
my°r
Ë+ 1)Ë=
NULL
)

2104  
NULL
;

2107 
fûíame
 = 
	`ba£«me
(
my°r
);

2108 
	`°r˝y
 (
ªt°r
, 
fûíame
);

2109 
œ°dŸ
 = 
	`°ºchr
 (
ªt°r
, 
dŸ
);

2110 
œ°£p
 = (
£p
 =0Ë? 
NULL
 : 
	`°ºchr
 (
ªt°r
, sep);

2114 i‡(
œ°dŸ
 !
NULL
) {

2116 i‡(
œ°£p
 !
NULL
) {

2117 i‡(
œ°£p
 < 
œ°dŸ
) {

2119 *
œ°dŸ
 = '\0';

2123 *
œ°dŸ
 = '\0';

2128  
ªt°r
;

2129 
	}
}

	@src/roms.h

2 #i‚de‡
H_ROMS


3 
	#H_ROMS


	)

5 
	~"SDL.h
"

8 
	#REGION_AUDIO_CPU_BIOS
 0

	)

9 
	#REGION_AUDIO_CPU_CARTRIDGE
 1

	)

10 
	#REGION_AUDIO_CPU_ENCRYPTED
 2

	)

11 
	#REGION_AUDIO_DATA_1
 3

	)

12 
	#REGION_AUDIO_DATA_2
 4

	)

13 
	#REGION_FIXED_LAYER_BIOS
 5

	)

14 
	#REGION_FIXED_LAYER_CARTRIDGE
 6

	)

15 
	#REGION_MAIN_CPU_BIOS
 7

	)

16 
	#REGION_MAIN_CPU_CARTRIDGE
 8

	)

17 
	#REGION_SPRITES
 9

	)

18 
	#REGION_SPR_USAGE
 10

	)

19 
	#REGION_GAME_FIX_USAGE
 11

	)

21 
	#HAS_CUSTOM_CPU_BIOS
 0x1

	)

22 
	#HAS_CUSTOM_AUDIO_BIOS
 0x2

	)

23 
	#HAS_CUSTOM_SFIX_BIOS
 0x4

	)

25 
	sROM_DEF
{

26 
	m«me
[32];

27 
	m∑ª¡
[32];

28 
	ml⁄g«me
[128];

29 
Uöt32
 
	myór
;

30 
Uöt32
 
	mromsize
[10];

31 
Uöt32
 
	mnb_romfûe
;

32 
	sromfûe
{

33 
	mfûíame
[32];

34 
Uöt8
 
	mªgi⁄
;

35 
Uöt32
 
	m§c
;

36 
Uöt32
 
	mde°
;

37 
Uöt32
 
	msize
;

38 
Uöt32
 
	m¸c
;

39 }
	mrom
[32];

40 }
	tROM_DEF
;

42 
	sGAME_INFO
 {

43 *
	m«me
;

44 *
	ml⁄g«me
;

45 
	myór
;

46 
Uöt32
 
	mÊags
;

47 }
	tGAME_INFO
;

49 
	sROM_REGION
 {

50 
Uöt8
* 
	mp
;

51 
Uöt32
 
	msize
;

52 }
	tROM_REGION
;

55 
	sGAME_ROMS
 {

56 
GAME_INFO
 
	möfo
;

57 
ROM_REGION
 
	m˝u_m68k
;

58 
ROM_REGION
 
	m˝u_z80
;

59 
ROM_REGION
 
	mtûes
;

60 
ROM_REGION
 
	mgame_sfix
;

61 
ROM_REGION
 
	mbios_sfix
;

62 
ROM_REGION
 
	mbios_audio
;

63 
ROM_REGION
 
	mzoom_èbÀ
;

64 
ROM_REGION
 
	mbios_m68k
;

65 
ROM_REGION
 
	madpcma
;

66 
ROM_REGION
 
	madpcmb
;

67 
ROM_REGION
 
	m•r_ußge
;

68 
ROM_REGION
 
	mgfix_ußge
;

69 
ROM_REGION
 
	mbfix_ußge
;

70 
ROM_REGION
 
	m˝u_z80c
;

71 }
	tGAME_ROMS
;

75 
dr_lﬂd_roms
(
GAME_ROMS
 *
r
,*
rom_∑th
,*
«me
);

76 
dr_‰ì_roms
(
GAME_ROMS
 *
r
);

77 
dr_ßve_gno
(
GAME_ROMS
 *
r
,*
fûíame
);

78 
dr_lﬂd_game
(*
zù
);

79 
ROM_DEF
 *
dr_check_zù
(c⁄° *
fûíame
);

80 *
dr_gno_rom«me
(*
fûíame
);

81 
dr_›í_gno
(*
fûíame
);

82 
öô_game
(*
rom_«me
);

83 
˛o£_game
();

84 *
ªmove_∑th_™d_exãnsi⁄
(* 
my°r
, 
dŸ
, 
£p
);

	@src/screen.c

2 #ifde‡
HAVE_CONFIG_H


3 
	~<c⁄fig.h
>

6 
	~"SDL.h
"

7 
	~<°dlib.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

11 
	~"gnutû.h
"

12 
	~"s¸ìn.h
"

13 
	~"emu.h
"

14 
	~"video.h
"

15 
	~"c⁄f.h
"

17 
	~"blôãr.h
"

18 
	~"ef„˘.h
"

19 
	~"f⁄t.h
"

20 
	~"gngeo_ic⁄.h
"

22 
ef„˘_n⁄e_öô
();

24 
ef„˘_smoŸh_öô
();

26 
blôãr_func
 
	gblôãr
[] = {

27 {"so·", "So·w¨êblôãr", 
blôãr_so·_öô
, 
NULL
, 
blôãr_so·_upd©e
, 
blôãr_so·_fuŒs¸ìn
,

28 
blôãr_so·_˛o£
},

29 #i‚de‡
GP2X


30 #i‚de‡
WII


31 #ifde‡
HAVE_GL_GL_H


32 {"›ígl", "O≥ng»blôãr", 
blôãr_›ígl_öô
, 
blôãr_›ígl_ªsize
, 
blôãr_›ígl_upd©e
,

33 
blôãr_›ígl_fuŒs¸ìn
, 
blôãr_›ígl_˛o£
},

35 {"yuv", "YUV blôã∏(YV12)", 
blôãr_ovîœy_öô
, 
blôãr_ovîœy_ªsize
, 
blôãr_ovîœy_upd©e
,

36 
blôãr_ovîœy_fuŒs¸ìn
, 
blôãr_ovîœy_˛o£
},

39 {
NULL
, NULL, NULL, NULL, NULL, NULL, NULL}

42 
ef„˘_func
 
	gef„˘
[] = {

44 {"n⁄e", "Nÿef„˘", 1, 1, 
ef„˘_n⁄e_öô
, 
NULL
},

45 #ifde‡
PANDORA


47 {"smoŸh", "DeÁu… P™d‹®Slighéy bluºed fûãr", 1, 1, 
ef„˘_smoŸh_öô
, 
NULL
},

49 #i‚de‡
GP2X


50 #i‚de‡
WII


51 {"sˇ∆öe", "Sˇ∆öêef„˘", 2, 2, 
ef„˘_sˇ∆öe_öô
, 
ef„˘_sˇ∆öe_upd©e
},

52 {"sˇ∆öe50", "Sˇ∆öê50%Éf„˘", 2, 2, 
ef„˘_sˇ∆öe_öô
, 
ef„˘_sˇ∆öe50_upd©e
},

53 {"sˇÀ2x", "SˇÀ2xÉf„˘", 2, 2, 
ef„˘_sˇÀ2x_öô
, 
ef„˘_sˇÀ2x_upd©e
},

54 #i‚de‡
PANDORA


55 {"sˇÀ3x", "SˇÀ3xÉf„˘", 3, 3, 
ef„˘_sˇÀ3x_öô
, 
ef„˘_sˇÀ3x_upd©e
},

56 {"sˇÀ4x", "SˇÀ4xÉf„˘", 4, 4, 
ef„˘_sˇÀ4x_öô
, 
ef„˘_sˇÀ4x_upd©e
},

58 {"sˇÀ2x50", "SˇÀ2xÉf„˘ wôh 50% sˇ∆öe", 2, 2, 
ef„˘_sˇÀ2x_öô
, 
ef„˘_sˇÀ2x50_upd©e
},

59 {"sˇÀ2x75", "SˇÀ2xÉf„˘ wôh 75% sˇ∆öe", 2, 2, 
ef„˘_sˇÀ2x_öô
, 
ef„˘_sˇÀ2x75_upd©e
},

60 {"hq2x", "HQ2XÉf„˘. High quÆôy", 2, 2, 
ef„˘_hq2x_öô
, 
ef„˘_hq2x_upd©e
},

61 {"lq2x", "LQ2XÉf„˘. Low quÆôy", 2, 2, 
ef„˘_lq2x_öô
, 
ef„˘_lq2x_upd©e
},

62 #i‚de‡
PANDORA


63 {"hq3x", "HQ3XÉf„˘. High quÆôy", 3, 3, 
ef„˘_hq3x_öô
, 
ef„˘_hq3x_upd©e
},

65 {"lq3x", "LQ3XÉf„˘. Low quÆôy", 3, 3, 
ef„˘_lq3x_öô
, 
ef„˘_lq3x_upd©e
},

66 {"doubÀx", "DoubÀÅhêxÑesﬁuti⁄ (so· blôã∏⁄ly)", 2, 1, 
ef„˘_sˇ∆öe_öô
, 
ef„˘_doubÀx_upd©e
},

68 #ifde‡
I386_ASM


69 {"ßi", "SAIÉf„˘", 2, 2, 
ef„˘_ßi_öô
, 
ef„˘_ßi_upd©e
},

70 {"su≥rßi", "Su≥rSAIÉf„˘", 2, 2, 
ef„˘_ßi_öô
, 
ef„˘_su≥rßi_upd©e
},

71 {"ógÀ", "EagÀÉf„˘", 2, 2, 
ef„˘_ßi_öô
, 
ef„˘_ógÀ_upd©e
},

75 {
NULL
, NULL, 0, 0, NULL, NULL}

79 
SDL_SurÁ˚
 *
	gtmp
, *
	gbÀnd
;

81 
RGB2YUV
 
	grgb2yuv
[65536];

84 
	$öô_rgb2yuv_èbÀ
() {

85 
öô
 = 0;

86 
Uöt32
 
i
;

87 
Uöt8
 
y
, 
u
, 
v
, 
r
, 
g
, 
b
;

88 i‡(
öô
 == 0) {

89 
öô
 = 1;

90 
i
 = 0; i <= 65535; i++) {

91 
r
 = ((
i
 & 0xF800) >> 11) << 3;

92 
g
 = ((
i
 & 0x7E0) >> 5) << 2;

93 
b
 = (
i
 & 0x1F) << 3;

95 
y
 = (0.257 * 
r
Ë+ (0.504 * 
g
Ë+ (0.098 * 
b
) + 16;

96 
u
 = (0.439 * 
r
Ë- (0.368 * 
g
Ë- (0.071 * 
b
) + 128;

97 
v
 = -(0.148 * 
r
Ë- (0.291 * 
g
Ë+ (0.439 * 
b
) + 128;

99 
rgb2yuv
[
i
].
y
 = (y << 8) | y;

100 
rgb2yuv
[
i
].
u
 = u;

101 
rgb2yuv
[
i
].
v
 = v;

102 
rgb2yuv
[
i
].
yuy2
 = (
y
 << 24Ë| (
v
 << 16Ë| (y << 8Ë| 
u
;

105 
	}
}

107 #ifde‡
I386_ASM


108 
Uöt32
 
	gsˇn_mask
 = 0xf7def7de;

109 
do_ö√r_öãΩﬁ©i⁄_i386
(
Uöt16
 * 
d°
, Uöt16 * 
§c
);

112 
	$¥öt_blôãr_li°
() {

113 
i
 = 0;

114 
blôãr
[
i
].
«me
 !
NULL
) {

115 
	`¥ötf
("%-12†: %s\n", 
blôãr
[
i
].
«me
, blôãr[i].
desc
);

116 
i
++;

118 
	}
}

120 
	$¥öt_ef„˘_li°
() {

121 
i
 = 0;

122 
ef„˘
[
i
].
«me
 !
NULL
) {

123 
	`¥ötf
("%-12†: %s\n", 
ef„˘
[
i
].
«me
,Éf„˘[i].
desc
);

124 
i
++;

126 
	}
}

128 
LIST
* 
	$¸óã_ef„˘_li°
() {

129 
LIST
 *
ñ
 = 
NULL
;

130 
i
 = 0;

131 
ef„˘
[
i
].
«me
 !
NULL
) {

132 
ñ
 = 
	`li°_≠≥nd
”l, &
ef„˘
[
i
]);

133 
i
++;

135  
ñ
;

136 
	}
}

138 
LIST
* 
	$¸óã_blôãr_li°
() {

139 
LIST
 *
bl
 = 
NULL
;

140 
i
 = 0;

141 
blôãr
[
i
].
«me
 !
NULL
) {

142 
bl
 = 
	`li°_≠≥nd
(bl, &
blôãr
[
i
]);

143 
i
++;

145  
bl
;

146 
	}
}

148 
Uöt8
 
	$gë_ef„˘_by_«me
(*
«me
) {

149 
i
 = 0;

151 
ef„˘
[
i
].
«me
 !
NULL
) {

152 i‡(!
	`°rcmp
(
ef„˘
[
i
].
«me
,Çame)) {

153  
i
;

155 
i
++;

158 
	`¥ötf
("InvalidÉffect.\n");

160 
	}
}

162 
Uöt8
 
	$gë_blôãr_by_«me
(*
«me
) {

163 
i
 = 0;

165 
blôãr
[
i
].
«me
 !
NULL
) {

166 i‡(!
	`°rcmp
(
blôãr
[
i
].
«me
,Çame)) {

167  
i
;

169 
i
++;

172 
	`¥ötf
("Invalid blitter, using soft blitter.\n");

174 
	}
}

176 
	$s¸ìn_öô
() {

177 
CONF_ITEM
 *
cf_blôãr
, *
cf_ef„˘
, *
cf_öãΩﬁ
, *
cf_sˇÀ
, *
cf_fs
;

180 
cf_blôãr
 = 
	`cf_gë_ôem_by_«me
("blitter");

181 
cf_ef„˘
 = 
	`cf_gë_ôem_by_«me
("effect");

182 
cf_öãΩﬁ
 = 
	`cf_gë_ôem_by_«me
("interpolation");

183 
cf_sˇÀ
 = 
	`cf_gë_ôem_by_«me
("scale");

184 
cf_fs
 = 
	`cf_gë_ôem_by_«me
("fullscreen");

199 
visibÀ_¨ó
.
x
 = 16;

200 
visibÀ_¨ó
.
y
 = 16;

201 
visibÀ_¨ó
.
w
 = 320;

202 
visibÀ_¨ó
.
h
 = 224;

211 
öãΩﬁ©i⁄
 = 
	`CF_BOOL
(
cf_öãΩﬁ
);

212 
nblôãr
 = 
	`gë_blôãr_by_«me
(
	`CF_STR
(
cf_blôãr
));

213 
√f„˘
 = 
	`gë_ef„˘_by_«me
(
	`CF_STR
(
cf_ef„˘
));

214 
fuŒs¸ìn
 = 
	`CF_BOOL
(
cf_fs
);

215 
c⁄f
.
ªs_x
 = 304;

216 
c⁄f
.
ªs_y
 = 224;

218 i‡(
	`CF_VAL
(
cf_sˇÀ
) == 0)

219 
sˇÀ
 = 1;

221 
sˇÀ
 = 
	`CF_VAL
(
cf_sˇÀ
);

224 i‡((*
blôãr
[
nblôãr
].
öô
Ë(Ë=
GN_FALSE
)

225  
GN_FALSE
;

229 i‡((*
ef„˘
[
√f„˘
].
öô
Ë(Ë=
GN_FALSE
)

230  
GN_FALSE
;

233 
bÀnd
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
 ,

235 
	`¥ötf
("CURSOR=%d\n", 
	`SDL_ShowCurs‹
(
SDL_QUERY
));

236 i‡(
	`SDL_ShowCurs‹
(
SDL_QUERY
) == 1)

237 
	`SDL_ShowCurs‹
(
SDL_DISABLE
);

238 
	`¥ötf
("CURSOR=%d\n", 
	`SDL_ShowCurs‹
(
SDL_QUERY
));

239  
GN_TRUE
;

240 
	}
}

242 
	$ef„˘_n⁄e_öô
() {

243 #ifde‡
PANDORA


244 
	`sy°em
("sudo /usr/pandora/scripts/op_videofir.shÇone");

246  
GN_TRUE
;

247 
	}
}

248 #ifde‡
PANDORA


249 
	$ef„˘_smoŸh_öô
() {

250 
	`sy°em
("sudo /usr/pandora/scripts/op_videofir.sh default");

251  
GN_TRUE
;

252 
	}
}

254 
	$s¸ìn_ch™ge_blôãr_™d_ef„˘
() {

255 
CONF_ITEM
 *
cf_blôãr
, *
cf_ef„˘
;

261 
cf_blôãr
 = 
	`cf_gë_ôem_by_«me
("blitter");

262 
cf_ef„˘
 = 
	`cf_gë_ôem_by_«me
("effect");

264 (*
blôãr
[
nblôãr
].
˛o£
) ();

266 
nblôãr
 = 
	`gë_blôãr_by_«me
(
	`CF_STR
(
cf_blôãr
));

267 
√f„˘
 = 
	`gë_ef„˘_by_«me
(
	`CF_STR
(
cf_ef„˘
));

270 
	`SDL_QuôSubSy°em
(
SDL_INIT_VIDEO
);

272 i‡((*
blôãr
[
nblôãr
].
öô
Ë(Ë=
GN_FALSE
) {

273 
nblôãr
 = 0;

274 
	`•rötf
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("blitter")), "soft");

275 
	`¥ötf
("revertÅo soft\n");

276 i‡((*
blôãr
[
nblôãr
].
öô
Ë(Ë=
GN_FALSE
)

277 
	`exô
(-1);

281 i‡((*
ef„˘
[
√f„˘
].
öô
Ë(Ë=
GN_FALSE
) {

282 
	`¥ötf
("revertÅoÇone\n");

283 
√f„˘
 = 0;

284 
	`•rötf
(
	`CF_STR
(
	`cf_gë_ôem_by_«me
("effect")), "none");

288 
	`SDL_InôSubSy°em
(
SDL_INIT_VIDEO
);

291 
	`¥ötf
("CURSOR=%d\n", 
	`SDL_ShowCurs‹
(
SDL_QUERY
));

292 i‡(
	`SDL_ShowCurs‹
(
SDL_QUERY
) == 1)

293 
	`SDL_ShowCurs‹
(
SDL_DISABLE
);

294 
	`¥ötf
("CURSOR=%d\n", 
	`SDL_ShowCurs‹
(
SDL_QUERY
));

295 
	}
}

297 
	$s¸ìn_ªöô
() {

315 
visibÀ_¨ó
.
x
 = 16;

316 
visibÀ_¨ó
.
y
 = 16;

317 
visibÀ_¨ó
.
w
 = 320;

318 
visibÀ_¨ó
.
h
 = 224;

326 
öãΩﬁ©i⁄
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("interpolation"));

327 
fuŒs¸ìn
 = 
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("fullscreen"));

328 
c⁄f
.
ªs_x
 = 304;

329 
c⁄f
.
ªs_y
 = 224;

331 i‡(
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("scale")) == 0)

332 
sˇÀ
 = 1;

334 
sˇÀ
 = 
	`CF_VAL
(
	`cf_gë_ôem_by_«me
("scale"));

335 
	`¥ötf
("AA Blôã∏%†ef„˘ %s\n",
	`CF_STR
(
	`cf_gë_ôem_by_«me
("blitter")),CF_STR(cf_get_item_by_name("effect")));

336 
	`s¸ìn_ch™ge_blôãr_™d_ef„˘
();

338  
GN_TRUE
;

339 
	}
}

341 
	$s¸ìn_ªsize
(
w
, 
h
) {

343 i‡((*
blôãr
[
nblôãr
].
ªsize
Ë(
w
, 
h
Ë=
GN_FALSE
)

344  
GN_FALSE
;

345  
GN_TRUE
;

346 
	}
}

348 
ölöe
 
	$do_öãΩﬁ©i⁄
() {

349 
Uöt16
 *
d°
 = (Uöt16 *Ë
bÀnd
->
pixñs
 + 16 + (352 << 4);

350 
Uöt16
 *
§c
 = (Uöt16 *Ë
buf„r
->
pixñs
 + 16 + (352 << 4);

351 
Uöt32
 
s
, 
d
;

352 
Uöt8
 
w
, 
h
;

353 #ifde‡
I386_ASM


354 
	`do_ö√r_öãΩﬁ©i⁄_i386
(
d°
, 
§c
);

357 
w
 = 224; w > 0; w--) {

358 
h
 = 160; h > 0; h--) {

359 
s
 = *(
Uöt32
 *Ë
§c
;

360 
d
 = *(
Uöt32
 *Ë
d°
;

362 *(
Uöt32
 *Ë
d°
 =

363 ((
d
 & 0xf7def7deË>> 1Ë+ ((
s
 & 0xf7def7de) >> 1) +

364 (
s
 & 
d
 & 0x08210821);

366 
d°
 += 2;

367 
§c
 += 2;

369 
§c
 += 32;

370 
d°
 += 32;

374 
tmp
 = 
bÀnd
;

375 
bÀnd
 = 
buf„r
;

376 
buf„r
 = 
tmp
;

377 
	}
}

379 
SDL_Re˘
 
	gÀ·_b‹dî
={16,16,8,224};

380 
SDL_Re˘
 
	gright_b‹dî
={16+312,16,8,224};

383 
	$s¸ìn_upd©e
() {

384 i‡(
öãΩﬁ©i⁄
 == 1)

385 
	`do_öãΩﬁ©i⁄
();

386 i‡(!
c⁄f
.
s¸ìn320
) {

387 
	`SDL_FûlRe˘
(
buf„r
, &
À·_b‹dî
, 0);

388 
	`SDL_FûlRe˘
(
buf„r
, &
right_b‹dî
, 0);

393 i‡(
ef„˘
[
√f„˘
].
upd©e
 !
NULL
)

394 (*
ef„˘
[
√f„˘
].
upd©e
) ();

396 (*
blôãr
[
nblôãr
].
upd©e
) ();

397 
	}
}

399 
	$s¸ìn_˛o£
() {

400 
	`SDL_FªeSurÁ˚
(
bÀnd
);

401 
	}
}

403 
	$s¸ìn_fuŒs¸ìn
() {

404 
fuŒs¸ìn
 ^= 1;

405 
blôãr
[
nblôãr
].
	`fuŒs¸ìn
();

406 
	}
}

408 
	$sdl_£t_tôÀ
(*
«me
) {

409 *
tôÀ
;

410 i‡(
«me
) {

411 
tôÀ
 = 
	`mÆloc
(
	`°æí
("Gngeÿ: "Ë+ såÀn(
«me
) + 1);

412 i‡(
tôÀ
) {

413 
	`•rötf
(
tôÀ
, "Gngeÿ: %s", 
«me
);

414 
	`SDL_WM_SëC≠ti⁄
(
tôÀ
, 
NULL
);

417 
	`SDL_WM_SëC≠ti⁄
("Gngeo", 
NULL
);

419 
	}
}

421 
	$öô_sdl
() {

422 
surÁ˚_ty≥
 = (
	`CF_BOOL
(
	`cf_gë_ôem_by_«me
("hwsurÁ˚"))? 
SDL_HWSURFACE
 : 
SDL_SWSURFACE
);

425 *
nomou£
 = 
	`gëív
("SDL_NOMOUSE");

426 
SDL_SurÁ˚
 *
ic⁄
;

428 
	`SDL_Inô
(
SDL_INIT_VIDEO
 | 
SDL_INIT_JOYSTICK
 | 
SDL_INIT_NOPARACHUTE
);

430 #ifde‡
GP2X


431 
	`©exô
(
gp2x_quô
);

433 
	`©exô
(
SDL_Quô
);

436 i‡(
	`s¸ìn_öô
(Ë=
GN_FALSE
) {

437 
	`¥ötf
("Screen initialization failed.\n");

438 
	`exô
(-1);

441 
buf„r
 = 
	`SDL_Cª©eRGBSurÁ˚
(
surÁ˚_ty≥
, 352, 256, 16, 0xF800, 0x7E0,

443 
	`SDL_FûlRe˘
(
buf„r
,
NULL
,
	`SDL_M≠RGB
(buf„r->
f‹m©
,0xE5,0xE5,0xE5));

445 
f⁄tbuf
 = 
	`SDL_Cª©eRGBSurÁ˚From
(
f⁄t_image
.
pixñ_d©a
, f⁄t_image.
width
, f⁄t_image.
height


446 , 24, 
f⁄t_image
.
width
 * 3, 0xFF0000, 0xFF00, 0xFF, 0);

447 
	`SDL_SëCﬁ‹Key
(
f⁄tbuf
,
SDL_SRCCOLORKEY
,
	`SDL_M≠RGB
(f⁄tbuf->
f‹m©
,0xFF,0,0xFF));

448 
f⁄tbuf
=
	`SDL_Di•œyF‹m©
(fontbuf);

449 
ic⁄
 = 
	`SDL_Cª©eRGBSurÁ˚From
(
gngeo_ic⁄
.
pixñ_d©a
, gngeo_ic⁄.
width
,

450 
gngeo_ic⁄
.
height
, gngeo_ic⁄.
byãs_≥r_pixñ
*8,

451 
gngeo_ic⁄
.
width
 * gngeo_ic⁄.
byãs_≥r_pixñ
,

454 
	`SDL_WM_SëIc⁄
(
ic⁄
,
NULL
);

456 
	}
}

	@src/screen.h

2 #i‚de‡
_SCREEN_H_


3 
	#_SCREEN_H_


	)

5 
	~"SDL.h
"

6 
	~"li°.h
"

8 
	sRGB2YUV


10 
Uöt16
 
	my
;

11 
Uöt8
 
	mu
;

12 
Uöt8
 
	mv
;

13 
Uöt32
 
	myuy2
;

14 }
	tRGB2YUV
;

16 
RGB2YUV
 
rgb2yuv
[65536];

18 
öô_rgb2yuv_èbÀ
();

20 
SDL_SurÁ˚
 *
	gs¸ìn
;

21 
SDL_SurÁ˚
 *
	gbuf„r
, *
	g•rbuf
, *
	gÂs_buf
, *
	gsˇn
, *
	gf⁄tbuf
;

24 
SDL_Re˘
 
	gvisibÀ_¨ó
;

26 
	gys¸ì≈addög
;

28 
Uöt8
 
	göãΩﬁ©i⁄
;

29 
Uöt8
 
	gnblôãr
;

30 
Uöt8
 
	g√f„˘
;

31 
Uöt8
 
	gsˇÀ
;

32 
Uöt8
 
	gfuŒs¸ìn
;

34 
Uöt8
 
gë_ef„˘_by_«me
(*
«me
);

35 
Uöt8
 
gë_blôãr_by_«me
(*
«me
);

36 
¥öt_blôãr_li°
();

37 
¥öt_ef„˘_li°
();

39 
LIST
* 
¸óã_ef„˘_li°
();

40 
LIST
* 
¸óã_blôãr_li°
();

42 
s¸ìn_öô
();

43 
s¸ìn_ªöô
();

44 
s¸ìn_ªsize
(
w
, 
h
);

45 
s¸ìn_upd©e
();

46 
s¸ìn_˛o£
();

48 
s¸ìn_fuŒs¸ìn
();

49 
sdl_£t_tôÀ
(*
«me
);

50 
öô_sdl
();

	@src/sound.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<°rög.h
>

24 
	~<time.h
>

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~"SDL.h
"

28 
	~"sound.h
"

29 
	~"emu.h
"

30 
	~"mem‹y.h
"

31 
	~"¥ofûî.h
"

32 
	~"gnutû.h
"

33 
	~"ym2610/ym2610.h
"

34 #ifde‡
GP2X


35 
	~"ym2610-940/940sh¨ed.h
"

38 #ifde‡
USE_OSS


39 
	~<sys/soundˇrd.h
>

40 
	~<sys/io˘l.h
>

41 
	~<f˙é.h
>

42 
	~<±hªad.h
>

46 
SDL_AudioS≥c
 * 
	gdesúed
, *
	gobèö
;

48 
	#MIXER_MAX_CHANNELS
 16

	)

50 
	#BUFFER_LEN
 16384

	)

53 
	gaudio_ßm∂e_øã
;

54 
Uöt16
 
	g∂ay_buf„r
[
BUFFER_LEN
];

56 #i‚de‡
GP2X


57 
	#NB_SAMPLES
 512

	)

60 
	#NB_SAMPLES
 64

	)

64 #i‚de‡
USE_OSS


66 
	$upd©e_sdl_°ªam
(*
u£rd©a
, 
Uöt8
 * 
°ªam
, 
Àn
)

68 #ifde‡
ENABLE_940T


69 
Uöt32
 
∂ay_buf„r_pos
;

72 
	`PROFILER_START
(
PROF_SOUND
);

75 #ifde‡
ENABLE_940T


76 i‡(
sh¨ed_˘l
->
buf_pos
 >
∂ay_buf„r_pos
 &&

77 
sh¨ed_˘l
->
buf_pos
 <
∂ay_buf„r_pos
 + 
Àn
) {

82 i‡(
sh¨ed_˘l
->
buf_pos
 + sh¨ed_˘l->
ßm∂e_Àn
 >
∂ay_buf„r_pos
 &&

83 
sh¨ed_˘l
->
buf_pos
 + sh¨ed_˘l->
ßm∂e_Àn
 <
∂ay_buf„r_pos
 + 
Àn
) {

88 i‡–
∂ay_buf„r_pos
+
Àn
>
SAMPLE_BUFLEN
) {

89 
œ°
=(
SAMPLE_BUFLEN
-
∂ay_buf„r_pos
);

90 
	`mem˝y
(
°ªam
, (
Uöt8
 *Ë
sh¨ed_˘l
->
∂ay_buf„r
+ 
∂ay_buf„r_pos
, 
œ°
);

91 
	`mem˝y
(
°ªam
+
œ°
, (
Uöt8
 *Ë
sh¨ed_˘l
->
∂ay_buf„r
, 
Àn
-last);

93 
∂ay_buf„r_pos
=
Àn
-
œ°
;

95 
	`mem˝y
(
°ªam
, (
Uöt8
 *Ë
sh¨ed_˘l
->
∂ay_buf„r
+
∂ay_buf„r_pos
, 
Àn
);

96 
∂ay_buf„r_pos
+=
Àn
;

103 
	`YM2610Upd©e_°ªam
(
Àn
/4);

104 
	`mem˝y
(
°ªam
, (
Uöt8
 *Ë
∂ay_buf„r
, 
Àn
);

107 
	`PROFILER_STOP
(
PROF_SOUND
);

109 
	}
}

110 
	$dummy_°ªam
(*
u£rd©a
, 
Uöt8
 * 
°ªam
, 
Àn
) {

111 
	}
}

112 
	gsound_öôülize
=
GN_FALSE
;

114 
	$öô_sdl_audio
()

116 i‡(
sound_öôülize
==
GN_TRUE
)

117 
	`˛o£_sdl_audio
();

118 
sound_öôülize
=
GN_TRUE
;

119 
	`SDL_InôSubSy°em
(
SDL_INIT_AUDIO
);

121 
desúed
 = (
SDL_AudioS≥c
 *Ë
	`mÆloc
((SDL_AudioSpec));

122 
obèö
 = (
SDL_AudioS≥c
 *Ë
	`mÆloc
((SDL_AudioSpec));

123 
audio_ßm∂e_øã
 = 
c⁄f
.
ßm∂e_øã
;

124 
desúed
->
‰eq
 = 
c⁄f
.
ßm∂e_øã
;

125 
desúed
->
ßm∂es
 = 
NB_SAMPLES
;

127 #ifde‡
WORDS_BIGENDIAN


128 
desúed
->
f‹m©
 = 
AUDIO_S16MSB
;

130 
desúed
->
f‹m©
 = 
AUDIO_S16
;

132 
desúed
->
ch™√ls
 = 2;

133 
desúed
->
ˇŒback
 = 
upd©e_sdl_°ªam
;

136 
desúed
->
u£rd©a
 = 
NULL
;

138 
	`SDL_O≥nAudio
(
desúed
, 
obèö
);

139 
	`¥ötf
("Obèöed sam∂êøã: %d\n",
obèö
->
‰eq
);

140 
c⁄f
.
ßm∂e_øã
=
obèö
->
‰eq
;

141  
GN_TRUE
;

142 
	}
}

144 
	$˛o£_sdl_audio
() {

145 
sound_öôülize
=
GN_FALSE
;

146 
	`SDL_Pau£Audio
(1);

147 
	`SDL_Clo£Audio
();

148 
	`SDL_QuôSubSy°em
(
SDL_INIT_AUDIO
);

149 i‡(
desúed
Ë
	`‰ì
(desired);

150 
desúed
 = 
NULL
;

151 i‡(
obèö
Ë
	`‰ì
(obtain);

152 
obèö
 = 
NULL
;

153 
	}
}

155 
	$∑u£_audio
(
⁄
) {

156 
	`¥ötf
("PAUSEáudiÿ%d\n",
⁄
);

157 
	`SDL_Pau£Audio
(
⁄
);

158 
	}
}

161 
	gdev_d•
=0;

162 
±hªad_t
 
	gaudio_thªad
;

163 vﬁ©ûê
	g∑u£d
=0;

164 
	gbuÊí
=0;

167 *
	$fûl_audio_d©a
(*
±r
) {

168 
	`¥ötf
("Updateáudio\n");

172 i‡(!
∑u£d
) {

173 
	`YM2610Upd©e_°ªam
(
buÊí
/4);

174 
	`wrôe
(
dev_d•
,
∂ay_buf„r
,
buÊí
);

178 
	}
}

179 
	$∑u£_audio
(
⁄
) {

180 
öô
=0;

181 i‡(
öô
==0) {

182 
	`±hªad_¸óã
(&
audio_thªad
,
NULL
,
fûl_audio_d©a
,NULL);

183 
öô
=1;

185 
∑u£d
=
⁄
;

186 
	}
}

189 
	$öô_sdl_audio
() {

190 
f‹m©
;

191 
ch™√ls
=2;

192 
•ìd
=
c⁄f
.
ßm∂e_øã
;

193 
¨g
 = 0x9;

195 
dev_d•
=
	`›í
("/dev/d•",
O_WRONLY
);

196 i‡(
dev_d•
==0) {

197 
	`¥ötf
("Couldn't open /dev/dsp\n");

198  
GN_FALSE
;

201 i‡(
	`io˘l
(
dev_d•
, 
SNDCTL_DSP_SETFRAGMENT
, &
¨g
)) {

202 
	`¥ötf
(" SNDCTL_DSP_SETFRAGMENT Error\n");

203  
GN_FALSE
;

206 #ifde‡
WORDS_BIGENDIAN


207 
f‹m©
 = 
AFMT_S16_BE
;

209 
f‹m©
 = 
AFMT_S16_LE
;

212 i‡(
	`io˘l
(
dev_d•
, 
SNDCTL_DSP_SETFMT
, &
f‹m©
) == -1) {

213 
	`≥º‹
("SNDCTL_DSP_SETFMT");

214  
GN_FALSE
;

216 i‡(
	`io˘l
(
dev_d•
, 
SNDCTL_DSP_CHANNELS
, &
ch™√ls
) == -1) {

217 
	`≥º‹
("SNDCTL_DSP_CHANNELS");

218  
GN_FALSE
;

220 i‡(
	`io˘l
(
dev_d•
, 
SNDCTL_DSP_SPEED
, &
•ìd
)==-1) {

221 
	`≥º‹
("SNDCTL_DSP_SPEED");

222  
GN_FALSE
;

227 i‡(
	`io˘l
(
dev_d•
, 
SNDCTL_DSP_GETBLKSIZE
, &
buÊí
) == -1) {

228  
GN_FALSE
;

230 
	`¥ötf
("Bu‡Lí=%d\n",
buÊí
);

231 
buÊí
*=2;

233  
GN_TRUE
;

234 
	}
}

236 
	$˛o£_sdl_audio
() {

237 
	`˛o£
(
dev_d•
);

238 
	}
}

	@src/sound.h

19 #i‚de‡
_SOUND_H_


20 
	#_SOUND_H_


	)

22 
	~"SDL.h
"

24 
	#NB_SEGMENT
 20

	)

27 
SDL_AudioS≥c
 * 
desúed
, *
obèö
;

28 
öô_sdl_audio
();

29 
˛o£_sdl_audio
();

30 
∑u£_audio
(
⁄
);

	@src/star/cpudebug.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<°d¨g.h
>

13 
	~<˘y≥.h
>

14 
	~"°¨˝u.h
"

15 
	~"˝udebug.h
"

17 (*
˝udebug_gë
)(*, );

18 (*
˝udebug_put
)(const *);

20 
	$˝udebug_gës
(*
s
, 
n
) {

21 if(
˝udebug_gë
Ë
	`˝udebug_gë
(
s
, 
n
);

22 
	`fgës
(
s
, 
n
, 
°dö
);

23 
	}
}

25 
	$˝udebug_putc
(
c
) {

26 
buf„r
[100];

27 
l
 = 0;

28 
buf„r
[
l
++] = 
c
;

30 
buf„r
[
l
] = 0;

31 if(
˝udebug_put
Ë
	`˝udebug_put
(
buf„r
);

32 
	`Âuts
(
buf„r
, 
°dout
);

33 
l
 = 0;

35 
	}
}

37 
	$˝udebug_¥ötf
(c⁄° *
fmt
, ...) {

38 
buf„r
[400];

39 *
s
 = 
buf„r
;

40 
va_li°
 
≠
;

41 
	`va_°¨t
(
≠
, 
fmt
);

42 
	`v•rötf
(
s
, 
fmt
, 
≠
);

43 
	`va_íd
(
≠
);

44 *
s
Ë
	`˝udebug_putc
(*s++);

45 
	}
}

47 
	#byã
 

	)

48 
	#w‹d
 

	)

49 
	#dw‹d
 

	)

51 
	#öt08
 sig√d 

	)

52 
	#öt16
 sig√d 

	)

53 
	#öt32
 sig√d 

	)

55 
	$˝udebug_dißbÀd
(){ 0;
	}
}

57 
	#ó
 
óˇlc
[
ö°
&0x3F]()

	)

87 
	#hex08
 "%02X"

	)

88 
	#hex16
 "%04X"

	)

89 
	#hex32
 "%08X"

	)

90 
	#hexl⁄g
 "%06X"

	)

92 
	#i§egi°î
 ((
ö°
&0x0030)==0x0000)

	)

93 
	#ißddªs§
 ((
ö°
&0x0038)==0x0008)

	)

95 
	góbuf„r
[20],
	gsdebug
[80];

96 
dw‹d
 
	gdebugpc
,
	ghexaddr
;

97 
	gisize
;

98 
w‹d
 
	gö°
;

100 
w‹d
 
	$„tch
(){

101 
debugpc
+=2;

102 
isize
+=2;

103 (
	`s68000„tch
(
debugpc
-2)&0xFFFF);

104 
	}
}

106 
dw‹d
 
	$„tchl
(){

107 
dw‹d
 
t
;

108 
t
=(
	`s68000„tch
(
debugpc
)&0xFFFF);

109 
t
<<=16;

110 
t
|=(
	`s68000„tch
(
debugpc
+2)&0xFFFF);

111 
debugpc
+=4;

112 
isize
+=4;

113  
t
;

114 
	}
}

116 
öt08
 
	g›size
[1024]={

178 
	#óˇlc_drd
(
n
,
r
Ë
	`n
(){
	`•rötf
(
óbuf„r
,"d%d",r);}

	)

179 
	#óˇlc_¨d
(
n
,
r
Ë
	`n
(){
	`•rötf
(
óbuf„r
,"a%d",r);}

	)

180 
	#óˇlc_¨i
(
n
,
r
Ë
	`n
(){
	`•rötf
(
óbuf„r
,"◊%d)",r);}

	)

181 
	#óˇlc_¨i_öc
(
n
,
r
Ë
	`n
(){
	`•rötf
(
óbuf„r
,"◊%d)+",r);}

	)

182 
	#óˇlc_¨i_dec
(
n
,
r
Ë
	`n
(){
	`•rötf
(
óbuf„r
,"-◊%d)",r);}

	)

183 
	#óˇlc_¨i_dis
(
n
,
r
Ë
	`n
(){\

184 
öt16
 
brõ„xt
=
	`„tch
();\

185 
	`•rötf
(
óbuf„r
,"%c$" 
hex16
 "◊%d)",(
brõ„xt
<0)?'-':'+',(brõ„xt<0)?-brõ„xt:brõ„xt,
r
);\

186 }

	)

187 
	#óˇlc_¨i_öd
(
n
,
r
Ë
	`n
(){\

188 
öt16
 
brõ„xt
=
	`„tch
();\

189 if(
brõ„xt
<0)
	`•rötf
(
óbuf„r
,"-$" 
hex08
 "(a%d,%c%d.%c)",\

190 (
öt08
)-
brõ„xt
,
r
,\

191 
brõ„xt
&0x8000?'a':'d',(briefext>>12)&7,\

192 
brõ„xt
&0x800?'l':'w');\

193 
	`•rötf
(
óbuf„r
,"+$" 
hex08
 "(a%d,%c%d.%c)",\

194 (
öt08
)
brõ„xt
,
r
,\

195 
brõ„xt
&0x8000?'a':'d',(briefext>>12)&7,\

196 
brõ„xt
&0x800?'l':'w');\

197 }

	)

198 
	$óˇlc_drd
(
ó_0_0
,0)

199 
	$óˇlc_drd
(
ó_0_1
,1)

200 
	$óˇlc_drd
(
ó_0_2
,2)

201 
	$óˇlc_drd
(
ó_0_3
,3)

202 
	$óˇlc_drd
(
ó_0_4
,4)

203 
	$óˇlc_drd
(
ó_0_5
,5)

204 
	$óˇlc_drd
(
ó_0_6
,6)

205 
	$óˇlc_drd
(
ó_0_7
,7)

206 
	$óˇlc_¨d
(
ó_1_0
,0)

207 
	$óˇlc_¨d
(
ó_1_1
,1)

208 
	$óˇlc_¨d
(
ó_1_2
,2)

209 
	$óˇlc_¨d
(
ó_1_3
,3)

210 
	$óˇlc_¨d
(
ó_1_4
,4)

211 
	$óˇlc_¨d
(
ó_1_5
,5)

212 
	$óˇlc_¨d
(
ó_1_6
,6)

213 
	$óˇlc_¨d
(
ó_1_7
,7)

214 
	$óˇlc_¨i
(
ó_2_0
,0)

215 
	$óˇlc_¨i
(
ó_2_1
,1)

216 
	$óˇlc_¨i
(
ó_2_2
,2)

217 
	$óˇlc_¨i
(
ó_2_3
,3)

218 
	$óˇlc_¨i
(
ó_2_4
,4)

219 
	$óˇlc_¨i
(
ó_2_5
,5)

220 
	$óˇlc_¨i
(
ó_2_6
,6)

221 
	$óˇlc_¨i
(
ó_2_7
,7)

222 
	$óˇlc_¨i_öc
(
ó_3_0
,0)

223 
	$óˇlc_¨i_öc
(
ó_3_1
,1)

224 
	$óˇlc_¨i_öc
(
ó_3_2
,2)

225 
	$óˇlc_¨i_öc
(
ó_3_3
,3)

226 
	$óˇlc_¨i_öc
(
ó_3_4
,4)

227 
	$óˇlc_¨i_öc
(
ó_3_5
,5)

228 
	$óˇlc_¨i_öc
(
ó_3_6
,6)

229 
	$óˇlc_¨i_öc
(
ó_3_7
,7)

230 
	$óˇlc_¨i_dec
(
ó_4_0
,0)

231 
	$óˇlc_¨i_dec
(
ó_4_1
,1)

232 
	$óˇlc_¨i_dec
(
ó_4_2
,2)

233 
	$óˇlc_¨i_dec
(
ó_4_3
,3)

234 
	$óˇlc_¨i_dec
(
ó_4_4
,4)

235 
	$óˇlc_¨i_dec
(
ó_4_5
,5)

236 
	$óˇlc_¨i_dec
(
ó_4_6
,6)

237 
	$óˇlc_¨i_dec
(
ó_4_7
,7)

238 
	$óˇlc_¨i_dis
(
ó_5_0
,0)

239 
	$óˇlc_¨i_dis
(
ó_5_1
,1)

240 
	$óˇlc_¨i_dis
(
ó_5_2
,2)

241 
	$óˇlc_¨i_dis
(
ó_5_3
,3)

242 
	$óˇlc_¨i_dis
(
ó_5_4
,4)

243 
	$óˇlc_¨i_dis
(
ó_5_5
,5)

244 
	$óˇlc_¨i_dis
(
ó_5_6
,6)

245 
	$óˇlc_¨i_dis
(
ó_5_7
,7)

246 
	$óˇlc_¨i_öd
(
ó_6_0
,0)

247 
	$óˇlc_¨i_öd
(
ó_6_1
,1)

248 
	$óˇlc_¨i_öd
(
ó_6_2
,2)

249 
	$óˇlc_¨i_öd
(
ó_6_3
,3)

250 
	$óˇlc_¨i_öd
(
ó_6_4
,4)

251 
	$óˇlc_¨i_öd
(
ó_6_5
,5)

252 
	$óˇlc_¨i_öd
(
ó_6_6
,6)

253 
	$óˇlc_¨i_öd
(
ó_6_7
,7)

261 
	$óˇlc•ecül_absh‹t
(){

262 
w‹d
 
brõ„xt
;

263 
brõ„xt
=
	`„tch
();

264 
	`•rötf
(
óbuf„r
,"($" 
hex16
 ")",
brõ„xt
);

265 
	}
}

267 
	$óˇlc•ecül_ab¶⁄g
(){

268 
dw‹d
 
brõ„xt
;

269 
brõ„xt
=
	`„tch
();

270 
brõ„xt
<<=16;

271 
brõ„xt
|=
	`„tch
();

272 
	`•rötf
(
óbuf„r
,"($"
hexl⁄g
")",
brõ„xt
);

273 
	}
}

275 
	$óˇlc•ecül_immd©a
(){

276 
dw‹d
 
brõ„xt
;

277 
›size
[
ö°
>>6]){

279 
brõ„xt
=
	`„tch
()&0xFF;

280 
	`•rötf
(
óbuf„r
,"#$" 
hex08
,
brõ„xt
);

283 
brõ„xt
=
	`„tch
();

284 
	`•rötf
(
óbuf„r
,"#$" 
hex16
,
brõ„xt
);

287 
brõ„xt
=
	`„tch
();

288 
brõ„xt
<<=16;

289 
brõ„xt
|=
	`„tch
();

290 
	`•rötf
(
óbuf„r
,"#$" 
hex32
,
brõ„xt
);

293 
	}
}

295 
	$óˇlc•ecül_pci_dis
(){

296 
dw‹d
 
dpc
 = 
debugpc
;

297 
w‹d
 
brõ„xt
 = 
	`„tch
();

298 
	`•rötf
(
óbuf„r
,"$" 
hexl⁄g
 "’c)",((
öt16
)(
brõ„xt
))+
dpc
);

299 
	}
}

301 
	$óˇlc•ecül_pci_öd
(){

302 
dw‹d
 
dpc
 = 
debugpc
;

303 
w‹d
 
brõ„xt
 = 
	`„tch
();

304 
	`•rötf
(
óbuf„r
,"$" 
hexl⁄g
 "(pc,%c%d)",

305 ((
öt08
)(
brõ„xt
))+
dpc
,

306 
brõ„xt
&0x8000?'a':'d',(briefext>>12)&7);

307 
	}
}

309 
	$óˇlc•ecül_unknown
(){

310 
	`•rötf
(
óbuf„r
,"*** UNKNOWN EA MODE ***");

311 
	}
}

313 (*(
	góˇlc
[64]))()={

314 
ó_0_0
,
ó_0_1
,
ó_0_2
,
ó_0_3
,
ó_0_4
,
ó_0_5
,
ó_0_6
,
ó_0_7
,

315 
ó_1_0
,
ó_1_1
,
ó_1_2
,
ó_1_3
,
ó_1_4
,
ó_1_5
,
ó_1_6
,
ó_1_7
,

316 
ó_2_0
,
ó_2_1
,
ó_2_2
,
ó_2_3
,
ó_2_4
,
ó_2_5
,
ó_2_6
,
ó_2_7
,

317 
ó_3_0
,
ó_3_1
,
ó_3_2
,
ó_3_3
,
ó_3_4
,
ó_3_5
,
ó_3_6
,
ó_3_7
,

318 
ó_4_0
,
ó_4_1
,
ó_4_2
,
ó_4_3
,
ó_4_4
,
ó_4_5
,
ó_4_6
,
ó_4_7
,

319 
ó_5_0
,
ó_5_1
,
ó_5_2
,
ó_5_3
,
ó_5_4
,
ó_5_5
,
ó_5_6
,
ó_5_7
,

320 
ó_6_0
,
ó_6_1
,
ó_6_2
,
ó_6_3
,
ó_6_4
,
ó_6_5
,
ó_6_6
,
ó_6_7
,

321 
óˇlc•ecül_absh‹t
,
óˇlc•ecül_ab¶⁄g
,
óˇlc•ecül_pci_dis
,
óˇlc•ecül_pci_öd
,

322 
óˇlc•ecül_immd©a
,
óˇlc•ecül_unknown
,eacalcspecial_unknown,eacalcspecial_unknown};

324 
	$m68unsuµ‹ãd
(){

325 
	`•rötf
(
sdebug
,"*** NOT RECOGNIZED ***");

326 
	}
}

328 
	$m68_uƒecog_x
(){

329 
	`•rötf
(
sdebug
,"unrecognized");

330 
	}
}

334 
	$m68_bô›dn_x
(){

335 
öt16
 
d16
;

336 if((
ö°
&0x38)==0x08){

337 
d16
=
	`„tch
();

338 
	`•rötf
(
óbuf„r
,"%c$" 
hex16
 "◊%d)",(
d16
<0)?'-':'+',(d16<0)?-d16:d16,
ö°
&7);

339 if(!(
ö°
&0x80)){

340 
	`•rötf
(
sdebug
,"movep%s %s,d%d",

341 ((
ö°
&0x40)==0x40)?".l":" ",

342 
óbuf„r
,
ö°
>>9

345 
	`•rötf
(
sdebug
,"movep%s d%d,%s",

346 ((
ö°
&0x40)==0x40)?".l":" ",

347 
ö°
>>9,
óbuf„r


351 
ó
;

352 (
ö°
>>6)&3){

353 0:
	`•rötf
(
sdebug
,"bt° d%d,%s",
ö°
>>9,
óbuf„r
);;

354 1:
	`•rötf
(
sdebug
,"bchg d%d,%s",
ö°
>>9,
óbuf„r
);;

355 2:
	`•rötf
(
sdebug
,"b˛∏ d%d,%s",
ö°
>>9,
óbuf„r
);;

356 3:
	`•rötf
(
sdebug
,"b£à d%d,%s",
ö°
>>9,
óbuf„r
);;

360 
	}
}

362 
	#bôã°_°
(
«me
,
dump
Ë
	`«me
(){\

363 
byã
 
shi·by
=(
	`„tch
()&0xFF);\

364 
ó
;
	`•rötf
(
sdebug
,"%† #$"
hex08
",%s",
dump
,
shi·by
,
óbuf„r
);\

365 }

	)

367 
bôã°_°
(
m68_bt°_°_x
,"btst")

368 
bôã°_°
(
m68_b˛r_°_x
,"bclr")

369 
bôã°_°
(
m68_b£t_°_x
,"bset")

370 
bôã°_°
(
m68_bchg_°_x
,"bchg")

374 
	#c⁄dôi⁄Æ_bønch
(
«me
,
dump
Ë
	`«me
(){\

375 
öt16
 
di•
;\

376 
öt32
 
cuºíçc
=
debugpc
;\

377 
di•
=(
öt08
)(
ö°
&0xFF);\

378 if(!
di•
)di•=
	`„tch
();\

379 
	`•rötf
(
sdebug
,"%† ($"
hexl⁄g
")",
dump
,
cuºíçc
+
di•
);\

380 }

	)

382 
c⁄dôi⁄Æ_bønch
(
m68_bø_____x
,"bra")

383 
c⁄dôi⁄Æ_bønch
(
m68_bhi_____x
,"bhi")

384 
c⁄dôi⁄Æ_bønch
(
m68_bls_____x
,"bls")

385 
c⁄dôi⁄Æ_bønch
(
m68_bcc_____x
,"bcc")

386 
c⁄dôi⁄Æ_bønch
(
m68_bcs_____x
,"bcs")

387 
c⁄dôi⁄Æ_bønch
(
m68_b√_____x
,"bne")

388 
c⁄dôi⁄Æ_bønch
(
m68_beq_____x
,"beq")

389 
c⁄dôi⁄Æ_bønch
(
m68_bvc_____x
,"bvc")

390 
c⁄dôi⁄Æ_bønch
(
m68_bvs_____x
,"bvs")

391 
c⁄dôi⁄Æ_bønch
(
m68_b∂_____x
,"bpl")

392 
c⁄dôi⁄Æ_bønch
(
m68_bmi_____x
,"bmi")

393 
c⁄dôi⁄Æ_bønch
(
m68_bge_____x
,"bge")

394 
c⁄dôi⁄Æ_bønch
(
m68_b…_____x
,"blt")

395 
c⁄dôi⁄Æ_bønch
(
m68_bgt_____x
,"bgt")

396 
c⁄dôi⁄Æ_bønch
(
m68_bÀ_____x
,"ble")

400 
	#scc_dbcc
(
«me
,
dump1
,
dump2
)\

401 
	`«me
(){\

402 
ó
;if(
ißddªs§
){\

403 
öt16
 
di•
;\

404 
di•
=
	`„tch
();\

405 
	`•rötf
(
sdebug
,"%† d%d,($"
hexl⁄g
")",
dump2
,
ö°
&7,
debugpc
+
di•
-2);\

406 }
	`•rötf
(
sdebug
,"%† %s",
dump1
,
óbuf„r
);\

407 }

	)

409 
scc_dbcc
(
m68_°______x
,"st ","dbt ")

410 
scc_dbcc
(
m68_sf______x
,"sf ","dbra")

411 
scc_dbcc
(
m68_shi_____x
,"shi","dbhi")

412 
scc_dbcc
(
m68_¶s_____x
,"sls","dbls")

413 
scc_dbcc
(
m68_scc_____x
,"scc","dbcc")

414 
scc_dbcc
(
m68_scs_____x
,"scs","dbcs")

415 
scc_dbcc
(
m68_¢e_____x
,"sne","dbne")

416 
scc_dbcc
(
m68_£q_____x
,"seq","dbeq")

417 
scc_dbcc
(
m68_svc_____x
,"svc","dbvc")

418 
scc_dbcc
(
m68_svs_____x
,"svs","dbvs")

419 
scc_dbcc
(
m68_•l_____x
,"spl","dbpl")

420 
scc_dbcc
(
m68_smi_____x
,"smi","dbmi")

421 
scc_dbcc
(
m68_sge_____x
,"sge","dbge")

422 
scc_dbcc
(
m68_¶t_____x
,"slt","dblt")

423 
scc_dbcc
(
m68_sgt_____x
,"sgt","dbgt")

424 
scc_dbcc
(
m68_¶e_____x
,"sle","dble")

428 
	$m68_jmp_____x
(){
ó
;
	`•rötf
(
sdebug
,"jm∞ %s",
óbuf„r
);
	}
}

432 
	$m68_j§_____x
(){
ó
;
	`•rötf
(
sdebug
,"j§ %s",
óbuf„r
);
	}
}

434 
	$m68_b§_____x
(){

435 
öt16
 
di•
;

436 
öt32
 
cuºíçc
=
debugpc
;

437 
di•
=(
öt08
)(
ö°
&0xFF);

438 if(!
di•
)di•=
	`„tch
();

439 
	`•rötf
(
sdebug
,"%† ($"
hexl⁄g
")","b§",
di•
+
cuºíçc
);

440 
	}
}

445 
	$m68_ès_____b
(){

446 if(
ö°
==0x4AFC){

447 
	`•rötf
(
sdebug
,"illegal");

449 
ó
;

450 
	`•rötf
(
sdebug
,"è† %s",
óbuf„r
);

452 
	}
}

456 
	$m68_Àa___n_l
(){

457 
ó
;
	`•rötf
(
sdebug
,"À® %s,a%d",
óbuf„r
,(
ö°
>>9)&7);

458 
	}
}

462 
	$m68_≥a_____l
(){

463 
ó
;if(
i§egi°î
){

464 
	`•rötf
(
sdebug
,"sw≠ d%d",
ö°
&7);

466 
	`•rötf
(
sdebug
,"≥® %s",
óbuf„r
);

468 
	}
}

472 
	#√g©e_ó
(
«me
,
dump
Ë
	`«me
(){\

473 
ó
;
	`•rötf
(
sdebug
,"%† %s",
dump
,
óbuf„r
);\

474 }

	)

476 
√g©e_ó
(
m68_√g_____b
,"neg.b ")

477 
√g©e_ó
(
m68_√g_____w
,"neg ")

478 
√g©e_ó
(
m68_√g_____l
,"neg.l ")

479 
√g©e_ó
(
m68_√gx____b
,"negx.b")

480 
√g©e_ó
(
m68_√gx____w
,"negx ")

481 
√g©e_ó
(
m68_√gx____l
,"negx.l")

482 
√g©e_ó
(
m68_nŸ_____b
,"not.b ")

483 
√g©e_ó
(
m68_nŸ_____w
,"not ")

484 
√g©e_ó
(
m68_nŸ_____l
,"not.l ")

485 
√g©e_ó
(
m68_˛r_____b
,"clr.b ")

486 
√g©e_ó
(
m68_˛r_____w
,"clr ")

487 
√g©e_ó
(
m68_˛r_____l
,"clr.l ")

488 
√g©e_ó
(
m68_t°_____b
,"tst.b ")

489 
√g©e_ó
(
m68_t°_____w
,"tst ")

490 
√g©e_ó
(
m68_t°_____l
,"tst.l ")

496 
	#im_to_ó
(
«me
,
ty≥
,
hexty≥
,
„tchty≥
,
dump
,
r
Ë
	`«me
(){\

497 
ty≥
 
§c
=—y≥)
	`„tchty≥
();\

498 if((
ö°
&0x3F)==0x3C){\

499 
	`•rötf
(
sdebug
,"%† #$"
hexty≥
",%s",
dump
,
§c
,
r
);\

501 
ó
;
	`•rötf
(
sdebug
,"%† #$"
hexty≥
",%s",
dump
,
§c
,
óbuf„r
);\

503 }

	)

505 
im_to_ó
(
m68_‹i_____b
,
byã
 ,
hex08
,
„tch
 ,"or.b ","ccr")

506 
im_to_ó
(
m68_‹i_____w
,
w‹d
 ,
hex16
,
„tch
 ,"or ","sr" )

507 
im_to_ó
(
m68_‹i_____l
,
dw‹d
,
hex32
,
„tchl
,"or.l ","" )

508 
im_to_ó
(
m68_™di____b
,
byã
 ,
hex08
,
„tch
 ,"and.b","ccr")

509 
im_to_ó
(
m68_™di____w
,
w‹d
 ,
hex16
,
„tch
 ,"and ","sr" )

510 
im_to_ó
(
m68_™di____l
,
dw‹d
,
hex32
,
„tchl
,"and.l","" )

511 
im_to_ó
(
m68_e‹i____b
,
byã
 ,
hex08
,
„tch
 ,"eor.b","ccr")

512 
im_to_ó
(
m68_e‹i____w
,
w‹d
 ,
hex16
,
„tch
 ,"eor ","sr" )

513 
im_to_ó
(
m68_e‹i____l
,
dw‹d
,
hex32
,
„tchl
,"eor.l","" )

514 
im_to_ó
(
m68_addi____b
,
byã
 ,
hex08
,
„tch
 ,"add.b","" )

515 
im_to_ó
(
m68_addi____w
,
w‹d
 ,
hex16
,
„tch
 ,"add ","" )

516 
im_to_ó
(
m68_addi____l
,
dw‹d
,
hex32
,
„tchl
,"add.l","" )

517 
im_to_ó
(
m68_subi____b
,
byã
 ,
hex08
,
„tch
 ,"sub.b","" )

518 
im_to_ó
(
m68_subi____w
,
w‹d
 ,
hex16
,
„tch
 ,"sub ","" )

519 
im_to_ó
(
m68_subi____l
,
dw‹d
,
hex32
,
„tchl
,"sub.l","" )

520 
im_to_ó
(
m68_cmpi____b
,
byã
 ,
hex08
,
„tch
 ,"cmp.b","" )

521 
im_to_ó
(
m68_cmpi____w
,
w‹d
 ,
hex16
,
„tch
 ,"cmp ","" )

522 
im_to_ó
(
m68_cmpi____l
,
dw‹d
,
hex32
,
„tchl
,"cmp.l","" )

528 
	#ó_to_dn
(
«me
,
dump
Ë
	`«me
(){\

529 
ó
;
	`•rötf
(
sdebug
,"%† %s,d%d",
dump
,
óbuf„r
,(
ö°
>>9)&7);\

530 }

	)

532 
ó_to_dn
(
m68_‹__d_n_b
,"or.b ")

533 
ó_to_dn
(
m68_‹__d_n_w
,"or ")

534 
ó_to_dn
(
m68_‹__d_n_l
,"or.l ")

535 
ó_to_dn
(
m68_™d_d_n_b
,"and.b")

536 
ó_to_dn
(
m68_™d_d_n_w
,"and ")

537 
ó_to_dn
(
m68_™d_d_n_l
,"and.l")

538 
ó_to_dn
(
m68_add_d_n_b
,"add.b")

539 
ó_to_dn
(
m68_add_d_n_w
,"add ")

540 
ó_to_dn
(
m68_add_d_n_l
,"add.l")

541 
ó_to_dn
(
m68_sub_d_n_b
,"sub.b")

542 
ó_to_dn
(
m68_sub_d_n_w
,"sub ")

543 
ó_to_dn
(
m68_sub_d_n_l
,"sub.l")

544 
ó_to_dn
(
m68_cmp_d_n_b
,"cmp.b")

545 
ó_to_dn
(
m68_cmp_d_n_w
,"cmp ")

546 
ó_to_dn
(
m68_cmp_d_n_l
,"cmp.l")

552 
	#ó_to_™
(
«me
,
dump
Ë
	`«me
(){\

553 
ó
;
	`•rötf
(
sdebug
,"%† %s,a%d",
dump
,
óbuf„r
,((
ö°
>>9)&7));\

554 }

	)

556 
ó_to_™
(
m68_adda__n_w
,"add ")

557 
ó_to_™
(
m68_adda__n_l
,"add.l")

558 
ó_to_™
(
m68_suba__n_w
,"sub ")

559 
ó_to_™
(
m68_suba__n_l
,"sub.l")

560 
ó_to_™
(
m68_cm∑__n_w
,"cmp ")

561 
ó_to_™
(
m68_cm∑__n_l
,"cmp.l")

566 
	#suµ‹t_addsubx
(
«me
,
dump
)\

567 
	`«me
(){\

568 
w‹d
 
ƒegx
=(
ö°
>>9)&7,
ƒegy
=inst&7;\

569 if(
ö°
&0x0008)
	`•rötf
(
sdebug
,"%† -◊%d),-◊%d)",
dump
,
ƒegy
,
ƒegx
);\

570 
	`•rötf
(
sdebug
,"%† d%d,d%d",
dump
,
ƒegy
,
ƒegx
);\

571 }

	)

573 
suµ‹t_addsubx
(
m68suµ‹t_addx_b
,"addx.b")

574 
suµ‹t_addsubx
(
m68suµ‹t_addx_w
,"addx ")

575 
suµ‹t_addsubx
(
m68suµ‹t_addx_l
,"addx.l")

576 
suµ‹t_addsubx
(
m68suµ‹t_subx_b
,"subx.b")

577 
suµ‹t_addsubx
(
m68suµ‹t_subx_w
,"subx ")

578 
suµ‹t_addsubx
(
m68suµ‹t_subx_l
,"subx.l")

580 
	#suµ‹t_bcd
(
«me
,
dump
)\

581 
	`«me
(){\

582 
w‹d
 
ƒegx
=(
ö°
>>9)&7,
ƒegy
=inst&7;\

583 if(
ö°
&0x0008)
	`•rötf
(
sdebug
,"%† -◊%d),-◊%d)",
dump
,
ƒegy
,
ƒegx
);\

584 
	`•rötf
(
sdebug
,"%† d%d,d%d",
dump
,
ƒegy
,
ƒegx
);\

585 }

	)

587 
suµ‹t_bcd
(
m68suµ‹t_abcd
,"abcd")

588 
suµ‹t_bcd
(
m68suµ‹t_sbcd
,"sbcd")

593 
	#suµ‹t_cmpm
(
«me
,
dump
Ë
	`«me
(){\

594 
	`•rötf
(
sdebug
,"%† (a%d)+,◊%d)+",
dump
,
ö°
&7,(inst>>9)&7);\

595 }

	)

597 
suµ‹t_cmpm
(
m68suµ‹t_cmpm_b
,"cmp.b")

598 
suµ‹t_cmpm
(
m68suµ‹t_cmpm_w
,"cmp ")

599 
suµ‹t_cmpm
(
m68suµ‹t_cmpm_l
,"cmp.l")

604 
	$m68suµ‹t_exg_ßme
(){

605 
dw‹d
 
rx
;

606 
rx
=(
ö°
&8)|((inst>>9)&7);

607 
	`•rötf
(
sdebug
,"exg %c%d,%c%d",

608 
rx
&8?'a':'d',rx&7,
ö°
&8?'a':'d',inst&7);

609 
	}
}

611 
	$m68suµ‹t_exg_diff
(){

612 
	`•rötf
(
sdebug
,"exg d%d,a%d",(
ö°
>>9)&7,inst&7);

613 
	}
}

621 
	#dn_to_ó
(
«me
,
dump
,
s_c⁄d
,
s_routöe
)\

622 
	`«me
(){\

623 
ó
;if(
s_c⁄d
)
	`s_routöe
();\

624 
	`•rötf
(
sdebug
,"%† d%d,%s",
dump
,(
ö°
>>9)&7,
óbuf„r
);\

625 }

	)

627 
dn_to_ó
(
m68_add_e_n_b
,"add.b",
i§egi°î
,
m68suµ‹t_addx_b
)

628 
dn_to_ó
(
m68_add_e_n_w
,"add ",
i§egi°î
,
m68suµ‹t_addx_w
)

629 
dn_to_ó
(
m68_add_e_n_l
,"add.l",
i§egi°î
,
m68suµ‹t_addx_l
)

630 
dn_to_ó
(
m68_sub_e_n_b
,"sub.b",
i§egi°î
,
m68suµ‹t_subx_b
)

631 
dn_to_ó
(
m68_sub_e_n_w
,"sub ",
i§egi°î
,
m68suµ‹t_subx_w
)

632 
dn_to_ó
(
m68_sub_e_n_l
,"sub.l",
i§egi°î
,
m68suµ‹t_subx_l
)

633 
dn_to_ó
(
m68_e‹_e_n_b
,"e‹.b",
ißddªs§
,
m68suµ‹t_cmpm_b
)

634 
dn_to_ó
(
m68_e‹_e_n_w
,"e‹ ",
ißddªs§
,
m68suµ‹t_cmpm_w
)

635 
dn_to_ó
(
m68_e‹_e_n_l
,"e‹.l",
ißddªs§
,
m68suµ‹t_cmpm_l
)

636 
dn_to_ó
(
m68_‹__e_n_b
,"‹.b ",
i§egi°î
,
m68suµ‹t_sbcd
)

637 
dn_to_ó
(
m68_‹__e_n_w
,"‹ ",
i§egi°î
,
m68unsuµ‹ãd
)

638 
dn_to_ó
(
m68_‹__e_n_l
,"‹.»",
i§egi°î
,
m68unsuµ‹ãd
)

639 
dn_to_ó
(
m68_™d_e_n_b
,"™d.b",
i§egi°î
,
m68suµ‹t_abcd
)

640 
dn_to_ó
(
m68_™d_e_n_w
,"™d ",
i§egi°î
,
m68suµ‹t_exg_ßme
)

641 
dn_to_ó
(
m68_™d_e_n_l
,"™d.l",
ißddªs§
,
m68suµ‹t_exg_diff
)

647 
	#qn_to_ó
(
«me
,
dump1
Ë
	`«me
(){\

648 
ó
;
	`•rötf
(
sdebug
,"%† #%d,%s",
dump1
,(((
ö°
>>9)&7)==0)?8:(ö°>>9)&7,
óbuf„r
);\

649 }

	)

651 
qn_to_ó
(
m68_addq__n_b
,"add.b")

652 
qn_to_ó
(
m68_addq__n_w
,"add ")

653 
qn_to_ó
(
m68_addq__n_l
,"add.l")

654 
qn_to_ó
(
m68_subq__n_b
,"sub.b")

655 
qn_to_ó
(
m68_subq__n_w
,"sub ")

656 
qn_to_ó
(
m68_subq__n_l
,"sub.l")

663 
	$m68_moveq_n_l
(){

664 
	`•rötf
(
sdebug
,"moveq #$"
hex08
",d%d",
ö°
&0xFF,(inst>>9)&7);

665 
	}
}

672 
	#ó_to_ó
(
«me
,
dump
Ë
	`«me
(){\

673 
tmpbuf
[40];\

674 
ó
;
	`°r˝y
(
tmpbuf
,
óbuf„r
);\

675 
óˇlc
[((((
ö°
>>3)&(7<<3)))|((inst>>9)&7))]();\

676 
	`•rötf
(
sdebug
,"%† %s,%s",
dump
,
tmpbuf
,
óbuf„r
);\

677 }

	)

679 
ó_to_ó
(
m68_move____b
,"move.b")

680 
ó_to_ó
(
m68_move____w
,"move ")

681 
ó_to_ó
(
m68_move____l
,"move.l")

686 
	$gëªgli°f
(
w‹d
 
mask
,*
æ
){

687 if(
mask
&0x0001){*(
æ
++)='d';*(rl++)='0';*(rl++)='/';}

688 if(
mask
&0x0002){*(
æ
++)='d';*(rl++)='1';*(rl++)='/';}

689 if(
mask
&0x0004){*(
æ
++)='d';*(rl++)='2';*(rl++)='/';}

690 if(
mask
&0x0008){*(
æ
++)='d';*(rl++)='3';*(rl++)='/';}

691 if(
mask
&0x0010){*(
æ
++)='d';*(rl++)='4';*(rl++)='/';}

692 if(
mask
&0x0020){*(
æ
++)='d';*(rl++)='5';*(rl++)='/';}

693 if(
mask
&0x0040){*(
æ
++)='d';*(rl++)='6';*(rl++)='/';}

694 if(
mask
&0x0080){*(
æ
++)='d';*(rl++)='7';*(rl++)='/';}

695 if(
mask
&0x0100){*(
æ
++)='a';*(rl++)='0';*(rl++)='/';}

696 if(
mask
&0x0200){*(
æ
++)='a';*(rl++)='1';*(rl++)='/';}

697 if(
mask
&0x0400){*(
æ
++)='a';*(rl++)='2';*(rl++)='/';}

698 if(
mask
&0x0800){*(
æ
++)='a';*(rl++)='3';*(rl++)='/';}

699 if(
mask
&0x1000){*(
æ
++)='a';*(rl++)='4';*(rl++)='/';}

700 if(
mask
&0x2000){*(
æ
++)='a';*(rl++)='5';*(rl++)='/';}

701 if(
mask
&0x4000){*(
æ
++)='a';*(rl++)='6';*(rl++)='/';}

702 if(
mask
&0x8000){*(
æ
++)='a';*(rl++)='7';*(rl++)='/';}

703 *(--
æ
)=0;

704 
	}
}

706 
	$gëªgli°b
(
w‹d
 
mask
,*
æ
){

707 if(
mask
&0x0001){*(
æ
++)='a';*(rl++)='7';*(rl++)='/';}

708 if(
mask
&0x0002){*(
æ
++)='a';*(rl++)='6';*(rl++)='/';}

709 if(
mask
&0x0004){*(
æ
++)='a';*(rl++)='5';*(rl++)='/';}

710 if(
mask
&0x0008){*(
æ
++)='a';*(rl++)='4';*(rl++)='/';}

711 if(
mask
&0x0010){*(
æ
++)='a';*(rl++)='3';*(rl++)='/';}

712 if(
mask
&0x0020){*(
æ
++)='a';*(rl++)='2';*(rl++)='/';}

713 if(
mask
&0x0040){*(
æ
++)='a';*(rl++)='1';*(rl++)='/';}

714 if(
mask
&0x0080){*(
æ
++)='a';*(rl++)='0';*(rl++)='/';}

715 if(
mask
&0x0100){*(
æ
++)='d';*(rl++)='7';*(rl++)='/';}

716 if(
mask
&0x0200){*(
æ
++)='d';*(rl++)='6';*(rl++)='/';}

717 if(
mask
&0x0400){*(
æ
++)='d';*(rl++)='5';*(rl++)='/';}

718 if(
mask
&0x0800){*(
æ
++)='d';*(rl++)='4';*(rl++)='/';}

719 if(
mask
&0x1000){*(
æ
++)='d';*(rl++)='3';*(rl++)='/';}

720 if(
mask
&0x2000){*(
æ
++)='d';*(rl++)='2';*(rl++)='/';}

721 if(
mask
&0x4000){*(
æ
++)='d';*(rl++)='1';*(rl++)='/';}

722 if(
mask
&0x8000){*(
æ
++)='d';*(rl++)='0';*(rl++)='/';}

723 *(--
æ
)=0;

724 
	}
}

726 
	#movem_mem
(
«me
,
dumpm
,
dumpx
)\

727 
	`«me
(){\

728 
w‹d
 
ªgmask
;\

729 
ªgli°
[50];\

730 if((
ö°
&0x38)==0x0000){ \

731 
	`•rötf
(
sdebug
,
dumpx
"d%d",
ö°
&7);\

732 }if((
ö°
&0x38)==0x0020){ \

733 
ªgmask
=
	`„tch
();\

734 
	`gëªgli°b
(
ªgmask
,
ªgli°
);\

735 
	`•rötf
(
sdebug
,
dumpm
"%s,-◊%d)",
ªgli°
,
ö°
&7);\

737 
ªgmask
=
	`„tch
();\

738 
ó
;
	`gëªgli°f
(
ªgmask
,
ªgli°
);\

739 
	`•rötf
(
sdebug
,
dumpm
 "%s,%s",
ªgli°
,
óbuf„r
);\

741 }

	)

743 
movem_mem
(
m68_movem___w
,"movem ","ext ")

744 
movem_mem
(
m68_movem___l
,"movem.l ","ext.l ")

746 
	#movem_ªg
(
«me
,
dump
Ë
	`«me
(){\

747 
w‹d
 
ªgmask
;\

748 
ªgli°
[50];\

749 
ªgmask
=
	`„tch
();\

750 
ó
;
	`gëªgli°f
(
ªgmask
,
ªgli°
);\

751 
	`•rötf
(
sdebug
,
dump
 "%s,%s",
óbuf„r
,
ªgli°
);\

752 }

	)

754 
movem_ªg
(
m68_movem_r_w
,"movem ")

755 
movem_ªg
(
m68_movem_r_l
,"movem.l ")

759 
	$m68_move2§_w
(){
ó
;
	`•rötf
(
sdebug
,"movê %s,§",
óbuf„r
);
	}
}

760 
	$m68_movef§_w
(){
ó
;
	`•rötf
(
sdebug
,"movê sr,%s",
óbuf„r
);
	}
}

761 
	$m68_move2cc_w
(){
ó
;
	`•rötf
(
sdebug
,"move.b %s,c¸",
óbuf„r
);
	}
}

762 
	$m68_movefcc_w
(){
ó
;
	`•rötf
(
sdebug
,"move.b c¸,%s",
óbuf„r
);
	}
}

764 
	$m68_πs_____x
(){
	`•rötf
(
sdebug
,"πs");
	}
}

768 
	#ªgshi·
(
«me
,
sizedump
) \

769 
	`«me
(){\

770 
tmpbuf
[10];\

771 if((
ö°
&0x20)==0)
	`•rötf
(
tmpbuf
,"#$"
hex08
",d%d",(((inst>>9)&7)==0)?8:(inst>>9)&7,inst&7);\

772 
	`•rötf
(
tmpbuf
,"d%d,d%d",(
ö°
>>9)&7,inst&7);\

773 
ö°
&0x18){\

774 0x00:
	`•rötf
(
sdebug
,"as%† %s",
sizedump
,
tmpbuf
);;\

775 0x08:
	`•rötf
(
sdebug
,"ls%† %s",
sizedump
,
tmpbuf
);;\

776 0x10:
	`•rötf
(
sdebug
,"rox%† %s",
sizedump
,
tmpbuf
);;\

777 0x18:
	`•rötf
(
sdebug
,"ro%† %s",
sizedump
,
tmpbuf
);;\

779 }

	)

781 
ªgshi·
(
m68_shl_r_n_b
,"l.b")

782 
ªgshi·
(
m68_shl_r_n_w
,"l ")

783 
ªgshi·
(
m68_shl_r_n_l
,"l.l")

784 
ªgshi·
(
m68_shr_r_n_b
,"r.b")

785 
ªgshi·
(
m68_shr_r_n_w
,"r ")

786 
ªgshi·
(
m68_shr_r_n_l
,"r.l")

790 
	$m68_n›_____x
(){
	`•rötf
(
sdebug
,"n›");
	}
}

794 
	$m68_lök_™_w
(){

795 
öt16
 
brõ„xt
=
	`„tch
();

796 
	`•rötf
(
sdebug
,"löká%d,%c#$"
hex16
,
ö°
&7,
brõ„xt
<0?'-':'+',

797 
brõ„xt
<0?-briefext:briefext

799 
	}
}

801 
	$m68_u∆k_™_x
(){

802 
	`•rötf
(
sdebug
,"u∆ká%d",
ö°
&7);

803 
	}
}

805 
	$m68_°›____x
(){
	`•rötf
(
sdebug
,"°› #$%04X",
	`„tch
());
	}
}

806 
	$m68_πe_____x
(){
	`•rötf
(
sdebug
,"πe");
	}
}

807 
	$m68_πr_____x
(){
	`•rötf
(
sdebug
,"πr");
	}
}

808 
	$m68_ª£t___x
(){
	`•rötf
(
sdebug
,"ª£t");
	}
}

809 
	$m68_πd_____x
(){

810 
öt16
 
brõ„xt
=
	`„tch
();

811 
	`•rötf
(
sdebug
,"πd %c#$"
hex16
,
brõ„xt
<0?'-':'+',

812 
brõ„xt
<0?-briefext:briefext);

813 
	}
}

814 
	$m68_divu__n_w
(){
ó
;
	`•rötf
(
sdebug
,"divu %s,d%d",
óbuf„r
,(
ö°
>>9)&7);
	}
}

815 
	$m68_divs__n_w
(){
ó
;
	`•rötf
(
sdebug
,"div† %s,d%d",
óbuf„r
,(
ö°
>>9)&7);
	}
}

816 
	$m68_mulu__n_w
(){
ó
;
	`•rötf
(
sdebug
,"mulu %s,d%d",
óbuf„r
,(
ö°
>>9)&7);
	}
}

817 
	$m68_muls__n_w
(){
ó
;
	`•rötf
(
sdebug
,"mul† %s,d%d",
óbuf„r
,(
ö°
>>9)&7);
	}
}

819 
	$m68_a§_m___w
(){
ó
;
	`•rötf
(
sdebug
,"a§ %s",
óbuf„r
);
	}
}

820 
	$m68_a¶_m___w
(){
ó
;
	`•rötf
(
sdebug
,"a¶ %s",
óbuf„r
);
	}
}

821 
	$m68_l§_m___w
(){
ó
;
	`•rötf
(
sdebug
,"l§ %s",
óbuf„r
);
	}
}

822 
	$m68_l¶_m___w
(){
ó
;
	`•rötf
(
sdebug
,"l¶ %s",
óbuf„r
);
	}
}

823 
	$m68_roxr_m__w
(){
ó
;
	`•rötf
(
sdebug
,"rox∏ %s",
óbuf„r
);
	}
}

824 
	$m68_roxl_m__w
(){
ó
;
	`•rötf
(
sdebug
,"rox» %s",
óbuf„r
);
	}
}

825 
	$m68_r‹_m___w
(){
ó
;
	`•rötf
(
sdebug
,"r‹ %s",
óbuf„r
);
	}
}

826 
	$m68_rﬁ_m___w
(){
ó
;
	`•rötf
(
sdebug
,"rﬁ %s",
óbuf„r
);
	}
}

828 
	$m68_nbcd____b
(){
ó
;
	`•rötf
(
sdebug
,"nbcd.b %s",
óbuf„r
);
	}
}

829 
	$m68_chk___n_w
(){
ó
;
	`•rötf
(
sdebug
,"chk %s,d%d",
óbuf„r
,(
ö°
>>9)&7);
	}
}

831 
	$m68_å≠_¬_x
(){
	`•rötf
(
sdebug
,"å≠ #%d",
ö°
&0xF);
	}
}

832 
	$m68_move_2u_l
(){
	`•rötf
(
sdebug
,"move.»á%d,u•",
ö°
&7);
	}
}

833 
	$m68_move_fu_l
(){
	`•rötf
(
sdebug
,"move.» u•,a%d",
ö°
&7);
	}
}

835 
	$m68_å≠v___x
(){
	`•rötf
(
sdebug
,"å≠v");
	}
}

837 *
	$•ecüÃegi°î
(
code
){

838 
code
&0xFFF){

845 
	}
}

847 
	$m68_movec_r_x
(){

848 
f
=
	`„tch
();

849 
	`•rötf
(
sdebug
,"movec %s,%c%d",

850 
	`•ecüÃegi°î
(
f
),

851 (
f
&0x8000)?'a':'d',(f>>12)&7

853 
	}
}

855 
	$m68_movec_c_x
(){

856 
f
=
	`„tch
();

857 
	`•rötf
(
sdebug
,"movec %c%d,%s",

858 (
f
&0x8000)?'a':'d',(f>>12)&7,

859 
	`•ecüÃegi°î
(
f
)

861 
	}
}

866 (*(
	gdebug•ecülm≠
[64]))()={

867  
m68_å≠_¬_x
,m68_trap_nn_x,m68_trap_nn_x,m68_trap_nn_x,

868  
m68_å≠_¬_x
,m68_trap_nn_x,m68_trap_nn_x,m68_trap_nn_x,

869  
m68_å≠_¬_x
,m68_trap_nn_x,m68_trap_nn_x,m68_trap_nn_x,

870  
m68_å≠_¬_x
,m68_trap_nn_x,m68_trap_nn_x,m68_trap_nn_x,

871  
m68_lök_™_w
,m68_link_an_w,m68_link_an_w,m68_link_an_w,

872  
m68_lök_™_w
,m68_link_an_w,m68_link_an_w,m68_link_an_w,

873  
m68_u∆k_™_x
,m68_unlk_an_x,m68_unlk_an_x,m68_unlk_an_x,

874  
m68_u∆k_™_x
,m68_unlk_an_x,m68_unlk_an_x,m68_unlk_an_x,

875  
m68_move_2u_l
,m68_move_2u_l,m68_move_2u_l,m68_move_2u_l,

876  
m68_move_2u_l
,m68_move_2u_l,m68_move_2u_l,m68_move_2u_l,

877  
m68_move_fu_l
,m68_move_fu_l,m68_move_fu_l,m68_move_fu_l,

878  
m68_move_fu_l
,m68_move_fu_l,m68_move_fu_l,m68_move_fu_l,

879  
m68_ª£t___x
,
m68_n›_____x
,
m68_°›____x
,
m68_πe_____x
,

880  
m68_πd_____x
,
m68_πs_____x
,
m68_å≠v___x
,
m68_πr_____x
,

881  
m68_uƒecog_x
,m68_uƒecog_x,
m68_movec_r_x
,
m68_movec_c_x
,

882  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x};

884 
	$m68_•ecül_x
(){

885 
debug•ecülm≠
[
ö°
&0x3F]();

886 
	}
}

899 (*(
	gdebugm≠
[1024]))()={

900  
m68_‹i_____b
,
m68_‹i_____w
,
m68_‹i_____l
,
m68_uƒecog_x
,

901  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

902  
m68_™di____b
,
m68_™di____w
,
m68_™di____l
,
m68_uƒecog_x
,

903  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

904  
m68_subi____b
,
m68_subi____w
,
m68_subi____l
,
m68_uƒecog_x
,

905  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

906  
m68_addi____b
,
m68_addi____w
,
m68_addi____l
,
m68_uƒecog_x
,

907  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

908  
m68_bt°_°_x
,
m68_bchg_°_x
,
m68_b˛r_°_x
,
m68_b£t_°_x
,

909  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

910  
m68_e‹i____b
,
m68_e‹i____w
,
m68_e‹i____l
,
m68_uƒecog_x
,

911  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

912  
m68_cmpi____b
,
m68_cmpi____w
,
m68_cmpi____l
,
m68_uƒecog_x
,

913  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

914  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

915  
m68_bô›dn_x
,m68_bitopdn_x,m68_bitopdn_x,m68_bitopdn_x,

916  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

917  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

918  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

919  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

920  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

921  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

922  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

923  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

924  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

925  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

926  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

927  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

928  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

929  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

930  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

931  
m68_move____b
,m68_move____b,m68_move____b,m68_move____b,

932  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

933  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

934  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

935  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

936  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

937  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

938  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

939  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

940  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

941  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

942  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

943  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

944  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

945  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

946  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

947  
m68_move____l
,m68_move____l,m68_move____l,m68_move____l,

948  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

949  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

950  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

951  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

952  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

953  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

954  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

955  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

956  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

957  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

958  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

959  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

960  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

961  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

962  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

963  
m68_move____w
,m68_move____w,m68_move____w,m68_move____w,

964  
m68_√gx____b
,
m68_√gx____w
,
m68_√gx____l
,
m68_movef§_w
,

965  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

966  
m68_˛r_____b
,
m68_˛r_____w
,
m68_˛r_____l
,
m68_movefcc_w
,

967  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

968  
m68_√g_____b
,
m68_√g_____w
,
m68_√g_____l
,
m68_move2cc_w
,

969  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

970  
m68_nŸ_____b
,
m68_nŸ_____w
,
m68_nŸ_____l
,
m68_move2§_w
,

971  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

972  
m68_nbcd____b
,
m68_≥a_____l
,
m68_movem___w
,
m68_movem___l
,

973  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

974  
m68_t°_____b
,
m68_t°_____w
,
m68_t°_____l
,
m68_ès_____b
,

975  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

976  
m68_uƒecog_x
,m68_uƒecog_x,
m68_movem_r_w
,
m68_movem_r_l
,

977  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

978  
m68_uƒecog_x
,
m68_•ecül_x
,
m68_j§_____x
,
m68_jmp_____x
,

979  
m68_uƒecog_x
,m68_uƒecog_x,
m68_chk___n_w
,
m68_Àa___n_l
,

980  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_°______x
,

981  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_sf______x
,

982  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_shi_____x
,

983  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_¶s_____x
,

984  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_scc_____x
,

985  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_scs_____x
,

986  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_¢e_____x
,

987  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_£q_____x
,

988  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_svc_____x
,

989  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_svs_____x
,

990  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_•l_____x
,

991  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_smi_____x
,

992  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_sge_____x
,

993  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_¶t_____x
,

994  
m68_addq__n_b
,
m68_addq__n_w
,
m68_addq__n_l
,
m68_sgt_____x
,

995  
m68_subq__n_b
,
m68_subq__n_w
,
m68_subq__n_l
,
m68_¶e_____x
,

996  
m68_bø_____x
,m68_bra_____x,m68_bra_____x,m68_bra_____x,

997  
m68_b§_____x
,m68_bsr_____x,m68_bsr_____x,m68_bsr_____x,

998  
m68_bhi_____x
,m68_bhi_____x,m68_bhi_____x,m68_bhi_____x,

999  
m68_bls_____x
,m68_bls_____x,m68_bls_____x,m68_bls_____x,

1000  
m68_bcc_____x
,m68_bcc_____x,m68_bcc_____x,m68_bcc_____x,

1001  
m68_bcs_____x
,m68_bcs_____x,m68_bcs_____x,m68_bcs_____x,

1002  
m68_b√_____x
,m68_bne_____x,m68_bne_____x,m68_bne_____x,

1003  
m68_beq_____x
,m68_beq_____x,m68_beq_____x,m68_beq_____x,

1004  
m68_bvc_____x
,m68_bvc_____x,m68_bvc_____x,m68_bvc_____x,

1005  
m68_bvs_____x
,m68_bvs_____x,m68_bvs_____x,m68_bvs_____x,

1006  
m68_b∂_____x
,m68_bpl_____x,m68_bpl_____x,m68_bpl_____x,

1007  
m68_bmi_____x
,m68_bmi_____x,m68_bmi_____x,m68_bmi_____x,

1008  
m68_bge_____x
,m68_bge_____x,m68_bge_____x,m68_bge_____x,

1009  
m68_b…_____x
,m68_blt_____x,m68_blt_____x,m68_blt_____x,

1010  
m68_bgt_____x
,m68_bgt_____x,m68_bgt_____x,m68_bgt_____x,

1011  
m68_bÀ_____x
,m68_ble_____x,m68_ble_____x,m68_ble_____x,

1012  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1013  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1014  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1015  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1016  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1017  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1018  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1019  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1020  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1021  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1022  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1023  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1024  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1025  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1026  
m68_moveq_n_l
,m68_moveq_n_l,m68_moveq_n_l,m68_moveq_n_l,

1027  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1028  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1029  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1030  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1031  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1032  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1033  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1034  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1035  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1036  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1037  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1038  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1039  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1040  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1041  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1042  
m68_‹__d_n_b
,
m68_‹__d_n_w
,
m68_‹__d_n_l
,
m68_divu__n_w
,

1043  
m68_‹__e_n_b
,
m68_‹__e_n_w
,
m68_‹__e_n_l
,
m68_divs__n_w
,

1044  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1045  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1046  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1047  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1048  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1049  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1050  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1051  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1052  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1053  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1054  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1055  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1056  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1057  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1058  
m68_sub_d_n_b
,
m68_sub_d_n_w
,
m68_sub_d_n_l
,
m68_suba__n_w
,

1059  
m68_sub_e_n_b
,
m68_sub_e_n_w
,
m68_sub_e_n_l
,
m68_suba__n_l
,

1060  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1061  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1062  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1063  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1064  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1065  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1066  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1067  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1068  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1069  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1070  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1071  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1072  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1073  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1074  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1075  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1076  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1077  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1078  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1079  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1080  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1081  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1082  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1083  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1084  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1085  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1086  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1087  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1088  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1089  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1090  
m68_cmp_d_n_b
,
m68_cmp_d_n_w
,
m68_cmp_d_n_l
,
m68_cm∑__n_w
,

1091  
m68_e‹_e_n_b
,
m68_e‹_e_n_w
,
m68_e‹_e_n_l
,
m68_cm∑__n_l
,

1092  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1093  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1094  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1095  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1096  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1097  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1098  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1099  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1100  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1101  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1102  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1103  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1104  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1105  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1106  
m68_™d_d_n_b
,
m68_™d_d_n_w
,
m68_™d_d_n_l
,
m68_mulu__n_w
,

1107  
m68_™d_e_n_b
,
m68_™d_e_n_w
,
m68_™d_e_n_l
,
m68_muls__n_w
,

1108  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1109  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1110  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1111  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1112  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1113  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1114  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1115  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1116  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1117  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1118  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1119  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1120  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1121  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1122  
m68_add_d_n_b
,
m68_add_d_n_w
,
m68_add_d_n_l
,
m68_adda__n_w
,

1123  
m68_add_e_n_b
,
m68_add_e_n_w
,
m68_add_e_n_l
,
m68_adda__n_l
,

1124  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_a§_m___w
,

1125  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_a¶_m___w
,

1126  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_l§_m___w
,

1127  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_l¶_m___w
,

1128  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_roxr_m__w
,

1129  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_roxl_m__w
,

1130  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_r‹_m___w
,

1131  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_rﬁ_m___w
,

1132  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_uƒecog_x
,

1133  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_uƒecog_x
,

1134  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_uƒecog_x
,

1135  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_uƒecog_x
,

1136  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_uƒecog_x
,

1137  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_uƒecog_x
,

1138  
m68_shr_r_n_b
,
m68_shr_r_n_w
,
m68_shr_r_n_l
,
m68_uƒecog_x
,

1139  
m68_shl_r_n_b
,
m68_shl_r_n_w
,
m68_shl_r_n_l
,
m68_uƒecog_x
,

1140  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1141  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1142  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1143  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1144  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1145  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1146  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1147  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1148  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1149  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1150  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1151  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1152  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1153  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1154  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x,

1155  
m68_uƒecog_x
,m68_unrecog_x,m68_unrecog_x,m68_unrecog_x};

1157 
	$˝udebug_dißs£mbÀ
(
n
) {

1158 
n
--) {

1159 
dw‹d
 
addr
 = 
debugpc
;

1160 
	`˝udebug_¥ötf
("%08X: ", 
addr
);

1161 
isize
 = 0;

1162 
ö°
 = 
	`„tch
();

1163 
debugm≠
[
ö°
 >> 6]();

1164 
addr
 < 
debugpc
) {

1165 
	`˝udebug_¥ötf
("%04X ", 
	`s68000„tch
(
addr
) & 0xFFFF);

1166 
addr
 += 2;

1168 
isize
 < 10) {

1169 
	`˝udebug_¥ötf
(" ");

1170 
isize
 += 2;

1172 
	`˝udebug_¥ötf
("%s\n", 
sdebug
);

1174 
	}
}

1176 
	$˝udebug_hexdump
() {

1177 
byã
 
c
, 
tmpch¨
[16];

1178 
dw‹d
 
tm∑ddr
;

1179 
i
, 
j
, 
k
;

1180 
tm∑ddr
 = 
hexaddr
 & 0xFFFFFFF0;

1181 
i
 = 0; i < 8; i++) {

1182 
	`˝udebug_¥ötf
("%08X: %c", 
tm∑ddr
,

1183 (
hexaddr
 =
tm∑ddr
) ? '>' : ' '

1185 
j
 = 0; j < 16; j += 2) {

1186 
k
 = 
	`s68000„tch
(
tm∑ddr
) & 0xFFFF;

1187 
tmpch¨
[
j
 ] = 
k
 >> 8;

1188 
tmpch¨
[
j
 + 1] = 
k
 & 0xFF;

1189 
tm∑ddr
 += 2;

1190 
	`˝udebug_¥ötf
("%02X%02X%c",

1191 
tmpch¨
[
j
],Åmpchar[j + 1],

1192 (–
hexaddr
 =
tm∑ddr
 )&&(
j
!=14))?'>':

1193 (((
hexaddr
&0xFFFFFFFE)==(
tm∑ddr
-2))?'<':' ')

1196 
	`˝udebug_¥ötf
(" ");

1197 
j
 = 0; j < 16; j++) {

1198 
c
 = 
tmpch¨
[
j
];

1199 if((
c
<32)||(c>126))c='.';

1200 
	`˝udebug_¥ötf
("%c", 
c
);

1202 
	`˝udebug_¥ötf
("\n");

1204 
hexaddr
 += 0x80;

1205 
	}
}

1207 
	$˝udebug_ªgi°îdump
() {

1208 
i
;

1209 
	`˝udebug_¥ötf
(

1211 
s68000c⁄ãxt
.
dªg
[0],s68000context.dreg[4],

1212 
s68000c⁄ãxt
.
¨eg
[0],s68000context.areg[4],

1213 (
s68000c⁄ãxt
.
§
 >> 4) & 1 ? 'X' : '-',

1214 (
s68000c⁄ãxt
.
§
 >> 3) & 1 ? 'N' : '-',

1215 (
s68000c⁄ãxt
.
§
 >> 2) & 1 ? 'Z' : '-',

1216 (
s68000c⁄ãxt
.
§
 >> 1) & 1 ? 'V' : '-',

1217 (
s68000c⁄ãxt
.
§
 ) & 1 ? 'C' : '-'

1219 
	`˝udebug_¥ötf
(

1221 
s68000c⁄ãxt
.
dªg
[1], s68000context.dreg[5],

1222 
s68000c⁄ãxt
.
¨eg
[1], s68000context.areg[5],

1223 (
s68000c⁄ãxt
.
§
 >> 8) & 7

1225 
	`˝udebug_¥ötf
(

1227 
s68000c⁄ãxt
.
dªg
[2], s68000context.dreg[6],

1228 
s68000c⁄ãxt
.
¨eg
[2], s68000context.areg[6]

1230 
i
 = 1; i <= 7; i++) {

1231 if(
s68000c⁄ãxt
.
öãºu±s
[0] & (1 << 
i
)) {

1232 
	`˝udebug_¥ötf
("%02X", 
s68000c⁄ãxt
.
öãºu±s
[
i
]);

1234 
	`˝udebug_¥ötf
("--");

1237 
	`˝udebug_¥ötf
(

1239 
s68000c⁄ãxt
.
dªg
[3], s68000context.dreg[7],

1240 
s68000c⁄ãxt
.
¨eg
[3], s68000context.areg[7],

1241 ((
s68000c⁄ãxt
.
§
)&0x2000)?'u':'s', s68000c⁄ãxt.
a•


1243 
debugpc
 = 
s68000c⁄ãxt
.
pc
;

1244 
	`˝udebug_dißs£mbÀ
(1);

1245 
debugpc
 = 
s68000c⁄ãxt
.
pc
;

1246 
	}
}

1248 
	$˝udebug_öãø˘ive
(

1249 
˝un
,

1250 (*
put
)(const *),

1251 (*
gë
)(*, ),

1252 (*
exec°ï
)(),

1253 (*
dump
)()

1255 
öput°r
[80];

1256 *
cmd
, *
¨gs
, *
¨g£nd
;

1257 
dw‹d
 
tmµc
;

1258 
hexaddr
 = 0;

1259 
˝udebug_put
 = 
put
;

1260 
˝udebug_gë
 = 
gë
;

1262 
	`s68000ÊushI¡îru±s
();

1263 
	`˝udebug_¥ötf
("˝u%d> ", 
˝un
);

1264 
	`˝udebug_gës
(
öput°r
, (inputstr));

1265 
cmd
 = 
öput°r
;

1266 (
	`tﬁowî
(*
cmd
) < 'a') && (tolower(*cmd) > 'z')) {

1267 if(!(*
cmd
)) ;

1268 
cmd
++;

1270 if(!(*
cmd
)) ;

1271 *
cmd
 = 
	`tﬁowî
(*cmd);

1272 
¨gs
 = 
cmd
 + 1;

1273 (*
¨gs
) && ((*args) < 32))árgs++;

1274 *
cmd
) {

1276 
	`˝udebug_¥ötf
(

1290 if(*
¨gs
) {

1291 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 16);

1292 if(
¨g£nd
 !
¨gs
) {

1293 
s68000c⁄ãxt
.
pc
 !
tmµc
)

1294 if(
exec°ï
Ë
	`exec°ï
();

1295 
	`s68000exec
(1);

1296 
	`˝udebug_ªgi°îdump
();

1298 
	`˝udebug_¥ötf
("Invalidáddress\n");

1301 
	`˝udebug_¥ötf
("Needánáddress\n");

1305 if(*
¨gs
) {

1306 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 16);

1307 if(
¨g£nd
 !
¨gs
Ë
debugpc
 = 
tmµc
;

1309 
	`˝udebug_dißs£mbÀ
(16);

1312 if(*
¨gs
) {

1313 
tmµc
 = 
	`°πoul
(
¨gs
,&
¨g£nd
,16);

1314 if(
¨g£nd
 !
¨gs
Ë
hexaddr
 = 
tmµc
;

1316 
	`˝udebug_hexdump
();

1319 if(
dump
Ë
	`dump
();

1322 if(*
¨gs
) {

1323 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 16);

1324 if(
¨g£nd
 !
¨gs
) {

1325 
s68000c⁄ãxt
.
pc
 = 
tmµc
;

1326 
	`˝udebug_¥ötf
("PC setÅo %08X\n",

1327 
s68000c⁄ãxt
.
pc


1329 
debugpc
 = 
s68000c⁄ãxt
.
pc
;

1330 
	`˝udebug_dißs£mbÀ
(1);

1331 
debugpc
 = 
s68000c⁄ãxt
.
pc
;

1333 
	`˝udebug_¥ötf
("Invalidáddress\n");

1336 
	`˝udebug_¥ötf
("Needánáddress\n");

1340 if(*
¨gs
) {

1341 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 10);

1342 if(
¨g£nd
 !
¨gs
) {

1343 
	`˝udebug_¥ötf
("I¡îru± %d gíî©ed\n", 
tmµc
);

1344 
	`s68000öãºu±
(
tmµc
, -1);

1345 
	`s68000ÊushI¡îru±s
();

1346 
	`˝udebug_ªgi°îdump
();

1347 
debugpc
 = 
s68000c⁄ãxt
.
pc
;

1349 
	`˝udebug_¥ötf
("Invalid interruptÇumber\n");

1352 
	`˝udebug_¥ötf
("Needán interruptÇumber\n");

1356 
tmµc
 = 1;

1357 if(*
¨gs
) {

1358 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 16);

1359 if(
¨g£nd
 =
¨gs
Ë
tmµc
 = 1;

1361 if(
tmµc
 > 0) {

1362 
tmµc
--) {

1363 if(
exec°ï
Ë
	`exec°ï
();

1364 
	`s68000exec
(1);

1366 
	`˝udebug_ªgi°îdump
();

1370 
	`˝udebug_ªgi°îdump
();

1375 if(*
¨gs
) {

1376 
tmµc
 = 
	`°πoul
(
¨gs
, &
¨g£nd
, 10);

1377 if(
tmµc
 > 0) Åmppc;

1378 
	`˝udebug_¥ötf
("Invalid CPUÇumber\n");

1387 
	}
}

	@src/star/cpudebug.h

9 #i‚de‡
__CPUDEBUG_H__


10 
	#__CPUDEBUG_H__


	)

12 #ifde‡
__˝lu•lus


16 
˝udebug_dißbÀd
();

17 
˝udebug_öãø˘ive
(

18 
˝un
,

19 (*
put
)(const *),

20 (*
gë
)(*, ),

21 (*
exec°ï
)(),

22 (*
dump
)()

25 #ifde‡
__˝lu•lus


	@src/star/star.c

9 
	#VERSION
 "0.26c"

	)

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<°d¨g.h
>

143 
	tbyã
;

144 
	tw‹d
;

145 
	tdw‹d
;

147 
	gu£_°ack
 = -1;

148 
	ghog
 = -1;

149 
	gaddªssbôs
 = -1;

150 
	g˝uty≥
 = -1;

151 *
	gsour˚«me
 = 
NULL
;

155 
	groutöe_cou¡î
 = 0;

158 *
	gx86ax
 [5] = {"?", "al" , "ax" , "?", "eax" };

159 *
	gx86bx
 [5] = {"?", "bl" , "bx" , "?", "ebx" };

160 *
	gx86cx
 [5] = {"?", "cl" , "cx" , "?", "ecx" };

161 *
	gx86dx
 [5] = {"?", "dl" , "dx" , "?", "edx" };

162 *
	gsizíame
[5] = {"?", "byte", "word", "?", "dword"};

163 
	gquickvÆue
[8] = {8, 1, 2, 3, 4, 5, 6, 7};

164 
	gdúe˘i⁄
[2] = {'r','l'};

167 
FILE
 *
	gcodefûe
;

170 
	glöíum
;

173 
	eómode
 {

174 
	mdªg
, 
	m¨eg
, 
	maöd
, 
	maöc
, 
	madec
, 
	mad•
,

175 
	maxdp
, 
	mabsw
, 
	mab¶
, 
	mpcdp
, 
	mpcxd
, 
	mimmd


179 
	glo›_c_cy˛es
;

180 
	glo›_t_cy˛es
;

181 
	glo›_x_cy˛es
;

182 
	glo›öfo
[0x10000];

188 
ómode
 
	gmaö_ómode
;

189 
ómode
 
	gmaö_de°mode
;

190 
	gmaö_size
;

191 
	gsizedef
;

192 
	gmaö_ªg
;

193 
	gmaö_cc
;

194 
	gmaö_dr
;

195 
	gmaö_ú
;

196 
	gmaö_qv
;

199 
	$emô
(c⁄° *
fmt
, ...) {

200 
va_li°
 
a
;

201 
	`va_°¨t
(
a
, 
fmt
);

202 if(
codefûe
) {

203 
	`vÂrötf
(
codefûe
, 
fmt
, 
a
);

205 
	`Ârötf
(
°dîr
, "BadÇews: TriedÅoÉmit()ÅoÇull file\n");

206 
	`exô
(1);

208 
	}
}

211 
	$›ti⁄dump
(
FILE
 *
o
, *
¥efix
) {

212 
	`Ârötf
(
o
, "%sCPUÅy≥: %d (%d-bôáddªs£s)\n", 
¥efix
,

213 
˝uty≥
, 
addªssbôs
);

214 
	`Ârötf
(
o
, "%sIdítifõr†begö wôh \"%s\"\n", 
¥efix
,

215 
sour˚«me
);

216 
	`Ârötf
(
o
, "%s%†ˇŒög c⁄víti⁄s\n", 
¥efix
,

217 
u£_°ack
 ? "Stack" : "Register");

218 
	`Ârötf
(
o
, "%sHog mode: %s\n", 
¥efix
,

219 
hog
 ? "On" : "Off");

220 
	}
}

222 
	$gí_b™√r
() {

223 
	`emô
("; Gíî©ed by STARSCREAM vîsi⁄ " 
VERSION
 "\n");

224 
	`emô
("; Forássembly by NASM only\n");

225 
	`emô
(";\n");

226 
	`emô
("; Options:\n");

227 
	`›ti⁄dump
(
codefûe
, "; * ");

228 
	`emô
(";\n");

229 
	`emô
("bits 32\n");

230 
	}
}

232 
	$Æign
(
n
) {

233 
	`emô
("time†($$-$)&%d db 0\n", 
n
 - 1);

234 
	}
}

236 
	$maskaddªss
(*
ªg
) {

237 if(
addªssbôs
 < 32) {

238 
	`emô
("™d %s,%d\n", 
ªg
, (1 << 
addªssbôs
) - 1);

240 
	}
}

242 
	$begö_sour˚_¥oc
(*
‚ame
) {

243 
	`emô
("globÆ _%s%s\n", 
sour˚«me
, 
‚ame
);

244 
	`emô
("globÆ %s%s_\n", 
sour˚«me
, 
‚ame
);

245 
	`emô
("_%s%s:\n", 
sour˚«me
, 
‚ame
);

246 
	`emô
("%s%s_:\n", 
sour˚«me
, 
‚ame
);

247 
	}
}

250 
	$gí_v¨übÀs
() {

251 
	`emô
("section .data\n");

252 
	`emô
("bits 32\n");

253 
	`emô
("globÆ _%sc⁄ãxt\n", 
sour˚«me
);

254 
	`Æign
(8);

255 
	`emô
("_%sc⁄ãxt:\n", 
sour˚«me
);

256 
	`emô
("contextbegin:\n");

263 if(
˝uty≥
 <= 68010) {

264 
	`emô
("__fetch dd 0\n");

265 
	`emô
("__readbyte dd 0\n");

266 
	`emô
("__readword dd 0\n");

267 
	`emô
("__writebyte dd 0\n");

268 
	`emô
("__writeword dd 0\n");

269 
	`emô
("__s_fetch dd 0\n");

270 
	`emô
("__s_readbyte dd 0\n");

271 
	`emô
("__s_readword dd 0\n");

272 
	`emô
("__s_writebyte dd 0\n");

273 
	`emô
("__s_writeword dd 0\n");

274 
	`emô
("__u_fetch dd 0\n");

275 
	`emô
("__u_readbyte dd 0\n");

276 
	`emô
("__u_readword dd 0\n");

277 
	`emô
("__u_writebyte dd 0\n");

278 
	`emô
("__u_writeword dd 0\n");

279 if(
˝uty≥
 == 68010) {

280 
	`emô
("__f_readbyte dd 0\n");

281 
	`emô
("__f_readword dd 0\n");

282 
	`emô
("__f_writebyte dd 0\n");

283 
	`emô
("__f_writeword dd 0\n");

291 
	`emô
("__fetch dd 0\n");

292 
	`emô
("__readbus dd 0\n");

293 
	`emô
("__writebus dd 0\n");

294 
	`emô
("__s_fetch dd 0\n");

295 
	`emô
("__s_readbus dd 0\n");

296 
	`emô
("__s_writebus dd 0\n");

297 
	`emô
("__u_fetch dd 0\n");

298 
	`emô
("__u_readbus dd 0\n");

299 
	`emô
("__u_writebus dd 0\n");

300 
	`emô
("__f_readbus dd 0\n");

301 
	`emô
("__f_writebus dd 0\n");

311 if(
˝uty≥
 >= 68000) {

312 
	`emô
("__resethandler dd 0\n");

313 
	`emô
("__reg:\n");

314 
	`emô
("__dreg dd 0,0,0,0,0,0,0,0\n");

315 
	`emô
("__areg dd 0,0,0,0,0,0,0\n");

316 
	`emô
("__a7 dd 0\n");

317 
	`emô
("__asp dd 0\n");

318 
	`emô
("__pc dd 0\n");

319 
	`emô
("__odometer dd 0\n");

321 
	`emô
("__interrupts db 0,0,0,0,0,0,0,0\n");

322 
	`emô
("__sr dw 0\n");

327 if(
˝uty≥
 == 68000) {

328 
	`emô
("__contextfiller00 dw 0\n");

335 if(
˝uty≥
 >= 68010) {

336 
	`emô
("__sfc db 0\n");

337 
	`emô
("__dfc db 0\n");

338 
	`emô
("__vbr dd 0\n");

339 
	`emô
("__bkpthandler dd 0\n");

346 if(
˝uty≥
 == 68010) {

347 
	`emô
("__loopmode db 0\n");

348 
	`emô
("__contextfiller10 db 0,0,0\n");

355 if(
˝uty≥
 >= 68020) {

388 
	`emô
("__xsp dd 0\n");

391 
	`emô
("contextend:\n");

392 
	`emô
("__cycles_needed dd 0\n");

393 
	`emô
("__cycles_leftover dd 0\n");

394 
	`emô
("__fetch_region_start dd 0\n");

395 
	`emô
("__fetch_region_end dd 0\n");

396 
	`emô
("__xflag db 0\n");

412 
	`emô
("__execinfo db 0\n");

413 
	`emô
("__trace_trickybit db 0\n");

414 
	`emô
("__filler db 0\n");

415 
	`emô
("__io_cycle_counter dd -1\n");

416 
	`emô
("__io_fetchbase dd 0\n");

417 
	`emô
("__io_fetchbased_pc dd 0\n");

418 
	`emô
("__access_address dd 0\n");

420 
	`emô
("save_01 dd 0\n");

422 
	}
}

425 
	$aúlock_exô
() {

426 
	`emô
("mov [__io_cycle_counter],edi\n");

427 
	`emô
("mov [__io_fetchbase],ebp\n");

428 
	`emô
("mov [__io_fetchbased_pc],esi\n");

429 
	`emô
("pushÉbx\n");

430 
	`emô
("pushÉax\n");

431 
	}
}

435 
	$aúlock_íãr
() {

436 
	`emô
("popÉax\n");

437 
	`emô
("popÉbx\n");

438 
	`emô
("movÉdi,[__io_cycle_counter]\n");

439 
	`emô
("movÉbp,[__io_fetchbase]\n");

440 
	`emô
("movÉsi,[__io_fetchbased_pc]\n");

441 
	}
}

443 íum { 
	maúlock_°acksize
 = 8 };

445 
	$ˇche_c¸
() {

446 
	`emô
("movál,[__sr]\n");

447 
	`emô
("mováh,al\n");

448 
	`emô
("andáx,0C10h\n");

449 
	`emô
("shláh,3\n");

450 
	`emô
("shrál,4\n");

451 
	`emô
("mov [__xflag],al\n");

452 
	`emô
("movál,[__sr]\n");

453 
	`emô
("andál,3\n");

454 
	`emô
("shrál,1\n");

455 
	`emô
("adcáh,ah\n");

456 
	}
}

458 
	$wrôeback_c¸
() {

459 
	`emô
("shráh,1\n");

460 
	`emô
("adcáx,ax\n");

461 
	`emô
("andáx,0C003h\n");

462 
	`emô
("oráh,[__xflag]\n");

463 
	`emô
("roráh,4\n");

464 
	`emô
("orál,ah\n");

465 
	`emô
("mov [__sr],al\n");

466 
	}
}

473 
	$f‹˚_c⁄ãxt_swôch
() {

474 
	`emô
("subÉdi,[__cycles_needed]\n");

475 
	`emô
("mov dword[__cycles_needed],0\n");

476 
	}
}

482 
	$f‹˚_åickybô_¥o˚ss
() {

483 
	`emô
("incÉdi\n");

484 
	`emô
("add [__cycles_leftover],edi\n");

485 
	`emô
("orÉdi,byte -1\n");

486 
	}
}

489 
≥rf‹m_ˇched_ªba£
();

492 
	$c›y_mem‹y_m≠
(*
m≠
, *
ªg
) {

493 
	`emô
("mov %s,[__%s_„tch]\n", 
ªg
, 
m≠
);

494 
	`emô
("mov [__„tch],%s\n", 
ªg
);

495 if(
˝uty≥
 < 68020) {

496 
	`emô
("mov %s,[__%s_ªadbyã]\n" , 
ªg
, 
m≠
);

497 
	`emô
("mov [__ªadbyã],%s\n" , 
ªg
);

498 
	`emô
("mov %s,[__%s_ªadw‹d]\n" , 
ªg
, 
m≠
);

499 
	`emô
("mov [__ªadw‹d],%s\n" , 
ªg
);

500 
	`emô
("mov %s,[__%s_wrôebyã]\n", 
ªg
, 
m≠
);

501 
	`emô
("mov [__wrôebyã],%s\n", 
ªg
);

502 
	`emô
("mov %s,[__%s_wrôew‹d]\n", 
ªg
, 
m≠
);

503 
	`emô
("mov [__wrôew‹d],%s\n", 
ªg
);

505 
	`emô
("mov %s,[__%s_ªadbus]\n" , 
ªg
, 
m≠
);

506 
	`emô
("mov [__ªadbus],%s\n" , 
ªg
);

507 
	`emô
("mov %s,[__%s_wrôebus]\n" , 
ªg
, 
m≠
);

508 
	`emô
("mov [__wrôebus],%s\n" , 
ªg
);

510 
	}
}

514 
	$gí_öãrÁ˚
() {

515 
	`emô
("section .text\n");

516 
	`emô
("bits 32\n");

517 
	`emô
("top:\n");

529 
	`begö_sour˚_¥oc
("init");

531 
	`emô
("pushad\n");

532 
	`emô
("movÉdi,__jmptbl\n");

533 
	`emô
("movÉsi,__jmptblcomp\n");

534 if(
˝uty≥
 == 68010) {

535 
	`emô
("movÉbx,__looptbl\n");

537 
	`emô
(".decomp:\n");

538 
	`emô
("lodsd\n");

539 
	`emô
("movÉcx,eax\n");

540 
	`emô
("andÉax,0FFFFFFh\n");

541 
	`emô
("shrÉcx,24\n");

542 
	`emô
("addÉax,top\n");

543 
	`emô
("incÉcx\n");

544 if(
˝uty≥
 == 68010) {

545 
	`emô
("movÉbp,ecx\n");

547 
	`emô
(".jloop:\n");

548 
	`emô
("mov [edi],eax\n");

549 
	`emô
("addÉdi,byte 4\n");

550 
	`emô
("decÉcx\n");

551 
	`emô
("jnz short .jloop\n");

552 if(
˝uty≥
 == 68010) {

553 
	`emô
("lodsb\n");

554 
	`emô
(".lloop:\n");

555 
	`emô
("mov [ebx],al\n");

556 
	`emô
("incÉbx\n");

557 
	`emô
("decÉbp\n");

558 
	`emô
("jnz short .lloop\n");

560 
	`emô
("cmpÉdi,__jmptbl+262144\n");

561 
	`emô
("jne short .decomp\n");

563 
	`emô
("popad\n");

564 
	`emô
("xorÉax,eax\n");

565 
	`emô
("ret\n");

578 
	`begö_sour˚_¥oc
("exec");

580 if(
u£_°ack
Ë
	`emô
("movÉax,[esp+4]\n");

585 
	`emô
("test byte[__interrupts],1\n");

586 
	`emô
("jz .notstopped\n");

587 
	`emô
("test byte[__pc],1\n");

588 
	`emô
("jz .notfaulted\n");

589 
	`emô
("orÉax,byte -1\n");

590 
	`emô
("ret\n");

591 
	`emô
(".notfaulted:\n");

592 
	`emô
("add [__odometer],eax\n");

593 
	`emô
("movÉax,80000000h\n");

594 
	`emô
("ret\n");

595 
	`emô
(".notstopped:\n");

597 
	`emô
("pushÉbp\n");

598 
	`emô
("pushÉbx\n");

599 
	`emô
("pushÉcx\n");

600 
	`emô
("pushÉdx\n");

601 
	`emô
("pushÉsi\n");

602 
	`emô
("pushÉdi\n");

604 
	`emô
("mov [__cycles_needed],eax\n");

605 
	`emô
("movÉdi,eax\n");

606 
	`emô
("decÉdi\n");

608 
	`emô
("xorÉbx,ebx\n");

609 
	`emô
("movÉsi,[__pc]\n");

610 
	`ˇche_c¸
();

611 
	`emô
("xorÉbp,ebp\n");

612 
	`emô
("mov byte[__execinfo],1\n");

618 
	`emô
("call basefunction\n");

619 
	`emô
("addÉsi,ebp\n");

620 
	`emô
("test byte[__execinfo],2\n");

621 
	`emô
("jnzÇearÉxec_bounderror\n");

623 
	`emô
("mov dword[__cycles_leftover],0\n");

626 
	`emô
("exec_checkpoint:\n");

627 
	`emô
("js shortÉxecquit\n");

630 
	`emô
("mov cl,[__sr+1]\n");

631 
	`emô
("andÉcx,byte 7\n");

632 
	`emô
("incÉcx\n");

633 
	`emô
("mov ch,[__interrupts]\n");

634 
	`emô
("or ch,ch\n");

635 
	`emô
("js short .yesint\n");

636 
	`emô
("shr ch,cl\n");

637 
	`emô
("jz short .noint\n");

638 
	`emô
(".yesint:\n");

639 
	`emô
("call flush_interrupts\n");

641 
	`emô
("call basefunction\n");

642 
	`emô
("addÉsi,ebp\n");

643 
	`emô
("test byte[__execinfo],2\n");

644 
	`emô
("jnzÇearÉxec_bounderror\n");

645 
	`emô
(".noint:\n");

650 
	`emô
("mov ch,[__sr+1]\n");

651 
	`emô
("and ch,80h\n");

652 
	`emô
("mov [__trace_trickybit],ch\n");

653 
	`emô
("jz shortÉxecloop\n");

666 
	`f‹˚_åickybô_¥o˚ss
();

668 
	`emô
("execloop:\n");

670 
	`emô
("mov bx,[esi]\n");

671 
	`emô
("addÉsi,byte 2\n");

672 
	`emô
("jmp dword[__jmptbl+ebx*4]\n");

674 if(!
hog
) {

675 
	`emô
("execend:\n");

676 
	`emô
("jns shortÉxecloop\n");

678 
	`emô
("execquit:\n");

684 
	`emô
("cmp byte[__trace_trickybit],0\n");

685 
	`emô
("je shortÉxecquit_notrace\n");

687 
	`emô
("movÉdx,24h\n");

688 
	`emô
("call group_1_exception\n");

689 
	`≥rf‹m_ˇched_ªba£
();

691 
	`emô
("subÉdi,byã %d\n", (
˝uty≥
 == 68010) ? 38 : 34);

692 
	`emô
("execquit_notrace:\n");

699 
	`emô
("mov cl,[__sr+1]\n");

700 
	`emô
("andÉcx,byte 7\n");

701 
	`emô
("incÉcx\n");

702 
	`emô
("mov ch,[__interrupts]\n");

703 
	`emô
("or ch,ch\n");

704 
	`emô
("js shortÉxecquit_yesinterrupt\n");

705 
	`emô
("shr ch,cl\n");

706 
	`emô
("jz shortÉxecquit_nointerrupt\n");

707 
	`emô
("execquit_yesinterrupt:\n");

708 
	`emô
("call flush_interrupts\n");

713 
	`emô
("call basefunction\n");

714 
	`emô
("addÉsi,ebp\n");

715 
	`emô
("test byte[__execinfo],2\n");

716 
	`emô
("jnz shortÉxec_bounderror\n");

717 
	`emô
("execquit_nointerrupt:\n");

723 
	`emô
("addÉdi,[__cycles_leftover]\n");

724 
	`emô
("mov dword[__cycles_leftover],0\n");

725 
	`emô
("jns shortÉxecloop\n");

728 
	`emô
("movÉcx,80000000h\n");

734 
	`emô
("execexit:\n");

735 
	`emô
("subÉsi,ebp\n");

736 
	`wrôeback_c¸
();

737 
	`emô
("mov [__pc],esi\n");

738 
	`emô
("incÉdi\n");

739 
	`emô
("movÉdx,[__cycles_needed]\n");

740 
	`emô
("subÉdx,edi\n");

741 
	`emô
("add [__odometer],edx\n");

742 
	`emô
("mov byte[__execinfo],0\n");

750 
	`emô
("mov dword[__cycles_needed],0\n");

751 
	`emô
("mov dword[__io_cycle_counter],-1\n");

753 
	`emô
("movÉax,ecx\n");

754 
	`emô
("popÉdi\n");

755 
	`emô
("popÉsi\n");

756 
	`emô
("popÉdx\n");

757 
	`emô
("popÉcx\n");

758 
	`emô
("popÉbx\n");

759 
	`emô
("popÉbp\n");

760 
	`emô
("ret\n");

765 
	`emô
("exec_bounderror:\n");

766 
	`emô
("movÉcx,80000001h\n");

767 
	`emô
("jmp shortÉxecexit\n");

772 
	`emô
("invalidins:\n");

773 
	`emô
("subÉsi,byte 2\n");

774 
	`emô
("movÉcx,esi\n");

775 
	`emô
("subÉcx,ebp\n");

776 
	`maskaddªss
("ecx");

777 if(
addªssbôs
 == 32) {

778 
	`emô
("andÉcx,7FFFFFFFh\n");

781 
	`emô
("jmp shortÉxecexit\n");

794 
	`begö_sour˚_¥oc
("reset");

796 
	`emô
("movÉax,1\n");

797 
	`emô
("test [__execinfo],al\n");

798 
	`emô
("jnzÇear .return\n");

799 
	`emô
("cmp dword[__s_fetch],0\n");

800 
	`emô
("jeÇear .return\n");

801 
	`emô
("decÉax\n");

802 
	`emô
("mov [__execinfo],al\n");

803 
	`emô
("subÉax,byte 16\n");

804 
	`emô
(".gp:\n");

805 
	`emô
("mov dword[__reg+64+eax*4],0\n");

806 
	`emô
("incÉax\n");

807 
	`emô
("jnz short .gp\n");

808 
	`emô
("mov [__asp],eax\n");

809 if(
˝uty≥
 >68020Ë
	`emô
("mov [__xsp],eax\n");

811 
	`emô
("mov word[__sr],2700h\n");

812 if(
˝uty≥
 >= 68010) {

813 
	`emô
("mov [__vbr],eax\n");

814 
	`emô
("mov [__sfc],al\n");

815 
	`emô
("mov [__dfc],al\n");

817 if(
˝uty≥
 == 68010) {

818 
	`emô
("mov [__loopmode],al\n");

821 
	`c›y_mem‹y_m≠
("s", "eax");

824 
	`emô
("movÉax,1\n");

825 
	`emô
("mov [__pc],eax\n");

826 
	`emô
("mov [__interrupts],al\n");

827 
	`emô
("pushÉsi\n");

828 
	`emô
("pushÉbp\n");

829 
	`emô
("xorÉsi,esi\n");

830 
	`emô
("call basefunction\n");

831 
	`emô
("test byte[__execinfo],2\n");

832 
	`emô
("jnz short .exit\n");

833 
	`emô
("addÉsi,ebp\n");

834 
	`emô
("movÉax,[esi]\n");

835 
	`emô
("rolÉax,16\n");

836 
	`emô
("mov [__a7],eax\n");

837 
	`emô
("movÉax,[esi+4]\n");

838 
	`emô
("rolÉax,16\n");

839 
	`emô
("mov [__pc],eax\n");

841 
	`emô
("andÉax,byte 1\n");

842 
	`emô
("mov [__interrupts],al\n");

843 
	`emô
("negÉax\n");

844 
	`emô
(".exit:\n");

845 
	`emô
("popÉbp\n");

846 
	`emô
("popÉsi\n");

847 
	`emô
(".return:\n");

848 
	`emô
("ret\n");

860 
	`begö_sour˚_¥oc
("interrupt");

862 
	`emô
("pushÉdx\n");

863 if(
u£_°ack
) {

864 
	`emô
("movÉax,[esp+8]\n");

865 
	`emô
("movÉdx,[esp+12]\n");

870 
	`emô
("cmpÉax,byte 7\n");

871 
	`emô
("ja short .badinput\n");

872 
	`emô
("orÉax,eax\n");

873 
	`emô
("jz short .badinput\n");

874 
	`emô
("cmpÉdx,255\n");

875 
	`emô
("jg short .badinput\n");

876 
	`emô
("cmpÉdx,byte -2\n");

877 
	`emô
("jl short .badinput\n");

881 
	`emô
("jne short .notspurious\n");

882 
	`emô
("movÉdx,18h\n");

883 
	`emô
(".notspurious:\n");

884 
	`emô
("orÉdx,edx\n");

885 
	`emô
("jns short .notauto\n");

886 
	`emô
("leaÉdx,[eax+18h]\n");

887 
	`emô
(".notauto:\n");

892 
	`emô
("pushÉcx\n");

893 
	`emô
("mov cl,al\n");

894 
	`emô
("mováh,1\n");

895 
	`emô
("shláh,cl\n");

896 
	`emô
("popÉcx\n");

897 
	`emô
("test [__interrupts],ah\n");

898 
	`emô
("jnz .failure\n");

902 
	`emô
("or [__interrupts],ah\n");

903 
	`emô
("mováh,0\n");

904 
	`emô
("mov [__interrupts+eax],dl\n");

905 
	`emô
("and byte[__interrupts],0FEh\n");

911 
	`emô
("movÉdx,[__io_cycle_counter]\n");

912 
	`emô
("incÉdx\n");

913 
	`emô
("add [__cycles_leftover],edx\n");

914 
	`emô
("mov dword[__io_cycle_counter],-1\n");

918 
	`emô
("popÉdx\n");

919 
	`emô
("xorÉax,eax\n");

920 
	`emô
("ret\n");

924 
	`emô
(".failure:\n");

925 
	`emô
("popÉdx\n");

926 
	`emô
("movÉax,1\n");

927 
	`emô
("ret\n");

931 
	`emô
(".badinput:\n");

932 
	`emô
("popÉdx\n");

933 
	`emô
("movÉax,2\n");

934 
	`emô
("ret\n");

945 
	`begö_sour˚_¥oc
("flushInterrupts");

951 
	`emô
("test byte[__execinfo],1\n");

952 
	`emô
("jnz .noflush\n");

954 
	`emô
("pushad\n");

955 
	`emô
("movÉsi,[__pc]\n");

956 
	`emô
("xorÉbp,ebp\n");

957 
	`ˇche_c¸
();

958 
	`emô
("xorÉdi,edi\n");

959 
	`emô
("call flush_interrupts\n");

960 
	`emô
("sub [__odometer],edi\n");

961 
	`emô
("mov [__pc],esi\n");

962 
	`wrôeback_c¸
();

963 
	`emô
("popad\n");

964 
	`emô
(".noflush:\n");

965 
	`emô
("ret\n");

974 
	`begö_sour˚_¥oc
("GetContextSize");

976 
	`emô
("movÉax,contextend-contextbegin\n");

977 
	`emô
("ret\n");

986 
	`begö_sour˚_¥oc
("GetContext");

988 
	`emô
("pushÉdx\n");

989 
	`emô
("pushÉdi\n");

990 if(
u£_°ack
Ë
	`emô
("movÉdi,[esp+12]\n");

991 
	`emô
("movÉdi,eax\n");

992 
	`emô
("%%assign i 0\n");

993 
	`emô
("%%rep ((contextend-contextbegin) / 8)\n");

994 
	`emô
(" movÉax,[contextbegin+i+0]\n");

995 
	`emô
(" movÉdx,[contextbegin+i+4]\n");

996 
	`emô
(" mov [edi+i+0],eax\n");

997 
	`emô
(" mov [edi+i+4],edx\n");

998 
	`emô
("%%assign i i+8\n");

999 
	`emô
("%%endrep\n");

1000 
	`emô
("%%if ((contextend-contextbegin) %% 8)!=0\n");

1001 
	`emô
(" movÉax,[contextbegin+i+0]\n");

1002 
	`emô
(" mov [edi+i+0],eax\n");

1003 
	`emô
("%%endif\n");

1004 
	`emô
("popÉdi\n");

1005 
	`emô
("popÉdx\n");

1006 
	`emô
("xorÉax,eax\n");

1007 
	`emô
("ret\n");

1016 
	`begö_sour˚_¥oc
("SetContext");

1018 
	`emô
("pushÉdx\n");

1019 
	`emô
("pushÉsi\n");

1020 if(
u£_°ack
Ë
	`emô
("movÉsi,[esp+12]\n");

1021 
	`emô
("movÉsi,eax\n");

1022 
	`emô
("%%assign i 0\n");

1023 
	`emô
("%%rep ((contextend-contextbegin) / 8)\n");

1024 
	`emô
(" movÉax,[esi+i+0]\n");

1025 
	`emô
(" movÉdx,[esi+i+4]\n");

1026 
	`emô
(" mov [contextbegin+i+0],eax\n");

1027 
	`emô
(" mov [contextbegin+i+4],edx\n");

1028 
	`emô
("%%assign i i+8\n");

1029 
	`emô
("%%endrep\n");

1030 
	`emô
("%%if ((contextend-contextbegin) %% 8)!=0\n");

1031 
	`emô
(" movÉax,[esi+i+0]\n");

1032 
	`emô
(" mov [contextbegin+i+0],eax\n");

1033 
	`emô
("%%endif\n");

1034 
	`emô
("popÉsi\n");

1035 
	`emô
("popÉdx\n");

1036 
	`emô
("xorÉax,eax\n");

1037 
	`emô
("ret\n");

1049 
	`begö_sour˚_¥oc
("fetch");

1051 if(
u£_°ack
Ë
	`emô
("movÉax,[esp+4]\n");

1052 
	`emô
("pushÉbx\n");

1053 
	`emô
("pushÉsi\n");

1054 
	`emô
("pushÉdi\n");

1055 
	`emô
("pushÉbp\n");

1056 
	`emô
("push dword[__fetch]\n");

1057 
	`emô
("movÉbx,[__s_fetch]\n");

1058 
	`emô
("mov [__fetch],ebx\n");

1060 
	`emô
("push dword[__fetch_region_start]\n");

1061 
	`emô
("push dword[__fetch_region_end]\n");

1063 
	`emô
("mov bl,[__execinfo]\n");

1064 
	`emô
("pushÉbx\n");

1066 
	`emô
("xorÉbp,ebp\n");

1067 
	`emô
("movÉsi,eax\n");

1068 
	`emô
("and byte[__execinfo],0FDh\n");

1070 
	`emô
("call basefunction\n");

1071 
	`emô
("test byte[__execinfo],2\n");

1072 
	`emô
("movÉax,-1\n");

1073 
	`emô
("jnz short .badfetch\n");

1074 
	`emô
("addÉsi,ebp\n");

1075 
	`emô
("incÉax\n");

1076 
	`emô
("mováx,[esi]\n");

1077 
	`emô
(".badfetch:\n");

1078 
	`emô
("popÉbx\n");

1079 
	`emô
("mov [__execinfo],bl\n");

1080 
	`emô
("pop dword[__fetch_region_end]\n");

1081 
	`emô
("pop dword[__fetch_region_start]\n");

1082 
	`emô
("pop dword[__fetch]\n");

1083 
	`emô
("popÉbp\n");

1084 
	`emô
("popÉdi\n");

1085 
	`emô
("popÉsi\n");

1086 
	`emô
("popÉbx\n");

1087 
	`emô
("ret\n");

1097 
	`begö_sour˚_¥oc
("readOdometer");

1099 
	`emô
("movÉax,[__cycles_needed]\n");

1100 
	`emô
("subÉax,[__io_cycle_counter]\n");

1101 
	`emô
("decÉax\n");

1102 
	`emô
("subÉax,[__cycles_leftover]\n");

1103 
	`emô
("addÉax,[__odometer]\n");

1104 
	`emô
("ret\n");

1114 
	`begö_sour˚_¥oc
("tripOdometer");

1116 
	`emô
("movÉax,[__cycles_needed]\n");

1117 
	`emô
("subÉax,[__io_cycle_counter]\n");

1118 
	`emô
("decÉax\n");

1119 
	`emô
("subÉax,[__cycles_leftover]\n");

1120 
	`emô
("add [__odometer],eax\n");

1122 
	`emô
("movÉax,[__io_cycle_counter]\n");

1123 
	`emô
("incÉax\n");

1124 
	`emô
("mov [__cycles_needed],eax\n");

1125 
	`emô
("movÉax,[__odometer]\n");

1126 
	`emô
("mov dword[__odometer],0\n");

1127 
	`emô
("ret\n");

1137 
	`begö_sour˚_¥oc
("controlOdometer");

1138 if(
u£_°ack
Ë
	`emô
("movÉax,[esp+4]\n");

1139 
	`emô
("orÉax,eax\n");

1140 
	`emô
("jnz sh‹à_%°rùOdomëî\n", 
sour˚«me
);

1141 
	`emô
("jm∞sh‹à_%§ódOdomëî\n", 
sour˚«me
);

1152 
	`begö_sour˚_¥oc
("releaseTimeslice");

1154 
	`emô
("movÉax,[__cycles_needed]\n");

1155 
	`emô
("sub [__io_cycle_counter],eax\n");

1156 
	`emô
("xorÉax,eax\n");

1157 
	`emô
("mov [__cycles_needed],eax\n");

1158 
	`emô
("ret\n");

1170 
	`begö_sour˚_¥oc
("readPC");

1172 
	`emô
("test byte[__execinfo],1\n");

1173 
	`emô
("jnz short .live\n");

1174 
	`emô
("movÉax,[__pc]\n");

1175 
	`emô
("ret\n");

1176 
	`emô
(".live:\n");

1177 
	`emô
("movÉax,[__io_fetchbased_pc]\n");

1178 
	`emô
("subÉax,[__io_fetchbase]\n");

1179 
	`emô
("ret\n");

1181 
	}
}

1194 
	$gí_Êush_öãºu±s
() {

1195 
cy˛es
 = (
˝uty≥
 == 68010) ? 46 : 44;

1196 
	`Æign
(16);

1197 
	`emô
("flush_interrupts:\n");

1199 
	`emô
("subÉsi,ebp\n");

1200 
	`emô
("xorÉbp,ebp\n");

1203 
	`emô
("movÉdx,7\n");

1204 
	`emô
("mov cl,80h\n");

1205 
	`emô
("mov ch,[__sr+1]\n");

1206 
	`emô
("and ch,7\n");

1207 
	`emô
(".loop:\n");

1208 
	`emô
("test [__interrupts],cl\n");

1209 
	`emô
("jz short .noint\n");

1211 
	`emô
("mov [save_01], dl\n");

1213 
	`emô
("mov dl,[__interrupts+edx]\n");

1214 
	`emô
("not cl\n");

1215 
	`emô
("and [__interrupts],cl\n");

1216 
	`emô
("shlÉdx,2\n");

1217 
	`emô
("call group_1_exception\n");

1219 
	`emô
("and [__sr + 1], byte 0xF8\n");

1220 
	`emô
("mov dl, [save_01]\n");

1222 
	`emô
("subÉdi,byã %d\n", 
cy˛es
);

1224 
	`emô
("or [__sr + 1], dl\n");

1226 
	`emô
("jmp short .intdone\n");

1227 
	`emô
(".noint:\n");

1228 
	`emô
("decÉdx\n");

1229 
	`emô
("jz short .intdone\n");

1230 
	`emô
("shr cl,1\n");

1231 
	`emô
("cmp dl,ch\n");

1232 
	`emô
("jg short .loop\n");

1233 
	`emô
(".intdone:\n");

1234 
	`emô
("ret\n");

1235 
	}
}

1239 
	$ªt_timög
(
n
) {

1240 if(
n
) {

1241 
	`emô
("subÉdi,%s%d\n", (
n
 < 128) ? "byte " : "",Ç);

1243 
	`emô
("orÉdi,edi\n");

1246 if(!
hog
) {

1247 
	`emô
("jmpÉxecend\n");

1250 
	`emô
("jsÇearÉxecquit\n");

1251 
	`emô
("mov bx,[esi]\n");

1252 
	`emô
("addÉsi,byte 2\n");

1253 
	`emô
("jmp dword[__jmptbl+ebx*4]\n");

1255 
	}
}

1268 
	$ªt_timög_checkpoöt
(
n
) {

1269 if(
n
) {

1270 
	`emô
("subÉdi,%s%d\n", (
n
 < 128) ? "byte " : "",Ç);

1272 
	`emô
("orÉdi,edi\n");

1274 
	`emô
("jmpÉxec_checkpoint\n");

1275 
	}
}

1280 
	$gí_decode_ext
() {

1281 
	`Æign
(16);

1282 
	`emô
("decode_ext:\n");

1283 if(
˝uty≥
 <= 68010) {

1284 
	`emô
("pushÉcx\n");

1285 
	`emô
("movzxÉdx,word[esi]\n");

1286 
	`emô
("movsxÉcx,dl\n");

1287 
	`emô
("addÉsi,byte 2\n");

1288 
	`emô
("shrÉdx,12\n");

1289 
	`emô
("movÉdx,[__reg+edx*4]\n");

1290 
	`emô
("jc short .long\n");

1291 
	`emô
("movsxÉdx,dx\n");

1292 
	`emô
(".long:\n");

1293 
	`emô
("addÉdx,ecx\n");

1294 
	`emô
("popÉcx\n");

1295 
	`emô
("ret\n");

1300 
	}
}

1307 
	$≥rf‹m_ˇched_ªba£
() {

1308 
mylöe
 = 
löíum
;Üinenum += 2;

1309 
	`emô
("cmpÉsi,[__fetch_region_start]\n");

1310 
	`emô
("jb sh‹à %d\n", 
mylöe
);

1311 
	`emô
("cmpÉsi,[__fetch_region_end]\n");

1312 
	`emô
("jbêsh‹à %d\n", 
mylöe
 + 1);

1313 
	`emô
(" %d:\n", 
mylöe
);

1314 
	`emô
("call basefunction\n");

1315 
	`emô
(" %d:\n", 
mylöe
 + 1);

1316 
	`emô
("addÉsi,ebp\n");

1317 
	}
}

1337 
	$gí_ba£fun˘i⁄
() {

1338 
	`Æign
(16);

1339 
	`emô
("basefunction:\n");

1344 if(
addªssbôs
 < 32) {

1345 
	`emô
("pushÉsi\n");

1346 
	`maskaddªss
("esi");

1348 
	`emô
("movÉbp,[__fetch]\n");

1349 
	`emô
(".check:\n");

1350 
	`emô
("db 3Eh\n");

1351 
	`emô
("cmpÉsi,[ebp]\n");

1352 
	`emô
("jb short .next\n");

1353 
	`emô
("db 3Eh\n");

1354 
	`emô
("cmpÉsi,[ebp+4]\n");

1355 
	`emô
("jbe short .base\n");

1356 
	`emô
(".next:\n");

1357 
	`emô
("db 3Eh\n");

1358 
	`emô
("cmp dword [ebp],byte -1\n");

1359 
	`emô
("je short .outofrange\n");

1360 
	`emô
("addÉbp,byte 12\n");

1361 
	`emô
("jmp short .check\n");

1363 
	`emô
(".outofrange:\n");

1364 if(
addªssbôs
 < 32Ë
	`emô
("popÉsi\n");

1365 
	`emô
("xorÉbp,ebp\n");

1366 
	`emô
("mov dword[__fetch_region_start],-1\n");

1367 
	`emô
("mov dword[__fetch_region_end],ebp\n");

1368 
	`f‹˚_c⁄ãxt_swôch
();

1369 
	`emô
("or byte[__execinfo],2\n");

1370 
	`emô
("ret\n");

1372 
	`emô
(".base:\n");

1378 if(
addªssbôs
 < 32) {

1379 
	`emô
("movÉsi,[esp]\n");

1380 
	`emô
("™dÉsi,%d\n", 0xFFFFFFFF << 
addªssbôs
);

1382 
	`emô
("pushÉdx\n");

1383 
	`emô
("movÉdx,ebp\n");

1388 
	`emô
("movÉbp,[edx]\n");

1389 if(
addªssbôs
 < 32Ë
	`emô
("orÉbp,esi\n");

1390 
	`emô
("mov [__fetch_region_start],ebp\n");

1391 
	`emô
("movÉbp,[edx+4]\n");

1392 if(
addªssbôs
 < 32Ë
	`emô
("orÉbp,esi\n");

1393 
	`emô
("mov [__fetch_region_end],ebp\n");

1394 
	`emô
("movÉbp,[edx+8]\n");

1395 
	`emô
("popÉdx\n");

1396 if(
addªssbôs
 < 32) {

1401 
	`emô
("subÉbp,esi\n");

1402 
	`emô
("popÉsi\n");

1404 
	`emô
("ret\n");

1405 
	}
}

1410 
	$˛2c¸
(){

1411 
	`emô
("movál,cl\n");

1412 
	`emô
("mováh,al\n");

1413 
	`emô
("andáx,0C10h\n");

1414 
	`emô
("shláh,3\n");

1415 
	`emô
("shrál,4\n");

1416 
	`emô
("mov [__xflag],al\n");

1417 
	`emô
("movál,cl\n");

1418 
	`emô
("andál,3\n");

1419 
	`emô
("shrál,1\n");

1420 
	`emô
("adcáh,ah\n");

1421 
	}
}

1430 
	$cx2§
(){

1431 
mylöe
 = 
löíum
;Üinenum += 2;

1433 
	`emô
("pushÉcx\n");

1436 
	`emô
("mov cl,[__sr+1]\n");

1437 
	`emô
("and cx,2020h\n");

1438 
	`emô
("xor ch,cl\n");

1439 
	`emô
("jzÇó∏ %d\n", 
mylöe
);

1441 
	`emô
("movÉcx,[__a7]\n");

1442 
	`emô
("xchgÉcx,[__asp]\n");

1443 
	`emô
("mov [__a7],ecx\n");

1445 
	`emô
("test byte[esp+1],20h\n");

1446 
	`emô
("jz sh‹à %d\n", 
mylöe
 + 1);

1447 
	`c›y_mem‹y_m≠
("s", "ecx");

1448 
	`emô
("jm∞sh‹à %d\n", 
mylöe
);

1449 
	`emô
(" %d:\n", 
mylöe
 + 1);

1450 
	`c›y_mem‹y_m≠
("u", "ecx");

1451 
	`emô
(" %d:\n", 
mylöe
);

1452 
	`emô
("popÉcx\n");

1455 
	`emô
("mov [__sr+1],ch\n");

1456 
	`emô
("and byte[__sr+1],0A7h\n");

1459 
	`˛2c¸
();

1460 
	}
}

1463 
	$c¸2˛
(){

1465 
	`emô
("mov ch,[__xflag]\n");

1466 
	`emô
("mov cl,ah\n");

1467 
	`emô
("shr cx,6\n");

1469 
	`emô
("add cl,cl\n");

1470 
	`emô
("or cl,al\n");

1472 
	`emô
("mov ch,ah\n");

1473 
	`emô
("shl ch,8\n");

1474 
	`emô
("adc cl,cl\n");

1475 
	}
}

1478 
	$§2cx
(){

1480 
	`c¸2˛
();

1482 
	`emô
("mov ch,[__sr+1]\n");

1483 
	}
}

1486 
	$su≥rvis‹
(){

1487 
mylöe
=
löíum
;linenum++;

1488 
	`emô
("test byte[__sr+1],20h\n");

1489 
	`emô
("jnz sh‹à %d\n",
mylöe
);

1490 
	`emô
("movÉcx,[__a7]\n");

1491 
	`emô
("xchgÉcx,[__asp]\n");

1492 
	`emô
("mov [__a7],ecx\n");

1493 
	`c›y_mem‹y_m≠
("s", "ecx");

1494 
	`emô
("or byte[__sr+1],20h\n");

1495 
	`emô
(" %d:\n",
mylöe
);

1496 
	}
}

1500 
	$gí_ªadbw
(
size
){

1501 
z
='x';

1502 if(
size
==1)
z
='b';

1503 if(
size
==2)
z
='w';

1505 
	`Æign
(16);

1506 
	`emô
("ªadmem‹y%s:\n",
sizíame
[
size
]);

1508 
	`emô
("mov [__access_address],edx\n");

1509 
	`maskaddªss
("edx");

1510 
	`emô
("movÉcx,[__ªad%s]\n",
sizíame
[
size
]);

1511 
	`emô
("ªad%c_check:\n",
z
);

1512 
	`emô
("cmpÉdx,[ecx]\n");

1513 
	`emô
("jb sh‹àªad%c_√xt\n",
z
);

1514 
	`emô
("cmpÉdx,[ecx+4]\n");

1515 
	`emô
("jbêsh‹àªad%c_ˇŒ\n",
z
);

1516 
	`emô
("ªad%c_√xt:\n",
z
);

1517 
	`emô
("cmp dword[ecx],byte -1\n");

1518 
	`emô
("jêsh‹àªad%c_outo‰™ge\n",
z
);

1519 
	`emô
("addÉcx,byte 16\n");

1520 
	`emô
("jm∞sh‹àªad%c_check\n",
z
);

1522 
	`emô
("ªad%c_outo‰™ge:\n",
z
);

1523 
	`emô
("orÉcx,byte -1\n");

1524 
	`emô
("movÉdx,[__access_address]\n");

1525 
	`emô
("ret\n");

1527 
	`emô
("ªad%c_ˇŒ:\n",
z
);

1528 
	`emô
("cmp dword[ecx+8],byte 0\n");

1529 
	`emô
("j√ sh‹àªad%c_ˇŒio\n",
z
);

1530 
	`emô
("subÉdx,[ecx]\n");

1531 
	`emô
("addÉdx,[ecx+12]\n");

1532 if(
size
==1){

1533 
	`emô
("xorÉdx,byte 1\n");

1534 
	`emô
("mov cl,[edx]\n");

1536 
	`emô
("mov cx,[edx]\n");

1538 
	`emô
("movÉdx,[__access_address]\n");

1539 
	`emô
("ret\n");

1541 
	`emô
("ªad%c_ˇŒio:\n",
z
);

1542 
	`aúlock_exô
();

1548 
	`emô
("movÉax,edx\n");

1549 
	`emô
("movÉdx,ecx\n");

1550 if(
u£_°ack
){

1551 
	`emô
("pushÉdx\n");

1552 
	`emô
("pushÉax\n");

1554 
	`emô
("call dword[edx+8]\n");

1555 if(
u£_°ack
)
	`emô
("addÉsp,byte 8\n");

1556 
	`emô
("movÉcx,eax\n");

1557 
	`aúlock_íãr
();

1558 
	`emô
("movÉdx,[__access_address]\n");

1559 
	`emô
("ret\n");

1560 
	}
}

1562 
	$gí_ªadl
(){

1563 
	`Æign
(16);

1564 
	`emô
("ªadmem‹y%s:\n",
sizíame
[4]);

1566 
	`emô
("mov [__access_address],edx\n");

1567 
	`maskaddªss
("edx");

1568 
	`emô
("movÉcx,[__readword]\n");

1569 
	`emô
("readl_check:\n");

1570 
	`emô
("cmpÉdx,[ecx]\n");

1571 
	`emô
("jb shortÑeadl_next\n");

1572 
	`emô
("cmpÉdx,[ecx+4]\n");

1573 
	`emô
("jbe shortÑeadl_call\n");

1574 
	`emô
("readl_next:\n");

1575 
	`emô
("cmp dword[ecx],byte -1\n");

1576 
	`emô
("je shortÑeadl_outofrange\n");

1577 
	`emô
("addÉcx,byte 16\n");

1578 
	`emô
("jmp shortÑeadl_check\n");

1580 
	`emô
("readl_outofrange:\n");

1581 
	`emô
("addÉdx,byte 2\n");

1582 
	`emô
("cmpÉdx,[ecx+4]\n");

1583 
	`emô
("movÉcx,-1\n");

1584 
	`emô
("jaÇearÑeadl_lower\n");

1585 
	`emô
("movÉdx,[__access_address]\n");

1586 
	`emô
("ret\n");

1588 
	`emô
("readl_call:\n");

1589 
	`emô
("cmp dword[ecx+8],byte 0\n");

1590 
	`emô
("jne shortÑeadl_callio\n");

1592 
	`emô
("addÉdx,byte 2\n");

1593 
	`emô
("cmpÉdx,[ecx+4]\n");

1594 
	`emô
("ja shortÑeadl_split\n");

1596 
	`emô
("subÉdx,[ecx]\n");

1597 
	`emô
("addÉdx,[ecx+12]\n");

1598 
	`emô
("movÉcx,[edx-2]\n");

1599 
	`emô
("rolÉcx,16\n");

1600 
	`emô
("movÉdx,[__access_address]\n");

1601 
	`emô
("ret\n");

1603 
	`emô
("readl_callio:\n");

1604 
	`emô
("addÉdx,byte 2\n");

1605 
	`emô
("cmpÉdx,[ecx+4]\n");

1606 
	`emô
("jaÇearÑeadl_iosplit\n");

1607 
	`emô
("subÉdx,byte 2\n");

1609 
	`aúlock_exô
();

1610 
	`emô
("movÉax,edx\n");

1611 
	`emô
("movÉdx,ecx\n");

1612 
	`emô
("pushÉax\n");

1613 
	`emô
("pushÉdx\n");

1614 if(
u£_°ack
){

1615 
	`emô
("pushÉdx\n");

1616 
	`emô
("pushÉax\n");

1618 
	`emô
("call dword[edx+8]\n");

1619 if(
u£_°ack
)
	`emô
("addÉsp,byte 8\n");

1620 
	`emô
("popÉdx\n");

1621 
	`emô
("xchgÉax,[esp]\n");

1622 
	`emô
("addÉax,byte 2\n");

1624 if(
u£_°ack
){

1625 
	`emô
("pushÉdx\n");

1626 
	`emô
("pushÉax\n");

1628 
	`emô
("call dword[edx+8]\n");

1629 if(
u£_°ack
)
	`emô
("addÉsp,byte 8\n");

1630 
	`emô
("popÉcx\n");

1631 
	`emô
("shlÉcx,16\n");

1632 
	`emô
("mov cx,ax\n");

1633 
	`aúlock_íãr
();

1634 
	`emô
("movÉdx,[__access_address]\n");

1635 
	`emô
("ret\n");

1637 
	`emô
("readl_split:\n");

1638 
	`emô
("subÉdx,[ecx]\n");

1639 
	`emô
("addÉdx,[ecx+12]\n");

1640 
	`emô
("mov cx,[edx-2]\n");

1642 
	`emô
("readl_lower:\n");

1643 
	`emô
("movÉdx,[esp]\n");

1644 
	`emô
("addÉdx,byte 2\n");

1645 
	`emô
("shlÉcx,16\n");

1646 
	`emô
("pushÉcx\n");

1647 
	`emô
("callÑeadmemoryword\n");

1648 
	`emô
("andÉcx,0FFFFh\n");

1649 
	`emô
("orÉcx,[esp]\n");

1650 
	`emô
("addÉsp,byte 4\n");

1651 
	`emô
("movÉdx,[__access_address]\n");

1652 
	`emô
("ret\n");

1654 
	`emô
("readl_iosplit:\n");

1655 
	`emô
("subÉdx,byte 2\n");

1656 
	`aúlock_exô
();

1657 
	`emô
("movÉax,edx\n");

1658 
	`emô
("movÉdx,ecx\n");

1659 if(
u£_°ack
){

1660 
	`emô
("pushÉdx\n");

1661 
	`emô
("pushÉax\n");

1663 
	`emô
("call dword[edx+8]\n");

1664 if(
u£_°ack
)
	`emô
("addÉsp,byte 8\n");

1665 
	`emô
("movÉcx,eax\n");

1666 
	`aúlock_íãr
();

1667 
	`emô
("jmp shortÑeadl_lower\n");

1668 
	}
}

1670 
	$gí_wrôebw
(
size
){

1671 
z
='x';

1672 if(
size
==1)
z
='b';

1673 if(
size
==2)
z
='w';

1675 
	`Æign
(16);

1676 
	`emô
("wrôemem‹y%s:\n",
sizíame
[
size
]);

1678 
	`emô
("mov [__access_address],edx\n");

1679 
	`emô
("pushÉcx\n");

1680 
	`emô
("wrôe%c_t›:\n",
z
);

1681 
	`maskaddªss
("edx");

1682 
	`emô
("movÉcx,[__wrôe%s]\n",
sizíame
[
size
]);

1683 
	`emô
("wrôe%c_check:\n",
z
);

1684 
	`emô
("cmpÉdx,[ecx]\n");

1685 
	`emô
("jb sh‹àwrôe%c_√xt\n",
z
);

1686 
	`emô
("cmpÉdx,[ecx+4]\n");

1687 
	`emô
("jbêsh‹àwrôe%c_ˇŒ\n",
z
);

1688 
	`emô
("wrôe%c_√xt:\n",
z
);

1689 
	`emô
("cmp dword[ecx],byte -1\n");

1690 
	`emô
("jêsh‹àwrôe%c_íd\n",
z
);

1691 
	`emô
("addÉcx,byte 16\n");

1692 
	`emô
("jm∞sh‹àwrôe%c_check\n",
z
);

1693 
	`emô
("wrôe%c_ˇŒ:\n",
z
);

1694 
	`emô
("cmp dword[ecx+8],byte 0\n");

1695 
	`emô
("j√ sh‹àwrôe%c_ˇŒio\n",
z
);

1696 
	`emô
("subÉdx,[ecx]\n");

1697 
	`emô
("addÉdx,[ecx+12]\n");

1698 if(
z
=='b')
	`emô
("xorÉdx,byte 1\n");

1699 
	`emô
("popÉcx\n");

1700 
	`emô
("mov [edx],%s\n",
x86cx
[
size
]);

1701 
	`emô
("movÉdx,[__access_address]\n");

1702 
	`emô
("ret\n");

1704 
	`emô
("wrôe%c_ˇŒio:\n",
z
);

1714 
	`aúlock_exô
();

1715 
	`emô
("movÉbx,ecx\n");

1716 
	`emô
("movÉax,edx\n");

1717 
	`emô
("xorÉdx,edx\n");

1718 
	`emô
("mov %s,[e•+%d]\n",
x86dx
[
size
],
aúlock_°acksize
);

1719 if(
u£_°ack
){

1720 
	`emô
("pushÉbx\n");

1721 
	`emô
("pushÉdx\n");

1722 
	`emô
("pushÉax\n");

1724 
	`emô
("call dword[ebx+8]\n");

1725 if(
u£_°ack
)
	`emô
("addÉsp,byte 12\n");

1726 
	`aúlock_íãr
();

1728 
	`emô
("wrôe%c_íd:\n",
z
);

1729 
	`emô
("popÉcx\n");

1730 
	`emô
("movÉdx,[__access_address]\n");

1731 
	`emô
("ret\n");

1732 
	}
}

1734 
	$gí_wrôñ
(){

1735 
	`Æign
(16);

1736 
	`emô
("wrôemem‹y%s:\n",
sizíame
[4]);

1738 
	`emô
("mov [__access_address],edx\n");

1739 
	`emô
("pushÉcx\n");

1740 
	`maskaddªss
("edx");

1741 
	`emô
("movÉcx,[__wrôe%s]\n",
sizíame
[2]);

1742 
	`emô
("writel_check:\n");

1743 
	`emô
("cmpÉdx,[ecx]\n");

1744 
	`emô
("jb short writel_next\n");

1745 
	`emô
("cmpÉdx,[ecx+4]\n");

1746 
	`emô
("jbe short writel_call\n");

1747 
	`emô
("writel_next:\n");

1748 
	`emô
("cmp dword[ecx],byte -1\n");

1749 
	`emô
("je short writel_outofrange\n");

1750 
	`emô
("addÉcx,byte 16\n");

1751 
	`emô
("jmp short writel_check\n");

1754 
	`emô
("writel_outofrange:\n");

1755 
	`emô
("addÉdx,byte 2\n");

1756 
	`emô
("jmp writew_top\n");

1758 
	`emô
("writel_call:\n");

1759 
	`emô
("cmp dword[ecx+8],byte 0\n");

1760 
	`emô
("jne short writel_callio\n");

1762 
	`emô
("addÉdx,byte 2\n");

1763 
	`emô
("cmpÉdx,[ecx+4]\n");

1764 
	`emô
("ja short writel_split\n");

1765 
	`emô
("subÉdx,[ecx]\n");

1766 
	`emô
("addÉdx,[ecx+12]\n");

1767 
	`emô
("popÉcx\n");

1768 
	`emô
("rolÉcx,16\n");

1769 
	`emô
("mov [edx-2],ecx\n");

1770 
	`emô
("movÉdx,[__access_address]\n");

1772 
	`emô
("rolÉcx,16\n");

1774 
	`emô
("ret\n");

1776 
	`emô
("writel_callio:\n");

1777 
	`emô
("addÉdx,byte 2\n");

1778 
	`emô
("cmpÉdx,[ecx+4]\n");

1779 
	`emô
("ja short writel_iosplit\n");

1780 
	`emô
("subÉdx,byte 2\n");

1792 
	`aúlock_exô
();

1793 
	`emô
("movÉbx,ecx\n");

1794 
	`emô
("movÉax,edx\n");

1795 
	`emô
("xorÉdx,edx\n");

1796 
	`emô
("mov dx,[e•+%d]\n",
aúlock_°acksize
+2);

1797 
	`emô
("pushÉax\n");

1798 
	`emô
("pushÉbx\n");

1799 if(
u£_°ack
){

1800 
	`emô
("pushÉbx\n");

1801 
	`emô
("pushÉdx\n");

1802 
	`emô
("pushÉax\n");

1804 
	`emô
("call dword[ebx+8]\n");

1805 if(
u£_°ack
)
	`emô
("addÉsp,byte 12\n");

1806 
	`emô
("popÉbx\n");

1807 
	`emô
("popÉax\n");

1808 
	`emô
("addÉax,byte 2\n");

1810 
	`emô
("xorÉdx,edx\n");

1811 
	`emô
("mov dx,[e•+%d]\n",
aúlock_°acksize
);

1812 if(
u£_°ack
){

1813 
	`emô
("pushÉbx\n");

1814 
	`emô
("pushÉdx\n");

1815 
	`emô
("pushÉax\n");

1817 
	`emô
("call dword[ebx+8]\n");

1818 if(
u£_°ack
)
	`emô
("addÉsp,byte 12\n");

1819 
	`aúlock_íãr
();

1821 
	`emô
("writel_end:\n");

1822 
	`emô
("popÉcx\n");

1823 
	`emô
("movÉdx,[__access_address]\n");

1824 
	`emô
("ret\n");

1826 
	`emô
("writel_split:\n");

1827 
	`emô
("subÉdx,[ecx]\n");

1828 
	`emô
("addÉdx,[ecx+12]\n");

1829 
	`emô
("mov cx,[esp+2]\n");

1830 
	`emô
("mov [edx-2],cx\n");

1831 
	`emô
("movÉdx,[esp+4]\n");

1832 
	`emô
("addÉdx,byte 2\n");

1833 
	`emô
("jmp writew_top\n");

1835 
	`emô
("writel_iosplit:\n");

1845 
	`aúlock_exô
();

1846 
	`emô
("movÉbx,ecx\n");

1847 
	`emô
("movÉax,edx\n");

1848 
	`emô
("xorÉdx,edx\n");

1849 
	`emô
("mov dx,[e•+%d]\n",
aúlock_°acksize
+2);

1850 if(
u£_°ack
){

1851 
	`emô
("pushÉbx\n");

1852 
	`emô
("pushÉdx\n");

1853 
	`emô
("pushÉax\n");

1855 
	`emô
("call dword[ebx+8]\n");

1856 if(
u£_°ack
)
	`emô
("addÉsp,byte 12\n");

1857 
	`aúlock_íãr
();

1859 
	`emô
("movÉdx,[esp+4]\n");

1860 
	`emô
("addÉdx,byte 2\n");

1861 
	`emô
("jmp writew_top\n");

1862 
	}
}

1871 
	$gí_group_12_ex˚±i⁄
() {

1872 
	`Æign
(16);

1873 
	`emô
("group_1_exception:\n");

1874 
	`emô
("group_2_exception:\n");

1875 
	`emô
("and byte[__interrupts],0FEh\n");

1876 if(
˝uty≥
 == 68010) {

1877 
	`emô
("mov byte[__loopmode],0\n");

1879 if(
˝uty≥
 >= 68010) {

1880 
	`emô
("pushÉdx\n");

1881 
	`emô
("addÉdx,[__vbr]\n");

1883 
	`emô
("callÑeadmemorydword\n");

1884 if(
˝uty≥
 >= 68010) {

1885 
	`emô
("popÉdx\n");

1887 
	`emô
("pushÉcx\n");

1888 
	`§2cx
();

1889 
	`emô
("pushÉcx\n");

1890 
	`su≥rvis‹
();

1898 
	`emô
("and byte[__sr+1],27h\n");

1899 
	`emô
("mov byte[__trace_trickybit],0\n");

1901 
	`emô
("movÉcx,esi\n");

1902 
	`emô
("subÉcx,ebp\n");

1903 if(
˝uty≥
 >= 68010) {

1904 
	`emô
("pushÉcx\n");

1905 
	`emô
("movÉcx,edx\n");

1907 
	`emô
("movÉdx,[__a7]\n");

1908 if(
˝uty≥
 >= 68010) {

1909 
	`emô
("andÉcx,0FFCh\n");

1910 
	`emô
("subÉdx,byte 2\n");

1911 
	`emô
("call writememoryword\n");

1912 
	`emô
("popÉcx\n");

1914 
	`emô
("subÉdx,byte 4\n");

1915 
	`emô
("call writememorydword\n");

1916 
	`emô
("popÉcx\n");

1917 
	`emô
("subÉdx,byte 2\n");

1918 
	`emô
("call writememoryword\n");

1919 
	`emô
("mov [__a7],edx\n");

1920 
	`emô
("popÉsi\n");

1921 
	`emô
("ret\n");

1922 
	}
}

1927 
	$gí_¥ivûege_viﬁ©i⁄
(){

1928 
	`Æign
(16);

1929 
	`emô
("privilege_violation:\n");

1930 
	`emô
("subÉsi,byte 2\n");

1931 
	`emô
("movÉdx,20h\n");

1932 
	`emô
("call group_1_exception\n");

1933 
	`≥rf‹m_ˇched_ªba£
();

1934 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

1935 
	}
}

1939 
	$u£ªg
() {

1940 
	`emô
("andÉbx,byte 7\n");

1941 
	}
}

1944 
	$£À˘ive_u£ªg
() {

1945 
maö_ómode
) {

1946 
dªg
: 
¨eg
:

1947 
aöd
: 
aöc
: 
adec
:

1948 
ad•
: 
axdp
:

1949 
	`u£ªg
();

1953 
	}
}

1955 
	$£l·e°
(
size
) {

1956 
	`emô
("ã° %s,%s\n", 
x86cx
[
size
], x86cx[size]);

1957 
	}
}

1963 
	$gëc⁄dôi⁄_l_s_ns
() {

1964 
	`emô
("pushÉax\n");

1965 
	`emô
("negál\n");

1966 
	`emô
("xorál,ah\n");

1967 
	`emô
("popÉax\n");

1968 
	}
}

1972 
	$gëc⁄dôi⁄_À_s_ns
() {

1973 
	`emô
("pushÉax\n");

1974 
	`emô
("negál\n");

1975 
	`emô
("xorál,ah\n");

1976 
	`emô
("addáh,ah\n");

1977 
	`emô
("orál,ah\n");

1978 
	`emô
("popÉax\n");

1979 
	}
}

1981 
	g›tcc
[5];

1982 
	g›åc
[5];

1984 
	$gëc⁄dôi⁄
(
cc
) {

1985 
cc
) {

1990 
	`emô
("testáh,41h\n");

1991 
	`•rötf
(
›tcc
, "z");

1992 
	`•rötf
(
›åc
, "nz");

1995 
	`emô
("testáh,41h\n");

1996 
	`•rötf
(
›tcc
, "nz");

1997 
	`•rötf
(
›åc
, "z");

2000 
	`emô
("testáh,1\n");

2001 
	`•rötf
(
›tcc
, "z");

2002 
	`•rötf
(
›åc
, "nz");

2005 
	`emô
("testáh,1\n");

2006 
	`•rötf
(
›tcc
, "nz");

2007 
	`•rötf
(
›åc
, "z");

2010 
	`emô
("testáh,40h\n");

2011 
	`•rötf
(
›tcc
, "z");

2012 
	`•rötf
(
›åc
, "nz");

2015 
	`emô
("testáh,40h\n");

2016 
	`•rötf
(
›tcc
, "nz");

2017 
	`•rötf
(
›åc
, "z");

2020 
	`emô
("testál,1\n");

2021 
	`•rötf
(
›tcc
, "z");

2022 
	`•rötf
(
›åc
, "nz");

2025 
	`emô
("testál,1\n");

2026 
	`•rötf
(
›tcc
, "nz");

2027 
	`•rötf
(
›åc
, "z");

2030 
	`emô
("oráh,ah\n");

2031 
	`•rötf
(
›tcc
, "ns");

2032 
	`•rötf
(
›åc
, "s");

2035 
	`emô
("oráh,ah\n");

2036 
	`•rötf
(
›tcc
, "s");

2037 
	`•rötf
(
›åc
, "ns");

2040 
	`gëc⁄dôi⁄_l_s_ns
();

2041 
	`•rötf
(
›tcc
, "ns");

2042 
	`•rötf
(
›åc
, "s");

2045 
	`gëc⁄dôi⁄_l_s_ns
();

2046 
	`•rötf
(
›tcc
, "s");

2047 
	`•rötf
(
›åc
, "ns");

2050 
	`gëc⁄dôi⁄_À_s_ns
();

2051 
	`•rötf
(
›tcc
, "ns");

2052 
	`•rötf
(
›åc
, "s");

2055 
	`gëc⁄dôi⁄_À_s_ns
();

2056 
	`•rötf
(
›tcc
, "s");

2057 
	`•rötf
(
›åc
, "ns");

2061 
	}
}

2063 
	$Êags
() {

2064 
	`emô
("lahf\n");

2065 
	`emô
("setoál\n");

2066 
	}
}

2068 
	$Êags_v0
() {

2069 
	`emô
("lahf\n");

2070 
	`emô
("movál,0\n");

2071 
	}
}

2074 
	$Êag_to_z
(*
f
) {

2075 
mylöe
 = 
löíum
;Üinenum += 2;

2076 
	`emô
("j%†sh‹à %d\n", 
f
, 
mylöe
);

2077 
	`emô
("andáh,0BFh\n");

2078 
	`emô
("jm∞sh‹à %d\n", 
mylöe
 + 1);

2079 
	`emô
(" %d:\n", 
mylöe
);

2080 
	`emô
("oráh,40h\n");

2081 
	`emô
(" %d:\n", 
mylöe
 + 1);

2082 
	}
}

2085 
	$c2x
() {

2086 
	`emô
("setc [__xflag]\n");

2087 
	}
}

2090 
	$adjzîo
(*
ªg
) {

2091 
mylöe
 = 
löíum
;Üinenum++;

2092 
	`emô
("jnz sh‹à %d\n", 
mylöe
);

2093 
	`emô
("‹ %s,0BFh\n", 
ªg
);

2094 
	`emô
("™dáh,%s\n", 
ªg
);

2095 
	`emô
(" %d:\n", 
mylöe
);

2096 
	}
}

2099 
	$¥ivûegecheck
() {

2100 
	`emô
("test byte[__sr+1],20h\n");

2101 
	`emô
("jzÇearÖrivilege_violation\n");

2102 
	}
}

2119 
	$ó_°ï_¥eˇlc
(
size
, 
ómode
 
mode
, 
ªg
) {

2120 
ªgs
[100];

2121 if(
ªg
 =-1Ë
	`•rötf
(
ªgs
, "ebx*4");

2122 
	`•rötf
(
ªgs
, "%d", 
ªg
 * 4);

2123 
mode
) {

2124 
dªg
: 
¨eg
:

2126 
aöd
: 
aöc
: 
adec
:

2127 
	`emô
("movÉdx,[__¨eg+%s]\n",
ªgs
);

2128 if(
mode
 =
adec
) {

2130 if(
size
 == 1) {

2131 if(
ªg
 == -1) {

2132 
	`emô
("cmp bl,7\n");

2133 
	`emô
("adcÉdx,byte -2\n");

2134 } if(
ªg
 == 7) {

2135 
	`emô
("subÉdx,byte 2\n");

2137 
	`emô
("decÉdx\n");

2140 
	`emô
("subÉdx,byã %d\n", 
size
);

2144 
ad•
:

2145 
	`emô
("movsxÉdx,word[esi]\n");

2146 
	`emô
("addÉsi,byte 2\n");

2147 
	`emô
("addÉdx,[__¨eg+%s]\n", 
ªgs
);

2149 
axdp
:

2150 
	`emô
("call decode_ext\n");

2151 
	`emô
("addÉdx,[__¨eg+%s]\n", 
ªgs
);

2153 
absw
:

2154 
	`emô
("movsxÉdx,word[esi]\n");

2155 
	`emô
("addÉsi,byte 2\n");

2157 
ab¶
:

2158 
	`emô
("movÉdx,dword[esi]\n");

2159 
	`emô
("addÉsi,byte 4\n");

2160 
	`emô
("rolÉdx,16\n");

2162 
pcdp
:

2163 
	`emô
("movsxÉdx,word[esi]\n");

2164 
	`emô
("addÉdx,esi\n");

2165 
	`emô
("subÉdx,ebp\n");

2166 
	`emô
("addÉsi,byte 2\n");

2168 
pcxd
:

2169 
	`emô
("call decode_ext\n");

2170 
	`emô
("addÉdx,esi\n");

2171 
	`emô
("subÉdx,ebp\n");

2172 
	`emô
("subÉdx,byte 2\n");

2174 
immd
:

2177 
	`emô
("#errorÉa_step_precalc\n");

2180 
	}
}

2182 
	$ó_°ï_ªad
(
size
, 
ómode
 
mode
, 
ªg
) {

2183 
ªgs
[100];

2184 if(
ªg
 =-1Ë
	`•rötf
(
ªgs
, "ebx*4");

2185 
	`•rötf
(
ªgs
, "%d", 
ªg
 * 4);

2186 
mode
) {

2187 
dªg
: 
	`emô
("movÉcx,[__dªg+%s]\n", 
ªgs
); ;

2188 
¨eg
: 
	`emô
("movÉcx,[__¨eg+%s]\n", 
ªgs
); ;

2189 
aöd
: 
aöc
: 
adec
:

2190 
ad•
: 
axdp
:

2191 
absw
: 
ab¶
:

2192 
pcdp
: 
pcxd
:

2193 
	`emô
("ˇŒÑódmem‹y%s\n", 
sizíame
[
size
]);

2195 
immd
:

2196 
size
) {

2199 
	`emô
("mov cx,[esi]\n");

2200 
	`emô
("addÉsi,byte 2\n");

2203 
	`emô
("movÉcx,[esi]\n");

2204 
	`emô
("addÉsi,byte 4\n");

2205 
	`emô
("rolÉcx,16\n");

2208 
	`emô
("#errorÉa_step_read\n");

2213 
	`emô
("#errorÉa_step_read\n");

2216 
	}
}

2222 
	$ó_°ï_ªad_signw‹d
(
ómode
 
mode
, 
ªg
) {

2223 
ªgs
[100];

2224 if(
ªg
 =-1Ë
	`•rötf
(
ªgs
, "ebx*4");

2225 
	`•rötf
(
ªgs
, "%d", 
ªg
 * 4);

2226 
mode
) {

2227 
dªg
: 
	`emô
("movsxÉcx,w‹d[__dªg+%s]\n", 
ªgs
); ;

2228 
¨eg
: 
	`emô
("movsxÉcx,w‹d[__¨eg+%s]\n", 
ªgs
); ;

2229 
aöd
: 
aöc
: 
adec
:

2230 
ad•
: 
axdp
:

2231 
absw
: 
ab¶
:

2232 
pcdp
: 
pcxd
:

2233 
	`emô
("ˇŒÑódmem‹y%s\n", 
sizíame
[2]);

2234 
	`emô
("movsxÉcx,cx\n");

2236 
immd
:

2237 
	`emô
("movsxÉcx,word[esi]\n");

2238 
	`emô
("addÉsi,byte 2\n");

2241 
	`emô
("#errorÉa_step_read_signword\n");

2244 
	}
}

2246 
	$ó_°ï_wrôe
(
size
, 
ómode
 
mode
, 
ªg
) {

2247 
ªgs
[100];

2248 if(
ªg
 =-1Ë
	`•rötf
(
ªgs
, "ebx*4");

2249 
	`•rötf
(
ªgs
, "%d", 
ªg
 * 4);

2250 
mode
) {

2251 
dªg
:

2252 
	`emô
("mov [__dªg+%s],%s\n", 
ªgs
, 
x86cx
[
size
]);

2254 
aöd
: 
aöc
: 
adec
:

2255 
ad•
: 
axdp
:

2256 
absw
: 
ab¶
:

2257 
	`emô
("ˇŒ wrôemem‹y%s\n", 
sizíame
[
size
]);

2260 
	`emô
("#errorÉa_step_write\n");

2263 
	}
}

2265 
	$ó_°ï_po°ˇlc
(
size
, 
ómode
 
mode
, 
ªg
) {

2266 
ªgs
[100];

2267 if(
ªg
 =-1Ë
	`•rötf
(
ªgs
, "ebx*4");

2268 
	`•rötf
(
ªgs
, "%d", 
ªg
 * 4);

2269 
mode
) {

2270 
aöc
:

2272 if(
size
 == 1) {

2273 if(
ªg
 == -1) {

2274 
	`emô
("cmp bl,7\n");

2275 
	`emô
("sbbÉdx,byte -2\n");

2276 } if(
ªg
 == 7) {

2277 
	`emô
("addÉdx,byte 2\n");

2279 
	`emô
("incÉdx\n");

2282 
	`emô
("addÉdx,byã %d\n", 
size
);

2285 
adec
:

2287 
	`emô
("mov [__¨eg+%s],edx\n", 
ªgs
);

2289 
dªg
: 
¨eg
:

2290 
aöd
: 
ad•
: 
axdp
:

2291 
absw
: 
ab¶
:

2292 
pcdp
: 
pcxd
:

2293 
immd
:

2296 
	`emô
("#errorÉa_step_postcalc\n");

2299 
	}
}

2303 
	$ó_lﬂd
(
size
, 
ómode
 
mode
, 
ªg
) {

2304 
	`ó_°ï_¥eˇlc
 (
size
, 
mode
, 
ªg
);

2305 
	`ó_°ï_ªad
 (
size
, 
mode
, 
ªg
);

2306 
	`ó_°ï_po°ˇlc
(
size
, 
mode
, 
ªg
);

2307 
	}
}

2309 
	$ó_lﬂd_signw‹d
(
ómode
 
mode
, 
ªg
) {

2310 
	`ó_°ï_¥eˇlc
 (2, 
mode
, 
ªg
);

2311 
	`ó_°ï_ªad_signw‹d
–
mode
, 
ªg
);

2312 
	`ó_°ï_po°ˇlc
 (2, 
mode
, 
ªg
);

2313 
	}
}

2315 
	$ó_°‹e
(
size
, 
ómode
 
mode
, 
ªg
) {

2316 
	`ó_°ï_¥eˇlc
 (
size
, 
mode
, 
ªg
);

2317 
	`ó_°ï_wrôe
 (
size
, 
mode
, 
ªg
);

2318 
	`ó_°ï_po°ˇlc
(
size
, 
mode
, 
ªg
);

2319 
	}
}

2321 
	$ó_rmw_lﬂd
(
size
, 
ómode
 
mode
, 
ªg
) {

2322 
	`ó_°ï_¥eˇlc
 (
size
, 
mode
, 
ªg
);

2323 
	`ó_°ï_ªad
 (
size
, 
mode
, 
ªg
);

2324 
	}
}

2326 
	$ó_rmw_°‹e
(
size
, 
ómode
 
mode
, 
ªg
) {

2327 
	`ó_°ï_wrôe
 (
size
, 
mode
, 
ªg
);

2328 
	`ó_°ï_po°ˇlc
(
size
, 
mode
, 
ªg
);

2329 
	}
}

2331 
	$ó_c⁄åﬁ
(
ómode
 
mode
, 
ªg
) {

2332 
	`ó_°ï_¥eˇlc
 (0, 
mode
, 
ªg
);

2333 
	}
}

2335 
	$maö_ó_lﬂd
() {

2336 
	`ó_lﬂd
(
maö_size
, 
maö_ómode
, -1);

2337 
	}
}

2339 
	$maö_ó_lﬂd_sig√d
() {

2340 if(
maö_size
 < 4) {

2341 
	`ó_lﬂd_signw‹d
(
maö_ómode
, -1);

2343 
	`ó_lﬂd
(
maö_size
, 
maö_ómode
, -1);

2345 
	}
}

2347 
	$maö_ó_°‹e
() {

2348 
	`ó_°‹e
(
maö_size
, 
maö_ómode
, -1);

2349 
	}
}

2351 
	$maö_ó_rmw_lﬂd
() {

2352 
	`ó_rmw_lﬂd
(
maö_size
, 
maö_ómode
, -1);

2353 
	}
}

2355 
	$maö_ó_rmw_°‹e
() {

2356 
	`ó_rmw_°‹e
(
maö_size
, 
maö_ómode
, -1);

2357 
	}
}

2359 
	$maö_ó_c⁄åﬁ
() {

2360 
	`ó_c⁄åﬁ
(
maö_ómode
, -1);

2361 
	}
}

2368 
	$maö_ó_cy˛es
() {

2369 
l
;

2370 if(
maö_size
 =4Ë
l
 = 4; l = 0;

2371 
maö_ómode
) {

2372 
aöd
: (
l
 + 4);

2373 
aöc
: (
l
 + 4);

2374 
adec
: (
l
 + 6);

2375 
ad•
: (
l
 + 8);

2376 
axdp
: (
l
 + 10);

2377 
absw
: (
l
 + 8);

2378 
ab¶
: (
l
 + 12);

2379 
pcdp
: (
l
 + 8);

2380 
pcxd
: (
l
 + 10);

2381 
immd
: (
l
 + 4);

2385 
	}
}

2388 
	$maö_ó_cy˛es_no„tch
(){

2389 
maö_ómode
) {

2390 
aöd
: (2);

2391 
aöc
: (4);

2392 
adec
: (4);

2393 
ad•
: (4);

2394 
axdp
: (8);

2395 
absw
: (4);

2396 
ab¶
: (8);

2400 
	}
}

2409 
	$¥efixes
() {

2411 
	`gí_b™√r
();

2412 
	`gí_v¨übÀs
();

2413 
	`gí_öãrÁ˚
();

2415 
	`gí_ba£fun˘i⁄
();

2416 
	`gí_decode_ext
();

2417 
	`gí_ªadbw
(1);

2418 
	`gí_ªadbw
(2);

2419 
	`gí_ªadl
();

2420 
	`gí_wrôebw
(1);

2421 
	`gí_wrôebw
(2);

2422 
	`gí_wrôñ
();

2423 
	`gí_group_12_ex˚±i⁄
();

2424 
	`gí_¥ivûege_viﬁ©i⁄
();

2425 
	`gí_Êush_öãºu±s
();

2426 
	}
}

2432 
	$suffixes
() {

2433 
	`emô
("end\n");

2434 
	}
}

2441 
	$i_move
() {

2442 
cy˛es
;

2443 
	`£À˘ive_u£ªg
();

2444 
	`maö_ó_lﬂd
();

2445 
	`ó_°‹e
(
maö_size
, 
maö_de°mode
, 
maö_ªg
);

2446 
	`£l·e°
(
maö_size
);

2447 
	`Êags_v0
();

2448 
cy˛es
 = 4 + 
	`maö_ó_cy˛es
();

2449 
maö_de°mode
) {

2450 
aöd
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 4; ;

2451 
aöc
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 4; ;

2452 
adec
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 4; ;

2453 
ad•
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 8; ;

2454 
axdp
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 10; ;

2455 
absw
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 8; ;

2456 
ab¶
: if(
maö_size
 =4Ë
cy˛es
 += 4; cycles += 12; ;

2460 if(
˝uty≥
 == 68010) {

2461 
maö_ómode
) {

2462 
dªg
: 
¨eg
:

2463 
maö_de°mode
) {

2464 
aöd
: 
aöc
:

2465 if(
maö_size
 <= 2) {

2466 
lo›_c_cy˛es
 = 2;

2467 
lo›_t_cy˛es
 = 10;

2468 
lo›_x_cy˛es
 = 8;

2470 
lo›_c_cy˛es
 = 2;

2471 
lo›_t_cy˛es
 = 8;

2472 
lo›_x_cy˛es
 = 6;

2478 
aöd
: 
aöc
: 
adec
:

2479 
maö_de°mode
) {

2480 
aöd
: 
aöc
:

2481 
lo›_c_cy˛es
 = 2;

2482 
lo›_t_cy˛es
 = 8;

2483 
lo›_x_cy˛es
 = 6;

2485 
adec
:

2486 
lo›_c_cy˛es
 = 4;

2487 
lo›_t_cy˛es
 = 10;

2488 
lo›_x_cy˛es
 = 8;

2496 
	`ªt_timög
(
cy˛es
);

2497 
	}
}

2499 
	$i_moveq
() {

2500 
	`emô
("movsxÉcx,bl\n");

2501 
	`emô
("mov [__dªg+%d],ecx\n", 
maö_ªg
 * 4);

2502 
	`£l·e°
(1);

2503 
	`Êags_v0
();

2505 
	`ªt_timög
(4);

2506 
	}
}

2508 
	$›_to_¨eg
(*
s
) {

2509 
	`£À˘ive_u£ªg
();

2510 
	`maö_ó_lﬂd_sig√d
();

2511 
	`emô
("%†[__¨eg+%d],ecx\n", 
s
, 
maö_ªg
 * 4);

2512 
	}
}

2514 
	$i_movó
() {

2515 
	`›_to_¨eg
("mov");

2517 
	`ªt_timög
(4 + 
	`maö_ó_cy˛es
());

2518 
	}
}

2521 
	$addsuba
(*
›
) {

2522 
ba£_cy˛es
;

2523 
	`›_to_¨eg
(
›
);

2524 if(
maö_size
==4){

2525 
ba£_cy˛es
=6;

2527 if(
˝uty≥
==68000){

2528 
maö_ómode
){

2529 
¨eg
:
dªg
:
immd
:

2530 
ba£_cy˛es
+=2;

2536 
ba£_cy˛es
=8;

2539 if(
˝uty≥
==68010){

2540 
maö_ómode
){

2541 
aöd
:
aöc
:
adec
:

2542 if(
maö_size
<=2){

2543 
lo›_c_cy˛es
 = 6;

2544 
lo›_t_cy˛es
 = 12;

2545 
lo›_x_cy˛es
 = 10;

2547 
lo›_c_cy˛es
 = 8;

2548 
lo›_t_cy˛es
 = 14;

2549 
lo›_x_cy˛es
 = 12;

2555 
	`ªt_timög
(
ba£_cy˛es
+
	`maö_ó_cy˛es
());

2556 
	}
}

2558 
	$i_adda
(){
	`addsuba
("add");
	}
}

2559 
	$i_suba
(){
	`addsuba
("sub");
	}
}

2561 
	$i_cm∑
(){

2562 
	`›_to_¨eg
("cmp");

2563 
	`Êags
();

2565 if(
˝uty≥
==68010){

2566 
maö_ómode
){

2567 
aöd
:
aöc
:
adec
:

2568 if(
maö_size
<=2){

2569 
lo›_c_cy˛es
 = 2;

2570 
lo›_t_cy˛es
 = 8;

2571 
lo›_x_cy˛es
 = 6;

2573 
lo›_c_cy˛es
 = 4;

2574 
lo›_t_cy˛es
 = 10;

2575 
lo›_x_cy˛es
 = 6;

2581 
	`ªt_timög
(6+
	`maö_ó_cy˛es
());

2582 
	}
}

2584 
	$i_move_to_§
(){

2585 
maö_size
=2;

2586 
	`¥ivûegecheck
();

2587 
	`£À˘ive_u£ªg
();

2588 
	`maö_ó_lﬂd
();

2589 
	`cx2§
();

2591 
	`ªt_timög_checkpoöt
(12+
	`maö_ó_cy˛es
());

2592 
	}
}

2594 
	$i_move_to_c¸
(){

2595 
maö_size
=2;

2596 
	`£À˘ive_u£ªg
();

2597 
	`maö_ó_lﬂd
();

2598 
	`˛2c¸
();

2600 
	`ªt_timög
(12+
	`maö_ó_cy˛es
());

2601 
	}
}

2603 
	$i_move_‰om_§
(){

2604 
cy˛es
;

2606 if(
˝uty≥
>=68010)
	`¥ivûegecheck
();

2607 
maö_size
=2;

2608 
	`£À˘ive_u£ªg
();

2609 
	`§2cx
();

2610 
	`maö_ó_°‹e
();

2611 if(
˝uty≥
==68010){

2612 
cy˛es
=8+
	`maö_ó_cy˛es_no„tch
();

2614 
cy˛es
=8+
	`maö_ó_cy˛es
();

2616 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

2617 
cy˛es
-=2;

2619 if(
˝uty≥
==68010)
cy˛es
-=2;

2622 
	`ªt_timög
(
cy˛es
);

2623 
	}
}

2626 
	$i_move_‰om_c¸
(){

2627 
cy˛es
;

2628 
maö_size
=2;

2629 
	`£À˘ive_u£ªg
();

2630 
	`c¸2˛
();

2631 
	`maö_ó_°‹e
();

2632 if(
˝uty≥
==68010){

2633 
cy˛es
=8+
	`maö_ó_cy˛es_no„tch
();

2635 
cy˛es
=8+
	`maö_ó_cy˛es
();

2637 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

2638 
cy˛es
-=2;

2639 if(
˝uty≥
==68010)
cy˛es
-=2;

2642 
	`ªt_timög
(
cy˛es
);

2643 
	}
}

2645 
	$›_to_c¸
(*
›
){

2646 
	`c¸2˛
();

2647 
	`emô
("%†˛,[esi]\n",
›
);

2648 
	`emô
("addÉsi,byte 2\n");

2649 
	`˛2c¸
();

2651 
	`ªt_timög
((
˝uty≥
==68010)?16:20);

2652 
	}
}

2654 
	$›_to_§
(*
›
){

2655 
	`¥ivûegecheck
();

2656 
	`§2cx
();

2657 
	`emô
("%†cx,[esi]\n",
›
);

2658 
	`emô
("addÉsi,byte 2\n");

2659 
	`cx2§
();

2662 
	`ªt_timög_checkpoöt
((
˝uty≥
==68010)?16:20);

2663 
	}
}

2665 
	$i_‹i_c¸
(){
	`›_to_c¸
("‹" );
	}
}

2666 
	$i_™di_c¸
(){
	`›_to_c¸
("™d");
	}
}

2667 
	$i_e‹i_c¸
(){
	`›_to_c¸
("x‹");
	}
}

2668 
	$i_‹i_§
 (){
	`›_to_§
 ("‹" );
	}
}

2669 
	$i_™di_§
 (){
	`›_to_§
 ("™d");
	}
}

2670 
	$i_e‹i_§
 (){
	`›_to_§
 ("x‹");
	}
}

2672 
	$i_˛r
(){

2673 
cy˛es
=0;

2674 
	`£À˘ive_u£ªg
();

2675 
	`emô
("xorÉcx,ecx\n");

2676 
	`maö_ó_°‹e
();

2677 if(
˝uty≥
==68000){

2678 
cy˛es
=
	`maö_ó_cy˛es
();

2679 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

2680 
cy˛es
+=4;if(
maö_size
==4)cycles+=4;

2682 
cy˛es
+=6;if(
maö_size
==4)cycles+=6;

2684 }if(
˝uty≥
==68010){

2685 
maö_ómode
){

2686 
dªg
:
cy˛es
= 4;;

2687 
aöd
:
cy˛es
= 8;;

2688 
aöc
:
cy˛es
= 8;;

2689 
adec
:
cy˛es
=10;;

2690 
ad•
:
cy˛es
=12;;

2691 
axdp
:
cy˛es
=16;;

2692 
absw
:
cy˛es
=12;;

2693 
ab¶
:
cy˛es
=16;;

2696 if(
maö_size
==4){

2697 
cy˛es
+=4;

2698 if(
maö_ómode
==
dªg
)
cy˛es
-=2;

2701 
maö_ómode
){

2702 
aöd
:
aöc
:
adec
:

2703 
lo›_c_cy˛es
 = 2;

2704 
lo›_t_cy˛es
 = 10;

2705 
lo›_x_cy˛es
 = 8;

2710 
	`emô
("mováx,4000h\n");

2711 
	`ªt_timög
(
cy˛es
);

2712 
	}
}

2714 
	$i_t°
(){

2715 
	`£À˘ive_u£ªg
();

2716 
	`maö_ó_lﬂd
();

2718 if(
˝uty≥
==68010){

2719 
maö_ómode
){

2720 
aöd
:
aöc
:
adec
:

2721 if(
maö_size
<=2){

2722 
lo›_c_cy˛es
 = 4;

2723 
lo›_t_cy˛es
 = 10;

2724 
lo›_x_cy˛es
 = 8;

2726 
lo›_c_cy˛es
 = 6;

2727 
lo›_t_cy˛es
 = 12;

2728 
lo›_x_cy˛es
 = 8;

2734 
	`£l·e°
(
maö_size
);

2735 
	`Êags_v0
();

2736 
	`ªt_timög
(4+
	`maö_ó_cy˛es
());

2737 
	}
}

2741 
	$›_quick
(*
›
){

2742 
cy˛es
;

2743 
	`£À˘ive_u£ªg
();

2744 if(
maö_ómode
==
dªg
){

2745 
	`emô
(

2747 
›
,
sizíame
[
maö_size
],
quickvÆue
[
maö_qv
]

2749 
	`Êags
();

2750 
	`c2x
();

2751 
cy˛es
=4;

2752 }if(
maö_ómode
==
¨eg
){

2753 
	`emô
(

2755 
›
,
quickvÆue
[
maö_qv
]

2757 
cy˛es
=4;

2759 if(
˝uty≥
==68000){

2760 if((
maö_size
==2)&&(
›
[0]=='s'))
cy˛es
+=4;

2763 
	`maö_ó_rmw_lﬂd
();

2764 
	`emô
(

2765 "%†%s,byã %d\n",
›
,
x86cx
[
maö_size
],
quickvÆue
[
maö_qv
]

2767 
	`Êags
();

2768 
	`c2x
();

2769 
	`maö_ó_rmw_°‹e
();

2770 
cy˛es
=8+
	`maö_ó_cy˛es
();

2772 if(
maö_size
==4)
cy˛es
+=4;

2774 
	`ªt_timög
(
cy˛es
);

2775 
	}
}

2777 
	$i_addq
(){
	`›_quick
("add");
	}
}

2778 
	$i_subq
(){
	`›_quick
("sub");
	}
}

2780 
	$›_to_dn
(*
›
,
af„˘x
,
logiˇl
){

2781 
cy˛es
;

2782 
	`£À˘ive_u£ªg
();

2783 
	`maö_ó_lﬂd
();

2784 
	`emô
("%s [__dreg+%d],%s\n",

2785 
›
,
maö_ªg
*4,
x86cx
[
maö_size
]

2787 if(
logiˇl
){

2788 
	`Êags_v0
();

2790 
	`Êags
();

2792 if(
af„˘x
)
	`c2x
();

2793 
cy˛es
=4+
	`maö_ó_cy˛es
();

2794 if(
maö_size
==4){

2795 
cy˛es
+=2;

2797 if((
˝uty≥
==68000)&&(
›
[0]!='c')){

2798 
maö_ómode
){

2799 
¨eg
:
dªg
:
immd
:

2800 
cy˛es
+=2;

2807 if(
˝uty≥
==68010){

2808 
maö_ómode
){

2809 
aöd
:
aöc
:
adec
:

2810 
›
[0]){

2813 
lo›_c_cy˛es
 = 8;

2814 
lo›_t_cy˛es
 = 14;

2815 
lo›_x_cy˛es
 = 12;

2818 if(
maö_size
<=2){

2819 
lo›_c_cy˛es
 = 8;

2820 
lo›_t_cy˛es
 = 14;

2821 
lo›_x_cy˛es
 = 12;

2823 
lo›_c_cy˛es
 = 6;

2824 
lo›_t_cy˛es
 = 12;

2825 
lo›_x_cy˛es
 = 10;

2829 
lo›_c_cy˛es
 = 4;

2830 
lo›_t_cy˛es
 = 10;

2831 
lo›_x_cy˛es
 = 8;

2832 if(
maö_size
==4)
lo›_x_cy˛es
 = 6;

2840 
	`ªt_timög
(
cy˛es
);

2841 
	}
}

2843 
	$i_cmp_dn
(){
	`›_to_dn
("cmp",0,0);
	}
}

2844 
	$i_add_dn
(){
	`›_to_dn
("add",1,0);
	}
}

2845 
	$i_sub_dn
(){
	`›_to_dn
("sub",1,0);
	}
}

2846 
	$i_™d_dn
(){
	`›_to_dn
("™d",0,1);
	}
}

2847 
	$i_‹_dn
 (){
	`›_to_dn
("‹" ,0,1);
	}
}

2849 
	$›_to_ó
(*
›
,
logiˇl
){

2850 
cy˛es
;

2851 
	`£À˘ive_u£ªg
();

2852 
	`maö_ó_rmw_lﬂd
();

2853 
	`emô
(

2855 
›
,
x86cx
[
maö_size
],
maö_ªg
*4

2857 if(
logiˇl
){

2858 
	`Êags_v0
();

2860 
	`Êags
();

2863 if(!
logiˇl
)
	`c2x
();

2864 
	`maö_ó_rmw_°‹e
();

2865 
cy˛es
=8+
	`maö_ó_cy˛es
();

2866 if(
maö_size
==4)
cy˛es
+=4;

2868 if((
›
[0]=='x')&&(
maö_ómode
==
dªg
)){

2869 
cy˛es
-=4;

2870 if(
˝uty≥
==68010)
cy˛es
-=2;

2873 if(
˝uty≥
==68010){

2874 
maö_ómode
){

2875 
aöd
:
aöc
:
adec
:

2876 
lo›_c_cy˛es
 = 4;

2877 
lo›_t_cy˛es
 = 10;

2878 
lo›_x_cy˛es
 = 8;

2883 
	`ªt_timög
(
cy˛es
);

2884 
	}
}

2886 
	$i_e‹_ó
(){
	`›_to_ó
("x‹",1);
	}
}

2887 
	$i_add_ó
(){
	`›_to_ó
("add",0);
	}
}

2888 
	$i_sub_ó
(){
	`›_to_ó
("sub",0);
	}
}

2889 
	$i_™d_ó
(){
	`›_to_ó
("™d",1);
	}
}

2890 
	$i_‹_ó
 (){
	`›_to_ó
("‹" ,1);
	}
}

2899 
	$im_to_ó
(*
›
,
wback
,
af„˘x
,
logiˇl
,

2900 
c1
,
c2
,
c3
,
c4
){

2901 
cy˛es
;

2902 
	`£À˘ive_u£ªg
();

2903 
maö_size
){

2906 
	`emô
("mov cx,[esi]\n");

2907 
	`emô
("addÉsi,byte 2\n");

2910 
	`emô
("movÉcx,[esi]\n");

2911 
	`emô
("rolÉcx,16\n");

2912 
	`emô
("addÉsi,byte 4\n");

2916 if(
maö_ómode
==
dªg
){

2917 
	`emô
("%s [__dreg+ebx*4],%s\n",

2918 
›
,
x86cx
[
maö_size
]

2920 if(
logiˇl
){

2921 
	`Êags_v0
();

2923 
	`Êags
();

2925 if(
af„˘x
)
	`c2x
();

2926 if(
maö_size
<4)
cy˛es
=
c1
;cy˛es=
c2
;

2928 
	`emô
("pushÉcx\n");

2929 if(
wback
)
	`maö_ó_rmw_lﬂd
();
	`maö_ó_lﬂd
();

2930 
	`emô
("%†%s,[e•]\n",
›
,
x86cx
[
maö_size
]);

2931 if(
logiˇl
){

2932 
	`Êags_v0
();

2934 
	`Êags
();

2936 if(
af„˘x
)
	`c2x
();

2937 
	`emô
("addÉsp,byte 4\n");

2938 if(
wback
)
	`maö_ó_rmw_°‹e
();

2939 if(
maö_size
<4)
cy˛es
=
c3
;cy˛es=
c4
;

2940 
cy˛es
+=
	`maö_ó_cy˛es
();

2943 
	`ªt_timög
(
cy˛es
);

2944 
	}
}

2947 
	$i_addi
(){
	`im_to_ó
("add",1,1,0,8,(
˝uty≥
==68010)?14:16,12,20);
	}
}

2948 
	$i_subi
(){
	`im_to_ó
("sub",1,1,0,8,(
˝uty≥
==68010)?14:16,12,20);
	}
}

2949 
	$i_cmpi
(){
	`im_to_ó
("cmp",0,0,0,8,(
˝uty≥
==68010)?12:14, 8,12);
	}
}

2950 
	$i_™di
(){
	`im_to_ó
("™d",1,0,1,8,(
˝uty≥
==68010)?14:14,12,20);
	}
}

2951 
	$i_‹i
 (){
	`im_to_ó
("‹" ,1,0,1,8,(
˝uty≥
==68010)?14:16,12,20);
	}
}

2952 
	$i_e‹i
(){
	`im_to_ó
("x‹",1,0,1,8,(
˝uty≥
==68010)?14:16,12,20);
	}
}

2954 
	$Êick_ªg
(*
›
,
√edxf
,
af„˘x
,
a¶
,
rŸ©e
){

2955 
cy˛es
;

2956 
tmps
[5];

2957 
i
;

2958 
	`u£ªg
();

2959 
cy˛es
=6;

2960 if(
maö_size
==4)
cy˛es
+=2;

2962 if(
dúe˘i⁄
[
maö_dr
]=='r')
a¶
=0;

2963 if(
maö_ú
==1){

2964 
mylöe
=
löíum
;linenum++;

2965 
	`emô
("movÉcx,[__dªg+%d]\n",
maö_ªg
*4);

2966 
	`emô
("andÉcx,byte 63\n");

2967 
	`emô
("jnz sh‹à %d\n",
mylöe
);

2970 
	`ó_lﬂd
(
maö_size
,
dªg
,-1);

2971 
	`£l·e°
(
maö_size
);

2972 
	`Êags_v0
();

2973 if(
√edxf
){

2974 
	`emô
("andáh,0FEh\n");

2975 
	`emô
("oráh,[__xflag]\n");

2977 
	`ªt_timög
(
cy˛es
);

2979 
	`emô
(" %d:\n",
mylöe
);

2980 
	`emô
("subÉdi,ecx\n");

2981 
	`emô
("subÉdi,ecx\n");

2982 
	`•rötf
(
tmps
,"cl");

2984 
	`•rötf
(
tmps
,"%d",
quickvÆue
[
maö_ªg
]);

2985 
cy˛es
+=2*
quickvÆue
[
maö_ªg
];

2987 if(
a¶
){

2988 
tmps
[0]){

2990 
	`emô
("movÉdx,[__dreg+ebx*4]\n");

2991 
	`emô
("movál,0\n");

2992 
	`emô
(" %d:\n",
löíum
);

2993 
	`emô
("add %s,%s\n",

2994 
x86dx
[
maö_size
],x86dx[main_size]

2996 
	`emô
("lahf\n");

2997 
	`emô
("seto ch\n");

2998 
	`emô
("orál,ch\n");

2999 
	`emô
("dec cl\n");

3000 
	`emô
("jnz sh‹à %d\n",
löíum
);linenum++;

3001 
	`emô
("mov [__dªg+ebx*4],%s\n",
x86dx
[
maö_size
]);

3002 if(
af„˘x
){

3003 
	`emô
("mov cl,ah\n");

3004 
	`emô
("and cl,1\n");

3005 
	`emô
("mov [__xflag],cl\n");

3009 
	`emô
("sal %s[__dreg+ebx*4],1\n",

3010 
sizíame
[
maö_size
]

3012 
	`Êags
();

3013 if(
af„˘x
)
	`c2x
();

3016 
	`emô
("movÉdx,[__dreg+ebx*4]\n");

3017 
	`emô
("movál,0\n");

3018 
i
='1';i<=
tmps
[0];i++){

3019 
	`emô
("add %s,%s\n",

3020 
x86dx
[
maö_size
],x86dx[main_size]

3022 if(
i
==
tmps
[0]){

3024 
	`emô
("lahf\n");

3026 
	`emô
("seto ch\n");

3027 
	`emô
("orál,ch\n");

3029 
	`emô
("mov [__dªg+ebx*4],%s\n",
x86dx
[
maö_size
]);

3030 if(
af„˘x
){

3031 
	`emô
("mov cl,ah\n");

3032 
	`emô
("and cl,1\n");

3033 
	`emô
("mov [__xflag],cl\n");

3038 if(
rŸ©e
){

3039 
	`emô
("movÉdx,[__dreg+ebx*4]\n");

3040 if(
√edxf
){

3041 
	`emô
("movál,[__xflag]\n");

3043 
	`emô
("movál,0\n");

3048 
tmps
[0])

3051 
	`emô
("cmp cl, 32\n");

3052 
	`emô
("jb sh‹à %d\n",
löíum
);

3053 
	`emô
("sub cl, 31\n");

3054 if(
√edxf
){

3055 
	`emô
("shrál, 1\n");

3057 
	`emô
("%s%¯%s, 31\n", 
›
,
dúe˘i⁄
[
maö_dr
],
x86dx
[
maö_size
]);

3058 
	`emô
("%s%¯%s,%s\n", 
›
,
dúe˘i⁄
[
maö_dr
],
x86dx
[
maö_size
],
tmps
);

3059 
	`emô
("jm∞sh‹à %d\n",
löíum
 + 1);

3060 
	`emô
(" %d:\n",
löíum
);Üinenum++;

3061 if(
√edxf
){

3062 
	`emô
("shrál, 1\n");

3064 
	`emô
("%s%¯%s,%s\n", 
›
,
dúe˘i⁄
[
maö_dr
],
x86dx
[
maö_size
],
tmps
);

3065 
	`emô
(" %d:\n",
löíum
);Üinenum++;

3069 if(
√edxf
){

3070 
	`emô
("shrál,1\n");

3072 
	`emô
("%s%¯%s,%s\n", 
›
,
dúe˘i⁄
[
maö_dr
],
x86dx
[
maö_size
],
tmps
);

3078 
	`emô
("adcál,al\n");

3079 
	`emô
("or %s,%s\n",

3080 
x86dx
[
maö_size
],x86dx[main_size]

3082 
	`emô
("lahf\n");

3083 
	`emô
("oráh,al\n");

3084 if(
af„˘x
){

3085 
	`emô
("mov [__xflag],al\n");

3087 
	`emô
("movál,0\n");

3088 
	`emô
("mov [__dªg+ebx*4],%s\n",
x86dx
[
maö_size
]);

3090 if(
√edxf
){

3091 
	`emô
("movál,[__xflag]\n");

3093 
	`emô
("movál,0\n");

3098 
tmps
[0])

3101 
	`emô
("cmp cl, 32\n");

3102 
	`emô
("jb sh‹à %d\n",
löíum
);

3103 
	`emô
("sub cl, 31\n");

3104 if(
√edxf
){

3105 
	`emô
("shrál, 1\n");

3107 
	`emô
("%s%¯%s[__dªg+ebx*4], 31\n", 
›
,
dúe˘i⁄
[
maö_dr
],
sizíame
[
maö_size
]);

3108 
	`emô
("jm∞sh‹à %d\n",
löíum
 + 1);

3109 
	`emô
(" %d:\n",
löíum
);Üinenum++;

3110 if(
√edxf
){

3111 
	`emô
("shrál, 1\n");

3113 
	`emô
("%s%¯%s[__dªg+ebx*4],%s\n", 
›
,
dúe˘i⁄
[
maö_dr
],
sizíame
[
maö_size
],
tmps
);

3114 
	`emô
(" %d:\n",
löíum
);Üinenum++;

3118 if(
√edxf
){

3119 
	`emô
("shrál, 1\n");

3121 
	`emô
("%s%¯%s[__dªg+ebx*4],%s\n", 
›
,
dúe˘i⁄
[
maö_dr
],
sizíame
[
maö_size
],
tmps
);

3127 
	`emô
("lahf\n");

3128 if(
af„˘x
)
	`c2x
();

3132 
	`ªt_timög
(
cy˛es
);

3133 
	}
}

3135 
	$i_lsx_ªg
(){
	`Êick_ªg
("sh",0,1,0,0);
	}
}

3136 
	$i_asx_ªg
(){
	`Êick_ªg
("ß",0,1,1,0);
	}
}

3137 
	$i_rox_ªg
(){
	`Êick_ªg
("ro",0,0,0,1);
	}
}

3138 
	$i_rxx_ªg
(){
	`Êick_ªg
("rc",1,1,0,1);
	}
}

3140 
	$Êick_mem
(*
›
,
√edxf
,
af„˘x
,
vf
,
rŸ©e
){

3142 if(
dúe˘i⁄
[
maö_dr
]=='r')
vf
=0;

3143 
maö_size
=2;

3144 
	`£À˘ive_u£ªg
();

3145 
	`maö_ó_rmw_lﬂd
();

3146 if(
√edxf
){

3147 
	`emô
("movál,[__xflag]\n");

3148 
	`emô
("shrál,1\n");

3150 if(
rŸ©e
)
	`emô
("movál,0\n");

3152 
	`emô
("%s%¯cx,1\n",
›
,
dúe˘i⁄
[
maö_dr
]);

3153 if(
rŸ©e
){

3154 
	`emô
("adcál,al\n");

3155 
	`emô
("test cx,cx\n");

3156 
	`emô
("lahf\n");

3157 
	`emô
("oráh,al\n");

3158 if(
af„˘x
)
	`emô
("mov [__xflag],al\n");

3159 
	`emô
("movál,0\n");

3161 if(
vf
){

3162 
	`Êags
();

3164 
	`Êags_v0
();

3166 if(
af„˘x
)
	`c2x
();

3168 
	`maö_ó_rmw_°‹e
();

3170 if(
˝uty≥
==68010){

3171 
maö_ómode
){

3172 
aöd
:
aöc
:
adec
:

3173 
lo›_c_cy˛es
 = 6;

3174 
lo›_t_cy˛es
 = 12;

3175 
lo›_x_cy˛es
 = 10;

3180 
	`ªt_timög
(8+
	`maö_ó_cy˛es
());

3181 
	}
}

3183 
	$i_lsx_mem
(){
	`Êick_mem
("sh",0,1,0,0);
	}
}

3184 
	$i_asx_mem
(){
	`Êick_mem
("ß",0,1,1,0);
	}
}

3185 
	$i_rox_mem
(){
	`Êick_mem
("ro",0,0,0,1);
	}
}

3186 
	$i_rxx_mem
(){
	`Êick_mem
("rc",1,1,0,1);
	}
}

3188 
	g¸óãd_bø_b
=0;

3189 
	$i_bø_b
(){

3190 if(!
¸óãd_bø_b
){
	`emô
("r_bra_b:\n");created_bra_b=1;}

3191 
	`emô
("movsxÉbx,bl\n");

3192 
	`emô
("addÉsi,ebx\n");

3193 
	`emô
("xorÉbx,ebx\n");

3194 
	`ªt_timög
(10);

3195 
	}
}

3197 
	g¸óãd_bø_w
=0;

3198 
	$i_bø_w
(){

3199 if(!
¸óãd_bø_w
){
	`emô
("r_bra_w:\n");created_bra_w=1;}

3200 
	`emô
("movsxÉbx,word[esi]\n");

3201 
	`emô
("addÉsi,ebx\n");

3202 
	`emô
("xorÉbx,ebx\n");

3203 
	`ªt_timög
(10);

3204 
	}
}

3206 
	$i_b§_b
(){

3207 
	`emô
("movsxÉbx,bl\n");

3208 
	`emô
("movÉcx,esi\n");

3209 
	`emô
("subÉcx,ebp\n");

3210 
	`emô
("addÉsi,ebx\n");

3211 
	`emô
("xorÉbx,ebx\n");

3212 
	`ó_°‹e
(4,
adec
,7);

3213 
	`ªt_timög
(18);

3214 
	}
}

3216 
	$i_b§_w
(){

3217 
	`emô
("movsxÉbx,word[esi]\n");

3218 
	`emô
("movÉcx,esi\n");

3219 
	`emô
("addÉcx,byte 2\n");

3220 
	`emô
("subÉcx,ebp\n");

3221 
	`emô
("addÉsi,ebx\n");

3222 
	`emô
("xorÉbx,ebx\n");

3223 
	`ó_°‹e
(4,
adec
,7);

3224 
	`ªt_timög
(18);

3225 
	}
}

3227 
	$i_bcc_b
(){

3228 
	`gëc⁄dôi⁄
(
maö_cc
);

3229 
	`emô
("j%†√¨Ñ_bø_b\n",
›tcc
);

3230 
	`ªt_timög
((
˝uty≥
==68010)?6:8);

3231 
	}
}

3233 
	$i_bcc_w
(){

3234 
	`gëc⁄dôi⁄
(
maö_cc
);

3235 
	`emô
("j%†√¨Ñ_bø_w\n",
›tcc
);

3236 
	`emô
("addÉsi,byte 2\n");

3237 
	`ªt_timög
(12);

3238 
	}
}

3241 
	$i_dbø
(){

3242 
	`emô
("r_dbra:\n");

3243 
	`u£ªg
();

3244 if(
˝uty≥
==68010){

3245 
	`emô
("movsxÉcx,word[esi]\n");

3246 
	`emô
("cmpÉcx,byte -4\n");

3247 
	`emô
("je shortÑ_loopmode_dbra\n");

3250 
	`emô
("r_regular_dbra:\n");

3251 
	`emô
("sub word[__dreg+ebx*4],byte 1\n");

3252 
	`emô
("jc shortÑ_dbra_expire\n");

3253 
	`emô
("addÉsi,ecx\n");

3254 
	`ªt_timög
(10);

3255 
	`emô
("r_dbra_expire:\n");

3256 
	`emô
("addÉsi,byte 2\n");

3257 
	`ªt_timög
(16);

3260 
	`emô
("r_loopmode_dbra:\n");

3261 
	`emô
("cmp byte[__loopmode],0\n");

3262 
	`emô
("jnz shortÑ_loopmode_dbra_inloop\n");

3263 
	`emô
("mov byte[__loopmode],1\n");

3264 
	`emô
("jmp shortÑ_regular_dbra\n");

3265 
	`emô
("r_loopmode_dbra_inloop:\n");

3266 
	`emô
("sub word[__dreg+ebx*4],byte 1\n");

3267 
	`emô
("jc shortÑ_loopmode_dbra_expire\n");

3270 
	`emô
("mov bx,word[esi-4]\n");

3271 
	`emô
("addÉsi,ecx\n");

3273 
	`emô
("mov cl,byte[__looptbl+ebx]\n");

3274 
	`emô
("andÉcx,byte 0Eh\n");

3275 
	`emô
("subÉdi,ecx\n");

3276 
	`ªt_timög
(0);

3279 
	`emô
("r_loopmode_dbra_expire:\n");

3280 
	`emô
("mov bx,word[esi-4]\n");

3281 
	`emô
("mov byte[__loopmode],0\n");

3283 
	`emô
("mov cl,byte[__looptbl+ebx]\n");

3284 
	`emô
("movÉbx,ecx\n");

3285 
	`emô
("rol cl,2\n");

3286 
	`emô
("addÉsi,byte 2\n");

3287 
	`emô
("andÉbx,byte 0Eh\n");

3288 
	`emô
("andÉcx,byte 06h\n");

3289 
	`emô
("subÉdi,ebx\n");

3290 
	`emô
("subÉdi,ecx\n");

3291 
	`ªt_timög
(0);

3294 
	`emô
("r_dbra_terminate:\n");

3295 
	`emô
("cmp word[esi],byte -4\n");

3296 
	`emô
("jne shortÑ_dbra_terminate_regular\n");

3297 
	`emô
("cmp byte[__loopmode],0\n");

3298 
	`emô
("je shortÑ_dbra_terminate_regular\n");

3299 
	`emô
("mov bx,word[esi-4]\n");

3300 
	`emô
("mov byte[__loopmode],0\n");

3302 
	`emô
("mov cl,byte[__looptbl+ebx]\n");

3303 
	`emô
("shr cl,3\n");

3304 
	`emô
("addÉsi,byte 2\n");

3305 
	`emô
("andÉcx,byte 0Eh\n");

3306 
	`emô
("subÉdi,ecx\n");

3307 
	`ªt_timög
(0);

3308 
	`emô
("r_dbra_terminate_regular:\n");

3309 
	`ªt_timög
(10);

3311 
	`emô
("sub word[__dreg+ebx*4],byte 1\n");

3312 
	`emô
("jncÇearÑ_bra_w\n");

3313 
	`emô
("addÉsi,byte 2\n");

3314 
	`ªt_timög
(14);

3316 
	}
}

3318 
	$i_dbcc
(){

3319 
	`gëc⁄dôi⁄
(
maö_cc
);

3320 
	`emô
("j%†√¨Ñ_dbø\n",
›åc
);

3322 if(
˝uty≥
==68010){

3323 
	`emô
("jmpÑ_dbra_terminate\n");

3325 
	`emô
("addÉsi,byte 2\n");

3326 
	`ªt_timög
(12);

3328 
	}
}

3330 
	$i_scc
(){

3331 
cy˛es
;

3332 
maö_size
=1;

3333 
	`£À˘ive_u£ªg
();

3334 if(
maö_cc
>1){

3335 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

3336 if(
˝uty≥
==68000){

3337 
	`emô
("xorÉcx,ecx\n");

3339 
	`gëc⁄dôi⁄
(
maö_cc
);

3340 
	`emô
("£t%†˛\n",
›tcc
);

3341 if(
˝uty≥
==68000){

3343 
	`emô
("subÉdi,ecx\n");

3344 
	`emô
("subÉdi,ecx\n");

3346 
	`emô
("neg cl\n");

3347 
cy˛es
=4;

3349 
	`gëc⁄dôi⁄
(
maö_cc
);

3350 
	`emô
("£t%†˛\n",
›tcc
);

3351 
	`emô
("neg cl\n");

3352 
cy˛es
=8;

3355 
	`emô
("mov cl,%d\n",(
maö_cc
^1)*0xFF);

3356 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

3357 
cy˛es
=4;

3358 if(
˝uty≥
==68000){

3360 if(!
maö_cc
)
cy˛es
+=2;

3363 
cy˛es
=8;

3366 
	`maö_ó_°‹e
();

3367 if(
˝uty≥
==68010){

3368 
cy˛es
+=
	`maö_ó_cy˛es_no„tch
();

3370 
cy˛es
+=
	`maö_ó_cy˛es
();

3373 
	`ªt_timög
(
cy˛es
);

3374 
	}
}

3380 
	$bô›
(
°©ic_cy˛es
){

3381 
cy˛es
;

3382 
	`£À˘ive_u£ªg
();

3383 
	`emô
("™dÉcx,byã %d\n",(
maö_ómode
==
dªg
)?31:7);

3384 if(
maö_ómode
==
dªg
){

3385 
maö_size
=4;

3386 if(!
maö_cc
){

3387 
	`emô
("movÉdx,1\n");

3388 
	`emô
("shlÉdx,cl\n");

3389 
	`emô
("test [__dreg+ebx*4],edx\n");

3390 
	`Êag_to_z
("z");

3392 
	`emô
("movÉdx,1\n");

3393 
	`emô
("shlÉdx,cl\n");

3394 
	`emô
("movÉcx,[__dreg+ebx*4]\n");

3395 
	`emô
("testÉcx,edx\n");

3396 
	`Êag_to_z
("z");

3397 
maö_cc
){

3398 1:
	`emô
("xorÉcx,edx\n");;

3399 2:
	`emô
("notÉdx\nandÉcx,edx\n");;

3400 3:
	`emô
("orÉcx,edx\n");;

3403 
	`emô
("mov [__dreg+ebx*4],ecx\n");

3405 
cy˛es
=6+
°©ic_cy˛es
;

3406 if(
maö_cc
)
cy˛es
+=2;

3407 if(
maö_cc
==2)
cy˛es
+=2;

3409 
maö_size
=1;

3410 if(!
maö_cc
){

3411 
	`emô
("pushÉcx\n");

3412 
	`maö_ó_lﬂd
();

3413 
	`emô
("movÉdx,ecx\n");

3414 
	`emô
("popÉcx\n");

3415 
	`emô
("inc cl\n");

3416 
	`emô
("shr dl,cl\n");

3417 
	`Êag_to_z
("nc");

3419 
	`emô
("mov dl,1\n");

3420 
	`emô
("shl dl,cl\n");

3421 
	`emô
("pushÉdx\n");

3422 
	`maö_ó_rmw_lﬂd
();

3423 
	`emô
("xchgÉdx,[esp]\n");

3424 
	`emô
("test cl,dl\n");

3425 
	`Êag_to_z
("z");

3426 
maö_cc
){

3427 1:
	`emô
("xor cl,dl\n");;

3428 2:
	`emô
("not dl\nand cl,dl\n");;

3429 3:
	`emô
("or cl,dl\n");;

3432 
	`emô
("popÉdx\n");

3433 
	`maö_ó_rmw_°‹e
();

3435 
cy˛es
=4+
°©ic_cy˛es
+
	`maö_ó_cy˛es
();

3436 if(
maö_cc
)
cy˛es
+=4;

3437 if((
˝uty≥
==68010)&&(
maö_cc
==2))
cy˛es
+=2;

3439 
	`ªt_timög
(
cy˛es
);

3440 
	}
}

3443 
	$i_bô›_imm
(){

3444 
	`emô
("mov cl,[esi]\n");

3445 
	`emô
("addÉsi,byte 2\n");

3446 
	`bô›
(4);

3447 
	}
}

3450 
	$i_bô›_ªg
(){

3451 
	`emô
("mov cl,byã[__dªg+%d]\n",
maö_ªg
*4);

3452 
	`bô›
(0);

3453 
	}
}

3455 
	$i_jmp
(){

3456 
cy˛es
=0;

3457 
	`£À˘ive_u£ªg
();

3458 
	`maö_ó_c⁄åﬁ
();

3459 
	`emô
("movÉsi,edx\n");

3460 
	`≥rf‹m_ˇched_ªba£
();

3461 
maö_ómode
){

3462 
aöd
:
cy˛es
= 8;;

3463 
ad•
:
cy˛es
=10;;

3464 
axdp
:
cy˛es
=14;;

3465 
absw
:
cy˛es
=10;;

3466 
ab¶
:
cy˛es
=12;;

3467 
pcdp
:
cy˛es
=10;;

3468 
pcxd
:
cy˛es
=14;;

3472 
	`ªt_timög
(
cy˛es
);

3473 
	}
}

3475 
	$i_j§
(){

3476 
cy˛es
=0;

3477 
	`£À˘ive_u£ªg
();

3478 
	`maö_ó_c⁄åﬁ
();

3479 
	`emô
("movÉcx,esi\n");

3480 
	`emô
("subÉcx,ebp\n");

3481 
	`emô
("movÉsi,edx\n");

3482 
	`≥rf‹m_ˇched_ªba£
();

3483 
	`ó_°‹e
(4,
adec
,7);

3484 
maö_ómode
){

3485 
aöd
:
cy˛es
=16;;

3486 
ad•
:
cy˛es
=18;;

3487 
axdp
:
cy˛es
=22;;

3488 
absw
:
cy˛es
=18;;

3489 
ab¶
:
cy˛es
=20;;

3490 
pcdp
:
cy˛es
=18;;

3491 
pcxd
:
cy˛es
=22;;

3495 
	`ªt_timög
(
cy˛es
);

3496 
	}
}

3498 
	$i_πs
(){

3499 
	`ó_lﬂd
(4,
aöc
,7);

3500 
	`emô
("movÉsi,ecx\n");

3501 
	`≥rf‹m_ˇched_ªba£
();

3503 
	`ªt_timög
(16);

3504 
	}
}

3507 
	$i_πd
(){

3508 
	`emô
("movÉdx,[__a7]\n");

3509 
	`emô
("callÑeadmemorydword\n");

3510 
	`emô
("movsxÉbx,word[esi]\n");

3511 
	`emô
("addÉdx,ebx\n");

3512 
	`emô
("movÉsi,ecx\n");

3513 
	`emô
("addÉdx,byte 4\n");

3514 
	`emô
("xorÉbx,ebx\n");

3515 
	`emô
("mov [__a7],edx\n");

3516 
	`≥rf‹m_ˇched_ªba£
();

3518 
	`ªt_timög
(16);

3519 
	}
}

3521 
	$i_πr
(){

3522 
	`ó_lﬂd
(2,
aöc
,7);

3523 
	`˛2c¸
();

3524 
	`ó_lﬂd
(4,
aöc
,7);

3525 
	`emô
("movÉsi,ecx\n");

3526 
	`≥rf‹m_ˇched_ªba£
();

3528 
	`ªt_timög
(20);

3529 
	}
}

3531 
	$i_πe
(){

3532 
mylöe
=
löíum
;

3533 
löíum
++;

3534 
	`¥ivûegecheck
();

3535 if(
˝uty≥
>=68010){

3537 
	`emô
("movÉdx,[__a7]\n");

3538 
	`emô
("addÉdx,byte 6\n");

3539 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[2]);

3540 
	`emô
("test ch,70h\n");

3541 
	`emô
("jnz sh‹à %d_f‹m©ok\n",
mylöe
);

3543 
	`emô
("movÉdx,38h\n");

3544 
	`emô
("call group_1_exception\n");

3545 
	`≥rf‹m_ˇched_ªba£
();

3546 
	`ªt_timög
(50);

3547 
	`emô
(" %d_f‹m©ok:\n",
mylöe
);

3551 
	`emô
("or ch,ch\n");

3552 
	`emô
("jn†sh‹à %d_f‹m©ok2\n",
mylöe
);

3554 
	`emô
("movÉcx,80000002h\n");

3555 
	`emô
("or byte[__pc],1\n");

3556 
	`emô
("or byte[__interrupts],1\n");

3557 
	`emô
("jmpÉxecexit\n");

3558 
	`emô
(" %d_f‹m©ok2:\n",
mylöe
);

3561 
	`emô
("subÉdx,byte 6\n");

3562 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[2]);

3563 
	`emô
("addÉdx,byte 2\n");

3564 
	`cx2§
();

3565 
	`emô
("test ch,20h\n");

3566 
	`emô
("jz sh‹à %d_nosu≥\n",
mylöe
);

3567 
	`emô
("add dword [__a7],byte 8\n");

3568 
	`emô
("jm∞sh‹à %d_föish\n",
mylöe
);

3569 
	`emô
(" %d_nosu≥:\n",
mylöe
);

3570 
	`emô
("add dword [__asp],byte 8\n");

3571 
	`emô
(" %d_föish:\n",
mylöe
);

3572 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[4]);

3573 
	`emô
("movÉsi,ecx\n");

3574 
	`≥rf‹m_ˇched_ªba£
();

3575 
	`ªt_timög_checkpoöt
(24);

3577 
	`emô
("movÉdx,[__a7]\n");

3578 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[2]);

3579 
	`emô
("addÉdx,byte 2\n");

3580 
	`cx2§
();

3581 
	`emô
("test ch,20h\n");

3582 
	`emô
("jz sh‹à %d_nosu≥\n",
mylöe
);

3583 
	`emô
("add dword [__a7],byte 6\n");

3584 
	`emô
("jm∞sh‹à %d_föish\n",
mylöe
);

3585 
	`emô
(" %d_nosu≥:\n",
mylöe
);

3586 
	`emô
("add dword [__asp],byte 6\n");

3587 
	`emô
(" %d_föish:\n",
mylöe
);

3588 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[4]);

3589 
	`emô
("movÉsi,ecx\n");

3590 
	`≥rf‹m_ˇched_ªba£
();

3591 
	`ªt_timög_checkpoöt
(20);

3593 
	}
}

3595 
	$i_Àa
(){

3596 
cy˛es
=0;

3597 
	`£À˘ive_u£ªg
();

3598 
	`maö_ó_c⁄åﬁ
();

3599 
	`emô
("mov [__¨eg+%d],edx\n",
maö_ªg
*4);

3600 
maö_ómode
){

3601 
aöd
:
cy˛es
= 4;;

3602 
ad•
:
cy˛es
= 8;;

3603 
axdp
:
cy˛es
=12;;

3604 
absw
:
cy˛es
= 8;;

3605 
ab¶
:
cy˛es
=12;;

3606 
pcdp
:
cy˛es
= 8;;

3607 
pcxd
:
cy˛es
=12;;

3611 
	`ªt_timög
(
cy˛es
);

3612 
	}
}

3614 
	$i_≥a
(){

3615 
cy˛es
=0;

3616 
	`£À˘ive_u£ªg
();

3617 
	`maö_ó_c⁄åﬁ
();

3618 
	`emô
("movÉcx,edx\n");

3619 
	`ó_°‹e
(4,
adec
,7);

3620 
maö_ómode
){

3621 
aöd
:
cy˛es
=12;;

3622 
ad•
:
cy˛es
=16;;

3623 
axdp
:
cy˛es
=20;;

3624 
absw
:
cy˛es
=16;;

3625 
ab¶
:
cy˛es
=20;;

3626 
pcdp
:
cy˛es
=16;;

3627 
pcxd
:
cy˛es
=20;;

3631 
	`ªt_timög
(
cy˛es
);

3632 
	}
}

3634 
	$i_n›
(){

3636 
	`ªt_timög
(4);

3637 
	}
}

3639 
	$i_movem_c⁄åﬁ
(){

3640 
cy˛es
=0;

3641 
mylöe
=
löíum
;linenum+=2;

3642 
	`emô
("pushÉax\n");

3643 
	`£À˘ive_u£ªg
();

3644 
	`emô
("mováx,[esi]\n");

3645 
	`emô
("addÉsi,byte 2\n");

3646 
	`maö_ó_c⁄åﬁ
();

3647 
	`emô
("xorÉbx,ebx\n");

3648 
	`emô
(" %d:\n",
mylöe
);

3649 
	`emô
("shrÉax,1\n");

3650 
	`emô
("jn¯sh‹à %d\n",
mylöe
+1);

3651 if(
maö_dr
==0){

3652 
maö_ómode
){

3653 
aöd
:
cy˛es
= 8;;

3654 
ad•
:
cy˛es
=12;;

3655 
axdp
:
cy˛es
=14;;

3656 
absw
:
cy˛es
=12;;

3657 
ab¶
:
cy˛es
=16;;

3660 
	`emô
("movÉcx,[__reg+ebx]\n");

3661 
	`emô
("ˇŒ wrôemem‹y%s\n",
sizíame
[
maö_size
]);

3663 
maö_ómode
){

3664 
aöd
:
cy˛es
=12;

3665 if((
˝uty≥
==68010)&&(
maö_size
==4))
cy˛es
=24;

3667 
ad•
:
cy˛es
=16;;

3668 
axdp
:
cy˛es
=18;;

3669 
absw
:
cy˛es
=16;;

3670 
ab¶
:
cy˛es
=20;;

3671 
pcdp
:
cy˛es
=16;;

3672 
pcxd
:
cy˛es
=18;;

3675 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[
maö_size
]);

3676 if(
maö_size
==2)
	`emô
("movsxÉcx,cx\n");

3677 
	`emô
("mov [__reg+ebx],ecx\n");

3679 
	`emô
("addÉdx,byã %d\n",
maö_size
);

3680 
	`emô
("subÉdi,byã %d\n",
maö_size
*2);

3681 
	`emô
(" %d:\n",
mylöe
+1);

3682 
	`emô
("addÉbx,byte 4\n");

3683 
	`emô
("cmpÉbx,byte 64\n");

3684 
	`emô
("j√ sh‹à %d\n",
mylöe
);

3685 
	`emô
("popÉax\n");

3686 
	`ªt_timög
(
cy˛es
);

3687 
	}
}

3689 
	$i_movem_po°öc
(){

3690 
mylöe
=
löíum
;linenum+=2;

3691 
	`u£ªg
();

3692 
	`emô
("pushÉax\n");

3693 
	`emô
("mováx,[esi]\n");

3694 
	`emô
("addÉsi,byte 2\n");

3695 
	`emô
("movÉdx,[__areg+ebx*4]\n");

3696 
	`emô
("pushÉbx\n");

3697 
	`emô
("xorÉbx,ebx\n");

3698 
	`emô
(" %d:\n",
mylöe
);

3699 
	`emô
("shrÉax,1\n");

3700 
	`emô
("jn¯sh‹à %d\n",
mylöe
+1);

3701 
	`emô
("ˇŒÑódmem‹y%s\n",
sizíame
[
maö_size
]);

3702 if(
maö_size
==2)
	`emô
("movsxÉcx,cx\n");

3703 
	`emô
("mov [__reg+ebx],ecx\n");

3704 
	`emô
("addÉdx,byã %d\n",
maö_size
);

3705 
	`emô
("subÉdi,byã %d\n",
maö_size
*2);

3706 
	`emô
(" %d:\n",
mylöe
+1);

3707 
	`emô
("addÉbx,byte 4\n");

3708 
	`emô
("cmpÉbx,byte 64\n");

3709 
	`emô
("j√ sh‹à %d\n",
mylöe
);

3710 
	`emô
("popÉbx\n");

3711 
	`emô
("popÉax\n");

3712 
	`emô
("mov [__areg+ebx*4],edx\n");

3713 
	`ªt_timög
(12);

3714 
	}
}

3716 
	$i_movem_¥edec
(){

3717 
mylöe
=
löíum
;linenum+=2;

3718 
	`u£ªg
();

3719 
	`emô
("pushÉax\n");

3720 
	`emô
("mováx,[esi]\n");

3721 
	`emô
("addÉsi,byte 2\n");

3722 
	`emô
("movÉdx,[__areg+ebx*4]\n");

3723 
	`emô
("pushÉbx\n");

3724 
	`emô
("movÉbx,60\n");

3725 
	`emô
(" %d:\n",
mylöe
);

3726 
	`emô
("shrÉax,1\n");

3727 
	`emô
("jn¯sh‹à %d\n",
mylöe
+1);

3728 
	`emô
("movÉcx,[__reg+ebx]\n");

3729 
	`emô
("subÉdx,byã %d\n",
maö_size
);

3730 
	`emô
("subÉdi,byã %d\n",
maö_size
*2);

3731 
	`emô
("ˇŒ wrôemem‹y%s\n",
sizíame
[
maö_size
]);

3732 
	`emô
(" %d:\n",
mylöe
+1);

3733 
	`emô
("subÉbx,byte 4\n");

3734 
	`emô
("jn†sh‹à %d\n",
mylöe
);

3735 
	`emô
("popÉbx\n");

3736 
	`emô
("popÉax\n");

3737 
	`emô
("mov [__areg+ebx*4],edx\n");

3738 
	`ªt_timög
(8);

3739 
	}
}

3741 
	$i_lök
(){

3742 
	`u£ªg
();

3743 
	`emô
("movÉcx,[__areg+ebx*4]\n");

3744 
	`ó_°‹e
(4,
adec
,7);

3745 
	`emô
("movÉcx,[__a7]\n");

3746 
	`emô
("mov [__areg+ebx*4],ecx\n");

3747 
	`emô
("movsxÉdx,word[esi]\n");

3748 
	`emô
("addÉcx,edx\n");

3749 
	`emô
("mov [__a7],ecx\n");

3750 
	`emô
("addÉsi,byte 2\n");

3751 
	`ªt_timög
(16);

3752 
	}
}

3754 
	$i_u∆k
(){

3755 
	`u£ªg
();

3756 
	`emô
("movÉcx,[__areg+ebx*4]\n");

3757 
	`emô
("mov [__a7],ecx\n");

3758 
	`ó_lﬂd
(4,
aöc
,7);

3759 
	`emô
("mov [__areg+ebx*4],ecx\n");

3760 
	`ªt_timög
(12);

3761 
	}
}

3763 
	$i_move_‰om_u•
(){

3764 
	`¥ivûegecheck
();

3765 
	`u£ªg
();

3766 
	`emô
("movÉcx,[__asp]\n");

3767 
	`emô
("mov [__areg+ebx*4],ecx\n");

3768 
	`ªt_timög
((
˝uty≥
==68010)?6:4);

3769 
	}
}

3771 
	$i_move_to_u•
(){

3772 
	`¥ivûegecheck
();

3773 
	`u£ªg
();

3774 
	`emô
("movÉcx,[__areg+ebx*4]\n");

3775 
	`emô
("mov [__asp],ecx\n");

3776 
	`ªt_timög
((
˝uty≥
==68010)?6:4);

3777 
	}
}

3779 
	$i_å≠
(){

3780 
	`emô
("andÉbx,byte 0Fh\n");

3781 
	`emô
("leaÉdx,[80h+ebx*4]\n");

3782 
	`emô
("call group_2_exception\n");

3783 
	`≥rf‹m_ˇched_ªba£
();

3784 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

3785 
	}
}

3787 
	$i_å≠v
(){

3788 
mylöe
=
löíum
;linenum++;

3789 
	`emô
("testál,1\n");

3790 
	`emô
("jnz sh‹à %d\n",
mylöe
);

3791 
	`ªt_timög
(4);

3792 
	`emô
(" %d:\n",
mylöe
);

3793 
	`emô
("movÉdx,1Ch\n");

3794 
	`emô
("call group_2_exception\n");

3795 
	`≥rf‹m_ˇched_ªba£
();

3796 
	`ªt_timög
(4+((
˝uty≥
==68010)?38:34));

3797 
	}
}

3799 
	$i_°›
(){

3800 
mylöe
=
löíum
;linenum++;

3801 
	`¥ivûegecheck
();

3802 
	`emô
("mov cx,[esi]\n");

3803 
	`emô
("addÉsi,2\n");

3804 
	`cx2§
();

3805 
	`emô
("or byte[__interrupts],1\n");

3807 
	`emô
("subÉdi,byte 4\n");

3808 
	`emô
("j†sh‹à %d\n",
mylöe
);

3809 
	`emô
("xorÉdi,edi\n");

3810 
	`emô
("decÉdi\n");

3811 
	`emô
(" %d:\n",
mylöe
);

3812 
	`ªt_timög
(0);

3813 
	}
}

3815 
	$i_extbw
(){

3816 
	`u£ªg
();

3817 
	`emô
("movsx cx,byte[__dreg+ebx*4]\n");

3818 
	`emô
("mov [__dreg+ebx*4],cx\n");

3819 
	`£l·e°
(2);

3820 
	`Êags_v0
();

3821 
	`ªt_timög
(4);

3822 
	}
}

3824 
	$i_extwl
(){

3825 
	`u£ªg
();

3826 
	`emô
("movsxÉcx,word[__dreg+ebx*4]\n");

3827 
	`emô
("mov [__dreg+ebx*4],ecx\n");

3828 
	`£l·e°
(4);

3829 
	`Êags_v0
();

3830 
	`ªt_timög
(4);

3831 
	}
}

3833 
	$i_sw≠
(){

3834 
	`u£ªg
();

3835 
	`emô
("movÉcx,[__dreg+ebx*4]\n");

3836 
	`emô
("rolÉcx,16\n");

3837 
	`emô
("mov [__dreg+ebx*4],ecx\n");

3838 
	`£l·e°
(4);

3839 
	`Êags_v0
();

3840 
	`ªt_timög
(4);

3841 
	}
}

3844 
	$i_mul
(){

3845 
ba£_cy˛es
;

3846 
	`£À˘ive_u£ªg
();

3847 
maö_size
=2;

3848 
	`maö_ó_lﬂd
();

3849 
	`emô
("movÉax,ecx\n");

3851 if(
˝uty≥
==68000){

3852 
	`emô
("mov dl,0\n");

3853 
	`emô
("mov bl,16\n");

3854 
	`emô
(" %d:\n",
löíum
);

3855 
	`emô
("add cx,cx\n");

3856 if(
maö_cc
==1){

3858 
	`emô
("seto dh\n");

3859 
	`emô
("add dl,dh\n");

3862 
	`emô
("adc dl,0\n");

3864 
	`emô
("dec bl\n");

3865 
	`emô
("jnzÜn%d\n",
löíum
);linenum++;

3866 
	`emô
("andÉdx,byte 127\n");

3867 
	`emô
("subÉdi,edx\n");

3868 
	`emô
("subÉdi,edx\n");

3870 
	`emô
("%smul word[__dreg+%d]\n",

3871 (
maö_cc
==1)?"i":"",
maö_ªg
*4

3873 
	`emô
("shlÉdx,16\n");

3874 
	`emô
("andÉax,0FFFFh\n");

3875 
	`emô
("movÉcx,edx\n");

3876 
	`emô
("orÉcx,eax\n");

3877 
	`Êags_v0
();

3878 
	`emô
("mov [__dªg+%d],ecx\n",
maö_ªg
*4);

3879 if(
˝uty≥
==68010){

3881 
ba£_cy˛es
=36;

3882 if(
maö_cc
)
ba£_cy˛es
+=2;

3885 
ba£_cy˛es
=38;

3888 
	`ªt_timög
(
ba£_cy˛es
+
	`maö_ó_cy˛es
());

3889 
	}
}

3892 
	$i_div
(){

3893 
ba£_cy˛es
;

3894 
mylöe
=
löíum
;linenum+=2;

3895 
	`£À˘ive_u£ªg
();

3896 
maö_size
=2;

3897 
	`maö_ó_lﬂd
();

3898 
	`emô
("test cx,cx\n");

3899 
	`emô
("jnz sh‹à %d\n",
mylöe
);

3901 
	`emô
("movÉdx,14h\n");

3902 
	`emô
("call group_2_exception\n");

3903 
	`≥rf‹m_ˇched_ªba£
();

3904 
ba£_cy˛es
=38;

3905 if(
˝uty≥
==68010)
ba£_cy˛es
+=4;

3906 
	`ªt_timög
(
ba£_cy˛es
+
	`maö_ó_cy˛es
());

3907 
	`emô
(" %d:\n",
mylöe
);myline++;

3908 if(
maö_cc
){

3909 
	`emô
("movsxÉcx,cx\n");

3911 
	`emô
("andÉcx,0FFFFh\n");

3913 
	`emô
("movÉax,[__dªg+%d]\n",
maö_ªg
*4);

3914 if(
maö_cc
){

3915 
	`emô
("movÉdx,eax\n");

3916 
	`emô
("sarÉdx,31\n");

3918 
	`emô
("xorÉdx,edx\n");

3920 
	`emô
("%sdivÉcx\n",
maö_cc
?"i":"");

3921 if(
maö_cc
){

3922 
	`emô
("movÉcx,eax\n");

3923 
	`emô
("sar cx,15\n");

3924 
	`emô
("orÉcx,ecx\n");

3925 
	`emô
("jêsh‹à %d\n",
löíum
);

3926 
	`emô
("incÉcx\n");

3927 
	`emô
("j√ sh‹à %d\n",
mylöe
);

3928 
	`emô
(" %d:\n",
löíum
);linenum++;

3929 
	`emô
("andÉax,0FFFFh\n");

3931 
	`emô
("testÉax,0FFFF0000h\n");

3932 
	`emô
("jnz sh‹à %d\n",
mylöe
);

3934 
	`emô
("shlÉdx,16\n");

3935 
	`emô
("mov dx,ax\n");

3936 
	`emô
("test dx,dx\n");

3937 
	`Êags_v0
();

3938 
	`emô
("mov [__dªg+%d],edx\n",
maö_ªg
*4);

3939 if(
˝uty≥
==68010){

3940 
ba£_cy˛es
=108;

3941 if(
maö_cc
)
ba£_cy˛es
=122;

3944 
ba£_cy˛es
=133;

3945 if(
maö_cc
)
ba£_cy˛es
=150;

3947 
	`ªt_timög
(
ba£_cy˛es
+
	`maö_ó_cy˛es
());

3949 
	`emô
(" %d:\n",
mylöe
);myline++;

3950 
	`emô
("mováx,1\n");

3952 
	`ªt_timög
(
ba£_cy˛es
+
	`maö_ó_cy˛es
());

3953 
	}
}

3955 
	$i_√g
(){

3956 
cy˛es
;

3957 
	`£À˘ive_u£ªg
();

3958 
cy˛es
=4;

3959 if(
maö_size
==4)
cy˛es
=6;

3960 if(
maö_ómode
==
dªg
){

3961 
	`emô
("neg %s[__dreg+ebx*4]\n",

3962 
sizíame
[
maö_size
]

3964 
	`Êags
();

3965 
	`c2x
();

3967 
cy˛es
*=2;

3968 
	`maö_ó_rmw_lﬂd
();

3969 
	`emô
("√g %s\n",
x86cx
[
maö_size
]);

3970 
	`Êags
();

3971 
	`c2x
();

3972 
	`maö_ó_rmw_°‹e
();

3973 
cy˛es
+=
	`maö_ó_cy˛es
();

3976 if(
˝uty≥
==68010){

3977 
maö_ómode
){

3978 
aöd
:
aöc
:
adec
:

3979 
lo›_c_cy˛es
 = 4;

3980 
lo›_t_cy˛es
 = 10;

3981 
lo›_x_cy˛es
 = 8;

3986 
	`ªt_timög
(
cy˛es
);

3987 
	}
}

3989 
	$i_√gx
(){

3990 
cy˛es
;

3991 
	`£À˘ive_u£ªg
();

3992 
cy˛es
=4;

3993 if(
maö_size
==4)
cy˛es
=6;

3994 if(
maö_ómode
==
dªg
){

3995 
	`emô
("mov cl,[__xflag]\n");

3996 
	`emô
("shr cl,1\n");

3997 if(
maö_size
==1)
	`emô
("mov cl,0\n");

3998 
	`emô
("movÉcx,0\n");

3999 
	`emô
("sbb %s,[__dªg+ebx*4]\n",
x86cx
[
maö_size
]);

4000 
	`emô
("movÉdx,eax\n");

4001 
	`Êags
();
	`c2x
();

4002 
	`adjzîo
("dh");

4003 
	`emô
("mov [__dªg+ebx*4],%s\n",
x86cx
[
maö_size
]);

4005 
cy˛es
*=2;

4006 
	`maö_ó_rmw_lﬂd
();

4007 
	`emô
("pushÉbx\n");

4008 
	`emô
("mov bl,[__xflag]\n");

4009 
	`emô
("shr bl,1\n");

4010 if(
maö_size
==1)
	`emô
("mov bl,0\n");

4011 
	`emô
("movÉbx,0\n");

4012 
	`emô
("sbb %s,%s\n",
x86bx
[
maö_size
],
x86cx
[main_size]);

4013 
	`emô
("movÉcx,ebx\n");

4014 
	`emô
("movÉbx,eax\n");

4015 
	`Êags
();
	`c2x
();

4016 
	`adjzîo
("bh");

4017 
	`emô
("popÉbx\n");

4018 
	`maö_ó_rmw_°‹e
();

4019 
cy˛es
+=
	`maö_ó_cy˛es
();

4022 if(
˝uty≥
==68010){

4023 
maö_ómode
){

4024 
aöd
:
aöc
:
adec
:

4025 
lo›_c_cy˛es
 = 4;

4026 
lo›_t_cy˛es
 = 10;

4027 
lo›_x_cy˛es
 = 8;

4032 
	`ªt_timög
(
cy˛es
);

4033 
	}
}

4035 
	$i_nbcd
(){

4036 
cy˛es
;

4037 
maö_size
=1;

4038 
	`£À˘ive_u£ªg
();

4039 
	`maö_ó_rmw_lﬂd
();

4041 
	`emô
("mov cl,[__xflag]\n");

4042 
	`emô
("shr cl,1\n");

4044 
	`emô
("mov ch,ah\n");

4046 
	`emô
("movál,0\n");

4047 
	`emô
("sbbál,cl\n");

4048 
	`emô
("das\n");

4050 
	`emô
("mov cl,al\n");

4052 
	`Êags_v0
();

4053 
	`c2x
();

4055 
	`adjzîo
("ch");

4056 
	`maö_ó_rmw_°‹e
();

4057 if(
maö_ómode
==
dªg
){

4058 
cy˛es
=6;

4060 
cy˛es
=8+
	`maö_ó_cy˛es
();

4063 if(
˝uty≥
==68010){

4064 
maö_ómode
){

4065 
aöd
:
aöc
:
adec
:

4066 
lo›_c_cy˛es
 = 6;

4067 
lo›_t_cy˛es
 = 12;

4068 
lo›_x_cy˛es
 = 10;

4073 
	`ªt_timög
(
cy˛es
);

4074 
	}
}

4076 
	$i_ès
(){

4077 
cy˛es
;

4078 
maö_size
=1;

4079 
	`£À˘ive_u£ªg
();

4080 
	`maö_ó_rmw_lﬂd
();

4081 
	`£l·e°
(1);

4082 
	`Êags_v0
();

4083 
	`emô
("or cl,80h\n");

4084 
	`maö_ó_rmw_°‹e
();

4085 if((
maö_ómode
==
dªg
)||(maö_ómode==
¨eg
)){

4086 
cy˛es
=4;

4088 
cy˛es
=14+
	`maö_ó_cy˛es
();

4091 
	`ªt_timög
(
cy˛es
);

4092 
	}
}

4094 
	$i_nŸ
(){

4095 
cy˛es
;

4096 
	`£À˘ive_u£ªg
();

4097 
cy˛es
=4;

4098 if(
maö_size
==4)
cy˛es
=6;

4099 if(
maö_ómode
==
dªg
){

4100 
	`emô
("xor %s[__dreg+ebx*4],byte -1\n",

4101 
sizíame
[
maö_size
]

4103 
	`Êags_v0
();

4105 
cy˛es
*=2;

4106 
	`maö_ó_rmw_lﬂd
();

4107 
	`emô
("x‹ %s,byã -1\n",
x86cx
[
maö_size
]);

4108 
	`Êags_v0
();

4109 
	`maö_ó_rmw_°‹e
();

4110 
cy˛es
+=
	`maö_ó_cy˛es
();

4113 if(
˝uty≥
==68010){

4114 
maö_ómode
){

4115 
aöd
:
aöc
:
adec
:

4116 
lo›_c_cy˛es
 = 4;

4117 
lo›_t_cy˛es
 = 10;

4118 
lo›_x_cy˛es
 = 8;

4123 
	`ªt_timög
(
cy˛es
);

4124 
	}
}

4127 
	$i_exg
(){

4128 
	`u£ªg
();

4129 
	`emô
("movÉcx,[__ªg+%d]\n",(
maö_ªg
*4)+
maö_dr
);

4130 
	`emô
("movÉdx,[__ªg+%d+ebx*4]\n",
maö_ú
);

4131 
	`emô
("mov [__ªg+%d],edx\n",(
maö_ªg
*4)+
maö_dr
);

4132 
	`emô
("mov [__ªg+%d+ebx*4],ecx\n",
maö_ú
);

4134 
	`ªt_timög
(6);

4135 
	}
}

4137 
	$i_cmpm
(){

4138 
	`u£ªg
();

4139 
	`ó_lﬂd
(
maö_size
,
aöc
,-1);

4140 
	`emô
("movÉax,ecx\n");

4141 
	`ó_lﬂd
(
maö_size
,
aöc
,
maö_ªg
);

4142 
	`emô
("cm∞%s,%s\n",
x86cx
[
maö_size
],
x86ax
[main_size]);

4143 
	`Êags
();

4145 if(
˝uty≥
==68010){

4146 if(
maö_size
<=2){

4147 
lo›_c_cy˛es
 = 2;

4148 
lo›_t_cy˛es
 = 8;

4149 
lo›_x_cy˛es
 = 6;

4151 
lo›_c_cy˛es
 = 4;

4152 
lo›_t_cy˛es
 = 10;

4153 
lo›_x_cy˛es
 = 6;

4156 
	`ªt_timög
((
maö_size
==4)?20:12);

4157 
	}
}

4159 
	$›x_dªg
(*
›
,*
adju°
){

4160 
cy˛es
;

4161 
	`u£ªg
();

4162 
	`emô
("mov ch,ah\n");

4163 
	`emô
("mov cl,[__xflag]\n");

4164 
	`emô
("shr cl,1\n");

4165 
	`emô
("movÉax,[__dªg+%d]\n",
maö_ªg
*4);

4166 
	`emô
("%†%s,[__dªg+ebx*4]\n",
›
,
x86ax
[
maö_size
]);

4167 if(
adju°
[0]){

4168 
	`emô
("%s\n",
adju°
);

4170 
	`emô
("mov [__dªg+%d],%s\n",
maö_ªg
*4,
x86ax
[
maö_size
]);

4171 
	`emô
("lahf\n");

4172 if(
adju°
[0]){

4173 
	`emô
("movál,0\n");

4175 
	`emô
("setoál\n");

4177 
	`c2x
();

4178 
	`adjzîo
("ch");

4179 if(
maö_size
<=2){

4180 
cy˛es
=4;

4181 if(
adju°
[0])
cy˛es
=6;

4183 
cy˛es
=8;

4184 if(
˝uty≥
==68010)
cy˛es
=6;

4187 
	`ªt_timög
(
cy˛es
);

4188 
	}
}

4190 
	$›x_adec
(*
›
,*
adju°
){

4191 
cy˛es
;

4192 
	`u£ªg
();

4193 
	`ó_lﬂd
(
maö_size
,
adec
,-1);

4194 
	`emô
("movÉbx,ecx\n");

4195 
	`ó_rmw_lﬂd
(
maö_size
,
adec
,
maö_ªg
);

4196 
	`emô
("xchgÉcx,eax\n");

4197 
	`emô
("mov cl,[__xflag]\n");

4198 
	`emô
("shr cl,1\n");

4199 
	`emô
("%†%s,%s\n",
›
,
x86ax
[
maö_size
],
x86bx
[main_size]);

4200 if(
adju°
[0]){

4201 
	`emô
("%s\n",
adju°
);

4203 
	`emô
("movÉbx,eax\n");

4204 
	`emô
("lahf\n");

4205 if(
adju°
[0]){

4206 
	`emô
("movál,0\n");

4208 
	`emô
("setoál\n");

4210 
	`c2x
();

4211 
	`adjzîo
("ch");

4212 
	`emô
("movÉcx,ebx\n");

4213 
	`emô
("xorÉbx,ebx\n");

4214 
	`ó_rmw_°‹e
(
maö_size
,
adec
,
maö_ªg
);

4215 if(
maö_size
<=2){

4216 
cy˛es
=18;

4218 
cy˛es
=30;

4221 if(
˝uty≥
==68010){

4222 if(
adju°
[0]){

4223 
lo›_c_cy˛es
 = 6;

4224 
lo›_t_cy˛es
 = 12;

4225 
lo›_x_cy˛es
 = 10;

4227 if(
maö_size
<=2){

4228 
lo›_c_cy˛es
 = 4;

4229 
lo›_t_cy˛es
 = 10;

4230 
lo›_x_cy˛es
 = 8;

4232 
lo›_c_cy˛es
 = 2;

4233 
lo›_t_cy˛es
 = 8;

4234 
lo›_x_cy˛es
 = 6;

4238 
	`ªt_timög
(
cy˛es
);

4239 
	}
}

4241 
	$i_addx_dªg
(){
	`›x_dªg
("adc","");
	}
}

4242 
	$i_addx_adec
(){
	`›x_adec
("adc","");
	}
}

4243 
	$i_subx_dªg
(){
	`›x_dªg
("sbb","");
	}
}

4244 
	$i_subx_adec
(){
	`›x_adec
("sbb","");
	}
}

4245 
	$i_abcd_dªg
(){
maö_size
=1;
	`›x_dªg
("adc","dØ");
	}
}

4246 
	$i_abcd_adec
(){
maö_size
=1;
	`›x_adec
("adc","dØ");
	}
}

4247 
	$i_sbcd_dªg
(){
maö_size
=1;
	`›x_dªg
("sbb","das");
	}
}

4248 
	$i_sbcd_adec
(){
maö_size
=1;
	`›x_adec
("sbb","das");
	}
}

4250 
	$i_movï_mem2ªg
(){

4251 
cy˛es
;

4252 
	`u£ªg
();

4253 
	`emô
("movsxÉdx,word[esi]\n");

4254 
	`emô
("addÉsi,byte 2\n");

4255 
	`emô
("addÉdx,[__areg+ebx*4]\n");

4256 
	`emô
("callÑeadmemorybyte\n");

4257 
	`emô
("mov bh,cl\n");

4258 
	`emô
("addÉdx,byte 2\n");

4259 
	`emô
("callÑeadmemorybyte\n");

4260 
	`emô
("mov bl,cl\n");

4261 if(
maö_size
==2){

4262 
	`emô
("mov [__dªg+%d],bx\n",
maö_ªg
*4);

4263 
cy˛es
=16;

4265 
	`emô
("addÉdx,byte 2\n");

4266 
	`emô
("shlÉbx,16\n");

4267 
	`emô
("callÑeadmemorybyte\n");

4268 
	`emô
("mov bh,cl\n");

4269 
	`emô
("addÉdx,byte 2\n");

4270 
	`emô
("callÑeadmemorybyte\n");

4271 
	`emô
("mov bl,cl\n");

4272 
	`emô
("mov [__dªg+%d],ebx\n",
maö_ªg
*4);

4273 
	`emô
("xorÉbx,ebx\n");

4274 
cy˛es
=24;

4277 
	`ªt_timög
(
cy˛es
);

4278 
	}
}

4280 
	$i_movï_ªg2mem
(){

4281 
cy˛es
;

4282 
	`u£ªg
();

4283 
	`emô
("movsxÉdx,word[esi]\n");

4284 
	`emô
("addÉsi,byte 2\n");

4285 
	`emô
("addÉdx,[__areg+ebx*4]\n");

4286 
	`emô
("movÉbx,[__dªg+%d]\n",
maö_ªg
*4);

4287 if(
maö_size
==4)
	`emô
("rolÉbx,16\n");

4288 
	`emô
("mov cl,bh\n");

4289 
	`emô
("call writememorybyte\n");

4290 
	`emô
("addÉdx,byte 2\n");

4291 
	`emô
("mov cl,bl\n");

4292 
	`emô
("call writememorybyte\n");

4293 if(
maö_size
==4){

4294 
	`emô
("addÉdx,byte 2\n");

4295 
	`emô
("rolÉbx,16\n");

4296 
	`emô
("mov cl,bh\n");

4297 
	`emô
("call writememorybyte\n");

4298 
	`emô
("addÉdx,byte 2\n");

4299 
	`emô
("mov cl,bl\n");

4300 
	`emô
("call writememorybyte\n");

4301 
cy˛es
=24;

4303 
cy˛es
=16;

4305 
	`emô
("xorÉbx,ebx\n");

4307 
	`ªt_timög
(
cy˛es
);

4308 
	}
}

4310 
	$i_chk
(){

4311 
cy˛es
;

4312 
mylöe
=
löíum
;linenum++;

4313 
	`£À˘ive_u£ªg
();

4314 
	`maö_ó_lﬂd
();

4315 
	`emô
("cmp %s[__dreg+%d],byte 0\n",

4316 
sizíame
[
maö_size
],
maö_ªg
*4

4318 
	`emô
("mováx,8000h\n");

4319 
	`emô
("j»sh‹à %d\n",
mylöe
);

4320 
	`emô
("cmp [__dreg+%d],%s\n",

4321 
maö_ªg
*4,
x86cx
[
maö_size
]

4323 
	`emô
("mováx,0\n");

4324 
	`emô
("jg sh‹à %d\n",
mylöe
);

4325 
cy˛es
=10;

4326 if(
˝uty≥
==68010)
cy˛es
=8;

4327 
	`ªt_timög
(
cy˛es
+
	`maö_ó_cy˛es
());

4329 
	`emô
(" %d:",
mylöe
);

4330 
	`emô
("movÉdx,18h\n");

4331 
	`emô
("call group_2_exception\n");

4332 
	`≥rf‹m_ˇched_ªba£
();

4333 
cy˛es
=40;

4334 if(
˝uty≥
==68010)
cy˛es
=44;

4336 
	`ªt_timög
(
cy˛es
+
	`maö_ó_cy˛es
());

4337 
	}
}

4339 
	g¸óãd_ûÀgÆ
=0;

4340 
	$i_ûÀgÆ
(){

4341 if(!
¸óãd_ûÀgÆ
){
	`emô
("r_illegal:\n");created_illegal=1;}

4342 
	`emô
("subÉsi,byte 2\n");

4343 
	`emô
("movÉdx,10h\n");

4344 
	`emô
("call group_1_exception\n");

4345 
	`≥rf‹m_ˇched_ªba£
();

4346 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

4347 
	}
}

4350 
	$i_bk±
(){

4351 
mylöe
=
löíum
;

4352 
löíum
++;

4353 
	`emô
("movÉcx,[__bkpthandler]\n");

4354 
	`emô
("orÉcx,ecx\n");

4355 
	`emô
("jzÜn%d\n",
mylöe
);

4356 
	`aúlock_exô
();

4357 
	`emô
("callÉcx\n");

4358 
	`aúlock_íãr
();

4359 
	`emô
(" %d:\n",
mylöe
);

4360 
	`emô
("movÉdx,10h\n");

4361 
	`emô
("call group_1_exception\n");

4362 
	`≥rf‹m_ˇched_ªba£
();

4363 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

4364 
	}
}

4366 
	$i_Æöe
(){

4367 
	`emô
("subÉsi,byte 2\n");

4368 
	`emô
("movÉdx,28h\n");

4369 
	`emô
("call group_1_exception\n");

4370 
	`≥rf‹m_ˇched_ªba£
();

4372 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

4373 
	}
}

4375 
	$i_Êöe
(){

4376 
	`emô
("subÉsi,byte 2\n");

4377 
	`emô
("movÉdx,2Ch\n");

4378 
	`emô
("call group_1_exception\n");

4379 
	`≥rf‹m_ˇched_ªba£
();

4381 
	`ªt_timög
((
˝uty≥
==68010)?38:34);

4382 
	}
}

4384 
	$i_ª£t
(){

4385 
	`¥ivûegecheck
();

4386 
	`emô
("movÉcx,[__resethandler]\n");

4387 
	`emô
("orÉcx,ecx\n");

4388 
	`emô
("jzÇear invalidins\n");

4389 
	`aúlock_exô
();

4390 
	`emô
("callÉcx\n");

4391 
	`aúlock_íãr
();

4392 
	`ªt_timög
((
˝uty≥
==68010)?130:132);

4393 
	}
}

4395 
	$i_movec_c_to_r
(){

4396 
mylöe
=
löíum
;linenum++;

4397 
	`¥ivûegecheck
();

4398 
	`emô
("mov bx,word[esi]\n");

4399 
	`emô
("movÉdx,ebx\n");

4400 
	`emô
("shrÉbx,12\n");

4402 
	`emô
("andÉdx,0FFFh\n");

4403 
	`emô
("jnz sh‹à %d\n",
löíum
);

4404 
	`emô
("mov cl,[__sfc]\n");

4405 
	`emô
("andÉcx,byte 7\n");

4406 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4407 
	`emô
(" %d:\n",
löíum
);linenum++;

4409 
	`emô
("cmpÉdx,byte 1\n");

4410 
	`emô
("jnz sh‹à %d\n",
löíum
);

4411 
	`emô
("mov cl,[__dfc]\n");

4412 
	`emô
("andÉcx,byte 7\n");

4413 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4414 
	`emô
(" %d:\n",
löíum
);linenum++;

4416 
	`emô
("cmpÉdx,0800h\n");

4417 
	`emô
("jnz sh‹à %d\n",
löíum
);

4418 
	`emô
("movÉcx,[__asp]\n");

4419 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4420 
	`emô
(" %d:\n",
löíum
);linenum++;

4422 
	`emô
("cmpÉdx,0801h\n");

4423 
	`emô
("jnz sh‹à %d\n",
löíum
);

4424 
	`emô
("movÉcx,[__vbr]\n");

4425 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4426 
	`emô
(" %d:\n",
löíum
);linenum++;

4428 
	`emô
("jmpÑ_illegal\n");

4430 
	`emô
(" %d:\n",
mylöe
);

4431 
	`emô
("addÉsi,byte 2\n");

4432 
	`emô
("mov dword[__reg+ebx*4],ecx\n");

4433 
	`ªt_timög
(12);

4434 
	}
}

4436 
	$i_movec_r_to_c
(){

4437 
mylöe
=
löíum
;linenum++;

4438 
	`¥ivûegecheck
();

4439 
	`emô
("mov bx,word[esi]\n");

4440 
	`emô
("movÉdx,ebx\n");

4441 
	`emô
("shrÉbx,12\n");

4442 
	`emô
("movÉcx,dword[__reg+ebx*4]\n");

4444 
	`emô
("andÉdx,0FFFh\n");

4445 
	`emô
("jnz sh‹à %d\n",
löíum
);

4446 
	`emô
("and cl,7\n");

4447 
	`emô
("mov [__sfc],cl\n");

4448 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4449 
	`emô
(" %d:\n",
löíum
);linenum++;

4451 
	`emô
("cmpÉdx,byte 1\n");

4452 
	`emô
("jnz sh‹à %d\n",
löíum
);

4453 
	`emô
("and cl,7\n");

4454 
	`emô
("mov [__dfc],cl\n");

4455 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4456 
	`emô
(" %d:\n",
löíum
);linenum++;

4458 
	`emô
("cmpÉdx,0800h\n");

4459 
	`emô
("jnz sh‹à %d\n",
löíum
);

4460 
	`emô
("mov [__asp],ecx\n");

4461 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4462 
	`emô
(" %d:\n",
löíum
);linenum++;

4464 
	`emô
("cmpÉdx,0801h\n");

4465 
	`emô
("jnz sh‹à %d\n",
löíum
);

4466 
	`emô
("mov [__vbr],ecx\n");

4467 
	`emô
("jm∞sh‹à %d\n",
mylöe
);

4468 
	`emô
(" %d:\n",
löíum
);linenum++;

4470 
	`emô
("jmpÑ_illegal\n");

4472 
	`emô
(" %d:\n",
mylöe
);

4473 
	`emô
("addÉsi,byte 2\n");

4474 
	`ªt_timög
(10);

4475 
	}
}

4479 
	$i_moves
(){

4480 
cy˛es
;

4481 
unôsize
 = 
maö_size
 == 4 ? 2 : main_size;

4482 
mylöe
=
löíum
;

4483 
löíum
++;

4484 
	`£À˘ive_u£ªg
();

4485 
	`emô
("pushÉsi\n");

4486 
	`emô
("movzxÉcx,word[esi]\n");

4487 
	`emô
("addÉsi,byte 2\n");

4488 
	`ó_°ï_¥eˇlc
(
maö_size
,
maö_ómode
,-1);

4489 
	`emô
("shrÉcx,12\n");

4490 
	`emô
("j¯sh‹à %d_wrôe\n",
mylöe
);

4492 
	`emô
("cmp byte[__sfc],1\n");

4493 
	`emô
("jeÜn%d_read_userdata\n");

4494 
	`emô
("cmp byte[__sfc],2\n");

4495 
	`emô
("jeÜn%d_read_userprogram\n");

4496 
	`emô
("cmp byte[__sfc],5\n");

4497 
	`emô
("jeÜn%d_read_superdata\n");

4498 
	`emô
("cmp byte[__sfc],6\n");

4499 
	`emô
("jeÜn%d_read_superprogram\n");

4504 
	`emô
("cm∞dw‹d[__fc_ªad%s],byã 0\n",
sizíame
[
unôsize
]);

4505 
	`emô
("jêsh‹à %d_öv\n",
mylöe
);

4506 
	`emô
("pushÉcx\n");

4507 
	`emô
("pushÉdx\n");

4508 
	`aúlock_exô
();

4509 
	`emô
("movál,[__sfc]\n");

4510 
	`emô
("andÉax,byte 7\n");

4511 if(
u£_°ack
) {

4512 
	`emô
("pushÉdx\n");

4513 
	`emô
("pushÉax\n");

4515 
	`emô
("call dword[__fc_read%s]\n");

4516 if(
u£_°ack
) {

4517 
	`emô
("addÉsp,byte 8\n");

4519 
	`emô
("movÉcx,[e•+%d]\n",
aúlock_°acksize
+4);

4520 
maö_size
) {

4521 1:
	`emô
("mov [__reg+ecx*4],al\n");;

4522 2:
	`emô
("mov [__reg+ecx*4],ax\n");;

4523 4:
	`emô
("mov [__reg+ecx*4+2],ax\n");

4524 
	`emô
("movÉdx,[e•+%d]\n",
aúlock_°acksize
);

4525 
	`emô
("addÉdx,byte 2\n");

4526 
	`emô
("movál,[__sfc]\n");

4527 
	`emô
("andÉax,byte 7\n");

4528 if(
u£_°ack
) {

4529 
	`emô
("pushÉdx\n");

4530 
	`emô
("pushÉax\n");

4532 
	`emô
("call dword[__fc_read%s]\n");

4533 if(
u£_°ack
) {

4534 
	`emô
("addÉsp,byte 8\n");

4536 
	`emô
("movÉcx,[e•+%d]\n",
aúlock_°acksize
+4);

4537 
	`emô
("mov [__reg+ecx*4],ax\n");

4540 
	`aúlock_íãr
();

4541 
	`emô
("popÉdx\n");

4542 
	`emô
("popÉcx\n");

4543 
	`ó_°ï_po°ˇlc
(
maö_size
,
maö_ómode
,-1);

4544 
	`emô
("jmpÜn%d_end\n");

4546 
	`ªt_timög
(
cy˛es
);

4547 
	}
}

4554 
	gΩroc
 [0x10000];

4555 
byã
 
	gunique
[0x10000];

4556 
	g˚a£_decode
;

4558 
	$ã°
(
n
, 
m
, 
›
) {

4559 
t
;

4560 if((
n
 & 
m
Ë!
›
)  0;

4561 
t
 = 
›
 & 0xF000;Å < 
n
;Å++) {

4562 if((!
unique
[
t
]Ë&& (— & 
m
Ë=(
n
 & m))) {

4563 
Ωroc
[
n
] = 
t
;

4567 
unique
[
n
] = (
m
 >> 16) & 1;

4568 
Ωroc
[
n
] =Ç;

4569 
t
 = (
m
 ^ 0xFFFF) & 0xFFF;

4570 if(!
t
) {

4571 
	`emô
("; Opcodê%04X\n", 
n
);

4573 
	`emô
("; Opcode†%04X - %04X\n", 
n
, 
›
 + 
t
);

4576 
	`emô
("%c%03X:\n", ((
n
 >> 12) & 0xF) + 'K',Ç & 0xFFF);

4577 
routöe_cou¡î
++;

4579 
	}
}

4582 
	$idef
(

4583 
n
, 
mask
, 
›
, (*
¥oc
)()

4585 if(
˚a£_decode
) ;

4586 
˚a£_decode
 = 
	`ã°
(
n
, 
mask
, 
›
);

4587 if(
˚a£_decode
 == 1) {

4588 if(
˝uty≥
 == 68010) {

4589 
lo›_c_cy˛es
 = 10;

4590 
lo›_t_cy˛es
 = 10;

4591 
lo›_x_cy˛es
 = 16;

4593 
	`¥oc
();

4594 if(
˝uty≥
 == 68010) {

4595 if(
lo›_c_cy˛es
 > 14) {

4596 
	`Ârötf
(
°dîr
,

4599 
n
, 
lo›_c_cy˛es


4601 
	`exô
(1);

4603 if(
lo›_t_cy˛es
 > 14) {

4604 
	`Ârötf
(
°dîr
,

4607 
n
, 
lo›_t_cy˛es


4609 
	`exô
(1);

4611 if(
lo›_x_cy˛es
 > (
lo›_c_cy˛es
 + 6)) {

4612 
	`Ârötf
(
°dîr
,

4616 
n
, 
lo›_c_cy˛es
, 
lo›_x_cy˛es


4618 
	`exô
(1);

4620 
lo›_x_cy˛es
 -
lo›_c_cy˛es
;

4621 
lo›öfo
[
n
] =

4622 (((
lo›_c_cy˛es
 ) & 0x0E) |

4623 ((
lo›_t_cy˛es
 << 3) & 0x70)) |

4624 (((
lo›_x_cy˛es
 << 6) & 0x80) |

4625 ((
lo›_x_cy˛es
 >> 2) & 0x01));

4628 
	}
}

4631 
	$ódef_Æl
(

4632 
n
, 
m
, 
›
, (*
¥oc
)()

4634 if(
˚a£_decode
) ;

4635 
maö_ómode
 = 
dªg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x00, 
¥oc
);

4636 
maö_ómode
 = 
¨eg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x08, 
¥oc
);

4637 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4638 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4639 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4640 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4641 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4642 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4643 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4644 
maö_ómode
 = 
pcdp
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3A, 
¥oc
);

4645 
maö_ómode
 = 
pcxd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3B, 
¥oc
);

4646 
maö_ómode
 = 
immd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3C, 
¥oc
);

4647 
	}
}

4651 
	$ódef_Æl_nobyãaddªss
(

4652 
n
, 
m
, 
›
, (*
¥oc
)()

4654 if(
˚a£_decode
) ;

4655 
maö_ómode
 = 
dªg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x00, 
¥oc
);

4656 if(
maö_size
 != 1) {

4657 
maö_ómode
 = 
¨eg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x08, 
¥oc
);

4659 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4660 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4661 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4662 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4663 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4664 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4665 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4666 
maö_ómode
 = 
pcdp
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3A, 
¥oc
);

4667 
maö_ómode
 = 
pcxd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3B, 
¥oc
);

4668 
maö_ómode
 = 
immd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3C, 
¥oc
);

4669 
	}
}

4672 
	$ódef_d©a
(

4673 
n
, 
m
, 
›
, (*
¥oc
)()

4675 if(
˚a£_decode
) ;

4676 
maö_ómode
 = 
dªg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x00, 
¥oc
);

4677 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4678 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4679 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4680 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4681 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4682 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4683 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4684 
maö_ómode
 = 
pcdp
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3A, 
¥oc
);

4685 
maö_ómode
 = 
pcxd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3B, 
¥oc
);

4686 
maö_ómode
 = 
immd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3C, 
¥oc
);

4687 
	}
}

4691 
	$ódef_ÆãøbÀ_nobyãaddªss
(

4692 
n
, 
m
, 
›
, (*
¥oc
)()

4694 if(
˚a£_decode
) ;

4695 
maö_ómode
 = 
dªg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x00, 
¥oc
);

4696 if(
maö_size
 != 1) {

4697 
maö_ómode
 = 
¨eg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x08, 
¥oc
);

4699 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4700 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4701 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4702 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4703 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4704 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4705 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4706 
	}
}

4709 
	$ódef_d©a_ÆãøbÀ
(

4710 
n
, 
m
, 
›
, (*
¥oc
)()

4712 if(
˚a£_decode
) ;

4713 
maö_ómode
 = 
dªg
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x00, 
¥oc
);

4714 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4715 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4716 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4717 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4718 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4719 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4720 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4721 
	}
}

4724 
	$ódef_mem‹y_ÆãøbÀ
(

4725 
n
, 
m
, 
›
, (*
¥oc
)()

4727 if(
˚a£_decode
) ;

4728 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4729 
maö_ómode
 = 
aöc
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x18, 
¥oc
);

4730 
maö_ómode
 = 
adec
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x20, 
¥oc
);

4731 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4732 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4733 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4734 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4735 
	}
}

4738 
	$ódef_c⁄åﬁ
(

4739 
n
, 
m
, 
›
, (*
¥oc
)()

4741 if(
˚a£_decode
) ;

4742 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4743 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4744 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4745 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4746 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4747 
maö_ómode
 = 
pcdp
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3A, 
¥oc
);

4748 
maö_ómode
 = 
pcxd
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x3B, 
¥oc
);

4749 
	}
}

4752 
	$ódef_c⁄åﬁ_ÆãøbÀ
(

4753 
n
, 
m
, 
›
, (*
¥oc
)()

4755 if(
˚a£_decode
) ;

4756 
maö_ómode
 = 
aöd
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x10, 
¥oc
);

4757 
maö_ómode
 = 
ad•
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x28, 
¥oc
);

4758 
maö_ómode
 = 
axdp
; 
	`idef
(
n
, 
m
 | 0x38, 
›
 | 0x30, 
¥oc
);

4759 
maö_ómode
 = 
absw
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x38, 
¥oc
);

4760 
maö_ómode
 = 
ab¶
; 
	`idef
(
n
, 
m
 | 0x3F, 
›
 | 0x39, 
¥oc
);

4761 
	}
}

4764 
	$defmove
(
maj‹›
, 
n
) {

4765 if(
˚a£_decode
) ;

4766 
maö_ªg
 = 0; main_reg < 8; main_reg++) {

4767 
w‹d
 
w
 = 
maj‹›
 | (
maö_ªg
 << 9);

4768 
maö_de°mode
 = 
dªg
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x000 | 
w
, 
i_move
);

4769 
maö_de°mode
 = 
aöd
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x080 | 
w
, 
i_move
);

4770 
maö_de°mode
 = 
aöc
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x0C0 | 
w
, 
i_move
);

4771 
maö_de°mode
 = 
adec
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x100 | 
w
, 
i_move
);

4772 
maö_de°mode
 = 
ad•
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x140 | 
w
, 
i_move
);

4773 
maö_de°mode
 = 
axdp
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x180 | 
w
, 
i_move
);

4775 
maö_de°mode
 = 
absw
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x1C0 | 
maj‹›
, 
i_move
);

4776 
maö_de°mode
 = 
ab¶
; 
	`ódef_Æl
(
n
, 0xFFC0, 0x3C0 | 
maj‹›
, 
i_move
);

4777 
	}
}

4781 
	$decode0
(
n
) {

4782 
˚a£_decode
 = 0;

4783 
sizedef
 = 0; sizedef < 3; sizedef++) {

4784 
maö_size
 = 1 << 
sizedef
;

4785 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0000 | (
sizedef
 << 6), 
i_‹i
);

4786 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0200 | (
sizedef
 << 6), 
i_™di
);

4787 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0400 | (
sizedef
 << 6), 
i_subi
);

4788 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0600 | (
sizedef
 << 6), 
i_addi
);

4789 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0A00 | (
sizedef
 << 6), 
i_e‹i
);

4790 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x0C00 | (
sizedef
 << 6), 
i_cmpi
);

4801 
maö_cc
 = 0; main_cc < 4; main_cc++) {

4802 (*
ódef
)(
n
, 
m
, 
›
, (*
¥oc
)()) =

4803 
maö_cc
 ? 
ódef_d©a_ÆãøbÀ
 : 
ódef_d©a
;

4804 
	`ódef
(
n
, 0xFFC0, 0x0800 | (
maö_cc
 << 6), 
i_bô›_imm
);

4805 
maö_ªg
 = 0; main_reg < 8; main_reg++) {

4806 
	`ódef
(
n
, 0xFFC0,

4807 0x0100 | (
maö_cc
 << 6Ë| (
maö_ªg
 << 9),

4808 
i_bô›_ªg


4812 
	`idef
(
n
, 0xFFFF, 0x003C, 
i_‹i_c¸
 );

4813 
	`idef
(
n
, 0xFFFF, 0x023C, 
i_™di_c¸
);

4814 
	`idef
(
n
, 0xFFFF, 0x0A3C, 
i_e‹i_c¸
);

4815 
	`idef
(
n
, 0xFFFF, 0x007C, 
i_‹i_§
 );

4816 
	`idef
(
n
, 0xFFFF, 0x027C, 
i_™di_§
 );

4817 
	`idef
(
n
, 0xFFFF, 0x0A7C, 
i_e‹i_§
 );

4818 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
maö_size
=2;main_size<=4;main_size+=2){

4819 
	`idef
(
n
,0xFFF8,0x0108|((
maö_size
&4)<<4)|(
maö_ªg
<<9),
i_movï_mem2ªg
);

4820 
	`idef
(
n
,0xFFF8,0x0188|((
maö_size
&4)<<4)|(
maö_ªg
<<9),
i_movï_ªg2mem
);

4822 
	}
}

4824 
	$decode1
(
n
) {

4825 
˚a£_decode
 = 0;

4826 
maö_size
 = 1;

4827 
	`defmove
(0x1000, 
n
);

4828 
	}
}

4830 
	$decode2
(
n
) {

4831 
˚a£_decode
 = 0;

4832 
maö_size
 = 4;

4833 
	`defmove
(0x2000, 
n
);

4834 
maö_ªg
 = 0; main_reg < 8; main_reg++) {

4835 
	`ódef_Æl
(
n
, 0xFFC0, 0x2040 | (
maö_ªg
 << 9), 
i_movó
);

4837 
	}
}

4839 
	$decode3
(
n
) {

4840 
˚a£_decode
 = 0;

4841 
maö_size
 = 2;

4842 
	`defmove
(0x3000, 
n
);

4843 
maö_ªg
 = 0; main_reg < 8; main_reg++) {

4844 
	`ódef_Æl
(
n
, 0xFFC0, 0x3040 | (
maö_ªg
 << 9), 
i_movó
);

4846 
	}
}

4848 
	$decode4
(
n
) {

4849 
˚a£_decode
 = 0;

4850 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x40C0, 
i_move_‰om_§
);

4851 if(
˝uty≥
 >= 68010) {

4852 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x42C0, 
i_move_‰om_c¸
);

4854 
	`ódef_d©a
(
n
, 0xFFC0, 0x44C0, 
i_move_to_c¸
);

4855 
	`ódef_d©a
(
n
, 0xFFC0, 0x46C0, 
i_move_to_§
 );

4856 
	`ódef_c⁄åﬁ
(
n
, 0xFFC0, 0x4EC0, 
i_jmp
);

4857 
	`ódef_c⁄åﬁ
(
n
, 0xFFC0, 0x4E80, 
i_j§
);

4858 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_c⁄åﬁ
(
n
,0xFFC0,0x41C0|(maö_ªg<<9),
i_Àa
);

4859 
maö_size
=2;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_d©a
(
n
,0xFFC0,0x4100|(maö_ªg<<9),
i_chk
);

4860 
	`ódef_c⁄åﬁ
(
n
,0xFFC0,0x4840,
i_≥a
);

4861 
sizedef
 = 0; sizedef < 3; sizedef++) {

4862 
maö_size
 = 1 << 
sizedef
;

4863 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4200 | (
sizedef
 << 6), 
i_˛r
);

4864 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4A00 | (
sizedef
 << 6), 
i_t°
);

4866 
	`idef
(
n
, 0xFFFF, 0x4E70, 
i_ª£t
);

4867 
	`idef
(
n
, 0xFFFF, 0x4E71, 
i_n›
);

4868 
	`idef
(
n
, 0xFFFF, 0x4E72, 
i_°›
);

4869 
	`idef
(
n
, 0xFFFF, 0x4E73, 
i_πe
);

4870 
	`idef
(
n
, 0xFFFF, 0x4E75, 
i_πs
);

4871 
	`idef
(
n
, 0xFFFF, 0x4E76, 
i_å≠v
);

4872 
	`idef
(
n
, 0xFFFF, 0x4E77, 
i_πr
);

4873 if(
˝uty≥
 >= 68010) {

4874 
	`idef
(
n
, 0xFFFF, 0x4E74, 
i_πd
);

4875 
	`idef
(
n
, 0xFFFF, 0x4E7A, 
i_movec_c_to_r
);

4876 
	`idef
(
n
, 0xFFFF, 0x4E7B, 
i_movec_r_to_c
);

4878 
maö_dr
=0;
sizedef
=0;sizedef<2;sizedef++){
maö_size
=1<<(sizedef+1);
	`ódef_c⁄åﬁ_ÆãøbÀ
(
n
,0xFFC0,0x4880|(maö_dr<<10)|(sizedef<<6),
i_movem_c⁄åﬁ
);}

4879 
maö_dr
=1;
sizedef
=0;sizedef<2;sizedef++){
maö_size
=1<<(sizedef+1);
	`ódef_c⁄åﬁ
 (
n
,0xFFC0,0x4880|(maö_dr<<10)|(sizedef<<6),
i_movem_c⁄åﬁ
);}

4880 
sizedef
 = 0; sizedef < 2; sizedef++) {

4881 
maö_size
 = 1 << (
sizedef
 + 1);

4882 
	`idef
(
n
, 0xFFF8, 0x4C98 | (
sizedef
 << 6), 
i_movem_po°öc
);

4883 
	`idef
(
n
, 0xFFF8, 0x48A0 | (
sizedef
 << 6), 
i_movem_¥edec
 );

4885 
	`idef
(
n
, 0xFFF8, 0x4E50, 
i_lök
);

4886 
	`idef
(
n
, 0xFFF8, 0x4E58, 
i_u∆k
);

4887 
	`idef
(
n
, 0xFFF0, 0x4E40, 
i_å≠
);

4888 
	`idef
(
n
, 0xFFF8, 0x4E60, 
i_move_to_u•
);

4889 
	`idef
(
n
, 0xFFF8, 0x4E68, 
i_move_‰om_u•
);

4890 
	`idef
(
n
, 0xFFF8, 0x4840, 
i_sw≠
);

4891 
	`idef
(
n
, 0xFFF8, 0x4880, 
i_extbw
);

4892 
	`idef
(
n
, 0xFFF8, 0x48C0, 
i_extwl
);

4893 
sizedef
 = 0; sizedef < 3; sizedef++) {

4894 
maö_size
 = 1 << 
sizedef
;

4895 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4000 | (
sizedef
 << 6),

4896 
i_√gx
);

4897 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4400 | (
sizedef
 << 6),

4898 
i_√g
);

4899 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4600 | (
sizedef
 << 6),

4900 
i_nŸ
);

4902 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4800, 
i_nbcd
);

4903 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x4AC0, 
i_ès
);

4904 if(
˝uty≥
 =68010Ë
	`idef
(
n
, 0xFFF8, 0x4848, 
i_bk±
);

4905 
	`idef
(
n
, 0xFFFF, 0x4AFA, 
i_ûÀgÆ
);

4906 
	`idef
(
n
, 0xFFFF, 0x4AFB, 
i_ûÀgÆ
);

4907 
	`idef
(
n
, 0xFFFF, 0x4AFC, 
i_ûÀgÆ
);

4908 
	}
}

4910 
	$decode5
(
n
) {

4911 
˚a£_decode
 = 0;

4912 
sizedef
 = 0; sizedef < 3; sizedef++) {

4913 
maö_size
 = 1 << 
sizedef
;

4914 
maö_qv
 = 0; main_qv < 8; main_qv++) {

4915 
w‹d
 
w
 = (
sizedef
 << 6Ë| (
maö_qv
 << 9);

4916 
	`ódef_ÆãøbÀ_nobyãaddªss
(
n
, 0xFFC0, 0x5000 | 
w
,

4917 
i_addq
);

4918 
	`ódef_ÆãøbÀ_nobyãaddªss
(
n
, 0xFFC0, 0x5100 | 
w
,

4919 
i_subq
);

4922 
maö_cc
 = 0x2; main_cc <= 0xF; main_cc++) {

4923 
	`idef
(
n
, 0xFFF8, 0x50C8 | (
maö_cc
 << 8), 
i_dbcc
);

4925 
	`idef
(
n
, 0xFFF8, 0x51C8, 
i_dbø
);

4926 
maö_size
 = 1;

4927 
maö_cc
 = 0x0; main_cc <= 0xF; main_cc++) {

4928 
	`ódef_d©a_ÆãøbÀ
(
n
, 0xFFC0, 0x50C0 | (
maö_cc
 << 8),

4929 
i_scc
);

4931 
	}
}

4933 
	$decode6
(
n
){

4934 
˚a£_decode
=0;

4935 
	`idef
(
n
,0x1FFFF,0x6000,
i_bø_w
);

4936 
	`idef
(
n
,0x1FFFF,0x6100,
i_b§_w
);

4937 
maö_cc
=0x2;main_cc<=0xF;main_cc++){

4938 
	`idef
(
n
,0x1FFFF,0x6000|(
maö_cc
<<8),
i_bcc_w
);

4940 
	`idef
(
n
,0x0FF00,0x6000,
i_bø_b
);

4941 
	`idef
(
n
,0x0FF00,0x6100,
i_b§_b
);

4942 
maö_cc
=0x2;main_cc<=0xF;main_cc++){

4943 
	`idef
(
n
,0x0FF00,0x6000|(
maö_cc
<<8),
i_bcc_b
);

4945 
	}
}

4947 
	$decode7
(
n
){

4948 
˚a£_decode
=0;

4949 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFF00,0x7000|(maö_ªg<<9),
i_moveq
);

4950 
	}
}

4952 
	$decode8
(
n
){

4953 
˚a£_decode
=0;

4954 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_d©a
 (
n
,0xFFC0,0x8000|(maö_ªg<<9)|(sizedef<<6),
i_‹_dn
 );}}

4955 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_mem‹y_ÆãøbÀ
 (
n
,0xFFC0,0x8100|(maö_ªg<<9)|(sizedef<<6),
i_‹_ó
 );}}

4956 
maö_cc
=0;maö_cc<2;maö_cc++)
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_d©a
(
n
,0xFFC0,0x80C0|(maö_ªg<<9)|(maö_cc<<8),
i_div
);

4957 
maö_size
=1;

4958 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0x8100|(maö_ªg<<9),
i_sbcd_dªg
);

4959 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0x8108|(maö_ªg<<9),
i_sbcd_adec
);

4960 
	}
}

4962 
	$decode9
(
n
){

4963 
˚a£_decode
=0;

4964 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_Æl_nobyãaddªss
(
n
,0xFFC0,0x9000|(maö_ªg<<9)|(sizedef<<6),
i_sub_dn
);}}

4965 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_mem‹y_ÆãøbÀ
 (
n
,0xFFC0,0x9100|(maö_ªg<<9)|(sizedef<<6),
i_sub_ó
);}}

4966 
maö_size
=2;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0x90C0|(maö_ªg<<9),
i_suba
);

4967 
maö_size
=4;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0x91C0|(maö_ªg<<9),
i_suba
);

4968 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0x9100|(maö_ªg<<9)|(sizedef<<6),
i_subx_dªg
);}

4969 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0x9108|(maö_ªg<<9)|(sizedef<<6),
i_subx_adec
);}

4970 
	}
}

4972 
	$decodeA
(
n
){

4973 
˚a£_decode
=0;

4974 
	`idef
(
n
,0xF000,0xA000,
i_Æöe
);

4975 
	}
}

4977 
	$decodeB
(
n
){

4978 
˚a£_decode
=0;

4979 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_Æl_nobyãaddªss
(
n
,0xFFC0,0xB000|(maö_ªg<<9)|(sizedef<<6),
i_cmp_dn
);}}

4980 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_d©a_ÆãøbÀ
 (
n
,0xFFC0,0xB100|(maö_ªg<<9)|(sizedef<<6),
i_e‹_ó
);}}

4981 
maö_size
=2;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0xB0C0|(maö_ªg<<9),
i_cm∑
);

4982 
maö_size
=4;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0xB1C0|(maö_ªg<<9),
i_cm∑
);

4983 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xB108|(sizedef<<6)|(maö_ªg<<9),
i_cmpm
);}

4984 
	}
}

4986 
	$decodeC
(
n
){

4987 
˚a£_decode
=0;

4988 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_d©a
 (
n
,0xFFC0,0xC000|(maö_ªg<<9)|(sizedef<<6),
i_™d_dn
);}}

4989 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_mem‹y_ÆãøbÀ
 (
n
,0xFFC0,0xC100|(maö_ªg<<9)|(sizedef<<6),
i_™d_ó
);}}

4990 
maö_cc
=0;maö_cc<2;maö_cc++)
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_d©a
(
n
,0xFFC0,0xC0C0|(maö_ªg<<9)|(maö_cc<<8),
i_mul
);

4991 
maö_dr
=0 ;
maö_ú
=0 ;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xC140|(maö_ªg<<9),
i_exg
);

4992 
maö_dr
=32;
maö_ú
=32;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xC148|(maö_ªg<<9),
i_exg
);

4993 
maö_dr
=0 ;
maö_ú
=32;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xC188|(maö_ªg<<9),
i_exg
);

4994 
maö_size
=1;

4995 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xC100|(maö_ªg<<9),
i_abcd_dªg
);

4996 
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xC108|(maö_ªg<<9),
i_abcd_adec
);

4997 
	}
}

4999 
	$decodeD
(
n
){

5000 
˚a£_decode
=0;

5001 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_Æl_nobyãaddªss
(
n
,0xFFC0,0xD000|(maö_ªg<<9)|(sizedef<<6),
i_add_dn
);}}

5002 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++){
	`ódef_mem‹y_ÆãøbÀ
 (
n
,0xFFC0,0xD100|(maö_ªg<<9)|(sizedef<<6),
i_add_ó
);}}

5003 
maö_size
=2;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0xD0C0|(maö_ªg<<9),
i_adda
);

5004 
maö_size
=4;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`ódef_Æl
(
n
,0xFFC0,0xD1C0|(maö_ªg<<9),
i_adda
);

5005 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xD100|(maö_ªg<<9)|(sizedef<<6),
i_addx_dªg
);}

5006 
sizedef
=0;sizedef<3;sizedef++){
maö_size
=1<<sizedef;
maö_ªg
=0;maö_ªg<8;maö_ªg++)
	`idef
(
n
,0xFFF8,0xD108|(maö_ªg<<9)|(sizedef<<6),
i_addx_adec
);}

5007 
	}
}

5009 
	$decodeE
(
n
){

5010 
˚a£_decode
=0;

5011 
maö_ªg
=0;main_reg<8;main_reg++)

5012 
maö_dr
=0;main_dr<2;main_dr++)

5013 
maö_ú
=0;main_ir<2;main_ir++)

5014 
sizedef
=0;sizedef<3;sizedef++){

5015 
maö_size
=1<<
sizedef
;

5016 
	`idef
(
n
,0xFFF8,0xE000|(
maö_ªg
<<9)|(
maö_dr
<<8)|(
sizedef
<<6)|(
maö_ú
<<5),
i_asx_ªg
);

5017 
	`idef
(
n
,0xFFF8,0xE008|(
maö_ªg
<<9)|(
maö_dr
<<8)|(
sizedef
<<6)|(
maö_ú
<<5),
i_lsx_ªg
);

5018 
	`idef
(
n
,0xFFF8,0xE010|(
maö_ªg
<<9)|(
maö_dr
<<8)|(
sizedef
<<6)|(
maö_ú
<<5),
i_rxx_ªg
);

5019 
	`idef
(
n
,0xFFF8,0xE018|(
maö_ªg
<<9)|(
maö_dr
<<8)|(
sizedef
<<6)|(
maö_ú
<<5),
i_rox_ªg
);

5021 
maö_dr
=0;main_dr<2;main_dr++){

5022 
	`ódef_mem‹y_ÆãøbÀ
(
n
,0xFFC0,0xE0C0|(
maö_dr
<<8),
i_asx_mem
);

5023 
	`ódef_mem‹y_ÆãøbÀ
(
n
,0xFFC0,0xE2C0|(
maö_dr
<<8),
i_lsx_mem
);

5024 
	`ódef_mem‹y_ÆãøbÀ
(
n
,0xFFC0,0xE4C0|(
maö_dr
<<8),
i_rxx_mem
);

5025 
	`ódef_mem‹y_ÆãøbÀ
(
n
,0xFFC0,0xE6C0|(
maö_dr
<<8),
i_rox_mem
);

5027 
	}
}

5029 
	$decodeF
(
n
) {

5030 
˚a£_decode
 = 0;

5031 
	`idef
(
n
, 0xF000, 0xF000, 
i_Êöe
);

5032 
	}
}

5034 (*(
	gdecodëabÀ
[16]))(
	gn
) =

5035 {
decode0
, 
decode1
, 
decode2
, 
decode3
, 
decode4
, 
decode5
, 
decode6
, 
decode7
,

5036 
decode8
, 
decode9
, 
decodeA
, 
decodeB
, 
decodeC
, 
decodeD
, 
decodeE
, 
decodeF
};

5041 
	$èbÀíåy
(
œ°
, 
æ
) {

5042 if(
œ°
 == -1){

5043 
	`emô
("ddÑ_illegal-top");

5045 
	`emô
("dd %c%03X-top",

5046 ((
œ°
 >> 12) & 0xF) + 'K',Üast & 0xFFF

5049 if(
æ
 > 1Ë
	`emô
("+%u", ((
dw‹d
)(rl - 1)) << 24);

5050 
	`emô
("\n");

5051 if(
˝uty≥
 =68010Ë
	`emô
("db %d\n", 
lo›öfo
[
œ°
]);

5052 
	}
}

5055 *
	$gë∑ømëî
(*
ù
, 
¨gc
, **
¨gv
) {

5056 
i
;

5057 (*
ù
)++;

5058 
i
 = (*
ù
);

5059 if(
i
 >
¨gc
) {

5060 
	`Ârötf
(
°dîr
, "InvÆid u£ o‡%†›ti⁄\n", 
¨gv
[
i
 - 1]);

5061  
NULL
;

5063  
¨gv
[
i
];

5064 
	}
}

5066 
	$maö
(
¨gc
, **
¨gv
) {

5067 
i
, 
j
, 
œ°
, 
æ
, 
b™k
;

5068 *
codefûíame
 = 
NULL
;

5069 
deÁu…_sour˚«me
[10];

5071 
	`Ârötf
(
°dîr
, "STARSCREAM vîsi⁄ " 
VERSION
 "\n");

5074 
i
 = 1; i < 
¨gc
; i++) {

5075 *
a
 = 
¨gv
[
i
];

5076 if(*
a
 == '-') {

5077 
a
++;

5078 if(!
	`°rcmp
("ªgˇŒ" , 
a
)Ë{ 
u£_°ack
 = 0;

5079 } if(!
	`°rcmp
("°ackˇŒ" , 
a
)Ë{ 
u£_°ack
 = 1;

5080 } if(!
	`°rcmp
("nohog" , 
a
)Ë{ 
hog
 = 0;

5081 } if(!
	`°rcmp
("hog" , 
a
)Ë{ 
hog
 = 1;

5082 } if(!
	`°rcmp
("addªssbôs", 
a
)) {

5083 
n
;

5084 *
s
 = 
	`gë∑ømëî
(&
i
, 
¨gc
, 
¨gv
);

5085 if(!
s
)  1;

5086 
n
 = 
	`©ﬁ
(
s
);

5087 if(
n
 < 1 ||Ç > 32) {

5088 
	`Ârötf
(
°dîr
,

5090 "bôs: \"%s\"\n", 
¨gv
[
i
]

5094 
addªssbôs
 = 
n
;

5095 } if(!
	`°rcmp
("˝uty≥" , 
a
)) {

5096 
n
;

5097 *
s
 = 
	`gë∑ømëî
(&
i
, 
¨gc
, 
¨gv
);

5098 if(!
s
)  1;

5099 
n
 = 
	`©ﬁ
(
s
);

5100 
n
) {

5104 
˝uty≥
 = 
n
;

5107 
	`Ârötf
(
°dîr
,

5109 
¨gv
[
i
]

5113 } if(!
	`°rcmp
("«me" , 
a
)) {

5114 
sour˚«me
 = 
	`gë∑ømëî
(&
i
, 
¨gc
, 
¨gv
);

5115 if(!
sour˚«me
)  1;

5117 
	`Ârötf
(
°dîr
,

5119 
¨gv
[
i
]

5124 if(
codefûíame
) {

5125 
	`Ârötf
(
°dîr
,

5128 
¨gv
[
i
]

5132 
codefûíame
 = 
¨gv
[
i
];

5136 if(!
codefûíame
) {

5137 
	`Ârötf
(
°dîr
, "ußge: %†ouçutfûê[›ti⁄s]\n", 
¨gv
[0]);

5138 
	`Ârötf
(
°dîr
, "see STARDOC.TXT for details\n");

5143 if(
u£_°ack
 < 0) use_stack = 1;

5144 if(
hog
 < 0) hog = 0;

5145 if(
˝uty≥
 < 0) cputype = 68000;

5146 if(
addªssbôs
 < 0) {

5147 if(
˝uty≥
 <68010Ë
addªssbôs
 = 24;

5148 
addªssbôs
 = 32;

5150 if(!
sour˚«me
) {

5151 
	`•rötf
(
deÁu…_sour˚«me
, "s%d", 
˝uty≥
);

5152 
sour˚«me
 = 
deÁu…_sour˚«me
;

5156 
löíum
 = 0;

5157 
	`fÊush
(
°dout
);

5158 
	`fÊush
(
°dîr
);

5159 
codefûe
 = 
	`f›í
(
codefûíame
, "w");

5160 if(!
codefûe
) {

5161 
	`≥º‹
(
codefûíame
);

5165 
	`Ârötf
(
°dîr
, "Generating \"%s\" withÅhe following options:\n",

5166 
codefûíame


5168 
	`›ti⁄dump
(
°dîr
, " * ");

5169 
	`¥efixes
();

5170 
i
 = 0; i < 0x10000; i++Ë
Ωroc
[i] = -1;

5172 if(
˝uty≥
 == 68010) {

5173 
i
 = 0; i < 0x10000; i++Ë
lo›öfo
[i] = 0xDB;

5180 
	`Ârötf
(
°dîr
, "Decoding instructions: ");

5181 
b™k
 = 0; bank <= 0xF; bank++) {

5182 
b™kíd
 = (
b™k
 + 1) << 12;

5183 (*
decodîoutöe
)(
n
Ë
decodëabÀ
[
b™k
];

5184 
	`Ârötf
(
°dîr
, "%X", 
b™k
);

5185 
	`fÊush
(
°dîr
);

5186 
i
 = 
b™k
 << 12; i < 
b™kíd
; i++Ë
	`decodîoutöe
(i);

5188 
	`Ârötf
(
°dîr
, " done\n");

5193 
	`Ârötf
(
°dîr
, "BuildingÅable: ");

5194 
	`emô
("section .bss\n");

5195 
	`emô
("bits 32\n");

5196 
	`Æign
(4);

5197 
	`emô
("__jmptblÑesb 262144\n");

5198 if(
˝uty≥
 =68010Ë
	`emô
("__looptblÑesb 65536\n");

5199 
	`emô
("section .data\n");

5200 
	`emô
("bits 32\n");

5201 
	`Æign
(4);

5202 
	`emô
("__jmptblcomp:\n");

5203 
œ°
 = -2;

5204 
æ
 = 0;

5205 
i
 = 0; i < 0x10000; i++) {

5206 
j
 = 
Ωroc
[
i
];

5207 if(
j
 =
œ°
){

5208 if(
æ
 == 256) {

5209 
	`èbÀíåy
(
œ°
, 
æ
);

5210 
æ
 = 1;

5212 
æ
++;

5215 if(
æ
Ë
	`èbÀíåy
(
œ°
,Ñl);

5216 
æ
 = 1;

5217 
œ°
 = 
j
;

5220 
	`èbÀíåy
(
œ°
, 
æ
);

5221 
	`Æign
(4);

5224 
	`suffixes
();

5225 
	`Ârötf
(
°dîr
, "done\n");

5226 
	`Ârötf
(
°dîr
, "routöe_cou¡î = %d\n", 
routöe_cou¡î
);

5227 
	`f˛o£
(
codefûe
);

5229 
	}
}

	@src/star/starcpu.h

9 #i‚de‡
__STARCPU_H__


10 
	#__STARCPU_H__


	)

12 #ifde‡
__˝lu•lus


17 
	sSTARSCREAM_PROGRAMREGION
 {

18 
lowaddr
;

19 
highaddr
;

20 
off£t
;

23 
	sSTARSCREAM_DATAREGION
 {

24 
lowaddr
;

25 
highaddr
;

26 *
mem‹yˇŒ
;

27 *
u£rd©a
;

31 
	#STARSCREAM_CONTEXTINFO_MEM16
 \

32 
STARSCREAM_PROGRAMREGION
 *
„tch
; \

33 
STARSCREAM_DATAREGION
 *
ªadbyã
; \

34 
STARSCREAM_DATAREGION
 *
ªadw‹d
; \

35 
STARSCREAM_DATAREGION
 *
wrôebyã
; \

36 
STARSCREAM_DATAREGION
 *
wrôew‹d
; \

37 
STARSCREAM_PROGRAMREGION
 *
s_„tch
; \

38 
STARSCREAM_DATAREGION
 *
s_ªadbyã
; \

39 
STARSCREAM_DATAREGION
 *
s_ªadw‹d
; \

40 
STARSCREAM_DATAREGION
 *
s_wrôebyã
; \

41 
STARSCREAM_DATAREGION
 *
s_wrôew‹d
; \

42 
STARSCREAM_PROGRAMREGION
 *
u_„tch
; \

43 
STARSCREAM_DATAREGION
 *
u_ªadbyã
; \

44 
STARSCREAM_DATAREGION
 *
u_ªadw‹d
; \

45 
STARSCREAM_DATAREGION
 *
u_wrôebyã
; \

46 
STARSCREAM_DATAREGION
 *
u_wrôew‹d
; \

47 

	)

49 
	#STARSCREAM_CONTEXTINFO_MEM16FC
 \

50 (*
f_ªadbyã
Ë(
f
, 
a
); \

51 (*
f_ªadw‹d
Ë(
f
, 
a
); \

52 (*
f_wrôebyã
)(
f
, 
a
); \

53 (*
f_wrôew‹d
)(
f
, 
a
); \

54 

	)

56 
	#STARSCREAM_CONTEXTINFO_MEM32
 \

57 
STARSCREAM_PROGRAMREGION
 *
„tch
; \

58 
STARSCREAM_DATAREGION
 *
ªadbus
; \

59 
STARSCREAM_DATAREGION
 *
wrôebus
; \

60 
STARSCREAM_PROGRAMREGION
 *
s_„tch
; \

61 
STARSCREAM_DATAREGION
 *
s_ªadbus
; \

62 
STARSCREAM_DATAREGION
 *
s_wrôebus
; \

63 
STARSCREAM_PROGRAMREGION
 *
u_„tch
; \

64 
STARSCREAM_DATAREGION
 *
u_ªadbus
; \

65 
STARSCREAM_DATAREGION
 *
u_wrôebus
; \

66 (*
f_ªadbus
Ë(
f
, 
a
); \

67 (*
f_wrôebus
)(
f
, 
a
); \

68 

	)

70 
	#STARSCREAM_CONTEXTINFO_COMMON
 \

71 (*
ª£th™dÀr
)(); \

72 
dªg
[8]; \

73 
¨eg
[8]; \

74 
a•
; \

75 
pc
; \

76 
odomëî
; \

77 
öãºu±s
[8]; \

78 
§
; \

79 

	)

81 
	#STARSCREAM_CONTEXTINFO_68000SPECIFIC
 \

82 
c⁄ãxtfûÀr00
; \

83 

	)

85 
	#STARSCREAM_CONTEXTINFO_68010
 \

86 
sfc
; \

87 
dfc
; \

88 
vbr
; \

89 (*
bk±h™dÀr
)(); \

90 

	)

92 
	#STARSCREAM_CONTEXTINFO_68010SPECIFIC
 \

93 
lo›mode
; \

94 
c⁄ãxtfûÀr10
[3]; \

95 

	)

97 
	#STARSCREAM_CONTEXTINFO_68020
 \

98 
a•2
; \

99 

	)

100 
	sS68000CONTEXT
 {

101 
STARSCREAM_CONTEXTINFO_MEM16


102 
STARSCREAM_CONTEXTINFO_COMMON


103 
STARSCREAM_CONTEXTINFO_68000SPECIFIC


106 
	sS68010CONTEXT
 {

107 
STARSCREAM_CONTEXTINFO_MEM16


108 
STARSCREAM_CONTEXTINFO_MEM16FC


109 
STARSCREAM_CONTEXTINFO_COMMON


110 
STARSCREAM_CONTEXTINFO_68010


111 
STARSCREAM_CONTEXTINFO_68010SPECIFIC


114 
	sS68020CONTEXT
 {

115 
STARSCREAM_CONTEXTINFO_MEM32


116 
STARSCREAM_CONTEXTINFO_COMMON


117 
STARSCREAM_CONTEXTINFO_68010


118 
STARSCREAM_CONTEXTINFO_68020


121 
	#STARSCREAM_IDENTIFIERS
(
SNC
,
SN
) \

123 
SNC
##
CONTEXT
 
SN
##
c⁄ãxt
; \

125 
SN
##
	`öô
 (); \

126 
SN
##
	`ª£t
 (); \

127 
SN
##
	`exec
 (
n
); \

128 
SN
##
	`öãºu±
 (
Àvñ
, 
ve˘‹
); \

129 
SN
##
	`ÊushI¡îru±s
 (); \

130 
SN
##
	`GëC⁄ãxtSize
 (); \

131 
SN
##
	`GëC⁄ãxt
 (*
c⁄ãxt
); \

132 
SN
##
	`SëC⁄ãxt
 (*
c⁄ãxt
); \

133 
SN
##
	`„tch
 (
addªss
); \

134 
SN
##
	`ªadOdomëî
 (); \

135 
SN
##
	`åùOdomëî
 (); \

136 
SN
##
	`c⁄åﬁOdomëî
 (
n
); \

137 
SN
##
	`ªÀa£Time¶i˚
 (); \

138 
SN
##
	`ªadPC
 (); \

139 

	)

140 
STARSCREAM_IDENTIFIERS
(
S68000
,
s68000
)

141 
STARSCREAM_IDENTIFIERS
(
S68010
,
s68010
)

142 
STARSCREAM_IDENTIFIERS
(
S68020
,
s68020
)

144 #ifde‡
__˝lu•lus


	@src/star_interf.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 #ifde‡
USE_STARSCREAM


27 
	~<°dlib.h
>

28 
	~"SDL.h
"

30 
	~"°¨/°¨˝u.h
"

31 
	~"°¨/˝udebug.h
"

32 
	~"øze/øze.h
"

33 
	~"emu.h
"

34 
	~"video.h
"

35 
	~"mem‹y.h
"

36 
	~"pd4990a.h
"

37 
	~"°©e.h
"

38 
	~"debug.h
"

42 
STARSCREAM_PROGRAMREGION
 
	g¥ëíd_¥ogøm„tch
[] = {

47 {0xd00000, 0xd0ffff, (
Uöçå
Ë
mem‹y
.
§am
 - 0xd00000},

52 
STARSCREAM_DATAREGION
 
	g¥ëíd_ªadbyã
[] = {

53 {0x100000, 0x10FFff, 
NULL
, 0},

54 {0x200000, 0x2fFFfF, 
NULL
, 0},

55 {0xc00000, 0xcfFFff, 
NULL
, 0},

56 {0x000000, 0xfffff, 
NULL
, 0},

57 {0xd00000, 0xd0ffff, 
mem68k_„tch_§am_byã
, 0},

58 {0x400000, 0x401fff, 
mem68k_„tch_∑l_byã
, 0},

59 {0x3c0000, 0x3c0fff, 
mem68k_„tch_video_byã
, 0},

60 {0x300000, 0x300fff, 
mem68k_„tch_˘l1_byã
, 0},

61 {0x340000, 0x340fff, 
mem68k_„tch_˘l2_byã
, 0},

62 {0x380000, 0x380fff, 
mem68k_„tch_˘l3_byã
, 0},

63 {0x320000, 0x320fff, 
mem68k_„tch_coö_byã
, 0},

64 {0x800000, 0x800fff, 
mem68k_„tch_mem¸d_byã
, 0},

68 
STARSCREAM_DATAREGION
 
	g¥ëíd_ªadw‹d
[] = {

70 {0x100000, 0x10FFff, 
NULL
, 0},

71 {0x200000, 0x2FFFfF, 
NULL
, 0},

72 {0xc00000, 0xcfFFff, 
NULL
, 0},

73 {0x000000, 0xfffff, 
NULL
, 0},

74 {0xd00000, 0xd0ffff, 
mem68k_„tch_§am_w‹d
, 0},

75 {0x400000, 0x401fff, 
mem68k_„tch_∑l_w‹d
, 0},

76 {0x3c0000, 0x3c0fff, 
mem68k_„tch_video_w‹d
, 0},

77 {0x300000, 0x300fff, 
mem68k_„tch_˘l1_w‹d
, 0},

78 {0x340000, 0x340fff, 
mem68k_„tch_˘l2_w‹d
, 0},

79 {0x380000, 0x380fff, 
mem68k_„tch_˘l3_w‹d
, 0},

80 {0x320000, 0x320fff, 
mem68k_„tch_coö_w‹d
, 0},

81 {0x800000, 0x800fff, 
mem68k_„tch_mem¸d_w‹d
, 0},

86 
STARSCREAM_DATAREGION
 
	g¥ëíd_wrôebyã
[] = {

87 {0x100000, 0x10FFff, 
NULL
, 0},

88 {0x3c0000, 0x3c0fff, 
mem68k_°‹e_video_byã
, 0},

89 {0x400000, 0x401fff, 
mem68k_°‹e_∑l_byã
, 0},

90 {0xd00000, 0xd0ffff, 
mem68k_°‹e_§am_byã
, 0},

91 {0x380000, 0x380fff, 
mem68k_°‹e_pd4990_byã
, 0},

92 {0x320000, 0x320fff, 
mem68k_°‹e_z80_byã
, 0},

93 {0x3a0000, 0x3a0fff, 
mem68k_°‹e_£âög_byã
, 0},

94 {0x200000, 0x2fffff, 
NULL
, 0},

95 {0x800000, 0x800fff, 
mem68k_°‹e_mem¸d_byã
, 0},

96 {0x300000, 0x310000, 
mem68k_°‹e_övÆid_byã
,0},

102 
STARSCREAM_DATAREGION
 
	g¥ëíd_wrôew‹d
[] = {

103 {0x100000, 0x10FFff, 
NULL
, 0},

104 {0x3c0000, 0x3c0fff, 
mem68k_°‹e_video_w‹d
, 0},

105 {0x400000, 0x401fff, 
mem68k_°‹e_∑l_w‹d
, 0},

106 {0xd00000, 0xd0ffff, 
mem68k_°‹e_§am_w‹d
, 0},

107 {0x380000, 0x380fff, 
mem68k_°‹e_pd4990_w‹d
, 0},

108 {0x320000, 0x320fff, 
mem68k_°‹e_z80_w‹d
, 0},

109 {0x3a0000, 0x3a0fff, 
mem68k_°‹e_£âög_w‹d
, 0},

110 {0x200000, 0x2fffff, 
NULL
, 0},

111 {0x800000, 0x800fff, 
mem68k_°‹e_mem¸d_w‹d
, 0},

115 
	$˝u_68k_b™kswôch
(
Uöt32
 
addªss
)

117 
¥ëíd_ªadbyã
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addªss
;

118 
¥ëíd_ªadw‹d
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addªss
;

120 
¥ëíd_¥ogøm„tch
[1].
off£t
 =

121 (
Uöçå
Ë
mem‹y
.
rom
.
˝u_m68k
.
p
 + 
addªss
 - 0x200000;

123 
b™kaddªss
=
addªss
;

124 
	}
};

126 
	$˝u_68k_ª£t
()

128 
	`s68000ª£t
();

130 
	}
}

132 
	$˝u_68k_gëcy˛e
()

134  
	`s68000ªadOdomëî
();

135 
	}
}

138 
	$b™kswôchî_öô
() {

139 
¥ëíd_ªadbyã
[1].
mem‹yˇŒ
=
mem68k_„tch_bk_n‹mÆ_byã
;

140 
¥ëíd_ªadw‹d
[1].
mem‹yˇŒ
=
mem68k_„tch_bk_n‹mÆ_w‹d
;

141 
¥ëíd_wrôebyã
[7].
mem‹yˇŒ
=
mem68k_°‹e_bk_n‹mÆ_byã
;

142 
¥ëíd_wrôew‹d
[7].
mem‹yˇŒ
=
mem68k_°‹e_bk_n‹mÆ_w‹d
;

143 
	}
}

145 
	$˝u_68k_mk°©e
(
gzFûe
 
gzf
,
mode
) {

147 
	}
}

149 
	$˝u_68k_öô
()

151 
	`s68000öô
();

152 
	`b™kswôchî_öô
();

153 
¥ëíd_wrôebyã
[0].
u£rd©a
 = 
mem‹y
.
øm
;

154 
¥ëíd_wrôew‹d
[0].
u£rd©a
 = 
mem‹y
.
øm
;

155 
¥ëíd_ªadbyã
[0].
u£rd©a
 = 
mem‹y
.
øm
;

156 
¥ëíd_ªadw‹d
[0].
u£rd©a
 = 
mem‹y
.
øm
;

158 
¥ëíd_ªadbyã
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

159 
¥ëíd_ªadw‹d
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

162 
¥ëíd_ªadbyã
[3].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

163 
¥ëíd_ªadw‹d
[3].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
;

165 
¥ëíd_ªadbyã
[2].
u£rd©a
 = 
mem‹y
.
rom
.
bios_m68k
.
p
;

166 
¥ëíd_ªadw‹d
[2].
u£rd©a
 = 
mem‹y
.
rom
.
bios_m68k
.
p
;

168 
¥ëíd_¥ogøm„tch
[0].
off£t
 = (
Uöçå
Ë
mem‹y
.
øm
 - 0x100000;

169 
¥ëíd_¥ogøm„tch
[1].
off£t
 = (
Uöçå
Ë
mem‹y
.
rom
.
˝u_m68k
.
p
 - 0x200000;

170 
¥ëíd_¥ogøm„tch
[2].
off£t
 = (
Uöçå
Ë
mem‹y
.
rom
.
bios_m68k
.
p
 - 0xC00000;

171 
¥ëíd_¥ogøm„tch
[3].
off£t
 = (
Uöçå
Ë
mem‹y
.
rom
.
˝u_m68k
.
p
;

173 
s68000c⁄ãxt
.
s_„tch
 = 
¥ëíd_¥ogøm„tch
;

174 
s68000c⁄ãxt
.
u_„tch
 = 
¥ëíd_¥ogøm„tch
;

176 
s68000c⁄ãxt
.
s_ªadbyã
 = 
¥ëíd_ªadbyã
;

177 
s68000c⁄ãxt
.
u_ªadbyã
 = 
¥ëíd_ªadbyã
;

178 
s68000c⁄ãxt
.
s_ªadw‹d
 = 
¥ëíd_ªadw‹d
;

179 
s68000c⁄ãxt
.
u_ªadw‹d
 = 
¥ëíd_ªadw‹d
;

180 
s68000c⁄ãxt
.
s_wrôebyã
 = 
¥ëíd_wrôebyã
;

181 
s68000c⁄ãxt
.
u_wrôebyã
 = 
¥ëíd_wrôebyã
;

182 
s68000c⁄ãxt
.
s_wrôew‹d
 = 
¥ëíd_wrôew‹d
;

183 
s68000c⁄ãxt
.
u_wrôew‹d
 = 
¥ëíd_wrôew‹d
;

186 i‡(
mem‹y
.
rom
.
˝u_m68k
.
size
 > 0x100000) {

187 
¥ëíd_ªadbyã
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
 + 0x100000;

188 
¥ëíd_ªadw‹d
[1].
u£rd©a
 = 
mem‹y
.
rom
.
˝u_m68k
.
p
 + 0x100000;

190 
¥ëíd_¥ogøm„tch
[1].
off£t
 =

191 (
Uöçå
Ë
mem‹y
.
rom
.
˝u_m68k
.
p
 + 0x100000 - 0x200000;

193 
	`˝u_68k_öô_ßve_°©e
();

194 
	}
}

196 
	$˝u_68k_run
(
Uöt32
 
nb_cy˛e
)

198 
a
;

200 
	`s68000exec
(
nb_cy˛e
);

201 
a
=
	`s68000åùOdomëî
()-
nb_cy˛e
;

203  
a
;

204 
	}
}

206 
	$˝u_68k_öãºu±
(
a
)

208 
	`s68000öãºu±
(
a
, -1);

209 
	}
}

221 
	$˝u_68k_run_°ï
()

223 
a
;

224 
	`s68000exec
(1);

225 
a

	`s68000åùOdomëî
();

227  
a
;

228 
	}
}

229 
	$dbg_put
(c⁄° *
c
) {

230 
	`¥ötf
("%s",
c
);

231 
	`fÊush
(
°dout
);

232 
	}
}

233 
	$dbg_gë
(* 
s
, 
size
) {

235 *
¨gs
,*
¨g£nd
;

236 
pc
;

238 
	`fgës
(
s
, 
size
, 
°dö
);

240 
¨gs
 = 
s
 + 1;

241 (*
¨gs
) && ((*args) < 32))árgs++;

243 
s
[0]) {

245 
	`¥ötf
("B [address] Addá breakpointát [address]\n"

250 i‡(
¨gs
) {

251 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

252 i‡(
¨gs
 !
¨g£nd
)

253 
	`add_bp
(
pc
);

255 
	`¥ötf
("Invalid input\n");

257 
s
[0]=0;

260 i‡(
¨gs
) {

261 
pc
=
	`°πoul
(
¨gs
,&
¨g£nd
,0);

262 i‡(
¨gs
 !
¨g£nd
)

263 
	`dñ_bp
(
pc
);

265 
	`¥ötf
("Invalid input\n");

267 
s
[0]=0;

270 
	`check_bp
(
	`˝u_68k_gëpc
())!=
GN_TRUE
 && 
dbg_°ï
==0) {

271 
	`˝u_68k_dpg_°ï
();

273 i‡(
dbg_°ï
) dbg_step=0;

274 
s
[0]=0;

278 
	}
}

280 
	$˝u_68k_debugî
((*
exec°ï
)(),(*
dump
)()) {

281  
	`˝udebug_öãø˘ive
(1,
dbg_put
,
dbg_gë
,
exec°ï
,
dump
);

282 
	}
}

285 
Uöt32
 
	$˝u_68k_gëpc
()

287  
	`s68000ªadPC
();

288 
	}
}

293 
	$˝u_68k_fûl_°©e
(
M68K_STATE
 *
°
)

295 
S68000CONTEXT
 
°¨_c⁄ãxt
;

296 
i
;

297 
	`s68000GëC⁄ãxt
(&
°¨_c⁄ãxt
);

298 
i
=0;i<8;i++) {

299 
°
->
dªg
[
i
]=
°¨_c⁄ãxt
.dreg[i];

300 
°
->
¨eg
[
i
]=
°¨_c⁄ãxt
.areg[i];

302 
°
->
pc
=
°¨_c⁄ãxt
.pc;

303 
°
->
a•
=
°¨_c⁄ãxt
.asp;

304 
°
->
§
=
°¨_c⁄ãxt
.sr;

305 
	}
}

307 
	$˝u_68k_£t_°©e
(
M68K_STATE
 *
°
)

309 
S68000CONTEXT
 
°¨_c⁄ãxt
;

310 
i
;

311 
	`s68000GëC⁄ãxt
(&
°¨_c⁄ãxt
);

312 
i
=0;i<8;i++) {

313 
°¨_c⁄ãxt
.
dªg
[
i
]=
°
->dreg[i];

314 
°¨_c⁄ãxt
.
¨eg
[
i
]=
°
->areg[i];

316 
°¨_c⁄ãxt
.
pc
=
°
->pc;

317 
°¨_c⁄ãxt
.
a•
=
°
->asp;

318 
°¨_c⁄ãxt
.
§
=
°
->sr;

319 
	`s68000SëC⁄ãxt
(&
°¨_c⁄ãxt
);

320 
	}
}

	@src/state.c

1 #ifde‡
HAVE_CONFIG_H


2 
	~<c⁄fig.h
>

5 
	~"SDL.h
"

6 
	~"SDL_ídün.h
"

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 #i‡
deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

10 
	~<zlib.h
>

13 
	~"mem‹y.h
"

14 
	~"°©e.h
"

15 
	~"s¸ìn.h
"

16 
	~"sound.h
"

17 
	~"emu.h
"

18 
	~"gnutû.h
"

19 
	~"míu.h
"

22 #ifde‡
USE_STARSCREAM


23 
	gm68k_Êag
=0x1;

24 #ñi‡
USE_GENERATOR68K


25 
	gm68k_Êag
=0x2;

26 #ñi‡
USE_CYCLONE


27 
	gm68k_Êag
=0x3;

30 #ifde‡
USE_RAZE


31 
	gz80_Êag
=0x4;

32 #ñi‡
USE_MAMEZ80


33 
	gz80_Êag
=0x8;

34 #ñi‡
USE_DRZ80


35 
	gz80_Êag
=0xC;

38 #ifde‡
WORDS_BIGENDIAN


39 
	gídün_Êag
=0x10;

41 
	gídün_Êag
=0x0;

44 #i‡
deföed
 (
WII
)

45 
	#ROOTPATH
 "sd:/≠ps/gngeo/"

	)

46 #ñi‡
deföed
 (
__AMIGA__
)

47 
	#ROOTPATH
 "/PROGDIR/d©a/"

	)

49 
	#ROOTPATH
 ""

	)

52 #i‡!
deföed
(
HAVE_LIBZ
Ë|| !deföed (
HAVE_MMAP
)

53 
	#gz›í
 
f›í


	)

54 
	#gzªad
(
f
,
d©a
,
size
Ë
	`‰ód
(d©a,size,1,f)

	)

55 
	#gzwrôe
(
f
,
d©a
,
size
Ë
	`fwrôe
(d©a,size,1,f)

	)

56 
	#gz˛o£
 
f˛o£


	)

57 
	#gzFûe
 
FILE
*

	)

58 
	#gzeof
 
„of


	)

59 
	#gz£ek
 
f£ek


	)

67 
SDL_SurÁ˚
 *
	g°©e_img_tmp
;

69 
˝u_68k_mk°©e
(
gzFûe
 
gzf
,
mode
);

70 
˝u_z80_mk°©e
(
gzFûe
 
gzf
,
mode
);

71 
ym2610_mk°©e
(
gzFûe
 
gzf
,
mode
);

73 
	$¸óã_°©e_ªgi°î
(
ST_MODULE_TYPE
 
moduÀ
,c⁄° *
ªg_«me
,

74 
Uöt8
 
num
,*
d©a
,
size
,
ST_DATA_TYPE
 
ty≥
) {

75 
ST_REG
 *
t
=(ST_REG*)
	`ˇŒoc
(1,(ST_REG));

76 
t
->
√xt
=
°_mod
[
moduÀ
].
ªgli°
;

77 
°_mod
[
moduÀ
].
ªgli°
=
t
;

78 
t
->
ªg_«me
=
	`°rdup
(reg_name);

79 
t
->
d©a
=data;

80 
t
->
size
=size;

81 
t
->
ty≥
=type;

82 
t
->
num
=num;

83 
	}
}

85 
	$£t_¥e_ßve_fun˘i⁄
(
ST_MODULE_TYPE
 
moduÀ
,(*
func
)()) {

86 
°_mod
[
moduÀ
].
¥e_ßve_°©e
=
func
;

87 
	}
}

89 
	$£t_po°_lﬂd_fun˘i⁄
(
ST_MODULE_TYPE
 
moduÀ
,(*
func
)()) {

90 
°_mod
[
moduÀ
].
po°_lﬂd_°©e
=
func
;

91 
	}
}

93 *
	$föd_d©a_by_«me
(
ST_MODULE_TYPE
 
moduÀ
,
Uöt8
 
num
,*
«me
) {

94 
ST_REG
 *
t
=
°_mod
[
moduÀ
].
ªgli°
;

95 
t
) {

96 i‡((!
	`°rcmp
(
«me
,
t
->
ªg_«me
)Ë&& (t->
num
==num)) {

101  
t
->
d©a
;

103 
t
Ò->
√xt
;

105  
NULL
;

106 
	}
}

108 
	$sizeof_°_ty≥
(
ST_DATA_TYPE
 
ty≥
) {

109 
ty≥
) {

110 
REG_UINT8
:

111 
REG_INT8
:

113 
REG_UINT16
:

114 
REG_INT16
:

116 
REG_UINT32
:

117 
REG_INT32
:

121 
	}
}

123 
	$sw≠_buf16_if_√ed
(
Uöt8
 
§c_ídün
,
Uöt16
* 
buf
,
Uöt32
 
size
)

125 
i
;

126 #ifde‡
WORDS_BIGENDIAN


127 
Uöt8
 
my_ídün
=1;

129 
Uöt8
 
my_ídün
=0;

131 i‡(
my_ídün
!=
§c_ídün
) {

132 
i
=0;i<
size
;i++)

133 
	`SDL_Sw≠16
(
buf
[
i
]);

135 
	}
}

137 
	$sw≠_buf32_if_√ed
(
Uöt8
 
§c_ídün
,
Uöt32
* 
buf
,Uöt32 
size
)

139 
i
;

140 #ifde‡
WORDS_BIGENDIAN


141 
Uöt8
 
my_ídün
=1;

143 
Uöt8
 
my_ídün
=0;

145 i‡(
my_ídün
!=
§c_ídün
) {

146 
i
=0;i<
size
;i++)

147 
buf
[
i
]=
	`SDL_Sw≠32
(buf[i]);

149 
	}
}

151 
Uöt32
 
	$how_m™y_¶Ÿ
(*
game
) {

152 *
°_«me
;

153 
FILE
 *
f
;

155 #ifde‡
EMBEDDED_FS


156 *
gngeo_dú
=
ROOTPATH
"save/";

158 *
gngeo_dú
=
	`gë_gngeo_dú
();

160 
Uöt32
 
¶Ÿ
=0;

161 
°_«me
=(*)
	`Æloˇ
(
	`°æí
(
gngeo_dú
)+°æí(
game
)+5);

163 
	`•rötf
(
°_«me
,"%s%s.%03d",
gngeo_dú
,
game
,
¶Ÿ
);

164 i‡(
°_«me
 && (
f
=
	`f›í
(st_name,"rb"))) {

165 
	`f˛o£
(
f
);

166 
¶Ÿ
++;

168  
¶Ÿ
;

171 
	}
}

173 
gzFûe
 
	$›í_°©e
(*
game
,
¶Ÿ
,
mode
) {

174 *
°_«me
;

176 #ifde‡
EMBEDDED_FS


177 *
gngeo_dú
=
ROOTPATH
"save/";

179 *
gngeo_dú
=
	`gë_gngeo_dú
();

181 
°rög
[20];

182 *
m
=(
mode
==
STWRITE
?"wb":"rb");

183 
gzFûe
 
gzf
;

184 
Êags
;

185 
Uöt32
 
øã
;

187 
°_«me
=(*)
	`Æloˇ
(
	`°æí
(
gngeo_dú
)+°æí(
game
)+5);

188 
	`•rötf
(
°_«me
,"%s%s.%03d",
gngeo_dú
,
game
,
¶Ÿ
);

190 i‡((
gzf
 = 
	`gz›í
(
°_«me
, 
m
)Ë=
NULL
) {

191 
	`¥ötf
("%†nŸ found\n", 
°_«me
);

192  
NULL
;

195 if(
mode
==
STREAD
) {

197 
	`mem£t
(
°rög
, 0, 20);

198 
	`gzªad
(
gzf
, 
°rög
, 6);

200 i‡(
	`°rcmp
(
°rög
, "GNGST3")!=0 && strcmp(string, "GNGST2")!=0) {

201 
	`¥ötf
("%†i†nŸá vÆid gngeÿ° fûe\n", 
°_«me
);

202 
	`gz˛o£
(
gzf
);

203  
NULL
;

206 i‡(
	`°rcmp
(
°rög
, "GNGST2")==0Ë
°©e_vîsi⁄
=
ST_VER2
;

207 i‡(
	`°rcmp
(
°rög
, "GNGST3")==0Ë
°©e_vîsi⁄
=
ST_VER3
;

210 
	`gzªad
(
gzf
, &
Êags
,  ());

212 i‡(
Êags
 !(
m68k_Êag
 | 
z80_Êag
 | 
ídün_Êag
)) {

213 
	`¥ötf
("This save state comme fromá differentÉndianárchitecture.\n"

215 
	`gz˛o£
(
gzf
);

216  
NULL
;

219 
Êags
=
m68k_Êag
 | 
z80_Êag
 | 
ídün_Êag
;

220 
	`gzwrôe
(
gzf
, "GNGST3", 6);

221 
	`gzwrôe
(
gzf
, &
Êags
, ());

223  
gzf
;

224 
	}
}

226 
	$mk°©e_d©a
(
gzFûe
 
gzf
,*
d©a
,
size
,
mode
) {

227 i‡(
mode
==
STREAD
)

228  
	`gzªad
(
gzf
,
d©a
,
size
);

229  
	`gzwrôe
(
gzf
,
d©a
,
size
);

230 
	}
}

233 
SDL_SurÁ˚
 *
	$lﬂd_°©e_img
(*
game
,
¶Ÿ
) {

234 
gzFûe
 
gzf
;

236 i‡((
gzf
 = 
	`›í_°©e
(
game
, 
¶Ÿ
, 
STREAD
)Ë=
NULL
)

237  
NULL
;

239 
	`gzªad
(
gzf
, 
°©e_img_tmp
->
pixñs
, 304 * 224 * 2);

242 
	`gz˛o£
(
gzf
);

243  
°©e_img_tmp
;

244 
	}
}

246 
	$√ogeo_mk°©e
(
gzFûe
 
gzf
,
mode
) {

247 
GAME_ROMS
 
r
;

248 
	`mem˝y
(&
r
,&
mem‹y
.
rom
,(
GAME_ROMS
));

249 
	`mk°©e_d©a
(
gzf
, &
mem‹y
,  (mem‹y), 
mode
);

253 i‡(
mode
==
STREAD
Ë
	`mem˝y
(&
mem‹y
.
rom
,&
r
,(
GAME_ROMS
));

256 
	`mk°©e_d©a
(
gzf
, &
b™kaddªss
,  (
Uöt32
), 
mode
);

257 
	`mk°©e_d©a
(
gzf
, &
§am_lock
,  (
Uöt8
), 
mode
);

258 
	`˝u_68k_mk°©e
(
gzf
, 
mode
);

259 #i‚de‡
ENABLE_940T


260 
	`mk°©e_d©a
(
gzf
, 
z80_b™k
,(
Uöt16
)*4, 
mode
);

261 
	`˝u_z80_mk°©e
(
gzf
, 
mode
);

262 
	`ym2610_mk°©e
(
gzf
, 
mode
);

266 
	}
}

268 
	$ßve_°©e
(*
game
,
¶Ÿ
) {

269 
gzFûe
 
gzf
;

271 i‡((
gzf
 = 
	`›í_°©e
(
game
, 
¶Ÿ
, 
STWRITE
)Ë=
NULL
)

272  
GN_FALSE
;

274 
	`gzwrôe
(
gzf
, 
°©e_img
->
pixñs
, 304 * 224 * 2);

276 
	`√ogeo_mk°©e
(
gzf
,
STWRITE
);

278 
	`gz˛o£
(
gzf
);

279  
GN_TRUE
;

280 
	}
}

281 
	$lﬂd_°©e
(*
game
,
¶Ÿ
) {

282 
gzFûe
 
gzf
;

284 
Uöt8
 *
ng_lo
 = 
mem‹y
.ng_lo;

285 
Uöt8
 *
fix_game_ußge
=
mem‹y
.fix_game_usage;

286 
Uöt8
 *
bksw_uns¸ambÀ
 = 
mem‹y
.bksw_unscramble;

287 *
bksw_off£t
=
mem‹y
.bksw_offset;

291 i‡((
gzf
 = 
	`›í_°©e
(
game
, 
¶Ÿ
, 
STREAD
))==
NULL
)

292  
GN_FALSE
;

294 i‡(
°©e_vîsi⁄
==
ST_VER2
)

295 
	`gn_p›up_îr‹
("Warning!","You'reÅryingÅoÜoadán older gngeo save state\nIt may work orÇot,Çobody knows! ;)");

298 
	`gzªad
(
gzf
,
°©e_img_tmp
->
pixñs
,304*224*2);

300 
	`√ogeo_mk°©e
(
gzf
,
STREAD
);

303 
mem‹y
.
ng_lo
=ng_lo;

304 
mem‹y
.
fix_game_ußge
=fix_game_usage;

305 
mem‹y
.
bksw_uns¸ambÀ
=bksw_unscramble;

306 
mem‹y
.
bksw_off£t
=bksw_offset;

309 
	`˝u_68k_b™kswôch
(
b™kaddªss
);

311 i‡(
mem‹y
.
cuºít_ve˘‹
==0)

312 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.rom.
bios_m68k
.p, 0x80);

314 
	`mem˝y
(
mem‹y
.
rom
.
˝u_m68k
.
p
, mem‹y.
game_ve˘‹
, 0x80);

316 i‡(
mem‹y
.
vid
.
cuºíçÆ
) {

317 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[1];

318 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[1];

320 
cuºít_∑l
 = 
mem‹y
.
vid
.
∑l_√o
[0];

321 
cuºít_pc_∑l
 = (
Uöt32
 *Ë
mem‹y
.
vid
.
∑l_ho°
[0];

324 i‡(
mem‹y
.
vid
.
cuºítfix
) {

325 
cuºít_fix
 = 
mem‹y
.
rom
.
game_sfix
.
p
;

326 
fix_ußge
 = 
mem‹y
.
fix_game_ußge
;

328 
cuºít_fix
 = 
mem‹y
.
rom
.
bios_sfix
.
p
;

329 
fix_ußge
 = 
mem‹y
.
fix_bﬂrd_ußge
;

332 
	`gz˛o£
(
gzf
);

333  
GN_TRUE
;

334 
	}
}

339 
Uöt8
 
	g°_cuºít_∑l
,
	g°_cuºít_fix
;

341 
	$√ogeo_¥e_ßve_°©e
() {

347 
	}
}

349 
	$√ogeo_po°_lﬂd_°©e
() {

350 
i
;

354 
cuºít_fix
=(
°_cuºít_fix
==0?
mem‹y
.
rom
.
bios_sfix
.
p
:mem‹y.rom.
game_sfix
.p);

355 
	`upd©e_Æl_∑l
();

357 
	}
}

359 
	$˛ór_°©e_ªg
() {

360 
i
;

361 
ST_REG
 *
t
,*
s
;

362 
i
=0;i<
ST_MODULE_END
;i++) {

363 
t
=
°_mod
[
i
].
ªgli°
;

364 
t
) {

365 
s
=
t
;tÒ->
√xt
;

366 
	`‰ì
(
s
);

368 
°_mod
[
i
].
ªgli°
=
NULL
;

370 
	}
}

372 
	$√ogeo_öô_ßve_°©e
() {

373 
i
;

375 i‡(!
°©e_img
)

376 
°©e_img
=
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,304, 224, 16, 0xF800, 0x7E0, 0x1F, 0);

377 i‡(!
°©e_img_tmp
)

378 
°©e_img_tmp
=
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
,304, 224, 16, 0xF800, 0x7E0, 0x1F, 0);

381 
	}
}

	@src/state.h

1 #i‚de‡
_STATE_H_


2 
	#_STATE_H_


	)

4 
	~"zlib.h
"

5 
	~"SDL.h
"

8 
	eST_MODULE_TYPE
 {

9 
	mST_68k
=0,

10 
	mST_Z80
,

11 
	mST_YM2610
,

12 
	mST_YM2610_FM
,

13 
	mST_YM2610_ADPCMA
,

14 
	mST_YM2610_ADPCMB
,

15 
	mST_TIMER
,

16 
	mST_PD4990A
,

17 
	mST_NEOGEO
,

18 
	mST_MODULE_END


19 }
	tST_MODULE_TYPE
;

21 
	eST_DATA_TYPE
 {

22 
	mREG_UINT8
=1,

23 
	mREG_UINT16
,

24 
	mREG_UINT32
,

25 
	mREG_INT8
,

26 
	mREG_INT16
,

27 
	mREG_INT32


28 }
	tST_DATA_TYPE
;

31 
	sST_REG
 {

32 *
	mªg_«me
;

33 *
	md©a
;

34 
Uöt8
 
	mnum
;

35 
Uöt32
 
	msize
;

36 
ST_DATA_TYPE
 
	mty≥
;

37 
ST_REG
 *
	m√xt
;

38 }
	tST_REG
;

40 
	sST_MODULE
 {

41 (*
	m¥e_ßve_°©e
)();

42 (*
	mpo°_lﬂd_°©e
)();

43 
ST_REG
 *
	mªgli°
;

44 }
	tST_MODULE
;

47 
	sM68K_STATE
 {

48 
Uöt32
 
	mdªg
[8];

49 
Uöt32
 
	m¨eg
[8];

50 
Uöt32
 
	ma•
;

51 
Uöt32
 
	mpc
;

52 
Uöt32
 
	m§
;

53 
Uöt32
 
	mb™k
;

54 
Uöt8
 
	møm
[0x10000];

55 }
	tM68K_STATE
;

57 
	sZ80_STATE
 {

58 
Uöt16
 
	mPC
,
	mSP
,
	mAF
,
	mBC
,
	mDE
,
	mHL
,
	mIX
,
	mIY
;

59 
Uöt16
 
	mAF2
,
	mBC2
,
	mDE2
,
	mHL2
;

60 
Uöt8
 
	mR
,
	mR2
,
	mIFF1
,
	mIFF2
,
	mIM
,
	mI
;

61 
Uöt8
 
	mIRQV
,
	mIRQL
;

62 
Uöt16
 
	mb™k
[4];

63 
Uöt8
 
	møm
[0x800];

64 }
	tZ80_STATE
;

66 
	sYM2610_STATE
 {

67 }
	gYM2610_STATE
;

69 
	sNEOGEO_STATE
 {

70 
Uöt16
 
	mv±r
;

71 
Söt16
 
	mmodulo
;

72 
Uöt8
 
	mcuºít_∑l
;

73 
Uöt8
 
	mcuºít_fix
;

74 
Uöt8
 
	m§am_lock
;

75 
Uöt8
 
	msound_code
;

76 
Uöt8
 
	m≥ndög_comm™d
;

77 
Uöt8
 
	mªsu…_code
;

78 
Uöt8
 
	m§am
[0x10000];

79 
Uöt8
 
	mvideo
[0x20000];

80 
Uöt8
 
	m∑l1
[0x2000], 
	m∑l2
[0x2000];

81 }
	tNEOGEO_STATE
;

84 
SDL_SurÁ˚
 *
	g°©e_img
;

86 
	#STREAD
 0

	)

87 
	#STWRITE
 1

	)

89 
	#ST_VER1
 1

	)

90 
	#ST_VER2
 2

	)

91 
	#ST_VER3
 3

	)

93 
Uöt8
 
	g°©e_vîsi⁄
;

96 
¸óã_°©e_ªgi°î
(
ST_MODULE_TYPE
 
moduÀ
,c⁄° *
ªg_«me
,
Uöt8
 
num
,*
d©a
,
size
,
ST_DATA_TYPE
 
ty≥
);

97 
£t_¥e_ßve_fun˘i⁄
(
ST_MODULE_TYPE
 
moduÀ
,(*
func
)());

98 
	`£t_po°_lﬂd_fun˘i⁄
(
ST_MODULE_TYPE
 
moduÀ
,(*
func
)());

100 
SDL_SurÁ˚
 *
	`lﬂd_°©e_img
(*
game
,
¶Ÿ
);

101 
	`lﬂd_°©e
(*
game
,
¶Ÿ
);

102 
	`ßve_°©e
(*
game
,
¶Ÿ
);

103 
Uöt32
 
	`how_m™y_¶Ÿ
(*
game
);

104 
	`mk°©e_d©a
(
gzFûe
 
gzf
,*
d©a
,
size
,
mode
);

106 
	`√ogeo_öô_ßve_°©e
();

	@src/stb_image.c

68 #ifde‡
HAVE_CONFIG_H


69 
	~"c⁄fig.h
"

72 
	~"°b_image.h
"

74 #i‡!
deföed
(
HAVE_LIBZ
Ë|| !deföed(
HAVE_MMAP
)

75 
	#USE_STBZLIB
 1

	)

78 #i‚de‡
STBI_NO_HDR


79 
	~<m©h.h
>

80 
	~<°rög.h
>

83 #i‚de‡
STBI_NO_STDIO


84 
	~<°dio.h
>

86 
	~<°dlib.h
>

87 
	~<mem‹y.h
>

88 
	~<as£π.h
>

89 
	~<°d¨g.h
>

91 #i‚de‡
_MSC_VER


92 #ifde‡
__˝lu•lus


93 
	#__f‹˚ölöe
 
ölöe


	)

95 
	#__f‹˚ölöe


	)

99 #ifde‡
USE_STBZLIB


100 
	~"°b_zlib.h
"

103 
	tuöt8
;

104 
	tuöt16
;

105 sig√d 
	töt16
;

106 
	tuöt32
;

107 sig√d 
	töt32
;

108 
	tuöt
;

111 
	tvÆid©e_uöt32
[(
uöt32
)==4];

113 #i‡
deföed
(
STBI_NO_STDIO
Ë&& !deföed(
STBI_NO_WRITE
)

114 
	#STBI_NO_WRITE


	)

123 *
	gÁûuª_ªas⁄
;

125 *
	$°bi_Áûuª_ªas⁄
()

127  
Áûuª_ªas⁄
;

128 
	}
}

130 
	$e
(*
°r
)

132 
Áûuª_ªas⁄
 = 
°r
;

134 
	}
}

136 #ifde‡
STBI_NO_FAILURE_STRINGS


137 
	#e
(
x
,
y
Ë0

	)

138 #ñi‡
deföed
(
STBI_FAILURE_USERMSG
)

139 
	#e
(
x
,
y
Ë
	`e
(y)

	)

141 
	#e
(
x
,
y
Ë
	`e
(x)

	)

144 
	#ïf
(
x
,
y
Ë((*Ë(
	`e
(x,y)?
NULL
:NULL))

	)

145 
	#ïuc
(
x
,
y
Ë((*Ë(
	`e
(x,y)?
NULL
:NULL))

	)

147 
	$°bi_image_‰ì
(*
ªtvÆ_‰om_°bi_lﬂd
)

149 
	`‰ì
(
ªtvÆ_‰om_°bi_lﬂd
);

150 
	}
}

152 
	#MAX_LOADERS
 32

	)

153 
°bi_lﬂdî
 *
	glﬂdîs
[
MAX_LOADERS
];

154 
	gmax_lﬂdîs
 = 0;

156 
	$°bi_ªgi°î_lﬂdî
(
°bi_lﬂdî
 *
lﬂdî
)

158 
i
;

159 
i
=0; i < 
MAX_LOADERS
; ++i) {

161 i‡(
lﬂdîs
[
i
] =
lﬂdî
)

164 i‡(
lﬂdîs
[
i
] =
NULL
) {

165 
lﬂdîs
[
i
] = 
lﬂdî
;

166 
max_lﬂdîs
 = 
i
+1;

172 
	}
}

174 #i‚de‡
STBI_NO_HDR


175 *
ldr_to_hdr
(
°bi_uc
 *
d©a
, 
x
, 
y
, 
comp
);

176 
°bi_uc
 *
hdr_to_ldr
(*
d©a
, 
x
, 
y
, 
comp
);

179 #i‚de‡
STBI_NO_STDIO


180 *
	$°bi_lﬂd
(c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

182 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

183 *
ªsu…
;

184 i‡(!
f
Ë 
	`ïuc
("can't fopen", "UnableÅo open file");

185 
ªsu…
 = 
	`°bi_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

186 
	`f˛o£
(
f
);

187  
ªsu…
;

188 
	}
}

190 *
	$°bi_lﬂd_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

192 
i
;

193 #i‚de‡
STBI_NO_JPEG


194 i‡(
	`°bi_j≥g_ã°_fûe
(
f
))

195  
	`°bi_j≥g_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

197 #i‚de‡
STBI_NO_PNG


198 i‡(
	`°bi_≤g_ã°_fûe
(
f
))

199  
	`°bi_≤g_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

201 i‡(
	`°bi_bmp_ã°_fûe
(
f
))

202  
	`°bi_bmp_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

203 #i‚de‡
STBI_NO_PSD


204 i‡(
	`°bi_psd_ã°_fûe
(
f
))

205  
	`°bi_psd_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

207 #i‚de‡
STBI_NO_HDR


208 i‡(
	`°bi_hdr_ã°_fûe
(
f
)) {

209 *
hdr
 = 
	`°bi_hdr_lﬂd_‰om_fûe
(
f
, 
x
,
y
,
comp
,
ªq_comp
);

210  
	`hdr_to_ldr
(
hdr
, *
x
, *
y
, 
ªq_comp
 ?Ñeq_com∞: *
comp
);

213 
i
=0; i < 
max_lﬂdîs
; ++i)

214 i‡(
lﬂdîs
[
i
]->
	`ã°_fûe
(
f
))

215  
lﬂdîs
[
i
]->
	`lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

217 i‡(
	`°bi_tga_ã°_fûe
(
f
))

218  
	`°bi_tga_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

219  
	`ïuc
("unknown imageÅype", "ImageÇot ofány knownÅype, or corrupt");

220 
	}
}

223 *
	$°bi_lﬂd_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

225 
i
;

226 i‡(
	`°bi_j≥g_ã°_mem‹y
(
buf„r
,
Àn
))

227  
	`°bi_j≥g_lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

228 i‡(
	`°bi_≤g_ã°_mem‹y
(
buf„r
,
Àn
))

229  
	`°bi_≤g_lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

230 i‡(
	`°bi_bmp_ã°_mem‹y
(
buf„r
,
Àn
))

231  
	`°bi_bmp_lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

232 i‡(
	`°bi_psd_ã°_mem‹y
(
buf„r
,
Àn
))

233  
	`°bi_psd_lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

234 #i‚de‡
STBI_NO_HDR


235 i‡(
	`°bi_hdr_ã°_mem‹y
(
buf„r
, 
Àn
)) {

236 *
hdr
 = 
	`°bi_hdr_lﬂd_‰om_mem‹y
(
buf„r
, 
Àn
,
x
,
y
,
comp
,
ªq_comp
);

237  
	`hdr_to_ldr
(
hdr
, *
x
, *
y
, 
ªq_comp
 ?Ñeq_com∞: *
comp
);

240 
i
=0; i < 
max_lﬂdîs
; ++i)

241 i‡(
lﬂdîs
[
i
]->
	`ã°_mem‹y
(
buf„r
,
Àn
))

242  
lﬂdîs
[
i
]->
	`lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

244 i‡(
	`°bi_tga_ã°_mem‹y
(
buf„r
,
Àn
))

245  
	`°bi_tga_lﬂd_‰om_mem‹y
(
buf„r
,
Àn
,
x
,
y
,
comp
,
ªq_comp
);

246  
	`ïuc
("unknown imageÅype", "ImageÇot ofány knownÅype, or corrupt");

247 
	}
}

249 #i‚de‡
STBI_NO_HDR


251 #i‚de‡
STBI_NO_STDIO


252 *
	$°bi_lﬂdf
(c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

254 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

255 *
ªsu…
;

256 i‡(!
f
Ë 
	`ïf
("can't fopen", "UnableÅo open file");

257 
ªsu…
 = 
	`°bi_lﬂdf_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

258 
	`f˛o£
(
f
);

259  
ªsu…
;

260 
	}
}

262 *
	$°bi_lﬂdf_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

264 *
d©a
;

265 #i‚de‡
STBI_NO_HDR


266 i‡(
	`°bi_hdr_ã°_fûe
(
f
))

267  
	`°bi_hdr_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

269 
d©a
 = 
	`°bi_lﬂd_‰om_fûe
(
f
, 
x
, 
y
, 
comp
, 
ªq_comp
);

270 i‡(
d©a
)

271  
	`ldr_to_hdr
(
d©a
, *
x
, *
y
, 
ªq_comp
 ?Ñeq_com∞: *
comp
);

272  
	`ïf
("unknown imageÅype", "ImageÇot ofány knownÅype, or corrupt");

273 
	}
}

276 *
	$°bi_lﬂdf_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

278 
°bi_uc
 *
d©a
;

279 #i‚de‡
STBI_NO_HDR


280 i‡(
	`°bi_hdr_ã°_mem‹y
(
buf„r
, 
Àn
))

281  
	`°bi_hdr_lﬂd_‰om_mem‹y
(
buf„r
, 
Àn
,
x
,
y
,
comp
,
ªq_comp
);

283 
d©a
 = 
	`°bi_lﬂd_‰om_mem‹y
(
buf„r
, 
Àn
, 
x
, 
y
, 
comp
, 
ªq_comp
);

284 i‡(
d©a
)

285  
	`ldr_to_hdr
(
d©a
, *
x
, *
y
, 
ªq_comp
 ?Ñeq_com∞: *
comp
);

286  
	`ïf
("unknown imageÅype", "ImageÇot ofány knownÅype, or corrupt");

287 
	}
}

294 
	$°bi_is_hdr_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

296 #i‚de‡
STBI_NO_HDR


297  
	`°bi_hdr_ã°_mem‹y
(
buf„r
, 
Àn
);

301 
	}
}

303 #i‚de‡
STBI_NO_STDIO


304 
	$°bi_is_hdr
 (c⁄° *
fûíame
)

306 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

307 
ªsu…
=0;

308 i‡(
f
) {

309 
ªsu…
 = 
	`°bi_is_hdr_‰om_fûe
(
f
);

310 
	`f˛o£
(
f
);

312  
ªsu…
;

313 
	}
}

315 
	$°bi_is_hdr_‰om_fûe
(
FILE
 *
f
)

317 #i‚de‡
STBI_NO_HDR


318  
	`°bi_hdr_ã°_fûe
(
f
);

322 
	}
}

327 #i‚de‡
STBI_NO_STDIO


328 
°bi_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
);

329 
°bi_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

331 
°bi_öfo_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

333 #i‚de‡
STBI_NO_HDR


334 
	gh2l_gamma_i
=1.0f/2.2f, 
	gh2l_sˇÀ_i
=1.0f;

335 
	gl2h_gamma
=2.2f, 
	gl2h_sˇÀ
=1.0f;

337 
	$°bi_hdr_to_ldr_gamma
(
gamma
Ë{ 
h2l_gamma_i
 = 1/gamma; 
	}
}

338 
	$°bi_hdr_to_ldr_sˇÀ
(
sˇÀ
Ë{ 
h2l_sˇÀ_i
 = 1/sˇÀ; 
	}
}

340 
	$°bi_ldr_to_hdr_gamma
(
gamma
Ë{ 
l2h_gamma
 = gamma; 
	}
}

341 
	$°bi_ldr_to_hdr_sˇÀ
(
sˇÀ
Ë{ 
l2h_sˇÀ
 = sˇÀ; 
	}
}

352 
	mSCAN_lﬂd
=0,

353 
	mSCAN_ty≥
,

354 
	mSCAN_hódî
,

359 
uöt32
 
	mimg_x
, 
	mimg_y
;

360 
	mimg_n
, 
	mimg_out_n
;

362 #i‚de‡
STBI_NO_STDIO


363 
FILE
 *
	mimg_fûe
;

365 
uöt8
 *
	mimg_buf„r
, *
	mimg_buf„r_íd
;

366 } 
	t°bi
;

368 #i‚de‡
STBI_NO_STDIO


369 
	$°¨t_fûe
(
°bi
 *
s
, 
FILE
 *
f
)

371 
s
->
img_fûe
 = 
f
;

372 
s
->
img_buf„r
 = 
NULL
;

373 
s
->
img_buf„r_íd
 = 
NULL
;

374 
	}
}

377 
	$°¨t_mem
(
°bi
 *
s
, 
uöt8
 c⁄° *
buf„r
, 
Àn
)

379 #i‚de‡
STBI_NO_STDIO


380 
s
->
img_fûe
 = 
NULL
;

382 
s
->
img_buf„r
 = (
uöt8
 *Ë
buf„r
;

383 
s
->
img_buf„r_íd
 = (
uöt8
 *Ë
buf„r
+
Àn
;

384 
	}
}

386 
__f‹˚ölöe
 
	$gë8
(
°bi
 *
s
)

388 #i‚de‡
STBI_NO_STDIO


389 i‡(
s
->
img_fûe
) {

390 
c
 = 
	`fgëc
(
s
->
img_fûe
);

391  
c
 =
EOF
 ? 0 : c;

394 i‡(
s
->
img_buf„r
 < s->
img_buf„r_íd
)

395  *
s
->
img_buf„r
++;

397 
	}
}

399 
__f‹˚ölöe
 
	$©_eof
(
°bi
 *
s
)

401 #i‚de‡
STBI_NO_STDIO


402 i‡(
s
->
img_fûe
)

403  
	`„of
(
s
->
img_fûe
);

405  
s
->
img_buf„r
 >s->
img_buf„r_íd
;

406 
	}
}

408 
__f‹˚ölöe
 
uöt8
 
	$gë8u
(
°bi
 *
s
)

410  (
uöt8
Ë
	`gë8
(
s
);

411 
	}
}

413 
	$skù
(
°bi
 *
s
, 
n
)

415 #i‚de‡
STBI_NO_STDIO


416 i‡(
s
->
img_fûe
)

417 
	`f£ek
(
s
->
img_fûe
, 
n
, 
SEEK_CUR
);

420 
s
->
img_buf„r
 +
n
;

421 
	}
}

423 
	$gë16
(
°bi
 *
s
)

425 
z
 = 
	`gë8
(
s
);

426  (
z
 << 8Ë+ 
	`gë8
(
s
);

427 
	}
}

429 
uöt32
 
	$gë32
(
°bi
 *
s
)

431 
uöt32
 
z
 = 
	`gë16
(
s
);

432  (
z
 << 16Ë+ 
	`gë16
(
s
);

433 
	}
}

435 
	$gë16À
(
°bi
 *
s
)

437 
z
 = 
	`gë8
(
s
);

438  
z
 + (
	`gë8
(
s
) << 8);

439 
	}
}

441 
uöt32
 
	$gë32À
(
°bi
 *
s
)

443 
uöt32
 
z
 = 
	`gë16À
(
s
);

444  
z
 + (
	`gë16À
(
s
) << 16);

445 
	}
}

447 
	$gën
(
°bi
 *
s
, 
°bi_uc
 *
buf„r
, 
n
)

449 
å
;

450 #i‚de‡
STBI_NO_STDIO


451 i‡(
s
->
img_fûe
) {

452 
å
=
	`‰ód
(
buf„r
, 1, 
n
, 
s
->
img_fûe
);

456 
	`mem˝y
(
buf„r
, 
s
->
img_buf„r
, 
n
);

457 
s
->
img_buf„r
 +
n
;

458 
	}
}

471 
uöt8
 
	$compuã_y
(
r
, 
g
, 
b
)

473  (
uöt8
Ë(((
r
*77Ë+ (
g
*150Ë+ (29*
b
)) >> 8);

474 
	}
}

476 *
	$c⁄vît_f‹m©
(*
d©a
, 
img_n
, 
ªq_comp
, 
uöt
 
x
, uöà
y
)

478 
i
,
j
;

479 *
good
;

481 i‡(
ªq_comp
 =
img_n
Ë 
d©a
;

482 
	`as£π
(
ªq_comp
 >= 1 &&Ñeq_comp <= 4);

484 
good
 = (*Ë
	`mÆloc
(
ªq_comp
 * 
x
 * 
y
);

485 i‡(
good
 =
NULL
) {

486 
	`‰ì
(
d©a
);

487  
	`ïuc
("outofmem", "Out of memory");

490 
j
=0; j < (Ë
y
; ++j) {

491 *
§c
 = 
d©a
 + 
j
 * 
x
 * 
img_n
 ;

492 *
de°
 = 
good
 + 
j
 * 
x
 * 
ªq_comp
;

494 
	#COMBO
(
a
,
b
Ë(◊)*8+(b))

	)

495 
	#CASE
(
a
,
b
Ë
	`COMBO
◊,b): 
i
=
x
-1; i >0; --i, 
§c
 +a, 
de°
 +b)

	)

498 
	`COMBO
(
img_n
, 
ªq_comp
)) {

499 
	`CASE
(1,2Ë
de°
[0]=
§c
[0], dest[1]=255; ;

500 
	`CASE
(1,3Ë
de°
[0]=de°[1]=de°[2]=
§c
[0]; ;

501 
	`CASE
(1,4Ë
de°
[0]=de°[1]=de°[2]=
§c
[0], dest[3]=255; ;

502 
	`CASE
(2,1Ë
de°
[0]=
§c
[0]; ;

503 
	`CASE
(2,3Ë
de°
[0]=de°[1]=de°[2]=
§c
[0]; ;

504 
	`CASE
(2,4Ë
de°
[0]=de°[1]=de°[2]=
§c
[0], dest[3]=src[1]; ;

505 
	`CASE
(3,4Ë
de°
[0]=
§c
[0],dest[1]=src[1],dest[2]=src[2],dest[3]=255; ;

506 
	`CASE
(3,1Ë
de°
[0]=
	`compuã_y
(
§c
[0],src[1],src[2]); ;

507 
	`CASE
(3,2Ë
de°
[0]=
	`compuã_y
(
§c
[0],src[1],src[2]), dest[1] = 255; ;

508 
	`CASE
(4,1Ë
de°
[0]=
	`compuã_y
(
§c
[0],src[1],src[2]); ;

509 
	`CASE
(4,2Ë
de°
[0]=
	`compuã_y
(
§c
[0],src[1],src[2]), dest[1] = src[3]; ;

510 
	`CASE
(4,3Ë
de°
[0]=
§c
[0],dest[1]=src[1],dest[2]=src[2]; ;

511 : 
	`as£π
(0);

513 #unde‡
CASE


516 
	`‰ì
(
d©a
);

517  
good
;

518 
	}
}

520 #i‚de‡
STBI_NO_HDR


521 *
	$ldr_to_hdr
(
°bi_uc
 *
d©a
, 
x
, 
y
, 
comp
)

523 
i
,
k
,
n
;

524 *
ouçut
 = (*Ë
	`mÆloc
(
x
 * 
y
 * 
comp
 * ());

525 i‡(
ouçut
 =
NULL
Ë{ 
	`‰ì
(
d©a
);  
	`ïf
("outofmem", "Out of memory"); }

527 i‡(
comp
 & 1Ë
n
 = comp; n = comp-1;

528 
i
=0; i < 
x
*
y
; ++i) {

529 
k
=0; k < 
n
; ++k) {

530 
ouçut
[
i
*
comp
 + 
k
] = (Ë
	`pow
(
d©a
[i*comp+k]/255.0f, 
l2h_gamma
Ë* 
l2h_sˇÀ
;

532 i‡(
k
 < 
comp
Ë
ouçut
[
i
*com∞+ k] = 
d©a
[i*comp+k]/255.0f;

534 
	`‰ì
(
d©a
);

535  
ouçut
;

536 
	}
}

538 
	#Êﬂt2öt
(
x
Ë((Ë(x))

	)

539 
°bi_uc
 *
	$hdr_to_ldr
(*
d©a
, 
x
, 
y
, 
comp
)

541 
i
,
k
,
n
;

542 
°bi_uc
 *
ouçut
 = (°bi_u¯*Ë
	`mÆloc
(
x
 * 
y
 * 
comp
);

543 i‡(
ouçut
 =
NULL
Ë{ 
	`‰ì
(
d©a
);  
	`ïuc
("outofmem", "Out of memory"); }

545 i‡(
comp
 & 1Ë
n
 = comp; n = comp-1;

546 
i
=0; i < 
x
*
y
; ++i) {

547 
k
=0; k < 
n
; ++k) {

548 
z
 = (Ë
	`pow
(
d©a
[
i
*
comp
+
k
]*
h2l_sˇÀ_i
, 
h2l_gamma_i
) * 255 + 0.5f;

549 i‡(
z
 < 0) z = 0;

550 i‡(
z
 > 255) z = 255;

551 
ouçut
[
i
*
comp
 + 
k
] = 
	`Êﬂt2öt
(
z
);

553 i‡(
k
 < 
comp
) {

554 
z
 = 
d©a
[
i
*
comp
+
k
] * 255 + 0.5f;

555 i‡(
z
 < 0) z = 0;

556 i‡(
z
 > 255) z = 255;

557 
ouçut
[
i
*
comp
 + 
k
] = 
	`Êﬂt2öt
(
z
);

560 
	`‰ì
(
d©a
);

561  
ouçut
;

562 
	}
}

593 
	#FAST_BITS
 9

594 

	)

597 
uöt8
 
	mÁ°
[1 << 
FAST_BITS
];

599 
uöt16
 
	mcode
[256];

600 
uöt8
 
	mvÆues
[256];

601 
uöt8
 
	msize
[257];

602 
	mmaxcode
[18];

603 
	mdñè
[17];

604 } 
	thuffm™
;

608 #i‡
STBI_SIMD


609 
	mdequ™t2
[4][64];

611 
°bi
 
	ms
;

612 
huffm™
 
	mhuff_dc
[4];

613 
huffm™
 
	mhuff_ac
[4];

614 
uöt8
 
	mdequ™t
[4][64];

617 
	mimg_h_max
, 
	mimg_v_max
;

618 
	mimg_mcu_x
, 
	mimg_mcu_y
;

619 
	mimg_mcu_w
, 
	mimg_mcu_h
;

624 
	mid
;

625 
	mh
,
	mv
;

626 
	mtq
;

627 
	mhd
,
	mha
;

628 
	mdc_¥ed
;

630 
	mx
,
	my
,
	mw2
,
	mh2
;

631 
uöt8
 *
	md©a
;

632 *
	møw_d©a
;

633 
uöt8
 *
	mlöebuf
;

634 } 
	mimg_comp
[4];

636 
uöt32
 
	mcode_buf„r
;

637 
	mcode_bôs
;

638 
	mm¨kî
;

639 
	mnom‹e
;

641 
	msˇn_n
, 
	m‹dî
[4];

642 
	mª°¨t_öãrvÆ
, 
	mtodo
;

643 } 
	tj≥g
;

645 
	$buûd_huffm™
(
huffm™
 *
h
, *
cou¡
)

647 
i
,
j
,
k
=0,
code
;

649 
i
=0; i < 16; ++i)

650 
j
=0; j < 
cou¡
[
i
]; ++j)

651 
h
->
size
[
k
++] = (
uöt8
Ë(
i
+1);

652 
h
->
size
[
k
] = 0;

655 
code
 = 0;

656 
k
 = 0;

657 
j
=1; j <= 16; ++j) {

659 
h
->
dñè
[
j
] = 
k
 - 
code
;

660 i‡(
h
->
size
[
k
] =
j
) {

661 
h
->
size
[
k
] =
j
)

662 
h
->
code
[
k
++] = (
uöt16
) (code++);

663 i‡(
code
-1 >(1 << 
j
)Ë 
	`e
("bad codeÜengths","Corrupt JPEG");

666 
h
->
maxcode
[
j
] = 
code
 << (16-j);

667 
code
 <<= 1;

669 
h
->
maxcode
[
j
] = 0xffffffff;

672 
	`mem£t
(
h
->
Á°
, 255, 1 << 
FAST_BITS
);

673 
i
=0; i < 
k
; ++i) {

674 
s
 = 
h
->
size
[
i
];

675 i‡(
s
 <
FAST_BITS
) {

676 
c
 = 
h
->
code
[
i
] << (
FAST_BITS
-
s
);

677 
m
 = 1 << (
FAST_BITS
-
s
);

678 
j
=0; j < 
m
; ++j) {

679 
h
->
Á°
[
c
+
j
] = (
uöt8
Ë
i
;

684 
	}
}

686 
	$grow_buf„r_unß„
(
j≥g
 *
j
)

689 
b
 = 
j
->
nom‹e
 ? 0 : 
	`gë8
(&j->
s
);

690 i‡(
b
 == 0xff) {

691 
c
 = 
	`gë8
(&
j
->
s
);

692 i‡(
c
 != 0) {

693 
j
->
m¨kî
 = (Ë
c
;

694 
j
->
nom‹e
 = 1;

698 
j
->
code_buf„r
 = (j->code_buf„∏<< 8Ë| 
b
;

699 
j
->
code_bôs
 += 8;

700 } 
j
->
code_bôs
 <= 24);

701 
	}
}

704 
uöt32
 
	gbmask
[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};

707 
__f‹˚ölöe
 
	$decode
(
j≥g
 *
j
, 
huffm™
 *
h
)

709 
ãmp
;

710 
c
,
k
;

712 i‡(
j
->
code_bôs
 < 16Ë
	`grow_buf„r_unß„
(j);

716 
c
 = (
j
->
code_buf„r
 >> (j->
code_bôs
 - 
FAST_BITS
)) & ((1 << FAST_BITS)-1);

717 
k
 = 
h
->
Á°
[
c
];

718 i‡(
k
 < 255) {

719 i‡(
h
->
size
[
k
] > 
j
->
code_bôs
)

721 
j
->
code_bôs
 -
h
->
size
[
k
];

722  
h
->
vÆues
[
k
];

731 i‡(
j
->
code_bôs
 < 16)

732 
ãmp
 = (
j
->
code_buf„r
 << (16 - j->
code_bôs
)) & 0xffff;

734 
ãmp
 = (
j
->
code_buf„r
 >> (j->
code_bôs
 - 16)) & 0xffff;

735 
k
=
FAST_BITS
+1 ; ; ++k)

736 i‡(
ãmp
 < 
h
->
maxcode
[
k
])

738 i‡(
k
 == 17) {

740 
j
->
code_bôs
 -= 16;

744 i‡(
k
 > 
j
->
code_bôs
)

748 
c
 = ((
j
->
code_buf„r
 >> (j->
code_bôs
 - 
k
)Ë& 
bmask
[k]Ë+ 
h
->
dñè
[k];

749 
	`as£π
((((
j
->
code_buf„r
Ë>> (j->
code_bôs
 - 
h
->
size
[
c
])Ë& 
bmask
[h->size[c]]Ë=h->
code
[c]);

752 
j
->
code_bôs
 -
k
;

753  
h
->
vÆues
[
c
];

754 
	}
}

758 
__f‹˚ölöe
 
	$exãnd_ª˚ive
(
j≥g
 *
j
, 
n
)

760 
m
 = 1 << (
n
-1);

761 
k
;

762 i‡(
j
->
code_bôs
 < 
n
Ë
	`grow_buf„r_unß„
(j);

763 
k
 = (
j
->
code_buf„r
 >> (j->
code_bôs
 - 
n
)Ë& 
bmask
[n];

764 
j
->
code_bôs
 -
n
;

768 i‡(
k
 < 
m
)

769  (-1 << 
n
Ë+ 
k
 + 1;

771  
k
;

772 
	}
}

776 
uöt8
 
	gdezigzag
[64+15] =

792 
	$decode_block
(
j≥g
 *
j
, 
d©a
[64], 
huffm™
 *
hdc
, huffm™ *
hac
, 
b
)

794 
diff
,
dc
,
k
;

795 
t
 = 
	`decode
(
j
, 
hdc
);

796 i‡(
t
 < 0Ë 
	`e
("bad huffman code","Corrupt JPEG");

799 
	`mem£t
(
d©a
,0,64*(data[0]));

801 
diff
 = 
t
 ? 
	`exãnd_ª˚ive
(
j
,Å) : 0;

802 
dc
 = 
j
->
img_comp
[
b
].
dc_¥ed
 + 
diff
;

803 
j
->
img_comp
[
b
].
dc_¥ed
 = 
dc
;

804 
d©a
[0] = (Ë
dc
;

807 
k
 = 1;

809 
r
,
s
;

810 
rs
 = 
	`decode
(
j
, 
hac
);

811 i‡(
rs
 < 0Ë 
	`e
("bad huffman code","Corrupt JPEG");

812 
s
 = 
rs
 & 15;

813 
r
 = 
rs
 >> 4;

814 i‡(
s
 == 0) {

815 i‡(
rs
 != 0xf0) ;

816 
k
 += 16;

818 
k
 +
r
;

820 
d©a
[
dezigzag
[
k
++]] = (Ë
	`exãnd_ª˚ive
(
j
,
s
);

822 } 
k
 < 64);

824 
	}
}

827 
__f‹˚ölöe
 
uöt8
 
	$˛amp
(
x
)

829 
x
 += 128;

831 i‡((Ë
x
 > 255) {

832 i‡(
x
 < 0)  0;

833 i‡(
x
 > 255)  255;

835  (
uöt8
Ë
x
;

836 
	}
}

838 
	#f2f
(
x
Ë(Ë(((xË* 4096 + 0.5))

	)

839 
	#fsh
(
x
Ë((xË<< 12)

	)

842 
	#IDCT_1D
(
s0
,
s1
,
s2
,
s3
,
s4
,
s5
,
s6
,
s7
) \

843 
t0
,
t1
,
t2
,
t3
,
p1
,
p2
,
p3
,
p4
,
p5
,
x0
,
x1
,
x2
,
x3
; \

844 
p2
 = 
s2
; \

845 
p3
 = 
s6
; \

846 
p1
 = (
p2
+
p3
Ë* 
	`f2f
(0.5411961f); \

847 
t2
 = 
p1
 + 
p3
*
	`f2f
(-1.847759065f); \

848 
t3
 = 
p1
 + 
p2
*
	`f2f
( 0.765366865f); \

849 
p2
 = 
s0
; \

850 
p3
 = 
s4
; \

851 
t0
 = 
	`fsh
(
p2
+
p3
); \

852 
t1
 = 
	`fsh
(
p2
-
p3
); \

853 
x0
 = 
t0
+
t3
; \

854 
x3
 = 
t0
-
t3
; \

855 
x1
 = 
t1
+
t2
; \

856 
x2
 = 
t1
-
t2
; \

857 
t0
 = 
s7
; \

858 
t1
 = 
s5
; \

859 
t2
 = 
s3
; \

860 
t3
 = 
s1
; \

861 
p3
 = 
t0
+
t2
; \

862 
p4
 = 
t1
+
t3
; \

863 
p1
 = 
t0
+
t3
; \

864 
p2
 = 
t1
+
t2
; \

865 
p5
 = (
p3
+
p4
)*
	`f2f
( 1.175875602f); \

866 
t0
 =Å0*
	`f2f
( 0.298631336f); \

867 
t1
 =Å1*
	`f2f
( 2.053119869f); \

868 
t2
 =Å2*
	`f2f
( 3.072711026f); \

869 
t3
 =Å3*
	`f2f
( 1.501321110f); \

870 
p1
 = 
p5
 +Ö1*
	`f2f
(-0.899976223f); \

871 
p2
 = 
p5
 +Ö2*
	`f2f
(-2.562915447f); \

872 
p3
 =Ö3*
	`f2f
(-1.961570560f); \

873 
p4
 =Ö4*
	`f2f
(-0.390180644f); \

874 
t3
 +
p1
+
p4
; \

875 
t2
 +
p2
+
p3
; \

876 
t1
 +
p2
+
p4
; \

877 
t0
 +
p1
+
p3
;

	)

879 #i‡!
STBI_SIMD


881 
	$id˘_block
(
uöt8
 *
out
, 
out_°ride
, 
d©a
[64], uöt8 *
dequ™tize
)

883 
i
,
vÆ
[64],*
v
=val;

884 
uöt8
 *
o
,*
dq
 = 
dequ™tize
;

885 *
d
 = 
d©a
;

888 
i
=0; i < 8; ++i,++
d
,++
dq
, ++
v
) {

890 i‡(
d
[ 8]==0 && d[16]==0 && d[24]==0 && d[32]==0

891 && 
d
[40]==0 && d[48]==0 && d[56]==0) {

896 
d˘îm
 = 
d
[0] * 
dq
[0] << 2;

897 
v
[0] = v[8] = v[16] = v[24] = v[32] = v[40] = v[48] = v[56] = 
d˘îm
;

899 
	`IDCT_1D
(
d
[ 0]*
dq
[ 0],d[ 8]*dq[ 8],d[16]*dq[16],d[24]*dq[24],

900 
d
[32]*
dq
[32],d[40]*dq[40],d[48]*dq[48],d[56]*dq[56])

903 
x0
 +512; 
x1
 +512; 
x2
 +512; 
x3
 += 512;

904 
v
[ 0] = (
x0
+
t3
) >> 10;

905 
v
[56] = (
x0
-
t3
) >> 10;

906 
v
[ 8] = (
x1
+
t2
) >> 10;

907 
v
[48] = (
x1
-
t2
) >> 10;

908 
v
[16] = (
x2
+
t1
) >> 10;

909 
v
[40] = (
x2
-
t1
) >> 10;

910 
v
[24] = (
x3
+
t0
) >> 10;

911 
v
[32] = (
x3
-
t0
) >> 10;

915 
i
=0, 
v
=
vÆ
, 
o
=
out
; i < 8; ++i,v+=8,o+=
out_°ride
) {

917 
	`IDCT_1D
(
v
[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7])

921 
x0
 +65536; 
x1
 +65536; 
x2
 +65536; 
x3
 += 65536;

922 
o
[0] = 
	`˛amp
((
x0
+
t3
) >> 17);

923 
o
[7] = 
	`˛amp
((
x0
-
t3
) >> 17);

924 
o
[1] = 
	`˛amp
((
x1
+
t2
) >> 17);

925 
o
[6] = 
	`˛amp
((
x1
-
t2
) >> 17);

926 
o
[2] = 
	`˛amp
((
x2
+
t1
) >> 17);

927 
o
[5] = 
	`˛amp
((
x2
-
t1
) >> 17);

928 
o
[3] = 
	`˛amp
((
x3
+
t0
) >> 17);

929 
o
[4] = 
	`˛amp
((
x3
-
t0
) >> 17);

931 
	}
}

933 
	$id˘_block
(
uöt8
 *
out
, 
out_°ride
, 
d©a
[64], *
dequ™tize
)

935 
i
,
vÆ
[64],*
v
=val;

936 
uöt8
 *
o
;

937 *
dq
 = 
dequ™tize
;

938 *
d
 = 
d©a
;

941 
i
=0; i < 8; ++i,++
d
,++
dq
, ++
v
) {

943 i‡(
d
[ 8]==0 && d[16]==0 && d[24]==0 && d[32]==0

944 && 
d
[40]==0 && d[48]==0 && d[56]==0) {

949 
d˘îm
 = 
d
[0] * 
dq
[0] << 2;

950 
v
[0] = v[8] = v[16] = v[24] = v[32] = v[40] = v[48] = v[56] = 
d˘îm
;

952 
	`IDCT_1D
(
d
[ 0]*
dq
[ 0],d[ 8]*dq[ 8],d[16]*dq[16],d[24]*dq[24],

953 
d
[32]*
dq
[32],d[40]*dq[40],d[48]*dq[48],d[56]*dq[56])

956 
x0
 +512; 
x1
 +512; 
x2
 +512; 
x3
 += 512;

957 
v
[ 0] = (
x0
+
t3
) >> 10;

958 
v
[56] = (
x0
-
t3
) >> 10;

959 
v
[ 8] = (
x1
+
t2
) >> 10;

960 
v
[48] = (
x1
-
t2
) >> 10;

961 
v
[16] = (
x2
+
t1
) >> 10;

962 
v
[40] = (
x2
-
t1
) >> 10;

963 
v
[24] = (
x3
+
t0
) >> 10;

964 
v
[32] = (
x3
-
t0
) >> 10;

968 
i
=0, 
v
=
vÆ
, 
o
=
out
; i < 8; ++i,v+=8,o+=
out_°ride
) {

970 
	`IDCT_1D
(
v
[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7])

974 
x0
 +65536; 
x1
 +65536; 
x2
 +65536; 
x3
 += 65536;

975 
o
[0] = 
	`˛amp
((
x0
+
t3
) >> 17);

976 
o
[7] = 
	`˛amp
((
x0
-
t3
) >> 17);

977 
o
[1] = 
	`˛amp
((
x1
+
t2
) >> 17);

978 
o
[6] = 
	`˛amp
((
x1
-
t2
) >> 17);

979 
o
[2] = 
	`˛amp
((
x2
+
t1
) >> 17);

980 
o
[5] = 
	`˛amp
((
x2
-
t1
) >> 17);

981 
o
[3] = 
	`˛amp
((
x3
+
t0
) >> 17);

982 
o
[4] = 
	`˛amp
((
x3
-
t0
) >> 17);

984 
	}
}

985 
°bi_id˘_8x8
 
	g°bi_id˘_ö°ÆÀd
 = 
id˘_block
;

987 
	$°bi_ö°Æl_id˘
(
°bi_id˘_8x8
 
func
)

989 
°bi_id˘_ö°ÆÀd
 = 
func
;

990 
	}
}

993 
	#MARKER_n⁄e
 0xff

	)

997 
uöt8
 
	$gë_m¨kî
(
j≥g
 *
j
)

999 
uöt8
 
x
;

1000 i‡(
j
->
m¨kî
 !
MARKER_n⁄e
Ë{ 
x
 = j->marker; j->marker = MARKER_none;  x; }

1001 
x
 = 
	`gë8u
(&
j
->
s
);

1002 i‡(
x
 !0xffË 
MARKER_n⁄e
;

1003 
x
 == 0xff)

1004 
x
 = 
	`gë8u
(&
j
->
s
);

1005  
x
;

1006 
	}
}

1010 
	#RESTART
(
x
Ë((xË>0xd0 && (xË<0xd7)

	)

1014 
	$ª£t
(
j≥g
 *
j
)

1016 
j
->
code_bôs
 = 0;

1017 
j
->
code_buf„r
 = 0;

1018 
j
->
nom‹e
 = 0;

1019 
j
->
img_comp
[0].
dc_¥ed
 = j->img_comp[1].dc_pred = j->img_comp[2].dc_pred = 0;

1020 
j
->
m¨kî
 = 
MARKER_n⁄e
;

1021 
j
->
todo
 = j->
ª°¨t_öãrvÆ
 ? j->restart_interval : 0x7fffffff;

1024 
	}
}

1026 
	$∑r£_íå›y_coded_d©a
(
j≥g
 *
z
)

1028 
	`ª£t
(
z
);

1029 i‡(
z
->
sˇn_n
 == 1) {

1030 
i
,
j
;

1031 #i‡
STBI_SIMD


1032 
	`__de˛•ec
(
	`Æign
(16))

1034 
d©a
[64];

1035 
n
 = 
z
->
‹dî
[0];

1040 
w
 = (
z
->
img_comp
[
n
].
x
+7) >> 3;

1041 
h
 = (
z
->
img_comp
[
n
].
y
+7) >> 3;

1042 
j
=0; j < 
h
; ++j) {

1043 
i
=0; i < 
w
; ++i) {

1044 i‡(!
	`decode_block
(
z
, 
d©a
, z->
huff_dc
+z->
img_comp
[
n
].
hd
, z->
huff_ac
+z->img_comp[n].
ha
,Ç))  0;

1045 #i‡
STBI_SIMD


1046 
	`°bi_id˘_ö°ÆÀd
(
z
->
img_comp
[
n
].
d©a
+z->img_comp[n].
w2
*
j
*8+
i
*8, z->img_comp[n].w2, d©a, z->
dequ™t2
[z->img_comp[n].
tq
]);

1048 
	`id˘_block
(
z
->
img_comp
[
n
].
d©a
+z->img_comp[n].
w2
*
j
*8+
i
*8, z->img_comp[n].w2, d©a, z->
dequ™t
[z->img_comp[n].
tq
]);

1051 i‡(--
z
->
todo
 <= 0) {

1052 i‡(
z
->
code_bôs
 < 24Ë
	`grow_buf„r_unß„
(z);

1055 i‡(!
	`RESTART
(
z
->
m¨kî
))  1;

1056 
	`ª£t
(
z
);

1061 
i
,
j
,
k
,
x
,
y
;

1062 
d©a
[64];

1063 
j
=0; j < 
z
->
img_mcu_y
; ++j) {

1064 
i
=0; i < 
z
->
img_mcu_x
; ++i) {

1066 
k
=0; k < 
z
->
sˇn_n
; ++k) {

1067 
n
 = 
z
->
‹dî
[
k
];

1070 
y
=0; y < 
z
->
img_comp
[
n
].
v
; ++y) {

1071 
x
=0; x < 
z
->
img_comp
[
n
].
h
; ++x) {

1072 
x2
 = (
i
*
z
->
img_comp
[
n
].
h
 + 
x
)*8;

1073 
y2
 = (
j
*
z
->
img_comp
[
n
].
v
 + 
y
)*8;

1074 i‡(!
	`decode_block
(
z
, 
d©a
, z->
huff_dc
+z->
img_comp
[
n
].
hd
, z->
huff_ac
+z->img_comp[n].
ha
,Ç))  0;

1075 #i‡
STBI_SIMD


1076 
	`°bi_id˘_ö°ÆÀd
(
z
->
img_comp
[
n
].
d©a
+z->img_comp[n].
w2
*
y2
+
x2
, z->img_comp[n].w2, d©a, z->
dequ™t2
[z->img_comp[n].
tq
]);

1078 
	`id˘_block
(
z
->
img_comp
[
n
].
d©a
+z->img_comp[n].
w2
*
y2
+
x2
, z->img_comp[n].w2, d©a, z->
dequ™t
[z->img_comp[n].
tq
]);

1085 i‡(--
z
->
todo
 <= 0) {

1086 i‡(
z
->
code_bôs
 < 24Ë
	`grow_buf„r_unß„
(z);

1089 i‡(!
	`RESTART
(
z
->
m¨kî
))  1;

1090 
	`ª£t
(
z
);

1096 
	}
}

1098 
	$¥o˚ss_m¨kî
(
j≥g
 *
z
, 
m
)

1100 
L
;

1101 
m
) {

1102 
MARKER_n⁄e
:

1103  
	`e
("expected marker","Corrupt JPEG");

1106  
	`e
("progressive jpeg","JPEG formatÇot supported (progressive)");

1109 i‡(
	`gë16
(&
z
->
s
Ë!4Ë 
	`e
("bad DRIÜen","Corrupt JPEG");

1110 
z
->
ª°¨t_öãrvÆ
 = 
	`gë16
(&z->
s
);

1114 
L
 = 
	`gë16
(&
z
->
s
)-2;

1115 
L
 > 0) {

1116 
q
 = 
	`gë8
(&
z
->
s
);

1117 
p
 = 
q
 >> 4;

1118 
t
 = 
q
 & 15,
i
;

1119 i‡(
p
 !0Ë 
	`e
("bad DQTÅype","Corrupt JPEG");

1120 i‡(
t
 > 3Ë 
	`e
("bad DQTÅable","Corrupt JPEG");

1121 
i
=0; i < 64; ++i)

1122 
z
->
dequ™t
[
t
][
dezigzag
[
i
]] = 
	`gë8u
(&z->
s
);

1123 #i‡
STBI_SIMD


1124 
i
=0; i < 64; ++i)

1125 
z
->
dequ™t2
[
t
][
i
] = z->
dequ™t
[t][i];

1127 
L
 -= 65;

1129  
L
==0;

1132 
L
 = 
	`gë16
(&
z
->
s
)-2;

1133 
L
 > 0) {

1134 
uöt8
 *
v
;

1135 
sizes
[16],
i
,
m
=0;

1136 
q
 = 
	`gë8
(&
z
->
s
);

1137 
tc
 = 
q
 >> 4;

1138 
th
 = 
q
 & 15;

1139 i‡(
tc
 > 1 || 
th
 > 3Ë 
	`e
("bad DHT header","Corrupt JPEG");

1140 
i
=0; i < 16; ++i) {

1141 
sizes
[
i
] = 
	`gë8
(&
z
->
s
);

1142 
m
 +
sizes
[
i
];

1144 
L
 -= 17;

1145 i‡(
tc
 == 0) {

1146 i‡(!
	`buûd_huffm™
(
z
->
huff_dc
+
th
, 
sizes
))  0;

1147 
v
 = 
z
->
huff_dc
[
th
].
vÆues
;

1149 i‡(!
	`buûd_huffm™
(
z
->
huff_ac
+
th
, 
sizes
))  0;

1150 
v
 = 
z
->
huff_ac
[
th
].
vÆues
;

1152 
i
=0; i < 
m
; ++i)

1153 
v
[
i
] = 
	`gë8u
(&
z
->
s
);

1154 
L
 -
m
;

1156  
L
==0;

1159 i‡((
m
 >= 0xE0 && m <= 0xEF) || m == 0xFE) {

1160 
	`skù
(&
z
->
s
, 
	`gë16
(&z->s)-2);

1164 
	}
}

1167 
	$¥o˚ss_sˇn_hódî
(
j≥g
 *
z
)

1169 
i
;

1170 
Ls
 = 
	`gë16
(&
z
->
s
);

1171 
z
->
sˇn_n
 = 
	`gë8
(&z->
s
);

1172 i‡(
z
->
sˇn_n
 < 1 || z->sˇn_¿> 4 || z->sˇn_¿> (Ëz->
s
.
img_n
Ë 
	`e
("bad SOS component count","Corrupt JPEG");

1173 i‡(
Ls
 !6+2*
z
->
sˇn_n
Ë 
	`e
("bad SOSÜen","Corrupt JPEG");

1174 
i
=0; i < 
z
->
sˇn_n
; ++i) {

1175 
id
 = 
	`gë8
(&
z
->
s
), 
which
;

1176 
q
 = 
	`gë8
(&
z
->
s
);

1177 
which
 = 0; which < 
z
->
s
.
img_n
; ++which)

1178 i‡(
z
->
img_comp
[
which
].
id
 == id)

1180 i‡(
which
 =
z
->
s
.
img_n
)  0;

1181 
z
->
img_comp
[
which
].
hd
 = 
q
 >> 4; i‡(z->img_comp[which].hd > 3Ë 
	`e
("bad DC huff","Corrupt JPEG");

1182 
z
->
img_comp
[
which
].
ha
 = 
q
 & 15; i‡(z->img_comp[which].h®> 3Ë 
	`e
("bad AC huff","Corrupt JPEG");

1183 
z
->
‹dî
[
i
] = 
which
;

1185 i‡(
	`gë8
(&
z
->
s
Ë!0Ë 
	`e
("bad SOS","Corrupt JPEG");

1186 
	`gë8
(&
z
->
s
);

1187 i‡(
	`gë8
(&
z
->
s
Ë!0Ë 
	`e
("bad SOS","Corrupt JPEG");

1190 
	}
}

1192 
	$¥o˚ss_‰ame_hódî
(
j≥g
 *
z
, 
sˇn
)

1194 
°bi
 *
s
 = &
z
->s;

1195 
Lf
,
p
,
i
,
q
, 
h_max
=1,
v_max
=1,
c
;

1196 
Lf
 = 
	`gë16
(
s
); i‡(L‡< 11Ë 
	`e
("bad SOFÜen","Corrupt JPEG");

1197 
p
 = 
	`gë8
(
s
); i‡’ !8Ë 
	`e
("only 8-bit","JPEG formatÇot supported: 8-bit only");

1198 
s
->
img_y
 = 
	`gë16
(s); i‡(s->img_y =0Ë 
	`e
("no header height", "JPEG formatÇot supported: delayed height");

1199 
s
->
img_x
 = 
	`gë16
(s); i‡(s->img_x =0Ë 
	`e
("0 width","Corrupt JPEG");

1200 
c
 = 
	`gë8
(
s
);

1201 i‡(
c
 !3 && c !1Ë 
	`e
("bad component count","Corrupt JPEG");

1202 
s
->
img_n
 = 
c
;

1203 
i
=0; i < 
c
; ++i) {

1204 
z
->
img_comp
[
i
].
d©a
 = 
NULL
;

1205 
z
->
img_comp
[
i
].
löebuf
 = 
NULL
;

1208 i‡(
Lf
 !8+3*
s
->
img_n
Ë 
	`e
("bad SOFÜen","Corrupt JPEG");

1210 
i
=0; i < 
s
->
img_n
; ++i) {

1211 
z
->
img_comp
[
i
].
id
 = 
	`gë8
(
s
);

1212 i‡(
z
->
img_comp
[
i
].
id
 != i+1)

1213 i‡(
z
->
img_comp
[
i
].
id
 != i)

1214  
	`e
("bad component ID","Corrupt JPEG");

1215 
q
 = 
	`gë8
(
s
);

1216 
z
->
img_comp
[
i
].
h
 = (
q
 >> 4); i‡(!z->img_comp[i].h || z->img_comp[i].h > 4Ë 
	`e
("bad H","Corrupt JPEG");

1217 
z
->
img_comp
[
i
].
v
 = 
q
 & 15; i‡(!z->img_comp[i].v || z->img_comp[i].v > 4Ë 
	`e
("bad V","Corrupt JPEG");

1218 
z
->
img_comp
[
i
].
tq
 = 
	`gë8
(
s
); i‡(z->img_comp[i].tq > 3Ë 
	`e
("bad TQ","Corrupt JPEG");

1221 i‡(
sˇn
 !
SCAN_lﬂd
)  1;

1223 i‡((1 << 30Ë/ 
s
->
img_x
 / s->
img_n
 < s->
img_y
Ë 
	`e
("tooÜarge", "ImageÅooÜargeÅo decode");

1225 
i
=0; i < 
s
->
img_n
; ++i) {

1226 i‡(
z
->
img_comp
[
i
].
h
 > 
h_max
) h_max = z->img_comp[i].h;

1227 i‡(
z
->
img_comp
[
i
].
v
 > 
v_max
) v_max = z->img_comp[i].v;

1231 
z
->
img_h_max
 = 
h_max
;

1232 
z
->
img_v_max
 = 
v_max
;

1233 
z
->
img_mcu_w
 = 
h_max
 * 8;

1234 
z
->
img_mcu_h
 = 
v_max
 * 8;

1235 
z
->
img_mcu_x
 = (
s
->
img_x
 + z->
img_mcu_w
-1) / z->img_mcu_w;

1236 
z
->
img_mcu_y
 = (
s
->
img_y
 + z->
img_mcu_h
-1) / z->img_mcu_h;

1238 
i
=0; i < 
s
->
img_n
; ++i) {

1240 
z
->
img_comp
[
i
].
x
 = (
s
->
img_x
 * z->img_comp[i].
h
 + 
h_max
-1) / h_max;

1241 
z
->
img_comp
[
i
].
y
 = (
s
->
img_y
 * z->img_comp[i].
v
 + 
v_max
-1) / v_max;

1246 
z
->
img_comp
[
i
].
w2
 = z->
img_mcu_x
 * z->img_comp[i].
h
 * 8;

1247 
z
->
img_comp
[
i
].
h2
 = z->
img_mcu_y
 * z->img_comp[i].
v
 * 8;

1248 
z
->
img_comp
[
i
].
øw_d©a
 = 
	`mÆloc
(z->img_comp[i].
w2
 * z->img_comp[i].
h2
+15);

1249 i‡(
z
->
img_comp
[
i
].
øw_d©a
 =
NULL
) {

1250 --
i
; i >= 0; --i) {

1251 
	`‰ì
(
z
->
img_comp
[
i
].
øw_d©a
);

1252 
z
->
img_comp
[
i
].
d©a
 = 
NULL
;

1254  
	`e
("outofmem", "Out of memory");

1257 
z
->
img_comp
[
i
].
d©a
 = (
uöt8
*Ë(((
size_t
Ëz->img_comp[i].
øw_d©a
 + 15) & ~15);

1258 
z
->
img_comp
[
i
].
löebuf
 = 
NULL
;

1262 
	}
}

1265 
	#DNL
(
x
Ë((xË=0xdc)

	)

1266 
	#SOI
(
x
Ë((xË=0xd8)

	)

1267 
	#EOI
(
x
Ë((xË=0xd9)

	)

1268 
	#SOF
(
x
Ë((xË=0xc0 || (xË=0xc1)

	)

1269 
	#SOS
(
x
Ë((xË=0xda)

	)

1271 
	$decode_j≥g_hódî
(
j≥g
 *
z
, 
sˇn
)

1273 
m
;

1274 
z
->
m¨kî
 = 
MARKER_n⁄e
;

1275 
m
 = 
	`gë_m¨kî
(
z
);

1276 i‡(!
	`SOI
(
m
)Ë 
	`e
("no SOI","Corrupt JPEG");

1277 i‡(
sˇn
 =
SCAN_ty≥
)  1;

1278 
m
 = 
	`gë_m¨kî
(
z
);

1279 !
	`SOF
(
m
)) {

1280 i‡(!
	`¥o˚ss_m¨kî
(
z
,
m
))  0;

1281 
m
 = 
	`gë_m¨kî
(
z
);

1282 
m
 =
MARKER_n⁄e
) {

1284 i‡(
	`©_eof
(&
z
->
s
)Ë 
	`e
("no SOF", "Corrupt JPEG");

1285 
m
 = 
	`gë_m¨kî
(
z
);

1288 i‡(!
	`¥o˚ss_‰ame_hódî
(
z
, 
sˇn
))  0;

1290 
	}
}

1292 
	$decode_j≥g_image
(
j≥g
 *
j
)

1294 
m
;

1295 
j
->
ª°¨t_öãrvÆ
 = 0;

1296 i‡(!
	`decode_j≥g_hódî
(
j
, 
SCAN_lﬂd
))  0;

1297 
m
 = 
	`gë_m¨kî
(
j
);

1298 !
	`EOI
(
m
)) {

1299 i‡(
	`SOS
(
m
)) {

1300 i‡(!
	`¥o˚ss_sˇn_hódî
(
j
))  0;

1301 i‡(!
	`∑r£_íå›y_coded_d©a
(
j
))  0;

1303 i‡(!
	`¥o˚ss_m¨kî
(
j
, 
m
))  0;

1305 
m
 = 
	`gë_m¨kî
(
j
);

1308 
	}
}

1312 
uöt8
 *(*
	tªßm∂e_row_func
)(
	tuöt8
 *
	tout
, uöt8 *
	tö0
, uöt8 *
	tö1
,

1313 
	tw
, 
	ths
);

1315 
	#div4
(
x
Ë((
uöt8
Ë((xË>> 2))

	)

1317 
uöt8
 *
	$ªßm∂e_row_1
(
uöt8
 *
out
, uöt8 *
ö_√¨
, uöt8 *
ö_Ár
, 
w
, 
hs
)

1319  
ö_√¨
;

1320 
	}
}

1322 
uöt8
* 
	$ªßm∂e_row_v_2
(
uöt8
 *
out
, uöt8 *
ö_√¨
, uöt8 *
ö_Ár
, 
w
, 
hs
)

1325 
i
;

1326 
i
=0; i < 
w
; ++i)

1327 
out
[
i
] = 
	`div4
(3*
ö_√¨
[i] + 
ö_Ár
[i] + 2);

1328  
out
;

1329 
	}
}

1331 
uöt8
* 
	$ªßm∂e_row_h_2
(
uöt8
 *
out
, uöt8 *
ö_√¨
, uöt8 *
ö_Ár
, 
w
, 
hs
)

1334 
i
;

1335 
uöt8
 *
öput
 = 
ö_√¨
;

1336 i‡(
w
 == 1) {

1338 
out
[0] = out[1] = 
öput
[0];

1339  
out
;

1342 
out
[0] = 
öput
[0];

1343 
out
[1] = 
	`div4
(
öput
[0]*3 + input[1] + 2);

1344 
i
=1; i < 
w
-1; ++i) {

1345 
n
 = 3*
öput
[
i
]+2;

1346 
out
[
i
*2+0] = 
	`div4
(
n
+
öput
[i-1]);

1347 
out
[
i
*2+1] = 
	`div4
(
n
+
öput
[i+1]);

1349 
out
[
i
*2+0] = 
	`div4
(
öput
[
w
-2]*3 + input[w-1] + 2);

1350 
out
[
i
*2+1] = 
öput
[
w
-1];

1351  
out
;

1352 
	}
}

1354 
	#div16
(
x
Ë((
uöt8
Ë((xË>> 4))

	)

1356 
uöt8
 *
	$ªßm∂e_row_hv_2
(
uöt8
 *
out
, uöt8 *
ö_√¨
, uöt8 *
ö_Ár
, 
w
, 
hs
)

1359 
i
,
t0
,
t1
;

1360 i‡(
w
 == 1) {

1361 
out
[0] = out[1] = 
	`div4
(3*
ö_√¨
[0] + 
ö_Ár
[0] + 2);

1362  
out
;

1365 
t1
 = 3*
ö_√¨
[0] + 
ö_Ár
[0];

1366 
out
[0] = 
	`div4
(
t1
+2);

1367 
i
=1; i < 
w
; ++i) {

1368 
t0
 = 
t1
;

1369 
t1
 = 3*
ö_√¨
[
i
]+
ö_Ár
[i];

1370 
out
[
i
*2-1] = 
	`div16
(3*
t0
 + 
t1
 + 8);

1371 
out
[
i
*2 ] = 
	`div16
(3*
t1
 + 
t0
 + 8);

1373 
out
[
w
*2-1] = 
	`div4
(
t1
+2);

1374  
out
;

1375 
	}
}

1377 
uöt8
 *
	$ªßm∂e_row_gíîic
(
uöt8
 *
out
, uöt8 *
ö_√¨
, uöt8 *
ö_Ár
, 
w
, 
hs
)

1380 
i
,
j
;

1381 
i
=0; i < 
w
; ++i)

1382 
j
=0; j < 
hs
; ++j)

1383 
out
[
i
*
hs
+
j
] = 
ö_√¨
[i];

1384  
out
;

1385 
	}
}

1387 
	#Êﬂt2fixed
(
x
Ë((Ë((xË* 65536 + 0.5))

	)

1391 
	$YCbCr_to_RGB_row
(
uöt8
 *
out
, c⁄° uöt8 *
y
, c⁄° uöt8 *
pcb
, c⁄° uöt8 *
p¸
, 
cou¡
, 
°ï
)

1393 
i
;

1394 
i
=0; i < 
cou¡
; ++i) {

1395 
y_fixed
 = (
y
[
i
] << 16) + 32768;

1396 
r
,
g
,
b
;

1397 
¸
 = 
p¸
[
i
] - 128;

1398 
cb
 = 
pcb
[
i
] - 128;

1399 
r
 = 
y_fixed
 + 
¸
*
	`Êﬂt2fixed
(1.40200f);

1400 
g
 = 
y_fixed
 - 
¸
*
	`Êﬂt2fixed
(0.71414fË- 
cb
*float2fixed(0.34414f);

1401 
b
 = 
y_fixed
 + 
cb
*
	`Êﬂt2fixed
(1.77200f);

1402 
r
 >>= 16;

1403 
g
 >>= 16;

1404 
b
 >>= 16;

1405 i‡((Ë
r
 > 255) { if (r < 0)Ñ = 0; r = 255; }

1406 i‡((Ë
g
 > 255) { if (g < 0) g = 0; g = 255; }

1407 i‡((Ë
b
 > 255) { if (b < 0) b = 0; b = 255; }

1408 
out
[0] = (
uöt8
)
r
;

1409 
out
[1] = (
uöt8
)
g
;

1410 
out
[2] = (
uöt8
)
b
;

1411 
out
[3] = 255;

1412 
out
 +
°ï
;

1414 
	}
}

1416 #i‡
STBI_SIMD


1417 
°bi_YCbCr_to_RGB_run
 
	g°bi_YCbCr_ö°ÆÀd
 = 
YCbCr_to_RGB_row
;

1419 
	$°bi_ö°Æl_YCbCr_to_RGB
(
°bi_YCbCr_to_RGB_run
 
func
)

1421 
°bi_YCbCr_ö°ÆÀd
 = 
func
;

1422 
	}
}

1427 
	$˛ónup_j≥g
(
j≥g
 *
j
)

1429 
i
;

1430 
i
=0; i < 
j
->
s
.
img_n
; ++i) {

1431 i‡(
j
->
img_comp
[
i
].
d©a
) {

1432 
	`‰ì
(
j
->
img_comp
[
i
].
øw_d©a
);

1433 
j
->
img_comp
[
i
].
d©a
 = 
NULL
;

1435 i‡(
j
->
img_comp
[
i
].
löebuf
) {

1436 
	`‰ì
(
j
->
img_comp
[
i
].
löebuf
);

1437 
j
->
img_comp
[
i
].
löebuf
 = 
NULL
;

1440 
	}
}

1444 
ªßm∂e_row_func
 
	mªßm∂e
;

1445 
uöt8
 *
	mlöe0
,*
	mlöe1
;

1446 
	mhs
,
	mvs
;

1447 
	mw_l‹es
;

1448 
	my°ï
;

1449 
	mypos
;

1450 } 
	t°bi_ªßm∂e
;

1452 
uöt8
 *
	$lﬂd_j≥g_image
(
j≥g
 *
z
, *
out_x
, *
out_y
, *
comp
, 
ªq_comp
)

1454 
n
, 
decode_n
;

1456 i‡(
ªq_comp
 < 0 ||Ñeq_com∞> 4Ë 
	`ïuc
("badÑeq_comp", "InternalÉrror");

1457 
z
->
s
.
img_n
 = 0;

1460 i‡(!
	`decode_j≥g_image
(
z
)Ë{ 
	`˛ónup_j≥g
(z);  
NULL
; }

1463 
n
 = 
ªq_comp
 ?Ñeq_com∞: 
z
->
s
.
img_n
;

1465 i‡(
z
->
s
.
img_n
 =3 && 
n
 < 3)

1466 
decode_n
 = 1;

1468 
decode_n
 = 
z
->
s
.
img_n
;

1472 
k
;

1473 
uöt
 
i
,
j
;

1474 
uöt8
 *
ouçut
;

1475 
uöt8
 *
couçut
[4];

1477 
°bi_ªßm∂e
 
ªs_comp
[4];

1479 
k
=0; k < 
decode_n
; ++k) {

1480 
°bi_ªßm∂e
 *
r
 = &
ªs_comp
[
k
];

1484 
z
->
img_comp
[
k
].
löebuf
 = (
uöt8
 *Ë
	`mÆloc
(z->
s
.
img_x
 + 3);

1485 i‡(!
z
->
img_comp
[
k
].
löebuf
Ë{ 
	`˛ónup_j≥g
(z);  
	`ïuc
("outofmem", "Out of memory"); }

1487 
r
->
hs
 = 
z
->
img_h_max
 / z->
img_comp
[
k
].
h
;

1488 
r
->
vs
 = 
z
->
img_v_max
 / z->
img_comp
[
k
].
v
;

1489 
r
->
y°ï
 =Ñ->
vs
 >> 1;

1490 
r
->
w_l‹es
 = (
z
->
s
.
img_x
 +Ñ->
hs
-1) /Ñ->hs;

1491 
r
->
ypos
 = 0;

1492 
r
->
löe0
 =Ñ->
löe1
 = 
z
->
img_comp
[
k
].
d©a
;

1494 i‡(
r
->
hs
 =1 &&Ñ->
vs
 =1Ër->
ªßm∂e
 = 
ªßm∂e_row_1
;

1495 i‡(
r
->
hs
 =1 &&Ñ->
vs
 =2Ër->
ªßm∂e
 = 
ªßm∂e_row_v_2
;

1496 i‡(
r
->
hs
 =2 &&Ñ->
vs
 =1Ër->
ªßm∂e
 = 
ªßm∂e_row_h_2
;

1497 i‡(
r
->
hs
 =2 &&Ñ->
vs
 =2Ër->
ªßm∂e
 = 
ªßm∂e_row_hv_2
;

1498 
r
->
ªßm∂e
 = 
ªßm∂e_row_gíîic
;

1502 
ouçut
 = (
uöt8
 *Ë
	`mÆloc
(
n
 * 
z
->
s
.
img_x
 * z->s.
img_y
 + 1);

1503 i‡(!
ouçut
Ë{ 
	`˛ónup_j≥g
(
z
);  
	`ïuc
("outofmem", "Out of memory"); }

1506 
j
=0; j < 
z
->
s
.
img_y
; ++j) {

1507 
uöt8
 *
out
 = 
ouçut
 + 
n
 * 
z
->
s
.
img_x
 * 
j
;

1508 
k
=0; k < 
decode_n
; ++k) {

1509 
°bi_ªßm∂e
 *
r
 = &
ªs_comp
[
k
];

1510 
y_bŸ
 = 
r
->
y°ï
 >‘->
vs
 >> 1);

1511 
couçut
[
k
] = 
r
->
	`ªßm∂e
(
z
->
img_comp
[k].
löebuf
,

1512 
y_bŸ
 ? 
r
->
löe1
 :Ñ->
löe0
,

1513 
y_bŸ
 ? 
r
->
löe0
 :Ñ->
löe1
,

1514 
r
->
w_l‹es
,Ñ->
hs
);

1515 i‡(++
r
->
y°ï
 >r->
vs
) {

1516 
r
->
y°ï
 = 0;

1517 
r
->
löe0
 =Ñ->
löe1
;

1518 i‡(++
r
->
ypos
 < 
z
->
img_comp
[
k
].
y
)

1519 
r
->
löe1
 +
z
->
img_comp
[
k
].
w2
;

1522 i‡(
n
 >= 3) {

1523 
uöt8
 *
y
 = 
couçut
[0];

1524 i‡(
z
->
s
.
img_n
 == 3) {

1525 #i‡
STBI_SIMD


1526 
	`°bi_YCbCr_ö°ÆÀd
(
out
, 
y
, 
couçut
[1], couçut[2], 
z
->
s
.
img_x
, 
n
);

1528 
	`YCbCr_to_RGB_row
(
out
, 
y
, 
couçut
[1], couçut[2], 
z
->
s
.
img_x
, 
n
);

1531 
i
=0; i < 
z
->
s
.
img_x
; ++i) {

1532 
out
[0] = out[1] = out[2] = 
y
[
i
];

1533 
out
[3] = 255;

1534 
out
 +
n
;

1537 
uöt8
 *
y
 = 
couçut
[0];

1538 i‡(
n
 == 1)

1539 
i
=0; i < 
z
->
s
.
img_x
; ++iË
out
[i] = 
y
[i];

1541 
i
=0; i < 
z
->
s
.
img_x
; ++iË*
out
++ = 
y
[i], *out++ = 255;

1544 
	`˛ónup_j≥g
(
z
);

1545 *
out_x
 = 
z
->
s
.
img_x
;

1546 *
out_y
 = 
z
->
s
.
img_y
;

1547 i‡(
comp
Ë*com∞
z
->
s
.
img_n
;

1548  
ouçut
;

1550 
	}
}

1552 #i‚de‡
STBI_NO_STDIO


1553 *
	$°bi_j≥g_lﬂd_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

1555 
j≥g
 
j
;

1556 
	`°¨t_fûe
(&
j
.
s
, 
f
);

1557  
	`lﬂd_j≥g_image
(&
j
, 
x
,
y
,
comp
,
ªq_comp
);

1558 
	}
}

1560 *
	$°bi_j≥g_lﬂd
(c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

1562 *
d©a
;

1563 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

1564 i‡(!
f
Ë 
NULL
;

1565 
d©a
 = 
	`°bi_j≥g_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

1566 
	`f˛o£
(
f
);

1567  
d©a
;

1568 
	}
}

1571 *
	$°bi_j≥g_lﬂd_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

1573 
j≥g
 
j
;

1574 
	`°¨t_mem
(&
j
.
s
, 
buf„r
,
Àn
);

1575  
	`lﬂd_j≥g_image
(&
j
, 
x
,
y
,
comp
,
ªq_comp
);

1576 
	}
}

1578 #i‚de‡
STBI_NO_STDIO


1579 
	$°bi_j≥g_ã°_fûe
(
FILE
 *
f
)

1581 
n
,
r
;

1582 
j≥g
 
j
;

1583 
n
 = 
	`·ñl
(
f
);

1584 
	`°¨t_fûe
(&
j
.
s
, 
f
);

1585 
r
 = 
	`decode_j≥g_hódî
(&
j
, 
SCAN_ty≥
);

1586 
	`f£ek
(
f
,
n
,
SEEK_SET
);

1587  
r
;

1588 
	}
}

1591 
	$°bi_j≥g_ã°_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

1593 
j≥g
 
j
;

1594 
	`°¨t_mem
(&
j
.
s
, 
buf„r
,
Àn
);

1595  
	`decode_j≥g_hódî
(&
j
, 
SCAN_ty≥
);

1596 
	}
}

1599 #i‚de‡
STBI_NO_STDIO


1600 
°bi_j≥g_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
);

1601 
°bi_j≥g_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

1603 
°bi_j≥g_öfo_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

1605 
	g°bi_≤g_∑πül
;

1606 #i‚de‡
USE_STBZLIB


1615 
	#ZFAST_BITS
 9

1616 
	#ZFAST_MASK
 ((1 << 
ZFAST_BITS
Ë- 1)

	)

1622 
uöt16
 
	mÁ°
[1 << 
ZFAST_BITS
];

1623 
uöt16
 
	mfú°code
[16];

1624 
	mmaxcode
[17];

1625 
uöt16
 
	mfú°symbﬁ
[16];

1626 
uöt8
 
	msize
[288];

1627 
uöt16
 
	mvÆue
[288];

1628 } 
	tzhuffm™
;

1630 
__f‹˚ölöe
 
	$bôªvî£16
(
n
)

1632 
n
 = ((n & 0xAAAA) >> 1) | ((n & 0x5555) << 1);

1633 
n
 = ((n & 0xCCCC) >> 2) | ((n & 0x3333) << 2);

1634 
n
 = ((n & 0xF0F0) >> 4) | ((n & 0x0F0F) << 4);

1635 
n
 = ((n & 0xFF00) >> 8) | ((n & 0x00FF) << 8);

1636  
n
;

1637 
	}
}

1639 
__f‹˚ölöe
 
	$bô_ªvî£
(
v
, 
bôs
)

1641 
	`as£π
(
bôs
 <= 16);

1644  
	`bôªvî£16
(
v
Ë>> (16-
bôs
);

1645 
	}
}

1647 
	$zbuûd_huffm™
(
zhuffm™
 *
z
, 
uöt8
 *
sizñi°
, 
num
)

1649 
i
,
k
=0;

1650 
code
, 
√xt_code
[16], 
sizes
[17];

1653 
	`mem£t
(
sizes
, 0, (sizes));

1654 
	`mem£t
(
z
->
Á°
, 255, (z->fast));

1655 
i
=0; i < 
num
; ++i)

1656 ++
sizes
[
sizñi°
[
i
]];

1657 
sizes
[0] = 0;

1658 
i
=1; i < 16; ++i)

1659 
	`as£π
(
sizes
[
i
] <= (1 << i));

1660 
code
 = 0;

1661 
i
=1; i < 16; ++i) {

1662 
√xt_code
[
i
] = 
code
;

1663 
z
->
fú°code
[
i
] = (
uöt16
Ë
code
;

1664 
z
->
fú°symbﬁ
[
i
] = (
uöt16
Ë
k
;

1665 
code
 = (codê+ 
sizes
[
i
]);

1666 i‡(
sizes
[
i
])

1667 i‡(
code
-1 >(1 << 
i
)Ë 
	`e
("bad codelengths","Corrupt JPEG");

1668 
z
->
maxcode
[
i
] = 
code
 << (16-i);

1669 
code
 <<= 1;

1670 
k
 +
sizes
[
i
];

1672 
z
->
maxcode
[16] = 0x10000;

1673 
i
=0; i < 
num
; ++i) {

1674 
s
 = 
sizñi°
[
i
];

1675 i‡(
s
) {

1676 
c
 = 
√xt_code
[
s
] - 
z
->
fú°code
[s] + z->
fú°symbﬁ
[s];

1677 
z
->
size
[
c
] = (
uöt8
)
s
;

1678 
z
->
vÆue
[
c
] = (
uöt16
)
i
;

1679 i‡(
s
 <
ZFAST_BITS
) {

1680 
k
 = 
	`bô_ªvî£
(
√xt_code
[
s
],s);

1681 
k
 < (1 << 
ZFAST_BITS
)) {

1682 
z
->
Á°
[
k
] = (
uöt16
Ë
c
;

1683 
k
 +(1 << 
s
);

1686 ++
√xt_code
[
s
];

1690 
	}
}

1700 
uöt8
 *
	mzbuf„r
, *
	mzbuf„r_íd
;

1701 
	mnum_bôs
;

1702 
uöt32
 
	mcode_buf„r
;

1704 *
	mzout
;

1705 *
	mzout_°¨t
;

1706 *
	mzout_íd
;

1707 
	mz_ex∑ndabÀ
;

1709 
zhuffm™
 
	mz_Àngth
, 
	mz_di°™˚
;

1710 } 
	tzbuf
;

1712 
__f‹˚ölöe
 
	$zgë8
(
zbuf
 *
z
)

1714 i‡(
z
->
zbuf„r
 >z->
zbuf„r_íd
)  0;

1715  *
z
->
zbuf„r
++;

1716 
	}
}

1718 
	$fûl_bôs
(
zbuf
 *
z
)

1721 
	`as£π
(
z
->
code_buf„r
 < (1U << z->
num_bôs
));

1722 
z
->
code_buf„r
 |
	`zgë8
(zË<< z->
num_bôs
;

1723 
z
->
num_bôs
 += 8;

1724 } 
z
->
num_bôs
 <= 24);

1725 
	}
}

1727 
__f‹˚ölöe
 
	$zª˚ive
(
zbuf
 *
z
, 
n
)

1729 
k
;

1730 i‡(
z
->
num_bôs
 < 
n
Ë
	`fûl_bôs
(z);

1731 
k
 = 
z
->
code_buf„r
 & ((1 << 
n
) - 1);

1732 
z
->
code_buf„r
 >>
n
;

1733 
z
->
num_bôs
 -
n
;

1734  
k
;

1735 
	}
}

1737 
__f‹˚ölöe
 
	$zhuffm™_decode
(
zbuf
 *
a
, 
zhuffm™
 *
z
)

1739 
b
,
s
,
k
;

1740 i‡(
a
->
num_bôs
 < 16Ë
	`fûl_bôs
(a);

1741 
b
 = 
z
->
Á°
[
a
->
code_buf„r
 & 
ZFAST_MASK
];

1742 i‡(
b
 < 0xffff) {

1743 
s
 = 
z
->
size
[
b
];

1744 
a
->
code_buf„r
 >>
s
;

1745 
a
->
num_bôs
 -
s
;

1746  
z
->
vÆue
[
b
];

1751 
k
 = 
	`bô_ªvî£
(
a
->
code_buf„r
, 16);

1752 
s
=
ZFAST_BITS
+1; ; ++s)

1753 i‡(
k
 < 
z
->
maxcode
[
s
])

1755 i‡(
s
 == 16)  -1;

1757 
b
 = (
k
 >> (16-
s
)Ë- 
z
->
fú°code
[s] + z->
fú°symbﬁ
[s];

1758 
	`as£π
(
z
->
size
[
b
] =
s
);

1759 
a
->
code_buf„r
 >>
s
;

1760 
a
->
num_bôs
 -
s
;

1761  
z
->
vÆue
[
b
];

1762 
	}
}

1764 
	$ex∑nd
(
zbuf
 *
z
, 
n
)

1766 *
q
;

1767 
cur
, 
limô
;

1768 i‡(!
z
->
z_ex∑ndabÀ
Ë 
	`e
("output bufferÜimit","Corrupt PNG");

1769 
cur
 = (Ë(
z
->
zout
 - z->
zout_°¨t
);

1770 
limô
 = (Ë(
z
->
zout_íd
 - z->
zout_°¨t
);

1771 
cur
 + 
n
 > 
limô
)

1772 
limô
 *= 2;

1773 
q
 = (*Ë
	`ªÆloc
(
z
->
zout_°¨t
, 
limô
);

1774 i‡(
q
 =
NULL
Ë 
	`e
("outofmem", "Out of memory");

1775 
z
->
zout_°¨t
 = 
q
;

1776 
z
->
zout
 = 
q
 + 
cur
;

1777 
z
->
zout_íd
 = 
q
 + 
limô
;

1779 
	}
}

1781 
	gÀngth_ba£
[31] = {

1786 
	gÀngth_exåa
[31]=

1789 
	gdi°_ba£
[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,

1792 
	gdi°_exåa
[32] =

1795 
	$∑r£_huffm™_block
(
zbuf
 *
a
)

1798 
z
 = 
	`zhuffm™_decode
(
a
, &a->
z_Àngth
);

1799 i‡(
z
 < 256) {

1800 i‡(
z
 < 0Ë 
	`e
("bad huffman code","Corrupt PNG");

1801 i‡(
a
->
zout
 >a->
zout_íd
Ëi‡(!
	`ex∑nd
(a, 1))  0;

1802 *
a
->
zout
++ = (Ë
z
;

1804 
uöt8
 *
p
;

1805 
Àn
,
di°
;

1806 i‡(
z
 == 256)  1;

1807 
z
 -= 257;

1808 
Àn
 = 
Àngth_ba£
[
z
];

1809 i‡(
Àngth_exåa
[
z
]Ë
Àn
 +
	`zª˚ive
(
a
,Üength_extra[z]);

1810 
z
 = 
	`zhuffm™_decode
(
a
, &a->
z_di°™˚
);

1811 i‡(
z
 < 0Ë 
	`e
("bad huffman code","Corrupt PNG");

1812 
di°
 = 
di°_ba£
[
z
];

1813 i‡(
di°_exåa
[
z
]Ë
di°
 +
	`zª˚ive
(
a
, dist_extra[z]);

1814 i‡(
a
->
zout
 -á->
zout_°¨t
 < 
di°
Ë 
	`e
("bad dist","Corrupt PNG");

1815 i‡(
a
->
zout
 + 
Àn
 >á->
zout_íd
Ëi‡(!
	`ex∑nd
(a,Üen))  0;

1816 
p
 = (
uöt8
 *Ë(
a
->
zout
 - 
di°
);

1817 
Àn
--)

1818 *
a
->
zout
++ = *
p
++;

1821 
	}
}

1823 
	$compuã_huffm™_codes
(
zbuf
 *
a
)

1825 
uöt8
 
Àngth_dezigzag
[19] = { 16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15 };

1826 
zhuffm™
 
z_codñígth
;

1827 
uöt8
 
Àncodes
[286+32+137];

1828 
uöt8
 
codñígth_sizes
[19];

1829 
i
,
n
;

1831 
hlô
 = 
	`zª˚ive
(
a
,5) + 257;

1832 
hdi°
 = 
	`zª˚ive
(
a
,5) + 1;

1833 
h˛í
 = 
	`zª˚ive
(
a
,4) + 4;

1835 
	`mem£t
(
codñígth_sizes
, 0, (codelength_sizes));

1836 
i
=0; i < 
h˛í
; ++i) {

1837 
s
 = 
	`zª˚ive
(
a
,3);

1838 
codñígth_sizes
[
Àngth_dezigzag
[
i
]] = (
uöt8
Ë
s
;

1840 i‡(!
	`zbuûd_huffm™
(&
z_codñígth
, 
codñígth_sizes
, 19))  0;

1842 
n
 = 0;

1843 
n
 < 
hlô
 + 
hdi°
) {

1844 
c
 = 
	`zhuffm™_decode
(
a
, &
z_codñígth
);

1845 
	`as£π
(
c
 >= 0 && c < 19);

1846 i‡(
c
 < 16)

1847 
Àncodes
[
n
++] = (
uöt8
Ë
c
;

1848 i‡(
c
 == 16) {

1849 
c
 = 
	`zª˚ive
(
a
,2)+3;

1850 
	`mem£t
(
Àncodes
+
n
,Üícodes[n-1], 
c
);

1851 
n
 +
c
;

1852 } i‡(
c
 == 17) {

1853 
c
 = 
	`zª˚ive
(
a
,3)+3;

1854 
	`mem£t
(
Àncodes
+
n
, 0, 
c
);

1855 
n
 +
c
;

1857 
	`as£π
(
c
 == 18);

1858 
c
 = 
	`zª˚ive
(
a
,7)+11;

1859 
	`mem£t
(
Àncodes
+
n
, 0, 
c
);

1860 
n
 +
c
;

1863 i‡(
n
 !
hlô
+
hdi°
Ë 
	`e
("bad codelengths","Corrupt PNG");

1864 i‡(!
	`zbuûd_huffm™
(&
a
->
z_Àngth
, 
Àncodes
, 
hlô
))  0;

1865 i‡(!
	`zbuûd_huffm™
(&
a
->
z_di°™˚
, 
Àncodes
+
hlô
, 
hdi°
))  0;

1867 
	}
}

1869 
	$∑r£_uncom¥es£d_block
(
zbuf
 *
a
)

1871 
uöt8
 
hódî
[4];

1872 
Àn
,
∆í
,
k
;

1873 i‡(
a
->
num_bôs
 & 7)

1874 
	`zª˚ive
(
a
,á->
num_bôs
 & 7);

1876 
k
 = 0;

1877 
a
->
num_bôs
 > 0) {

1878 
hódî
[
k
++] = (
uöt8
Ë(
a
->
code_buf„r
 & 255);

1879 
a
->
code_buf„r
 >>= 8;

1880 
a
->
num_bôs
 -= 8;

1882 
	`as£π
(
a
->
num_bôs
 == 0);

1884 
k
 < 4)

1885 
hódî
[
k
++] = (
uöt8
Ë
	`zgë8
(
a
);

1886 
Àn
 = 
hódî
[1] * 256 + header[0];

1887 
∆í
 = 
hódî
[3] * 256 + header[2];

1888 i‡(
∆í
 !(
Àn
 ^ 0xffff)Ë 
	`e
("zlib corrupt","Corrupt PNG");

1889 i‡(
a
->
zbuf„r
 + 
Àn
 >á->
zbuf„r_íd
Ë 
	`e
("readÖast buffer","Corrupt PNG");

1890 i‡(
a
->
zout
 + 
Àn
 >á->
zout_íd
)

1891 i‡(!
	`ex∑nd
(
a
, 
Àn
))  0;

1892 
	`mem˝y
(
a
->
zout
,á->
zbuf„r
, 
Àn
);

1893 
a
->
zbuf„r
 +
Àn
;

1894 
a
->
zout
 +
Àn
;

1896 
	}
}

1898 
	$∑r£_zlib_hódî
(
zbuf
 *
a
)

1900 
cmf
 = 
	`zgë8
(
a
);

1901 
cm
 = 
cmf
 & 15;

1903 
Êg
 = 
	`zgë8
(
a
);

1904 i‡((
cmf
*256+
Êg
Ë% 31 !0Ë 
	`e
("bad zlib header","Corrupt PNG");

1905 i‡(
Êg
 & 32Ë 
	`e
("noÖreset dict","Corrupt PNG");

1906 i‡(
cm
 !8Ë 
	`e
("bad compression","Corrupt PNG");

1909 
	}
}

1912 
uöt8
 
	gdeÁu…_Àngth
[288], 
	gdeÁu…_di°™˚
[32];

1913 
	$öô_deÁu…s
()

1915 
i
;

1916 
i
=0; i <143; ++iË
deÁu…_Àngth
[i] = 8;

1917  ; 
i
 <255; ++iË
deÁu…_Àngth
[i] = 9;

1918  ; 
i
 <279; ++iË
deÁu…_Àngth
[i] = 7;

1919  ; 
i
 <287; ++iË
deÁu…_Àngth
[i] = 8;

1921 
i
=0; i <31; ++iË
deÁu…_di°™˚
[i] = 5;

1922 
	}
}

1925 
	$∑r£_zlib
(
zbuf
 *
a
, 
∑r£_hódî
)

1927 
föÆ
, 
ty≥
;

1928 i‡(
∑r£_hódî
)

1929 i‡(!
	`∑r£_zlib_hódî
(
a
))  0;

1930 
a
->
num_bôs
 = 0;

1931 
a
->
code_buf„r
 = 0;

1933 
föÆ
 = 
	`zª˚ive
(
a
,1);

1934 
ty≥
 = 
	`zª˚ive
(
a
,2);

1935 i‡(
ty≥
 == 0) {

1936 i‡(!
	`∑r£_uncom¥es£d_block
(
a
))  0;

1937 } i‡(
ty≥
 == 3) {

1940 i‡(
ty≥
 == 1) {

1942 i‡(!
deÁu…_di°™˚
[31]Ë
	`öô_deÁu…s
();

1943 i‡(!
	`zbuûd_huffm™
(&
a
->
z_Àngth
 , 
deÁu…_Àngth
 , 288))  0;

1944 i‡(!
	`zbuûd_huffm™
(&
a
->
z_di°™˚
, 
deÁu…_di°™˚
, 32))  0;

1946 i‡(!
	`compuã_huffm™_codes
(
a
))  0;

1948 i‡(!
	`∑r£_huffm™_block
(
a
))  0;

1950 i‡(
°bi_≤g_∑πül
 && 
a
->
zout
 -á->
zout_°¨t
 > 65536)

1952 } !
föÆ
);

1954 
	}
}

1956 
	$do_zlib
(
zbuf
 *
a
, *
obuf
, 
ﬁí
, 
exp
, 
∑r£_hódî
)

1958 
a
->
zout_°¨t
 = 
obuf
;

1959 
a
->
zout
 = 
obuf
;

1960 
a
->
zout_íd
 = 
obuf
 + 
ﬁí
;

1961 
a
->
z_ex∑ndabÀ
 = 
exp
;

1963  
	`∑r£_zlib
(
a
, 
∑r£_hódî
);

1964 
	}
}

1966 *
	$°bi_zlib_decode_mÆloc_guesssize
(c⁄° *
buf„r
, 
Àn
, 
öôül_size
, *
ouéí
)

1968 
zbuf
 
a
;

1969 *
p
 = (*Ë
	`mÆloc
(
öôül_size
);

1970 i‡(
p
 =
NULL
)  NULL;

1971 
a
.
zbuf„r
 = (
uöt8
 *Ë
buf„r
;

1972 
a
.
zbuf„r_íd
 = (
uöt8
 *Ë
buf„r
 + 
Àn
;

1973 i‡(
	`do_zlib
(&
a
, 
p
, 
öôül_size
, 1, 1)) {

1974 i‡(
ouéí
Ë*ouéí = (Ë(
a
.
zout
 -á.
zout_°¨t
);

1975  
a
.
zout_°¨t
;

1977 
	`‰ì
(
a
.
zout_°¨t
);

1978  
NULL
;

1980 
	}
}

1982 *
	$°bi_zlib_decode_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
)

1984  
	`°bi_zlib_decode_mÆloc_guesssize
(
buf„r
, 
Àn
, 16384, 
ouéí
);

1985 
	}
}

1987 
	$°bi_zlib_decode_buf„r
(*
obuf„r
, 
ﬁí
, c⁄° *
ibuf„r
, 
ûí
)

1989 
zbuf
 
a
;

1990 
a
.
zbuf„r
 = (
uöt8
 *Ë
ibuf„r
;

1991 
a
.
zbuf„r_íd
 = (
uöt8
 *Ë
ibuf„r
 + 
ûí
;

1992 i‡(
	`do_zlib
(&
a
, 
obuf„r
, 
ﬁí
, 0, 1))

1993  (Ë(
a
.
zout
 -á.
zout_°¨t
);

1996 
	}
}

1998 *
	$°bi_zlib_decode_nohódî_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
)

2000 
zbuf
 
a
;

2001 *
p
 = (*Ë
	`mÆloc
(16384);

2002 i‡(
p
 =
NULL
)  NULL;

2003 
a
.
zbuf„r
 = (
uöt8
 *Ë
buf„r
;

2004 
a
.
zbuf„r_íd
 = (
uöt8
 *Ë
buf„r
+
Àn
;

2005 i‡(
	`do_zlib
(&
a
, 
p
, 16384, 1, 0)) {

2006 i‡(
ouéí
Ë*ouéí = (Ë(
a
.
zout
 -á.
zout_°¨t
);

2007  
a
.
zout_°¨t
;

2009 
	`‰ì
(
a
.
zout_°¨t
);

2010  
NULL
;

2012 
	}
}

2014 
	$°bi_zlib_decode_nohódî_buf„r
(*
obuf„r
, 
ﬁí
, c⁄° *
ibuf„r
, 
ûí
)

2016 
zbuf
 
a
;

2017 
a
.
zbuf„r
 = (
uöt8
 *Ë
ibuf„r
;

2018 
a
.
zbuf„r_íd
 = (
uöt8
 *Ë
ibuf„r
 + 
ûí
;

2019 i‡(
	`do_zlib
(&
a
, 
obuf„r
, 
ﬁí
, 0, 0))

2020  (Ë(
a
.
zout
 -á.
zout_°¨t
);

2023 
	}
}

2039 
uöt32
 
	mÀngth
;

2040 
uöt32
 
	mty≥
;

2041 } 
	tchunk
;

2043 
	#PNG_TYPE
(
a
,
b
,
c
,
d
Ë((◊Ë<< 24Ë+ ((bË<< 16Ë+ ((cË<< 8Ë+ (d))

	)

2045 
chunk
 
	$gë_chunk_hódî
(
°bi
 *
s
)

2047 
chunk
 
c
;

2048 
c
.
Àngth
 = 
	`gë32
(
s
);

2049 
c
.
ty≥
 = 
	`gë32
(
s
);

2050  
c
;

2051 
	}
}

2053 
	$check_≤g_hódî
(
°bi
 *
s
)

2055 
uöt8
 
≤g_sig
[8] = { 137,80,78,71,13,10,26,10 };

2056 
i
;

2057 
i
=0; i < 8; ++i)

2058 i‡(
	`gë8
(
s
Ë!
≤g_sig
[
i
]Ë 
	`e
("badÖng sig","Notá PNG");

2060 
	}
}

2064 
°bi
 
	ms
;

2065 
uöt8
 *
	mid©a
, *
	mex∑nded
, *
	mout
;

2066 } 
	t≤g
;

2070 
	mF_n⁄e
=0, 
	mF_sub
=1, 
	mF_up
=2, 
	mF_avg
=3, 
	mF_∑ëh
=4,

2071 
	mF_avg_fú°
, 
	mF_∑ëh_fú°
,

2074 
uöt8
 
	gfú°_row_fûãr
[5] =

2076 
F_n⁄e
, 
F_sub
, F_n⁄e, 
F_avg_fú°
, 
F_∑ëh_fú°


2079 
	$∑ëh
(
a
, 
b
, 
c
)

2081 
p
 = 
a
 + 
b
 - 
c
;

2082 
∑
 = 
	`abs
(
p
-
a
);

2083 
pb
 = 
	`abs
(
p
-
b
);

2084 
pc
 = 
	`abs
(
p
-
c
);

2085 i‡(
∑
 <
pb
 &&Ö®<
pc
Ë 
a
;

2086 i‡(
pb
 <
pc
Ë 
b
;

2087  
c
;

2088 
	}
}

2091 
	$¸óã_≤g_image_øw
(
≤g
 *
a
, 
uöt8
 *
øw
, 
uöt32
 
øw_Àn
, 
out_n
, uöt32 
x
, uöt32 
y
)

2093 
°bi
 *
s
 = &
a
->s;

2094 
uöt32
 
i
,
j
,
°ride
 = 
x
*
out_n
;

2095 
k
;

2096 
img_n
 = 
s
->img_n;

2097 
	`as£π
(
out_n
 =
s
->
img_n
 || out_n == s->img_n+1);

2098 i‡(
°bi_≤g_∑πül
Ë
y
 = 1;

2099 
a
->
out
 = (
uöt8
 *Ë
	`mÆloc
(
x
 * 
y
 * 
out_n
);

2100 i‡(!
a
->
out
Ë 
	`e
("outofmem", "Out of memory");

2101 i‡(!
°bi_≤g_∑πül
) {

2102 i‡(
s
->
img_x
 =
x
 && s->
img_y
 =
y
) {

2103 i‡(
øw_Àn
 !(
img_n
 * 
x
 + 1Ë* 
y
Ë 
	`e
("notÉnoughÖixels","Corrupt PNG");

2105 i‡(
øw_Àn
 < (
img_n
 * 
x
 + 1Ë* 
y
Ë 
	`e
("notÉnoughÖixels","Corrupt PNG");

2108 
j
=0; j < 
y
; ++j) {

2109 
uöt8
 *
cur
 = 
a
->
out
 + 
°ride
*
j
;

2110 
uöt8
 *
¥i‹
 = 
cur
 - 
°ride
;

2111 
fûãr
 = *
øw
++;

2112 i‡(
fûãr
 > 4Ë 
	`e
("invalid filter","Corrupt PNG");

2114 i‡(
j
 =0Ë
fûãr
 = 
fú°_row_fûãr
[filter];

2116 
k
=0; k < 
img_n
; ++k) {

2117 
fûãr
) {

2118 
F_n⁄e
 : 
cur
[
k
] = 
øw
[k]; ;

2119 
F_sub
 : 
cur
[
k
] = 
øw
[k]; ;

2120 
F_up
 : 
cur
[
k
] = 
øw
[k] + 
¥i‹
[k]; ;

2121 
F_avg
 : 
cur
[
k
] = 
øw
[k] + (
¥i‹
[k]>>1); ;

2122 
F_∑ëh
 : 
cur
[
k
] = (
uöt8
Ë(
øw
[k] + 
	`∑ëh
(0,
¥i‹
[k],0)); ;

2123 
F_avg_fú°
 : 
cur
[
k
] = 
øw
[k]; ;

2124 
F_∑ëh_fú°
: 
cur
[
k
] = 
øw
[k]; ;

2127 i‡(
img_n
 !
out_n
Ë
cur
[img_n] = 255;

2128 
øw
 +
img_n
;

2129 
cur
 +
out_n
;

2130 
¥i‹
 +
out_n
;

2132 i‡(
img_n
 =
out_n
) {

2133 
	#CASE
(
f
) \

2134 
f
: \

2135 
i
=
x
-1; i >1; --i, 
øw
+=
img_n
,
cur
+=img_n,
¥i‹
+=img_n) \

2136 
k
=0; k < 
img_n
; ++k)

	)

2137 
fûãr
) {

2138 
	`CASE
(
F_n⁄e
Ë
cur
[
k
] = 
øw
[k]; ;

2139 
	`CASE
(
F_sub
Ë
cur
[
k
] = 
øw
[k] + cur[k-
img_n
]; ;

2140 
	`CASE
(
F_up
Ë
cur
[
k
] = 
øw
[k] + 
¥i‹
[k]; ;

2141 
	`CASE
(
F_avg
Ë
cur
[
k
] = 
øw
[k] + ((
¥i‹
[k] + cur[k-
img_n
])>>1); ;

2142 
	`CASE
(
F_∑ëh
Ë
cur
[
k
] = (
uöt8
Ë(
øw
[k] + 
	`∑ëh
(cur[k-
img_n
],
¥i‹
[k],prior[k-img_n])); ;

2143 
	`CASE
(
F_avg_fú°
Ë
cur
[
k
] = 
øw
[k] + (cur[k-
img_n
] >> 1); ;

2144 
	`CASE
(
F_∑ëh_fú°
Ë
cur
[
k
] = (
uöt8
Ë(
øw
[k] + 
	`∑ëh
(cur[k-
img_n
],0,0)); ;

2146 #unde‡
CASE


2148 
	`as£π
(
img_n
+1 =
out_n
);

2149 
	#CASE
(
f
) \

2150 
f
: \

2151 
i
=
x
-1; i >1; --i, 
cur
[
img_n
]=255,
øw
+=img_n,cur+=
out_n
,
¥i‹
+=out_n) \

2152 
k
=0; k < 
img_n
; ++k)

	)

2153 
fûãr
) {

2154 
	`CASE
(
F_n⁄e
Ë
cur
[
k
] = 
øw
[k]; ;

2155 
	`CASE
(
F_sub
Ë
cur
[
k
] = 
øw
[k] + cur[k-
out_n
]; ;

2156 
	`CASE
(
F_up
Ë
cur
[
k
] = 
øw
[k] + 
¥i‹
[k]; ;

2157 
	`CASE
(
F_avg
Ë
cur
[
k
] = 
øw
[k] + ((
¥i‹
[k] + cur[k-
out_n
])>>1); ;

2158 
	`CASE
(
F_∑ëh
Ë
cur
[
k
] = (
uöt8
Ë(
øw
[k] + 
	`∑ëh
(cur[k-
out_n
],
¥i‹
[k],prior[k-out_n])); ;

2159 
	`CASE
(
F_avg_fú°
Ë
cur
[
k
] = 
øw
[k] + (cur[k-
out_n
] >> 1); ;

2160 
	`CASE
(
F_∑ëh_fú°
Ë
cur
[
k
] = (
uöt8
Ë(
øw
[k] + 
	`∑ëh
(cur[k-
out_n
],0,0)); ;

2162 #unde‡
CASE


2166 
	}
}

2168 
	$¸óã_≤g_image
(
≤g
 *
a
, 
uöt8
 *
øw
, 
uöt32
 
øw_Àn
, 
out_n
, 
öãæa˚d
)

2170 
uöt8
 *
föÆ
;

2171 
p
;

2172 
ßve
;

2173 i‡(!
öãæa˚d
)

2174  
	`¸óã_≤g_image_øw
(
a
, 
øw
, 
øw_Àn
, 
out_n
,á->
s
.
img_x
,á->s.
img_y
);

2175 
ßve
 = 
°bi_≤g_∑πül
;

2176 
°bi_≤g_∑πül
 = 0;

2179 
föÆ
 = (
uöt8
 *Ë
	`mÆloc
(
a
->
s
.
img_x
 *á->s.
img_y
 * 
out_n
);

2180 
p
=0;Ö < 7; ++p) {

2181 
x‹ig
[] = { 0,4,0,2,0,1,0 };

2182 
y‹ig
[] = { 0,0,4,0,2,0,1 };

2183 
x•c
[] = { 8,8,4,4,2,2,1 };

2184 
y•c
[] = { 8,8,8,4,4,2,2 };

2185 
i
,
j
,
x
,
y
;

2187 
x
 = (
a
->
s
.
img_x
 - 
x‹ig
[
p
] + 
x•c
[p]-1) / xspc[p];

2188 
y
 = (
a
->
s
.
img_y
 - 
y‹ig
[
p
] + 
y•c
[p]-1) / yspc[p];

2189 i‡(
x
 && 
y
) {

2190 i‡(!
	`¸óã_≤g_image_øw
(
a
, 
øw
, 
øw_Àn
, 
out_n
, 
x
, 
y
)) {

2191 
	`‰ì
(
föÆ
);

2194 
j
=0; j < 
y
; ++j)

2195 
i
=0; i < 
x
; ++i)

2196 
	`mem˝y
(
föÆ
 + (
j
*
y•c
[
p
]+
y‹ig
[p])*
a
->
s
.
img_x
*
out_n
 + (
i
*
x•c
[p]+
x‹ig
[p])*out_n,

2197 
a
->
out
 + (
j
*
x
+
i
)*
out_n
, out_n);

2198 
	`‰ì
(
a
->
out
);

2199 
øw
 +(
x
*
out_n
+1)*
y
;

2200 
øw_Àn
 -(
x
*
out_n
+1)*
y
;

2203 
a
->
out
 = 
föÆ
;

2205 
°bi_≤g_∑πül
 = 
ßve
;

2207 
	}
}

2209 
	$compuã_å™•¨ícy
(
≤g
 *
z
, 
uöt8
 
tc
[3], 
out_n
)

2211 
°bi
 *
s
 = &
z
->s;

2212 
uöt32
 
i
, 
pixñ_cou¡
 = 
s
->
img_x
 * s->
img_y
;

2213 
uöt8
 *
p
 = 
z
->
out
;

2217 
	`as£π
(
out_n
 == 2 || out_n == 4);

2219 i‡(
out_n
 == 2) {

2220 
i
=0; i < 
pixñ_cou¡
; ++i) {

2221 
p
[1] = (p[0] =
tc
[0] ? 0 : 255);

2222 
p
 += 2;

2225 
i
=0; i < 
pixñ_cou¡
; ++i) {

2226 i‡(
p
[0] =
tc
[0] &&Ö[1] ==Åc[1] &&Ö[2] ==Åc[2])

2227 
p
[3] = 0;

2228 
p
 += 4;

2232 
	}
}

2234 
	$ex∑nd_∑Àâe
(
≤g
 *
a
, 
uöt8
 *
∑Àâe
, 
Àn
, 
∑l_img_n
)

2236 
uöt32
 
i
, 
pixñ_cou¡
 = 
a
->
s
.
img_x
 *á->s.
img_y
;

2237 
uöt8
 *
p
, *
ãmp_out
, *
‹ig
 = 
a
->
out
;

2239 
p
 = (
uöt8
 *Ë
	`mÆloc
(
pixñ_cou¡
 * 
∑l_img_n
);

2240 i‡(
p
 =
NULL
Ë 
	`e
("outofmem", "Out of memory");

2243 
ãmp_out
 = 
p
;

2245 i‡(
∑l_img_n
 == 3) {

2246 
i
=0; i < 
pixñ_cou¡
; ++i) {

2247 
n
 = 
‹ig
[
i
]*4;

2248 
p
[0] = 
∑Àâe
[
n
 ];

2249 
p
[1] = 
∑Àâe
[
n
+1];

2250 
p
[2] = 
∑Àâe
[
n
+2];

2251 
p
 += 3;

2254 
i
=0; i < 
pixñ_cou¡
; ++i) {

2255 
n
 = 
‹ig
[
i
]*4;

2256 
p
[0] = 
∑Àâe
[
n
 ];

2257 
p
[1] = 
∑Àâe
[
n
+1];

2258 
p
[2] = 
∑Àâe
[
n
+2];

2259 
p
[3] = 
∑Àâe
[
n
+3];

2260 
p
 += 4;

2263 
	`‰ì
(
a
->
out
);

2264 
a
->
out
 = 
ãmp_out
;

2266 
	}
}

2268 
	$∑r£_≤g_fûe
(
≤g
 *
z
, 
sˇn
, 
ªq_comp
)

2270 
uöt8
 
∑Àâe
[1024], 
∑l_img_n
=0;

2271 
uöt8
 
has_å™s
=0, 
tc
[3];

2272 
uöt32
 
ioff
=0, 
id©a_limô
=0, 
i
, 
∑l_Àn
=0;

2273 
fú°
=1,
k
,
öãæa˚
=0;

2274 
°bi
 *
s
 = &
z
->s;

2276 i‡(!
	`check_≤g_hódî
(
s
))  0;

2278 i‡(
sˇn
 =
SCAN_ty≥
)  1;

2280 ;;
fú°
=0) {

2281 
chunk
 
c
 = 
	`gë_chunk_hódî
(
s
);

2282 i‡(
fú°
 && 
c
.
ty≥
 !
	`PNG_TYPE
('I','H','D','R'))

2283  
	`e
("firstÇot IHDR","Corrupt PNG");

2284 
c
.
ty≥
) {

2285 
	`PNG_TYPE
('I','H','D','R'): {

2286 
dïth
,
cﬁ‹
,
comp
,
fûãr
;

2287 i‡(!
fú°
Ë 
	`e
("multiple IHDR","Corrupt PNG");

2288 i‡(
c
.
Àngth
 !13Ë 
	`e
("bad IHDRÜen","Corrupt PNG");

2289 
s
->
img_x
 = 
	`gë32
(s); i‡(s->img_x > (1 << 24)Ë 
	`e
("tooÜarge","VeryÜarge image (corrupt?)");

2290 
s
->
img_y
 = 
	`gë32
(s); i‡(s->img_y > (1 << 24)Ë 
	`e
("tooÜarge","VeryÜarge image (corrupt?)");

2291 
dïth
 = 
	`gë8
(
s
); i‡(dïth !8Ë 
	`e
("8bit only","PNGÇot supported: 8-bit only");

2292 
cﬁ‹
 = 
	`gë8
(
s
); i‡(cﬁ‹ > 6Ë 
	`e
("bad ctype","Corrupt PNG");

2293 i‡(
cﬁ‹
 =3Ë
∑l_img_n
 = 3; i‡(cﬁ‹ & 1Ë 
	`e
("bad ctype","Corrupt PNG");

2294 
comp
 = 
	`gë8
(
s
); i‡(compË 
	`e
("bad comp method","Corrupt PNG");

2295 
fûãr

	`gë8
(
s
); i‡(fûãrË 
	`e
("bad filter method","Corrupt PNG");

2296 
öãæa˚
 = 
	`gë8
(
s
); i‡(öãæa˚>1Ë 
	`e
("bad interlace method","Corrupt PNG");

2297 i‡(!
s
->
img_x
 || !s->
img_y
Ë 
	`e
("0-pixel image","Corrupt PNG");

2298 i‡(!
∑l_img_n
) {

2299 
s
->
img_n
 = (
cﬁ‹
 & 2 ? 3 : 1) + (color & 4 ? 1 : 0);

2300 i‡((1 << 30Ë/ 
s
->
img_x
 / s->
img_n
 < s->
img_y
Ë 
	`e
("tooÜarge", "ImageÅooÜargeÅo decode");

2301 i‡(
sˇn
 =
SCAN_hódî
)  1;

2305 
s
->
img_n
 = 1;

2306 i‡((1 << 30Ë/ 
s
->
img_x
 / 4 < s->
img_y
Ë 
	`e
("tooÜarge","Corrupt PNG");

2312 
	`PNG_TYPE
('P','L','T','E'): {

2313 i‡(
c
.
Àngth
 > 256*3Ë 
	`e
("invalid PLTE","Corrupt PNG");

2314 
∑l_Àn
 = 
c
.
Àngth
 / 3;

2315 i‡(
∑l_Àn
 * 3 !
c
.
Àngth
Ë 
	`e
("invalid PLTE","Corrupt PNG");

2316 
i
=0; i < 
∑l_Àn
; ++i) {

2317 
∑Àâe
[
i
*4+0] = 
	`gë8u
(
s
);

2318 
∑Àâe
[
i
*4+1] = 
	`gë8u
(
s
);

2319 
∑Àâe
[
i
*4+2] = 
	`gë8u
(
s
);

2320 
∑Àâe
[
i
*4+3] = 255;

2325 
	`PNG_TYPE
('t','R','N','S'): {

2326 i‡(
z
->
id©a
Ë 
	`e
("tRNSáfter IDAT","Corrupt PNG");

2327 i‡(
∑l_img_n
) {

2328 i‡(
sˇn
 =
SCAN_hódî
Ë{ 
s
->
img_n
 = 4;  1; }

2329 i‡(
∑l_Àn
 =0Ë 
	`e
("tRNS before PLTE","Corrupt PNG");

2330 i‡(
c
.
Àngth
 > 
∑l_Àn
Ë 
	`e
("badÅRNSÜen","Corrupt PNG");

2331 
∑l_img_n
 = 4;

2332 
i
=0; i < 
c
.
Àngth
; ++i)

2333 
∑Àâe
[
i
*4+3] = 
	`gë8u
(
s
);

2335 i‡(!(
s
->
img_n
 & 1)Ë 
	`e
("tRNS withálpha","Corrupt PNG");

2336 i‡(
c
.
Àngth
 !(
uöt32
Ë
s
->
img_n
*2Ë 
	`e
("badÅRNSÜen","Corrupt PNG");

2337 
has_å™s
 = 1;

2338 
k
=0; k < 
s
->
img_n
; ++k)

2339 
tc
[
k
] = (
uöt8
Ë
	`gë16
(
s
);

2344 
	`PNG_TYPE
('I','D','A','T'): {

2345 i‡(
∑l_img_n
 && !
∑l_Àn
Ë 
	`e
("no PLTE","Corrupt PNG");

2346 i‡(
sˇn
 =
SCAN_hódî
Ë{ 
s
->
img_n
 = 
∑l_img_n
;  1; }

2347 i‡(
ioff
 + 
c
.
Àngth
 > 
id©a_limô
) {

2348 
uöt8
 *
p
;

2349 i‡(
id©a_limô
 =0Ëid©a_limô = 
c
.
Àngth
 > 4096 ? c.length : 4096;

2350 
ioff
 + 
c
.
Àngth
 > 
id©a_limô
)

2351 
id©a_limô
 *= 2;

2352 
p
 = (
uöt8
 *Ë
	`ªÆloc
(
z
->
id©a
, 
id©a_limô
); i‡’ =
NULL
Ë 
	`e
("outofmem", "Out of memory");

2353 
z
->
id©a
 = 
p
;

2355 #i‚de‡
STBI_NO_STDIO


2356 i‡(
s
->
img_fûe
)

2358 i‡(
	`‰ód
(
z
->
id©a
+
ioff
,1,
c
.
Àngth
,
s
->
img_fûe
Ë!c.ÀngthË 
	`e
("outofdata","Corrupt PNG");

2363 
	`mem˝y
(
z
->
id©a
+
ioff
, 
s
->
img_buf„r
, 
c
.
Àngth
);

2364 
s
->
img_buf„r
 +
c
.
Àngth
;

2366 
ioff
 +
c
.
Àngth
;

2370 
	`PNG_TYPE
('I','E','N','D'): {

2371 
uöt32
 
øw_Àn
;

2372 i‡(
sˇn
 !
SCAN_lﬂd
)  1;

2373 i‡(
z
->
id©a
 =
NULL
Ë 
	`e
("no IDAT","Corrupt PNG");

2374 
z
->
ex∑nded
 = (
uöt8
 *Ë
	`°bi_zlib_decode_mÆloc
((*Ëz->
id©a
, 
ioff
, (*Ë&
øw_Àn
);

2375 i‡(
z
->
ex∑nded
 =
NULL
)  0;

2376 
	`‰ì
(
z
->
id©a
); z->id©®
NULL
;

2377 i‡((
ªq_comp
 =
s
->
img_n
+1 &&Ñeq_com∞!3 && !
∑l_img_n
Ë|| 
has_å™s
)

2378 
s
->
img_out_n
 = s->
img_n
+1;

2380 
s
->
img_out_n
 = s->
img_n
;

2381 i‡(!
	`¸óã_≤g_image
(
z
, z->
ex∑nded
, 
øw_Àn
, 
s
->
img_out_n
, 
öãæa˚
))  0;

2382 i‡(
has_å™s
)

2383 i‡(!
	`compuã_å™•¨ícy
(
z
, 
tc
, 
s
->
img_out_n
))  0;

2384 i‡(
∑l_img_n
) {

2386 
s
->
img_n
 = 
∑l_img_n
;

2387 
s
->
img_out_n
 = 
∑l_img_n
;

2388 i‡(
ªq_comp
 >3Ë
s
->
img_out_n
 =Ñeq_comp;

2389 i‡(!
	`ex∑nd_∑Àâe
(
z
, 
∑Àâe
, 
∑l_Àn
, 
s
->
img_out_n
))

2392 
	`‰ì
(
z
->
ex∑nded
); z->ex∑nded = 
NULL
;

2398 i‡((
c
.
ty≥
 & (1 << 29)) == 0) {

2399 #i‚de‡
STBI_NO_FAILURE_STRINGS


2401 
övÆid_chunk
[] = "XXXX chunkÇot known";

2402 
övÆid_chunk
[0] = (
uöt8
Ë(
c
.
ty≥
 >> 24);

2403 
övÆid_chunk
[1] = (
uöt8
Ë(
c
.
ty≥
 >> 16);

2404 
övÆid_chunk
[2] = (
uöt8
Ë(
c
.
ty≥
 >> 8);

2405 
övÆid_chunk
[3] = (
uöt8
Ë(
c
.
ty≥
 >> 0);

2407  
	`e
(
övÆid_chunk
, "PNGÇot supported: unknown chunkÅype");

2409 
	`skù
(
s
, 
c
.
Àngth
);

2413 
	`gë32
(
s
);

2415 
	}
}

2417 *
	$do_≤g
(
≤g
 *
p
, *
x
, *
y
, *
n
, 
ªq_comp
)

2419 *
ªsu…
=
NULL
;

2420 
p
->
ex∑nded
 = 
NULL
;

2421 
p
->
id©a
 = 
NULL
;

2422 
p
->
out
 = 
NULL
;

2423 i‡(
ªq_comp
 < 0 ||Ñeq_com∞> 4Ë 
	`ïuc
("badÑeq_comp", "InternalÉrror");

2424 i‡(
	`∑r£_≤g_fûe
(
p
, 
SCAN_lﬂd
, 
ªq_comp
)) {

2425 
ªsu…
 = 
p
->
out
;

2426 
p
->
out
 = 
NULL
;

2427 i‡(
ªq_comp
 &&Ñeq_com∞!
p
->
s
.
img_out_n
) {

2428 
ªsu…
 = 
	`c⁄vît_f‹m©
‘esu…, 
p
->
s
.
img_out_n
, 
ªq_comp
,Ö->s.
img_x
,Ö->s.
img_y
);

2429 
p
->
s
.
img_out_n
 = 
ªq_comp
;

2430 i‡(
ªsu…
 =
NULL
) Ñesult;

2432 *
x
 = 
p
->
s
.
img_x
;

2433 *
y
 = 
p
->
s
.
img_y
;

2434 i‡(
n
Ë*¿
p
->
s
.
img_n
;

2436 
	`‰ì
(
p
->
out
);Ö->ouà
NULL
;

2437 
	`‰ì
(
p
->
ex∑nded
);Ö->ex∑nded = 
NULL
;

2438 
	`‰ì
(
p
->
id©a
);Ö->id©®
NULL
;

2440  
ªsu…
;

2441 
	}
}

2443 #i‚de‡
STBI_NO_STDIO


2444 *
	$°bi_≤g_lﬂd_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2446 
≤g
 
p
;

2447 
	`°¨t_fûe
(&
p
.
s
, 
f
);

2448  
	`do_≤g
(&
p
, 
x
,
y
,
comp
,
ªq_comp
);

2449 
	}
}

2451 *
	$°bi_≤g_lﬂd
(c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2453 *
d©a
;

2454 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

2455 i‡(!
f
Ë 
NULL
;

2456 
d©a
 = 
	`°bi_≤g_lﬂd_‰om_fûe
(
f
,
x
,
y
,
comp
,
ªq_comp
);

2457 
	`f˛o£
(
f
);

2458  
d©a
;

2459 
	}
}

2462 *
	$°bi_≤g_lﬂd_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2464 
≤g
 
p
;

2465 
	`°¨t_mem
(&
p
.
s
, 
buf„r
,
Àn
);

2466  
	`do_≤g
(&
p
, 
x
,
y
,
comp
,
ªq_comp
);

2467 
	}
}

2469 #i‚de‡
STBI_NO_STDIO


2470 
	$°bi_≤g_ã°_fûe
(
FILE
 *
f
)

2472 
≤g
 
p
;

2473 
n
,
r
;

2474 
n
 = 
	`·ñl
(
f
);

2475 
	`°¨t_fûe
(&
p
.
s
, 
f
);

2476 
r
 = 
	`∑r£_≤g_fûe
(&
p
, 
SCAN_ty≥
,
STBI_deÁu…
);

2477 
	`f£ek
(
f
,
n
,
SEEK_SET
);

2478  
r
;

2479 
	}
}

2482 
	$°bi_≤g_ã°_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

2484 
≤g
 
p
;

2485 
	`°¨t_mem
(&
p
.
s
, 
buf„r
, 
Àn
);

2486  
	`∑r£_≤g_fûe
(&
p
, 
SCAN_ty≥
,
STBI_deÁu…
);

2487 
	}
}

2490 #i‚de‡
STBI_NO_STDIO


2491 
	$°bi_≤g_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
)

2493 
≤g
 
p
;

2494 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

2495 i‡(!
f
)  0;

2496 
	`°¨t_fûe
(&
p
.
s
, 
f
);

2497 i‡(
	`∑r£_≤g_fûe
(&
p
, 
SCAN_hódî
, 0)) {

2498 if(
x
Ë*x = 
p
.
s
.
img_x
;

2499 if(
y
Ë*y = 
p
.
s
.
img_y
;

2500 i‡(
comp
Ë*com∞
p
.
s
.
img_n
;

2501 
	`f˛o£
(
f
);

2504 
	`f˛o£
(
f
);

2506 
	}
}

2508 
°bi_≤g_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

2510 
°bi_≤g_öfo_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

2514 
	$bmp_ã°
(
°bi
 *
s
)

2516 
sz
;

2517 i‡(
	`gë8
(
s
) != 'B')  0;

2518 i‡(
	`gë8
(
s
) != 'M')  0;

2519 
	`gë32À
(
s
);

2520 
	`gë16À
(
s
);

2521 
	`gë16À
(
s
);

2522 
	`gë32À
(
s
);

2523 
sz
 = 
	`gë32À
(
s
);

2524 i‡(
sz
 == 12 || sz == 40 || sz == 56 || sz == 108)  1;

2526 
	}
}

2528 #i‚de‡
STBI_NO_STDIO


2529 
	$°bi_bmp_ã°_fûe
 (
FILE
 *
f
)

2531 
°bi
 
s
;

2532 
r
,
n
 = 
	`·ñl
(
f
);

2533 
	`°¨t_fûe
(&
s
,
f
);

2534 
r
 = 
	`bmp_ã°
(&
s
);

2535 
	`f£ek
(
f
,
n
,
SEEK_SET
);

2536  
r
;

2537 
	}
}

2540 
	$°bi_bmp_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

2542 
°bi
 
s
;

2543 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

2544  
	`bmp_ã°
(&
s
);

2545 
	}
}

2548 
	$high_bô
(
z
)

2550 
n
=0;

2551 i‡(
z
 == 0)  -1;

2552 i‡(
z
 >0x10000Ë
n
 += 16, z >>= 16;

2553 i‡(
z
 >0x00100Ë
n
 += 8, z >>= 8;

2554 i‡(
z
 >0x00010Ë
n
 += 4, z >>= 4;

2555 i‡(
z
 >0x00004Ë
n
 += 2, z >>= 2;

2556 i‡(
z
 >0x00002Ë
n
 += 1, z >>= 1;

2557  
n
;

2558 
	}
}

2560 
	$bôcou¡
(
a
)

2562 
a
 = (a & 0x55555555) + ((a >> 1) & 0x55555555);

2563 
a
 = (a & 0x33333333) + ((a >> 2) & 0x33333333);

2564 
a
 = (a + (a >> 4)) & 0x0f0f0f0f;

2565 
a
 = (a + (a >> 8));

2566 
a
 = (a + (a >> 16));

2567  
a
 & 0xff;

2568 
	}
}

2570 
	$shi·sig√d
(
v
, 
shi·
, 
bôs
)

2572 
ªsu…
;

2573 
z
=0;

2575 i‡(
shi·
 < 0Ë
v
 <<= -shift;

2576 
v
 >>
shi·
;

2577 
ªsu…
 = 
v
;

2579 
z
 = 
bôs
;

2580 
z
 < 8) {

2581 
ªsu…
 +
v
 >> 
z
;

2582 
z
 +
bôs
;

2584  
ªsu…
;

2585 
	}
}

2587 
°bi_uc
 *
	$bmp_lﬂd
(
°bi
 *
s
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2589 
uöt8
 *
out
;

2590 
mr
=0,
mg
=0,
mb
=0,
ma
=0, 
Áke_a
=0;

2591 
°bi_uc
 
∑l
[256][4];

2592 
psize
=0,
i
,
j
,
com¥ess
=0,
width
;

2593 
bµ
, 
Êù_vîtiˇŒy
, 
∑d
, 
èrgë
, 
off£t
, 
hsz
;

2594 i‡(
	`gë8
(
s
Ë!'B' || gë8(sË!'M'Ë 
	`ïuc
("not BMP", "Corrupt BMP");

2595 
	`gë32À
(
s
);

2596 
	`gë16À
(
s
);

2597 
	`gë16À
(
s
);

2598 
off£t
 = 
	`gë32À
(
s
);

2599 
hsz
 = 
	`gë32À
(
s
);

2600 i‡(
hsz
 !12 && hsz !40 && hsz !56 && hsz !108Ë 
	`ïuc
("unknown BMP", "BMPÅypeÇot supported: unknown");

2601 
Áûuª_ªas⁄
 = "bad BMP";

2602 i‡(
hsz
 == 12) {

2603 
s
->
img_x
 = 
	`gë16À
(s);

2604 
s
->
img_y
 = 
	`gë16À
(s);

2606 
s
->
img_x
 = 
	`gë32À
(s);

2607 
s
->
img_y
 = 
	`gë32À
(s);

2609 i‡(
	`gë16À
(
s
) != 1)  0;

2610 
bµ
 = 
	`gë16À
(
s
);

2611 i‡(
bµ
 =1Ë 
	`ïuc
("monochrome", "BMPÅypeÇot supported: 1-bit");

2612 
Êù_vîtiˇŒy
 = ((Ë
s
->
img_y
) > 0;

2613 
s
->
img_y
 = 
	`abs
(() s->img_y);

2614 i‡(
hsz
 == 12) {

2615 i‡(
bµ
 < 24)

2616 
psize
 = (
off£t
 - 14 - 24) / 3;

2618 
com¥ess
 = 
	`gë32À
(
s
);

2619 i‡(
com¥ess
 =1 || com¥es†=2Ë 
	`ïuc
("BMP RLE", "BMPÅypeÇot supported: RLE");

2620 
	`gë32À
(
s
);

2621 
	`gë32À
(
s
);

2622 
	`gë32À
(
s
);

2623 
	`gë32À
(
s
);

2624 
	`gë32À
(
s
);

2625 i‡(
hsz
 == 40 || hsz == 56) {

2626 i‡(
hsz
 == 56) {

2627 
	`gë32À
(
s
);

2628 
	`gë32À
(
s
);

2629 
	`gë32À
(
s
);

2630 
	`gë32À
(
s
);

2632 i‡(
bµ
 == 16 || bpp == 32) {

2633 
mr
 = 
mg
 = 
mb
 = 0;

2634 i‡(
com¥ess
 == 0) {

2635 i‡(
bµ
 == 32) {

2636 
mr
 = 0xff << 16;

2637 
mg
 = 0xff << 8;

2638 
mb
 = 0xff << 0;

2639 
ma
 = 0xff << 24;

2640 
Áke_a
 = 1;

2642 
mr
 = 31 << 10;

2643 
mg
 = 31 << 5;

2644 
mb
 = 31 << 0;

2646 } i‡(
com¥ess
 == 3) {

2647 
mr
 = 
	`gë32À
(
s
);

2648 
mg
 = 
	`gë32À
(
s
);

2649 
mb
 = 
	`gë32À
(
s
);

2651 i‡(
mr
 =
mg
 && mg =
mb
) {

2653  
NULL
;

2656  
NULL
;

2659 
	`as£π
(
hsz
 == 108);

2660 
mr
 = 
	`gë32À
(
s
);

2661 
mg
 = 
	`gë32À
(
s
);

2662 
mb
 = 
	`gë32À
(
s
);

2663 
ma
 = 
	`gë32À
(
s
);

2664 
	`gë32À
(
s
);

2665 
i
=0; i < 12; ++i)

2666 
	`gë32À
(
s
);

2668 i‡(
bµ
 < 16)

2669 
psize
 = (
off£t
 - 14 - 
hsz
) >> 2;

2671 
s
->
img_n
 = 
ma
 ? 4 : 3;

2672 i‡(
ªq_comp
 &&Ñeq_comp >= 3)

2673 
èrgë
 = 
ªq_comp
;

2675 
èrgë
 = 
s
->
img_n
;

2676 
out
 = (
°bi_uc
 *Ë
	`mÆloc
(
èrgë
 * 
s
->
img_x
 * s->
img_y
);

2677 i‡(!
out
Ë 
	`ïuc
("outofmem", "Out of memory");

2678 i‡(
bµ
 < 16) {

2679 
z
=0;

2680 i‡(
psize
 =0 ||Ösizê> 256Ë{ 
	`‰ì
(
out
);  
	`ïuc
("invalid", "Corrupt BMP"); }

2681 
i
=0; i < 
psize
; ++i) {

2682 
∑l
[
i
][2] = 
	`gë8
(
s
);

2683 
∑l
[
i
][1] = 
	`gë8
(
s
);

2684 
∑l
[
i
][0] = 
	`gë8
(
s
);

2685 i‡(
hsz
 !12Ë
	`gë8
(
s
);

2686 
∑l
[
i
][3] = 255;

2688 
	`skù
(
s
, 
off£t
 - 14 - 
hsz
 - 
psize
 * (hsz == 12 ? 3 : 4));

2689 i‡(
bµ
 =4Ë
width
 = (
s
->
img_x
 + 1) >> 1;

2690 i‡(
bµ
 =8Ë
width
 = 
s
->
img_x
;

2691 { 
	`‰ì
(
out
);  
	`ïuc
("bad bpp", "Corrupt BMP"); }

2692 
∑d
 = (-
width
)&3;

2693 
j
=0; j < (Ë
s
->
img_y
; ++j) {

2694 
i
=0; i < (Ë
s
->
img_x
; i += 2) {

2695 
v
=
	`gë8
(
s
),
v2
=0;

2696 i‡(
bµ
 == 4) {

2697 
v2
 = 
v
 & 15;

2698 
v
 >>= 4;

2700 
out
[
z
++] = 
∑l
[
v
][0];

2701 
out
[
z
++] = 
∑l
[
v
][1];

2702 
out
[
z
++] = 
∑l
[
v
][2];

2703 i‡(
èrgë
 =4Ë
out
[
z
++] = 255;

2704 i‡(
i
+1 =(Ë
s
->
img_x
) ;

2705 
v
 = (
bµ
 =8Ë? 
	`gë8
(
s
Ë: 
v2
;

2706 
out
[
z
++] = 
∑l
[
v
][0];

2707 
out
[
z
++] = 
∑l
[
v
][1];

2708 
out
[
z
++] = 
∑l
[
v
][2];

2709 i‡(
èrgë
 =4Ë
out
[
z
++] = 255;

2711 
	`skù
(
s
, 
∑d
);

2714 
rshi·
=0,
gshi·
=0,
bshi·
=0,
ashi·
=0,
rcou¡
=0,
gcou¡
=0,
bcou¡
=0,
acou¡
=0;

2715 
z
 = 0;

2716 
ósy
=0;

2717 
	`skù
(
s
, 
off£t
 - 14 - 
hsz
);

2718 i‡(
bµ
 =24Ë
width
 = 3 * 
s
->
img_x
;

2719 i‡(
bµ
 =16Ë
width
 = 2*
s
->
img_x
;

2720 
width
=0;

2721 
∑d
 = (-
width
) & 3;

2722 i‡(
bµ
 == 24) {

2723 
ósy
 = 1;

2724 } i‡(
bµ
 == 32) {

2725 i‡(
mb
 =0xf‡&& 
mg
 =0xff00 && 
mr
 =0xff000000 && 
ma
 == 0xff000000)

2726 
ósy
 = 2;

2728 i‡(!
ósy
) {

2729 i‡(!
mr
 || !
mg
 || !
mb
Ë 
	`ïuc
("bad masks", "Corrupt BMP");

2731 
rshi·
 = 
	`high_bô
(
mr
)-7; 
rcou¡
 = 
	`bôcou¡
(mr);

2732 
gshi·
 = 
	`high_bô
(
mg
)-7; 
gcou¡
 = 
	`bôcou¡
(
mr
);

2733 
bshi·
 = 
	`high_bô
(
mb
)-7; 
bcou¡
 = 
	`bôcou¡
(
mr
);

2734 
ashi·
 = 
	`high_bô
(
ma
)-7; 
acou¡
 = 
	`bôcou¡
(
mr
);

2736 
j
=0; j < (Ë
s
->
img_y
; ++j) {

2737 i‡(
ósy
) {

2738 
i
=0; i < (Ë
s
->
img_x
; ++i) {

2739 
a
;

2740 
out
[
z
+2] = 
	`gë8
(
s
);

2741 
out
[
z
+1] = 
	`gë8
(
s
);

2742 
out
[
z
+0] = 
	`gë8
(
s
);

2743 
z
 += 3;

2744 
a
 = (
ósy
 =2 ? 
	`gë8
(
s
) : 255);

2745 i‡(
èrgë
 =4Ë
out
[
z
++] = 
a
;

2748 
i
=0; i < (Ë
s
->
img_x
; ++i) {

2749 
uöt32
 
v
 = (
bµ
 =16 ? 
	`gë16À
(
s
Ë: 
	`gë32À
(s));

2750 
a
;

2751 
out
[
z
++] = 
	`shi·sig√d
(
v
 & 
mr
, 
rshi·
, 
rcou¡
);

2752 
out
[
z
++] = 
	`shi·sig√d
(
v
 & 
mg
, 
gshi·
, 
gcou¡
);

2753 
out
[
z
++] = 
	`shi·sig√d
(
v
 & 
mb
, 
bshi·
, 
bcou¡
);

2754 
a
 = (
ma
 ? 
	`shi·sig√d
(
v
 & ma, 
ashi·
, 
acou¡
) : 255);

2755 i‡(
èrgë
 =4Ë
out
[
z
++] = 
a
;

2758 
	`skù
(
s
, 
∑d
);

2761 i‡(
Êù_vîtiˇŒy
) {

2762 
°bi_uc
 
t
;

2763 
j
=0; j < (Ë
s
->
img_y
>>1; ++j) {

2764 
°bi_uc
 *
p1
 = 
out
 + 
j
 *
s
->
img_x
*
èrgë
;

2765 
°bi_uc
 *
p2
 = 
out
 + (
s
->
img_y
-1-
j
)*s->
img_x
*
èrgë
;

2766 
i
=0; i < (Ë
s
->
img_x
*
èrgë
; ++i) {

2767 
t
 = 
p1
[
i
],Ö1[i] = 
p2
[i],Ö2[i] =Å;

2772 i‡(
ªq_comp
 &&Ñeq_com∞!
èrgë
) {

2773 
out
 = 
	`c⁄vît_f‹m©
(out, 
èrgë
, 
ªq_comp
, 
s
->
img_x
, s->
img_y
);

2774 i‡(
out
 =
NULL
)  out;

2777 *
x
 = 
s
->
img_x
;

2778 *
y
 = 
s
->
img_y
;

2779 i‡(
comp
Ë*com∞
èrgë
;

2780  
out
;

2781 
	}
}

2783 #i‚de‡
STBI_NO_STDIO


2784 
°bi_uc
 *
	$°bi_bmp_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2786 
°bi_uc
 *
d©a
;

2787 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

2788 i‡(!
f
Ë 
NULL
;

2789 
d©a
 = 
	`°bi_bmp_lﬂd_‰om_fûe
(
f
, 
x
,
y
,
comp
,
ªq_comp
);

2790 
	`f˛o£
(
f
);

2791  
d©a
;

2792 
	}
}

2794 
°bi_uc
 *
	$°bi_bmp_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2796 
°bi
 
s
;

2797 
	`°¨t_fûe
(&
s
, 
f
);

2798  
	`bmp_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

2799 
	}
}

2802 
°bi_uc
 *
	$°bi_bmp_lﬂd_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2804 
°bi
 
s
;

2805 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

2806  
	`bmp_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

2807 
	}
}

2812 
	$tga_ã°
(
°bi
 *
s
)

2814 
sz
;

2815 
	`gë8u
(
s
);

2816 
sz
 = 
	`gë8u
(
s
);

2817 if–
sz
 > 1 )  0;

2818 
sz
 = 
	`gë8u
(
s
);

2819 if–(
sz
 != 1) && (sz != 2) && (sz != 3) && (sz != 9) && (sz != 10) && (sz != 11) )  0;

2820 
	`gë16
(
s
);

2821 
	`gë16
(
s
);

2822 
	`gë8
(
s
);

2823 
	`gë16
(
s
);

2824 
	`gë16
(
s
);

2825 if–
	`gë16
(
s
) < 1 )  0;

2826 if–
	`gë16
(
s
) < 1 )  0;

2827 
sz
 = 
	`gë8
(
s
);

2828 if–(
sz
 != 8) && (sz != 16) && (sz != 24) && (sz != 32) )  0;

2830 
	}
}

2832 #i‚de‡
STBI_NO_STDIO


2833 
	$°bi_tga_ã°_fûe
 (
FILE
 *
f
)

2835 
°bi
 
s
;

2836 
r
,
n
 = 
	`·ñl
(
f
);

2837 
	`°¨t_fûe
(&
s
, 
f
);

2838 
r
 = 
	`tga_ã°
(&
s
);

2839 
	`f£ek
(
f
,
n
,
SEEK_SET
);

2840  
r
;

2841 
	}
}

2844 
	$°bi_tga_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

2846 
°bi
 
s
;

2847 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

2848  
	`tga_ã°
(&
s
);

2849 
	}
}

2851 
°bi_uc
 *
	$tga_lﬂd
(
°bi
 *
s
, *
x
, *
y
, *
comp
, 
ªq_comp
)

2854 
tga_off£t
 = 
	`gë8u
(
s
);

2855 
tga_ödexed
 = 
	`gë8u
(
s
);

2856 
tga_image_ty≥
 = 
	`gë8u
(
s
);

2857 
tga_is_RLE
 = 0;

2858 
tga_∑Àâe_°¨t
 = 
	`gë16À
(
s
);

2859 
tga_∑Àâe_Àn
 = 
	`gë16À
(
s
);

2860 
tga_∑Àâe_bôs
 = 
	`gë8u
(
s
);

2861 
tga_x_‹igö
 = 
	`gë16À
(
s
);

2862 
tga_y_‹igö
 = 
	`gë16À
(
s
);

2863 
tga_width
 = 
	`gë16À
(
s
);

2864 
tga_height
 = 
	`gë16À
(
s
);

2865 
tga_bôs_≥r_pixñ
 = 
	`gë8u
(
s
);

2866 
tga_övîãd
 = 
	`gë8u
(
s
);

2868 *
tga_d©a
;

2869 *
tga_∑Àâe
 = 
NULL
;

2870 
i
, 
j
;

2871 
øw_d©a
[4];

2872 
å™s_d©a
[4]={0,};

2873 
RLE_cou¡
 = 0;

2874 
RLE_ª≥©ög
 = 0;

2875 
ªad_√xt_pixñ
 = 1;

2877 if–
tga_image_ty≥
 >= 8 )

2879 
tga_image_ty≥
 -= 8;

2880 
tga_is_RLE
 = 1;

2883 
tga_övîãd
 = 1 - ((tga_inverted >> 5) & 1);

2887 (
tga_width
 < 1Ë|| (
tga_height
 < 1) ||

2888 (
tga_image_ty≥
 < 1) || (tga_image_type > 3) ||

2889 ((
tga_bôs_≥r_pixñ
 != 8) && (tga_bits_per_pixel != 16) &&

2890 (
tga_bôs_≥r_pixñ
 != 24) && (tga_bits_per_pixel != 32))

2893  
NULL
;

2897 if–
tga_ödexed
 )

2899 
tga_bôs_≥r_pixñ
 = 
tga_∑Àâe_bôs
;

2903 *
x
 = 
tga_width
;

2904 *
y
 = 
tga_height
;

2905 if–(
ªq_comp
 < 1) || (req_comp > 4) )

2908 
ªq_comp
 = 
tga_bôs_≥r_pixñ
 / 8;

2909 *
comp
 = 
ªq_comp
;

2913 *
comp
 = 
tga_bôs_≥r_pixñ
/8;

2915 
tga_d©a
 = (*)
	`mÆloc
–
tga_width
 * 
tga_height
 * 
ªq_comp
 );

2918 
	`skù
(
s
, 
tga_off£t
 );

2920 if–
tga_ödexed
 )

2923 
	`skù
(
s
, 
tga_∑Àâe_°¨t
 );

2925 
tga_∑Àâe
 = (*)
	`mÆloc
–
tga_∑Àâe_Àn
 * 
tga_∑Àâe_bôs
 / 8 );

2926 
	`gën
(
s
, 
tga_∑Àâe
, 
tga_∑Àâe_Àn
 * 
tga_∑Àâe_bôs
 / 8 );

2929  
i
 = 0; i < 
tga_width
 * 
tga_height
; ++i )

2932 if–
tga_is_RLE
 )

2934 if–
RLE_cou¡
 == 0 )

2937 
RLE_cmd
 = 
	`gë8u
(
s
);

2938 
RLE_cou¡
 = 1 + (
RLE_cmd
 & 127);

2939 
RLE_ª≥©ög
 = 
RLE_cmd
 >> 7;

2940 
ªad_√xt_pixñ
 = 1;

2941 } if–!
RLE_ª≥©ög
 )

2943 
ªad_√xt_pixñ
 = 1;

2947 
ªad_√xt_pixñ
 = 1;

2950 if–
ªad_√xt_pixñ
 )

2953 if–
tga_ödexed
 )

2956 
∑l_idx
 = 
	`gë8u
(
s
);

2957 if–
∑l_idx
 >
tga_∑Àâe_Àn
 )

2960 
∑l_idx
 = 0;

2962 
∑l_idx
 *
tga_bôs_≥r_pixñ
 / 8;

2963  
j
 = 0; j*8 < 
tga_bôs_≥r_pixñ
; ++j )

2965 
øw_d©a
[
j
] = 
tga_∑Àâe
[
∑l_idx
+j];

2970  
j
 = 0; j*8 < 
tga_bôs_≥r_pixñ
; ++j )

2972 
øw_d©a
[
j
] = 
	`gë8u
(
s
);

2976  
tga_bôs_≥r_pixñ
 )

2980 
å™s_d©a
[0] = 
øw_d©a
[0];

2981 
å™s_d©a
[1] = 
øw_d©a
[0];

2982 
å™s_d©a
[2] = 
øw_d©a
[0];

2983 
å™s_d©a
[3] = 255;

2987 
å™s_d©a
[0] = 
øw_d©a
[0];

2988 
å™s_d©a
[1] = 
øw_d©a
[0];

2989 
å™s_d©a
[2] = 
øw_d©a
[0];

2990 
å™s_d©a
[3] = 
øw_d©a
[1];

2994 
å™s_d©a
[0] = 
øw_d©a
[2];

2995 
å™s_d©a
[1] = 
øw_d©a
[1];

2996 
å™s_d©a
[2] = 
øw_d©a
[0];

2997 
å™s_d©a
[3] = 255;

3001 
å™s_d©a
[0] = 
øw_d©a
[2];

3002 
å™s_d©a
[1] = 
øw_d©a
[1];

3003 
å™s_d©a
[2] = 
øw_d©a
[0];

3004 
å™s_d©a
[3] = 
øw_d©a
[3];

3008 
ªad_√xt_pixñ
 = 0;

3011  
ªq_comp
 )

3015 
tga_d©a
[
i
*
ªq_comp
+0] = 
	`compuã_y
(
å™s_d©a
[0],trans_data[1],trans_data[2]);

3019 
tga_d©a
[
i
*
ªq_comp
+0] = 
	`compuã_y
(
å™s_d©a
[0],trans_data[1],trans_data[2]);

3020 
tga_d©a
[
i
*
ªq_comp
+1] = 
å™s_d©a
[3];

3024 
tga_d©a
[
i
*
ªq_comp
+0] = 
å™s_d©a
[0];

3025 
tga_d©a
[
i
*
ªq_comp
+1] = 
å™s_d©a
[1];

3026 
tga_d©a
[
i
*
ªq_comp
+2] = 
å™s_d©a
[2];

3030 
tga_d©a
[
i
*
ªq_comp
+0] = 
å™s_d©a
[0];

3031 
tga_d©a
[
i
*
ªq_comp
+1] = 
å™s_d©a
[1];

3032 
tga_d©a
[
i
*
ªq_comp
+2] = 
å™s_d©a
[2];

3033 
tga_d©a
[
i
*
ªq_comp
+3] = 
å™s_d©a
[3];

3037 --
RLE_cou¡
;

3040 if–
tga_övîãd
 )

3042  
j
 = 0; j*2 < 
tga_height
; ++j )

3044 
ödex1
 = 
j
 * 
tga_width
 * 
ªq_comp
;

3045 
ödex2
 = (
tga_height
 - 1 - 
j
Ë* 
tga_width
 * 
ªq_comp
;

3046  
i
 = 
tga_width
 * 
ªq_comp
; i > 0; --i )

3048 
ãmp
 = 
tga_d©a
[
ödex1
];

3049 
tga_d©a
[
ödex1
] =Åga_d©a[
ödex2
];

3050 
tga_d©a
[
ödex2
] = 
ãmp
;

3051 ++
ödex1
;

3052 ++
ödex2
;

3057 if–
tga_∑Àâe
 !
NULL
 )

3059 
	`‰ì
–
tga_∑Àâe
 );

3063 
tga_∑Àâe_°¨t
 = 
tga_∑Àâe_Àn
 = 
tga_∑Àâe_bôs
 =

3064 
tga_x_‹igö
 = 
tga_y_‹igö
 = 0;

3066  
tga_d©a
;

3067 
	}
}

3069 #i‚de‡
STBI_NO_STDIO


3070 
°bi_uc
 *
	$°bi_tga_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3072 
°bi_uc
 *
d©a
;

3073 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

3074 i‡(!
f
Ë 
NULL
;

3075 
d©a
 = 
	`°bi_tga_lﬂd_‰om_fûe
(
f
, 
x
,
y
,
comp
,
ªq_comp
);

3076 
	`f˛o£
(
f
);

3077  
d©a
;

3078 
	}
}

3080 
°bi_uc
 *
	$°bi_tga_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3082 
°bi
 
s
;

3083 
	`°¨t_fûe
(&
s
, 
f
);

3084  
	`tga_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

3085 
	}
}

3088 
°bi_uc
 *
	$°bi_tga_lﬂd_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3090 
°bi
 
s
;

3091 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

3092  
	`tga_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

3093 
	}
}

3099 
	$psd_ã°
(
°bi
 *
s
)

3101 i‡(
	`gë32
(
s
) != 0x38425053)  0;

3103 
	}
}

3105 #i‚de‡
STBI_NO_STDIO


3106 
	$°bi_psd_ã°_fûe
(
FILE
 *
f
)

3108 
°bi
 
s
;

3109 
r
,
n
 = 
	`·ñl
(
f
);

3110 
	`°¨t_fûe
(&
s
, 
f
);

3111 
r
 = 
	`psd_ã°
(&
s
);

3112 
	`f£ek
(
f
,
n
,
SEEK_SET
);

3113  
r
;

3114 
	}
}

3117 
	$°bi_psd_ã°_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

3119 
°bi
 
s
;

3120 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

3121  
	`psd_ã°
(&
s
);

3122 
	}
}

3124 
°bi_uc
 *
	$psd_lﬂd
(
°bi
 *
s
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3126 
pixñCou¡
;

3127 
ch™√lCou¡
, 
com¥essi⁄
;

3128 
ch™√l
, 
i
, 
cou¡
, 
Àn
;

3129 
w
,
h
;

3130 
uöt8
 *
out
;

3133 i‡(
	`gë32
(
s
) != 0x38425053)

3134  
	`ïuc
("not PSD", "Corrupt PSD image");

3137 i‡(
	`gë16
(
s
) != 1)

3138  
	`ïuc
("wrong version", "Unsupported version of PSD image");

3141 
	`skù
(
s
, 6 );

3144 
ch™√lCou¡
 = 
	`gë16
(
s
);

3145 i‡(
ch™√lCou¡
 < 0 || channelCount > 16)

3146  
	`ïuc
("wrong channel count", "UnsupportedÇumber of channels in PSD image");

3149 
h
 = 
	`gë32
(
s
);

3150 
w
 = 
	`gë32
(
s
);

3153 i‡(
	`gë16
(
s
) != 8)

3154  
	`ïuc
("unsupported bit depth", "PSD bit depth isÇot 8 bit");

3166 i‡(
	`gë16
(
s
) != 3)

3167  
	`ïuc
("wrong color format", "PSD isÇot in RGB color format");

3170 
	`skù
(
s
,
	`gë32
(s) );

3173 
	`skù
(
s
, 
	`gë32
(s) );

3176 
	`skù
(
s
, 
	`gë32
(s) );

3182 
com¥essi⁄
 = 
	`gë16
(
s
);

3183 i‡(
com¥essi⁄
 > 1)

3184  
	`ïuc
("bad compression", "PSD hasán unknown compression format");

3187 
out
 = (
°bi_uc
 *Ë
	`mÆloc
(4 * 
w
*
h
);

3188 i‡(!
out
Ë 
	`ïuc
("outofmem", "Out of memory");

3189 
pixñCou¡
 = 
w
*
h
;

3195 i‡(
com¥essi⁄
) {

3206 
	`skù
(
s
, 
h
 * 
ch™√lCou¡
 * 2 );

3209 
ch™√l
 = 0; channel < 4; channel++) {

3210 
uöt8
 *
p
;

3212 
p
 = 
out
+
ch™√l
;

3213 i‡(
ch™√l
 >
ch™√lCou¡
) {

3215 
i
 = 0; i < 
pixñCou¡
; i++Ë*
p
 = (
ch™√l
 == 3 ? 255 : 0),Ö += 4;

3218 
cou¡
 = 0;

3219 
cou¡
 < 
pixñCou¡
) {

3220 
Àn
 = 
	`gë8
(
s
);

3221 i‡(
Àn
 == 128) {

3223 } i‡(
Àn
 < 128) {

3225 
Àn
++;

3226 
cou¡
 +
Àn
;

3227 
Àn
) {

3228 *
p
 = 
	`gë8
(
s
);

3229 
p
 += 4;

3230 
Àn
--;

3232 } i‡(
Àn
 > 128) {

3233 
uöt32
 
vÆ
;

3236 
Àn
 ^= 0x0FF;

3237 
Àn
 += 2;

3238 
vÆ
 = 
	`gë8
(
s
);

3239 
cou¡
 +
Àn
;

3240 
Àn
) {

3241 *
p
 = 
vÆ
;

3242 
p
 += 4;

3243 
Àn
--;

3255 
ch™√l
 = 0; channel < 4; channel++) {

3256 
uöt8
 *
p
;

3258 
p
 = 
out
 + 
ch™√l
;

3259 i‡(
ch™√l
 > 
ch™√lCou¡
) {

3261 
i
 = 0; i < 
pixñCou¡
; i++Ë*
p
 = 
ch™√l
 == 3 ? 255 : 0,Ö += 4;

3264 
cou¡
 = 0;

3265 
i
 = 0; i < 
pixñCou¡
; i++)

3266 *
p
 = 
	`gë8
(
s
),Ö += 4;

3271 i‡(
ªq_comp
 &&Ñeq_comp != 4) {

3272 
out
 = 
	`c⁄vît_f‹m©
(out, 4, 
ªq_comp
, 
w
, 
h
);

3273 i‡(
out
 =
NULL
)  out;

3276 i‡(
comp
Ë*com∞
ch™√lCou¡
;

3277 *
y
 = 
h
;

3278 *
x
 = 
w
;

3280  
out
;

3281 
	}
}

3283 #i‚de‡
STBI_NO_STDIO


3284 
°bi_uc
 *
	$°bi_psd_lﬂd
(c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3286 
°bi_uc
 *
d©a
;

3287 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "rb");

3288 i‡(!
f
Ë 
NULL
;

3289 
d©a
 = 
	`°bi_psd_lﬂd_‰om_fûe
(
f
, 
x
,
y
,
comp
,
ªq_comp
);

3290 
	`f˛o£
(
f
);

3291  
d©a
;

3292 
	}
}

3294 
°bi_uc
 *
	$°bi_psd_lﬂd_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3296 
°bi
 
s
;

3297 
	`°¨t_fûe
(&
s
, 
f
);

3298  
	`psd_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

3299 
	}
}

3302 
°bi_uc
 *
	$°bi_psd_lﬂd_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3304 
°bi
 
s
;

3305 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

3306  
	`psd_lﬂd
(&
s
, 
x
,
y
,
comp
,
ªq_comp
);

3307 
	}
}

3313 #i‚de‡
STBI_NO_HDR


3314 
	$hdr_ã°
(
°bi
 *
s
)

3316 *
sig«tuª
 = "#?RADIANCE\n";

3317 
i
;

3318 
i
=0; 
sig«tuª
[i]; ++i)

3319 i‡(
	`gë8
(
s
Ë!
sig«tuª
[
i
])

3322 
	}
}

3324 
	$°bi_hdr_ã°_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
)

3326 
°bi
 
s
;

3327 
	`°¨t_mem
(&
s
, 
buf„r
, 
Àn
);

3328  
	`hdr_ã°
(&
s
);

3329 
	}
}

3331 #i‚de‡
STBI_NO_STDIO


3332 
	$°bi_hdr_ã°_fûe
(
FILE
 *
f
)

3334 
°bi
 
s
;

3335 
r
,
n
 = 
	`·ñl
(
f
);

3336 
	`°¨t_fûe
(&
s
, 
f
);

3337 
r
 = 
	`hdr_ã°
(&
s
);

3338 
	`f£ek
(
f
,
n
,
SEEK_SET
);

3339  
r
;

3340 
	}
}

3343 
	#HDR_BUFLEN
 1024

	)

3344 *
	$hdr_gëtokí
(
°bi
 *
z
, *
buf„r
)

3346 
Àn
=0;

3347 *
s
 = 
buf„r
, 
c
 = '\0';

3349 
c
 = 
	`gë8
(
z
);

3351 !
	`©_eof
(
z
Ë&& 
c
 != '\n') {

3352 
buf„r
[
Àn
++] = 
c
;

3353 i‡(
Àn
 =
HDR_BUFLEN
-1) {

3355 !
	`©_eof
(
z
Ë&& 
	`gë8
(z) != '\n')

3359 
c
 = 
	`gë8
(
z
);

3362 
buf„r
[
Àn
] = 0;

3363  
buf„r
;

3364 
	}
}

3366 
	$hdr_c⁄vît
(*
ouçut
, 
°bi_uc
 *
öput
, 
ªq_comp
)

3368 if–
öput
[3] != 0 ) {

3369 
f1
;

3371 
f1
 = (Ë
	`ldexp
(1.0f, 
öput
[3] - ()(128 + 8));

3372 i‡(
ªq_comp
 <= 2)

3373 
ouçut
[0] = (
öput
[0] + i≈ut[1] + i≈ut[2]Ë* 
f1
 / 3;

3375 
ouçut
[0] = 
öput
[0] * 
f1
;

3376 
ouçut
[1] = 
öput
[1] * 
f1
;

3377 
ouçut
[2] = 
öput
[2] * 
f1
;

3379 i‡(
ªq_comp
 =2Ë
ouçut
[1] = 1;

3380 i‡(
ªq_comp
 =4Ë
ouçut
[3] = 1;

3382 
ªq_comp
) {

3383 4: 
ouçut
[3] = 1;

3384 3: 
ouçut
[0] = output[1] = output[2] = 0;

3386 2: 
ouçut
[1] = 1;

3387 1: 
ouçut
[0] = 0;

3391 
	}
}

3394 *
	$hdr_lﬂd
(
°bi
 *
s
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3396 
buf„r
[
HDR_BUFLEN
];

3397 *
tokí
;

3398 
vÆid
 = 0;

3399 
width
, 
height
;

3400 
°bi_uc
 *
sˇ∆öe
;

3401 *
hdr_d©a
;

3402 
Àn
;

3403 
cou¡
, 
vÆue
;

3404 
i
, 
j
, 
k
, 
c1
,
c2
, 
z
;

3408 i‡(
	`°rcmp
(
	`hdr_gëtokí
(
s
,
buf„r
), "#?RADIANCE") != 0)

3409  
	`ïf
("not HDR", "Corrupt HDR image");

3413 
tokí
 = 
	`hdr_gëtokí
(
s
,
buf„r
);

3414 i‡(
tokí
[0] == 0) ;

3415 i‡(
	`°rcmp
(
tokí
, "FORMAT=32-bô_æe_rgbe"Ë=0Ë
vÆid
 = 1;

3418 i‡(!
vÆid
Ë 
	`ïf
("unsupported format", "Unsupported HDR format");

3422 
tokí
 = 
	`hdr_gëtokí
(
s
,
buf„r
);

3423 i‡(
	`°∫cmp
(
tokí
, "-Y ", 3)Ë 
	`ïf
("unsupported dataÜayout", "Unsupported HDR format");

3424 
tokí
 += 3;

3425 
height
 = 
	`°πﬁ
(
tokí
, &token, 10);

3426 *
tokí
 == ' ') ++token;

3427 i‡(
	`°∫cmp
(
tokí
, "+X ", 3)Ë 
	`ïf
("unsupported dataÜayout", "Unsupported HDR format");

3428 
tokí
 += 3;

3429 
width
 = 
	`°πﬁ
(
tokí
, 
NULL
, 10);

3431 *
x
 = 
width
;

3432 *
y
 = 
height
;

3434 *
comp
 = 3;

3435 i‡(
ªq_comp
 == 0)Ñeq_comp = 3;

3438 
hdr_d©a
 = (*Ë
	`mÆloc
(
height
 * 
width
 * 
ªq_comp
 * ());

3442 if–
width
 < 8 || width >= 32768) {

3444 
j
=0; j < 
height
; ++j) {

3445 
i
=0; i < 
width
; ++i) {

3446 
°bi_uc
 
rgbe
[4];

3447 
maö_decode_lo›
:

3448 
	`gën
(
s
, 
rgbe
, 4);

3449 
	`hdr_c⁄vît
(
hdr_d©a
 + 
j
 * 
width
 * 
ªq_comp
 + 
i
 *Ñeq_comp, 
rgbe
,Ñeq_comp);

3454 
sˇ∆öe
 = 
NULL
;

3456 
j
 = 0; j < 
height
; ++j) {

3457 
c1
 = 
	`gë8
(
s
);

3458 
c2
 = 
	`gë8
(
s
);

3459 
Àn
 = 
	`gë8
(
s
);

3460 i‡(
c1
 !2 || 
c2
 !2 || (
Àn
 & 0x80)) {

3463 
°bi_uc
 
rgbe
[4] = { 
c1
,
c2
,
Àn
, 
	`gë8
(
s
) };

3464 
	`hdr_c⁄vît
(
hdr_d©a
, 
rgbe
, 
ªq_comp
);

3465 
i
 = 1;

3466 
j
 = 0;

3467 
	`‰ì
(
sˇ∆öe
);

3468 
maö_decode_lo›
;

3470 
Àn
 <<= 8;

3471 
Àn
 |
	`gë8
(
s
);

3472 i‡(
Àn
 !
width
Ë{ 
	`‰ì
(
hdr_d©a
); fªe(
sˇ∆öe
);  
	`ïf
("invalid decoded scanlineÜength", "corrupt HDR"); }

3473 i‡(
sˇ∆öe
 =
NULL
Ësˇ∆öê(
°bi_uc
 *Ë
	`mÆloc
(
width
 * 4);

3475 
k
 = 0; k < 4; ++k) {

3476 
i
 = 0;

3477 
i
 < 
width
) {

3478 
cou¡
 = 
	`gë8
(
s
);

3479 i‡(
cou¡
 > 128) {

3481 
vÆue
 = 
	`gë8
(
s
);

3482 
cou¡
 -= 128;

3483 
z
 = 0; z < 
cou¡
; ++z)

3484 
sˇ∆öe
[
i
++ * 4 + 
k
] = 
vÆue
;

3487 
z
 = 0; z < 
cou¡
; ++z)

3488 
sˇ∆öe
[
i
++ * 4 + 
k
] = 
	`gë8
(
s
);

3492 
i
=0; i < 
width
; ++i)

3493 
	`hdr_c⁄vît
(
hdr_d©a
+(
j
*
width
 + 
i
)*
ªq_comp
, 
sˇ∆öe
 + i*4,Ñeq_comp);

3495 
	`‰ì
(
sˇ∆öe
);

3498  
hdr_d©a
;

3499 
	}
}

3501 #i‚de‡
STBI_NO_STDIO


3502 *
	$°bi_hdr_lﬂd_‰om_fûe
(
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3504 
°bi
 
s
;

3505 
	`°¨t_fûe
(&
s
,
f
);

3506  
	`hdr_lﬂd
(&
s
,
x
,
y
,
comp
,
ªq_comp
);

3507 
	}
}

3510 *
	$°bi_hdr_lﬂd_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
)

3512 
°bi
 
s
;

3513 
	`°¨t_mem
(&
s
,
buf„r
, 
Àn
);

3514  
	`hdr_lﬂd
(&
s
,
x
,
y
,
comp
,
ªq_comp
);

3515 
	}
}

3521 #i‚de‡
STBI_NO_WRITE


3523 
	$wrôe8
(
FILE
 *
f
, 
x
Ë{ 
uöt8
 
z
 = (uöt8Ëx; 
	`fwrôe
(&z,1,1,f); 
	}
}

3525 
	$wrôefv
(
FILE
 *
f
, *
fmt
, 
va_li°
 
v
)

3527 *
fmt
) {

3528 *
fmt
++) {

3530 '1': { 
uöt8
 
x
 = 
	`va_¨g
(
v
, ); 
	`wrôe8
(
f
,x); ; }

3531 '2': { 
öt16
 
x
 = 
	`va_¨g
(
v
, ); 
	`wrôe8
(
f
,x); write8(f,x>>8); ; }

3532 '4': { 
öt32
 
x
 = 
	`va_¨g
(
v
, ); 
	`wrôe8
(
f
,x); write8(f,x>>8); write8(f,x>>16); write8(f,x>>24); ; }

3534 
	`as£π
(0);

3535 
	`va_íd
(
v
);

3539 
	}
}

3541 
	$wrôef
(
FILE
 *
f
, *
fmt
, ...)

3543 
va_li°
 
v
;

3544 
	`va_°¨t
(
v
, 
fmt
);

3545 
	`wrôefv
(
f
,
fmt
,
v
);

3546 
	`va_íd
(
v
);

3547 
	}
}

3549 
	$wrôe_pixñs
(
FILE
 *
f
, 
rgb_dú
, 
vdú
, 
x
, 
y
, 
comp
, *
d©a
, 
wrôe_Æpha
, 
sˇ∆öe_∑d
)

3551 
uöt8
 
bg
[3] = { 255, 0, 255}, 
px
[3];

3552 
uöt32
 
zîo
 = 0;

3553 
i
,
j
,
k
, 
j_íd
;

3555 i‡(
vdú
 < 0)

3556 
j_íd
 = -1, 
j
 = 
y
-1;

3558 
j_íd
 = 
y
, 
j
 = 0;

3560 ; 
j
 !
j_íd
; j +
vdú
) {

3561 
i
=0; i < 
x
; ++i) {

3562 
uöt8
 *
d
 = (uöt8 *Ë
d©a
 + (
j
*
x
+
i
)*
comp
;

3563 i‡(
wrôe_Æpha
 < 0)

3564 
	`fwrôe
(&
d
[
comp
-1], 1, 1, 
f
);

3565 
comp
) {

3567 2: 
	`wrôef
(
f
, "111", 
d
[0],d[0],d[0]);

3570 i‡(!
wrôe_Æpha
) {

3571 
k
=0; k < 3; ++k)

3572 
px
[
k
] = 
bg
[k] + ((
d
[k] - bg[k]) * d[3])/255;

3573 
	`wrôef
(
f
, "111", 
px
[1-
rgb_dú
],px[1],px[1+rgb_dir]);

3578 
	`wrôef
(
f
, "111", 
d
[1-
rgb_dú
],d[1],d[1+rgb_dir]);

3581 i‡(
wrôe_Æpha
 > 0)

3582 
	`fwrôe
(&
d
[
comp
-1], 1, 1, 
f
);

3584 
	`fwrôe
(&
zîo
,
sˇ∆öe_∑d
,1,
f
);

3586 
	}
}

3588 
	$outfûe
(c⁄° *
fûíame
, 
rgb_dú
, 
vdú
, 
x
, 
y
, 
comp
, *
d©a
, 
Æpha
, 
∑d
, *
fmt
, ...)

3590 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "wb");

3591 i‡(
f
) {

3592 
va_li°
 
v
;

3593 
	`va_°¨t
(
v
, 
fmt
);

3594 
	`wrôefv
(
f
, 
fmt
, 
v
);

3595 
	`va_íd
(
v
);

3596 
	`wrôe_pixñs
(
f
,
rgb_dú
,
vdú
,
x
,
y
,
comp
,
d©a
,
Æpha
,
∑d
);

3597 
	`f˛o£
(
f
);

3599  
f
 !
NULL
;

3600 
	}
}

3602 
	$°bi_wrôe_bmp
(c⁄° *
fûíame
, 
x
, 
y
, 
comp
, *
d©a
)

3604 
∑d
 = (-
x
*3) & 3;

3605  
	`outfûe
(
fûíame
,-1,-1,
x
,
y
,
comp
,
d©a
,0,
∑d
,

3607 'B', 'M', 14+40+(
x
*3+
∑d
)*
y
, 0,0, 14+40,

3608 40, 
x
,
y
, 1,24, 0,0,0,0,0,0);

3609 
	}
}

3611 
	$°bi_wrôe_tga
(c⁄° *
fûíame
, 
x
, 
y
, 
comp
, *
d©a
)

3613 
has_Æpha
 = !(
comp
 & 1);

3614  
	`outfûe
(
fûíame
, -1,-1, 
x
, 
y
, 
comp
, 
d©a
, 
has_Æpha
, 0,

3615 "111 221 2222 11", 0,0,2, 0,0,0, 0,0,
x
,
y
, 24+8*
has_Æpha
, 8*has_alpha);

3616 
	}
}

	@src/stb_image.h

1 #i‚de‡
STBI_INCLUDE_STB_IMAGE_H


2 
	#STBI_INCLUDE_STB_IMAGE_H


	)

92 #i‚de‡
STBI_NO_STDIO


93 
	~<°dio.h
>

96 
	#STBI_VERSION
 1

	)

100 
	mSTBI_deÁu…
 = 0,

102 
	mSTBI_gªy
 = 1,

103 
	mSTBI_gªy_Æpha
 = 2,

104 
	mSTBI_rgb
 = 3,

105 
	mSTBI_rgb_Æpha
 = 4,

108 
	t°bi_uc
;

110 #ifde‡
__˝lu•lus


116 #i‡!
deföed
(
STBI_NO_WRITE
Ë&& !deföed(
STBI_NO_STDIO
)

120 
°bi_wrôe_bmp
 (c⁄° *
fûíame
, 
x
, 
y
, 
comp
, *
d©a
);

121 
°bi_wrôe_tga
 (c⁄° *
fûíame
, 
x
, 
y
, 
comp
, *
d©a
);

127 #i‚de‡
STBI_NO_STDIO


128 
°bi_uc
 *
°bi_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

129 
°bi_uc
 *
°bi_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

130 
°bi_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

132 
°bi_uc
 *
°bi_lﬂd_‰om_mem‹y
(°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

135 #i‚de‡
STBI_NO_HDR


136 #i‚de‡
STBI_NO_STDIO


137 *
°bi_lﬂdf
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

138 *
°bi_lﬂdf_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

140 *
°bi_lﬂdf_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

142 
°bi_hdr_to_ldr_gamma
(
gamma
);

143 
°bi_hdr_to_ldr_sˇÀ
(
sˇÀ
);

145 
°bi_ldr_to_hdr_gamma
(
gamma
);

146 
°bi_ldr_to_hdr_sˇÀ
(
sˇÀ
);

152 *
°bi_Áûuª_ªas⁄
 ();

155 
°bi_image_‰ì
 (*
ªtvÆ_‰om_°bi_lﬂd
);

158 
°bi_öfo_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

159 
°bi_is_hdr_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

160 #i‚de‡
STBI_NO_STDIO


161 
°bi_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
);

162 
°bi_is_hdr
 (c⁄° *
fûíame
);

163 
°bi_is_hdr_‰om_fûe
(
FILE
 *
f
);

168 *
°bi_zlib_decode_mÆloc_guesssize
(c⁄° *
buf„r
, 
Àn
, 
öôül_size
, *
ouéí
);

169 *
°bi_zlib_decode_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
);

170 
°bi_zlib_decode_buf„r
(*
obuf„r
, 
ﬁí
, c⁄° *
ibuf„r
, 
ûí
);

172 *
°bi_zlib_decode_nohódî_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
);

173 
°bi_zlib_decode_nohódî_buf„r
(*
obuf„r
, 
ﬁí
, c⁄° *
ibuf„r
, 
ûí
);

178 
°bi_j≥g_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

179 
°bi_uc
 *
°bi_j≥g_lﬂd_‰om_mem‹y
(°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

180 
°bi_j≥g_öfo_‰om_mem‹y
(
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

182 #i‚de‡
STBI_NO_STDIO


183 
°bi_uc
 *
°bi_j≥g_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

184 
°bi_j≥g_ã°_fûe
 (
FILE
 *
f
);

185 
°bi_uc
 *
°bi_j≥g_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

187 
°bi_j≥g_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
);

188 
°bi_j≥g_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

192 
°bi_≤g_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

193 
°bi_uc
 *
°bi_≤g_lﬂd_‰om_mem‹y
 (°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

194 
°bi_≤g_öfo_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
);

196 #i‚de‡
STBI_NO_STDIO


197 
°bi_uc
 *
°bi_≤g_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

198 
°bi_≤g_öfo
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
);

199 
°bi_≤g_ã°_fûe
 (
FILE
 *
f
);

200 
°bi_uc
 *
°bi_≤g_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

201 
°bi_≤g_öfo_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
);

205 
°bi_bmp_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

207 
°bi_uc
 *
°bi_bmp_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

208 
°bi_uc
 *
°bi_bmp_lﬂd_‰om_mem‹y
 (°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

209 #i‚de‡
STBI_NO_STDIO


210 
°bi_bmp_ã°_fûe
 (
FILE
 *
f
);

211 
°bi_uc
 *
°bi_bmp_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

215 
°bi_tga_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

217 
°bi_uc
 *
°bi_tga_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

218 
°bi_uc
 *
°bi_tga_lﬂd_‰om_mem‹y
 (°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

219 #i‚de‡
STBI_NO_STDIO


220 
°bi_tga_ã°_fûe
 (
FILE
 *
f
);

221 
°bi_uc
 *
°bi_tga_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

225 
°bi_psd_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

227 
°bi_uc
 *
°bi_psd_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

228 
°bi_uc
 *
°bi_psd_lﬂd_‰om_mem‹y
 (°bi_u¯c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

229 #i‚de‡
STBI_NO_STDIO


230 
°bi_psd_ã°_fûe
 (
FILE
 *
f
);

231 
°bi_uc
 *
°bi_psd_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

235 
°bi_hdr_ã°_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
);

237 * 
°bi_hdr_lﬂd
 (c⁄° *
fûíame
, *
x
, *
y
, *
comp
, 
ªq_comp
);

238 * 
°bi_hdr_lﬂd_‰om_mem‹y
 (
°bi_uc
 c⁄° *
buf„r
, 
Àn
, *
x
, *
y
, *
comp
, 
ªq_comp
);

239 #i‚de‡
STBI_NO_STDIO


240 
°bi_hdr_ã°_fûe
 (
FILE
 *
f
);

241 * 
°bi_hdr_lﬂd_‰om_fûe
 (
FILE
 *
f
, *
x
, *
y
, *
comp
, 
ªq_comp
);

247 (*
	gã°_mem‹y
)(
°bi_uc
 c⁄° *
	gbuf„r
, 
	gÀn
);

248 
	g°bi_uc
 * (*
	glﬂd_‰om_mem‹y
)(
°bi_uc
 c⁄° *
	gbuf„r
, 
	gÀn
, *
	gx
, *
	gy
, *
	gcomp
, 
	gªq_comp
);

249 #i‚de‡
STBI_NO_STDIO


250 (*
	gã°_fûe
)(
FILE
 *
	gf
);

251 
	g°bi_uc
 * (*
	glﬂd_‰om_fûe
)(
FILE
 *
	gf
, *
	gx
, *
	gy
, *
	gcomp
, 
	gªq_comp
);

253 } 
	t°bi_lﬂdî
;

258 
°bi_ªgi°î_lﬂdî
(
°bi_lﬂdî
 *
lﬂdî
);

261 #i‡
STBI_SIMD


262 (*
	g°bi_id˘_8x8
)(
	tuöt8
 *
	tout
, 
	tout_°ride
, 
	td©a
[64], *
	tdequ™tize
);

267 (*
	g°bi_YCbCr_to_RGB_run
)(
	tuöt8
 *
	touçut
, uöt8 c⁄° *
	ty
, uöt8 c⁄° *
	tcb
, uöt8 c⁄° *
	t¸
, 
	tcou¡
, 
	t°ï
);

275 
°bi_ö°Æl_id˘
(
°bi_id˘_8x8
 
func
);

276 
°bi_ö°Æl_YCbCr_to_RGB
(
°bi_YCbCr_to_RGB_run
 
func
);

279 #ifde‡
__˝lu•lus


	@src/stb_zlib.c

9 #ifde‡
HAVE_CONFIG_H


10 
	~"c⁄fig.h
"

13 #i‡!
deföed
(
HAVE_LIBZ
Ë|| !deföed(
HAVE_MMAP
)

15 
	~"°b_zlib.h
"

16 #i‚de‡
STBI_NO_STDIO


17 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<mem‹y.h
>

21 
	~<as£π.h
>

22 
	~<°d¨g.h
>

24 #i‚de‡
_MSC_VER


25 #ifde‡
__˝lu•lus


26 
	#__f‹˚ölöe
 
ölöe


	)

28 
	#__f‹˚ölöe


	)

34 
	tvÆid©e_uöt32
[(
uöt32
)==4];

44 
	$e
(*
°r
)

47 
	`¥ötf
("GNZLIB Faûuª %s\n",
°r
);

48 
	`exô
(1);

50 
	}
}

51 #ifde‡
STBI_NO_FAILURE_STRINGS


52 
	#e
(
x
,
y
Ë0

	)

53 #ñi‡
deföed
(
STBI_FAILURE_USERMSG
)

54 
	#e
(
x
,
y
Ë
	`e
(y)

	)

56 
	#e
(
x
,
y
Ë
	`e
(x)

	)

59 
	#ïf
(
x
,
y
Ë((*Ë(
	`e
(x,y)?
NULL
:NULL))

	)

60 
	#ïuc
(
x
,
y
Ë((*Ë(
	`e
(x,y)?
NULL
:NULL))

	)

64 
__f‹˚ölöe
 
	$bôªvî£16
(
n
)

66 
n
 = ((n & 0xAAAA) >> 1) | ((n & 0x5555) << 1);

67 
n
 = ((n & 0xCCCC) >> 2) | ((n & 0x3333) << 2);

68 
n
 = ((n & 0xF0F0) >> 4) | ((n & 0x0F0F) << 4);

69 
n
 = ((n & 0xFF00) >> 8) | ((n & 0x00FF) << 8);

70  
n
;

71 
	}
}

73 
__f‹˚ölöe
 
	$bô_ªvî£
(
v
, 
bôs
)

75 
	`as£π
(
bôs
 <= 16);

78  
	`bôªvî£16
(
v
Ë>> (16-
bôs
);

79 
	}
}

81 
	$zbuûd_huffm™
(
zhuffm™
 *
z
, 
uöt8
 *
sizñi°
, 
num
)

83 
i
,
k
=0;

84 
code
, 
√xt_code
[16], 
sizes
[17];

87 
	`mem£t
(
sizes
, 0, (sizes));

88 
	`mem£t
(
z
->
Á°
, 255, (z->fast));

89 
i
=0; i < 
num
; ++i)

90 ++
sizes
[
sizñi°
[
i
]];

91 
sizes
[0] = 0;

92 
i
=1; i < 16; ++i)

93 
	`as£π
(
sizes
[
i
] <= (1 << i));

94 
code
 = 0;

95 
i
=1; i < 16; ++i) {

96 
√xt_code
[
i
] = 
code
;

97 
z
->
fú°code
[
i
] = (
uöt16
Ë
code
;

98 
z
->
fú°symbﬁ
[
i
] = (
uöt16
Ë
k
;

99 
code
 = (codê+ 
sizes
[
i
]);

100 i‡(
sizes
[
i
])

101 i‡(
code
-1 >(1 << 
i
)Ë 
	`e
("bad codelengths","Corrupt JPEG");

102 
z
->
maxcode
[
i
] = 
code
 << (16-i);

103 
code
 <<= 1;

104 
k
 +
sizes
[
i
];

106 
z
->
maxcode
[16] = 0x10000;

107 
i
=0; i < 
num
; ++i) {

108 
s
 = 
sizñi°
[
i
];

109 i‡(
s
) {

110 
c
 = 
√xt_code
[
s
] - 
z
->
fú°code
[s] + z->
fú°symbﬁ
[s];

111 
z
->
size
[
c
] = (
uöt8
)
s
;

112 
z
->
vÆue
[
c
] = (
uöt16
)
i
;

113 i‡(
s
 <
ZFAST_BITS
) {

114 
k
 = 
	`bô_ªvî£
(
√xt_code
[
s
],s);

115 
k
 < (1 << 
ZFAST_BITS
)) {

116 
z
->
Á°
[
k
] = (
uöt16
Ë
c
;

117 
k
 +(1 << 
s
);

120 ++
√xt_code
[
s
];

124 
	}
}

133 
__f‹˚ölöe
 
	$zgë8
(
zbuf
 *
z
)

135 
uöt8
 
a
;

136 i‡(
z
->
tŸªad
 >z->
tŸsize
)  0;

137 i‡(
z
->
zbuf„r
) {

138 
z
->
tŸªad
++;

139  *
z
->
zbuf„r
++;

142 
	`‰ód
(&
a
,1,1,
z
->
zf
);

143 
z
->
tŸªad
++;

144  
a
;

145 
	}
}

147 
	$fûl_bôs
(
zbuf
 *
z
)

151 
	`as£π
(
z
->
code_buf„r
 < (1U << z->
num_bôs
));

152 
z
->
code_buf„r
 |
	`zgë8
(zË<< z->
num_bôs
;

153 
z
->
num_bôs
 += 8;

154 } 
z
->
num_bôs
 <= 24);

155 
	}
}

157 
__f‹˚ölöe
 
	$zª˚ive
(
zbuf
 *
z
, 
n
)

159 
k
;

160 i‡(
z
->
num_bôs
 < 
n
Ë
	`fûl_bôs
(z);

161 
k
 = 
z
->
code_buf„r
 & ((1 << 
n
) - 1);

162 
z
->
code_buf„r
 >>
n
;

163 
z
->
num_bôs
 -
n
;

164  
k
;

165 
	}
}

167 
__f‹˚ölöe
 
	$zhuffm™_decode
(
zbuf
 *
a
, 
zhuffm™
 *
z
)

169 
b
,
s
,
k
;

170 i‡(
a
->
num_bôs
 < 16Ë
	`fûl_bôs
(a);

171 
b
 = 
z
->
Á°
[
a
->
code_buf„r
 & 
ZFAST_MASK
];

172 i‡(
b
 < 0xffff) {

173 
s
 = 
z
->
size
[
b
];

174 
a
->
code_buf„r
 >>
s
;

175 
a
->
num_bôs
 -
s
;

176  
z
->
vÆue
[
b
];

181 
k
 = 
	`bô_ªvî£
(
a
->
code_buf„r
, 16);

182 
s
=
ZFAST_BITS
+1; ; ++s)

183 i‡(
k
 < 
z
->
maxcode
[
s
])

185 i‡(
s
 == 16)  -1;

187 
b
 = (
k
 >> (16-
s
)Ë- 
z
->
fú°code
[s] + z->
fú°symbﬁ
[s];

188 
	`as£π
(
z
->
size
[
b
] =
s
);

189 
a
->
code_buf„r
 >>
s
;

190 
a
->
num_bôs
 -
s
;

191  
z
->
vÆue
[
b
];

192 
	}
}

194 
	gÀngth_ba£
[31] = {

199 
	gÀngth_exåa
[31]=

202 
	gdi°_ba£
[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,

205 
	gdi°_exåa
[32] =

208 
	$compuã_huffm™_codes
(
zbuf
 *
a
)

210 
uöt8
 
Àngth_dezigzag
[19] = { 16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15 };

211 
zhuffm™
 
z_codñígth
;

212 
uöt8
 
Àncodes
[286+32+137];

213 
uöt8
 
codñígth_sizes
[19];

214 
i
,
n
;

216 
hlô
 = 
	`zª˚ive
(
a
,5) + 257;

217 
hdi°
 = 
	`zª˚ive
(
a
,5) + 1;

218 
h˛í
 = 
	`zª˚ive
(
a
,4) + 4;

220 
	`mem£t
(
codñígth_sizes
, 0, (codelength_sizes));

221 
i
=0; i < 
h˛í
; ++i) {

222 
s
 = 
	`zª˚ive
(
a
,3);

223 
codñígth_sizes
[
Àngth_dezigzag
[
i
]] = (
uöt8
Ë
s
;

225 i‡(!
	`zbuûd_huffm™
(&
z_codñígth
, 
codñígth_sizes
, 19))  0;

227 
n
 = 0;

228 
n
 < 
hlô
 + 
hdi°
) {

229 
c
 = 
	`zhuffm™_decode
(
a
, &
z_codñígth
);

230 
	`as£π
(
c
 >= 0 && c < 19);

231 i‡(
c
 < 16)

232 
Àncodes
[
n
++] = (
uöt8
Ë
c
;

233 i‡(
c
 == 16) {

234 
c
 = 
	`zª˚ive
(
a
,2)+3;

235 
	`mem£t
(
Àncodes
+
n
,Üícodes[n-1], 
c
);

236 
n
 +
c
;

237 } i‡(
c
 == 17) {

238 
c
 = 
	`zª˚ive
(
a
,3)+3;

239 
	`mem£t
(
Àncodes
+
n
, 0, 
c
);

240 
n
 +
c
;

242 
	`as£π
(
c
 == 18);

243 
c
 = 
	`zª˚ive
(
a
,7)+11;

244 
	`mem£t
(
Àncodes
+
n
, 0, 
c
);

245 
n
 +
c
;

248 i‡(
n
 !
hlô
+
hdi°
Ë 
	`e
("bad codelengths","Corrupt PNG");

249 i‡(!
	`zbuûd_huffm™
(&
a
->
z_Àngth
, 
Àncodes
, 
hlô
))  0;

250 i‡(!
	`zbuûd_huffm™
(&
a
->
z_di°™˚
, 
Àncodes
+
hlô
, 
hdi°
))  0;

252 
	}
}

255 
uöt8
 
	gdeÁu…_Àngth
[288], 
	gdeÁu…_di°™˚
[32];

256 
	$öô_deÁu…s
()

258 
i
;

260 
i
=0; i <143; ++iË
deÁu…_Àngth
[i] = 8;

261  ; 
i
 <255; ++iË
deÁu…_Àngth
[i] = 9;

262  ; 
i
 <279; ++iË
deÁu…_Àngth
[i] = 7;

263  ; 
i
 <287; ++iË
deÁu…_Àngth
[i] = 8;

265 
i
=0; i <31; ++iË
deÁu…_di°™˚
[i] = 5;

266 
	}
}

269 
ölöe
 
	$push_cbuf
(
zbuf
 *
a
,
uöt8
 
d©a
) {

271 
a
->
cbuf
[a->
cb_pos
++]=
d©a
;

272 i‡(
a
->
cb_pos
>=32*1024)á->cb_pos=0;

273 
	}
}

274 
ölöe
 
uöt8
 
	$p›_cbuf
(
zbuf
 *
a
) {

275 
uöt8
 
d©a
=
a
->
cbuf
[a->
cb_pos
++];

276 i‡(
a
->
cb_pos
>=32*1024)á->cb_pos=0;

277  
d©a
;

278 
	}
}

279 
ölöe
 
uöt8
 
	$p›_cbuf_‰om_di°
(
zbuf
 *
a
,
di°
) {

280 
≈os
=
a
->
cb_pos
-
di°
;

283 i‡(
≈os
<0)Çpos+=(32*1024);

285  
a
->
cbuf
[
≈os
];

287 
	}
}

289 
	$∑r£_zlib_hódî
(
zbuf
 *
a
)

291 
cmf
 = 
	`zgë8
(
a
);

292 
cm
 = 
cmf
 & 15;

294 
Êg
 = 
	`zgë8
(
a
);

295 i‡((
cmf
*256+
Êg
Ë% 31 !0Ë 
	`e
("bad zlib header","Corrupt PNG");

296 i‡(
Êg
 & 32Ë 
	`e
("noÖreset dict","Corrupt PNG");

297 i‡(
cm
 !8Ë 
	`e
("bad compression","Corrupt PNG");

301 
	}
}

303 
	$∑r£_huffm™_block
(
zbuf
 *
a
,
maxÀn
)

305 
tŸdec
=0;

307 i‡(
a
->
À·
>0) {

309 
a
->
À·
--) {

310 
uöt8
 
o
=
	`p›_cbuf_‰om_di°
(
a
,a->
di°
);

311 
	`push_cbuf
(
a
,
o
);

312 *
a
->
zout
++ = 
o
;

313 
tŸdec
++;

315 i‡(
tŸdec
==
maxÀn
) {

317  
maxÀn
;

322 
z
 = 
	`zhuffm™_decode
(
a
, &a->
z_Àngth
);

324 i‡(
z
 < 256) {

325 i‡(
z
 < 0Ë 
	`e
("bad huffman code","Corrupt PNG");

327 *
a
->
zout
++ = (Ë
z
;

329 
	`push_cbuf
(
a
,
z
);

330 
tŸdec
++;

331 i‡(
tŸdec
==
maxÀn
) {

333  
maxÀn
;

336 
uöt8
 *
p
;

337 
Àn
,
di°
;

338 i‡(
z
 == 256) {

340 
a
->
ty≥
=-1;

341  
tŸdec
;

343 i‡(
a
->
À·
<=0) {

345 
z
 -= 257;

346 
Àn
 = 
Àngth_ba£
[
z
];

347 i‡(
Àngth_exåa
[
z
]Ë
Àn
 +
	`zª˚ive
(
a
,Üength_extra[z]);

348 
z
 = 
	`zhuffm™_decode
(
a
, &a->
z_di°™˚
);

349 i‡(
z
 < 0Ë 
	`e
("bad huffman code","Corrupt ZIP");

350 
di°
 = 
di°_ba£
[
z
];

351 i‡(
di°_exåa
[
z
]Ë
di°
 +
	`zª˚ive
(
a
, dist_extra[z]);

353 i‡(
di°
>32*1024Ë{
	`¥ötf
("Bad dist\n"); 0;}

355 
a
->
À·
=
Àn
;

356 
a
->
di°
=dist;

360 
a
->
À·
--) {

361 
uöt8
 
o
=
	`p›_cbuf_‰om_di°
(
a
,a->
di°
);

362 
	`push_cbuf
(
a
,
o
);

363 *
a
->
zout
++ = 
o
;

364 
tŸdec
++;

366 i‡(
tŸdec
==
maxÀn
) {

368  
maxÀn
;

373 
	}
}

375 
	$c›y_uncom¥es£d_block
(
zbuf
 *
a
,
maxÀn
)

377 
Àn
=(
a
->
À·
>
maxÀn
?maxlen:a->left);

378 
i
=
Àn
;

379 
uöt8
 
d©a
;

381 
i
) {

382 i‡(
a
->
zbuf„r
) {

383 
	`push_cbuf
(
a
,*a->
zbuf„r
);

384 *
a
->
zout
++ = *a->
zbuf„r
++;

386 
	`‰ód
(&
d©a
,1,1,
a
->
zf
);

387 
	`push_cbuf
(
a
,
d©a
);

388 *
a
->
zout
++ = 
d©a
;

390 
i
--;

391 
a
->
tŸªad
++;

393 
a
->
À·
-=
Àn
;i‡◊->À·<=0Ëa->
ty≥
=-1;

394  
Àn
;

395 
	}
}

397 
	$∑r£_hódî
(
zbuf
 *
a
) {

398 
uöt8
 
hódî
[4];

399 
Àn
,
∆í
,
k
;

400 
a
->
ty≥
) {

404 i‡(
a
->
num_bôs
 & 7)

405 
	`zª˚ive
(
a
,á->
num_bôs
 & 7);

407 
k
 = 0;

408 
a
->
num_bôs
 > 0) {

409 
hódî
[
k
++] = (
uöt8
Ë(
a
->
code_buf„r
 & 255);

410 
a
->
code_buf„r
 >>= 8;

411 
a
->
num_bôs
 -= 8;

413 
	`as£π
(
a
->
num_bôs
 == 0);

415 
k
 < 4)

416 
hódî
[
k
++] = (
uöt8
Ë
	`zgë8
(
a
);

417 
Àn
 = 
hódî
[1] * 256 + header[0];

418 
∆í
 = 
hódî
[3] * 256 + header[2];

419 
	`¥ötf
("À¿%dÇÀ¿%d\n",
Àn
,
∆í
);

420 i‡(
∆í
 !(
Àn
 ^ 0xffff)Ë 
	`e
("zlib corrupt (uncompressed block)","Corrupt ZIP");

421 i‡(
a
->
tŸªad
 + 
Àn
 >á->
tŸsize
Ë 
	`e
("readÖast buffer","Corrupt ZIP");

422 
a
->
À·
=
Àn
;

427 i‡(!
deÁu…_di°™˚
[31]Ë
	`öô_deÁu…s
();

428 i‡(!
	`zbuûd_huffm™
(&
a
->
z_Àngth
 , 
deÁu…_Àngth
 , 288))  0;

429 i‡(!
	`zbuûd_huffm™
(&
a
->
z_di°™˚
, 
deÁu…_di°™˚
, 32))  0;

435 i‡(!
	`compuã_huffm™_codes
(
a
))  0;

441 
	}
}

448 
zbuf
 *
	$°bi_zlib_¸óã_zbuf
(c⁄° *
ibuf„r
,
FILE
 *
f
,
ûí
) {

449 
zbuf
 *
a
=
	`mÆloc
((zbuf));

452 
a
->
cbuf
=
	`mÆloc
(32*1024);

453 
a
->
cb_pos
=0;

456 
a
->
föÆ
=0;

457 
a
->
ty≥
=-1;

460 
a
->
À·
=0;

462 i‡(!
ibuf„r
 && !
f
Ë 
NULL
;

463 
a
->
zbuf„r
 = (
uöt8
 *Ë
ibuf„r
;

464 
a
->
zf
=
f
;

465 
a
->
zbuf„r_íd
 = (
uöt8
 *Ë
ibuf„r
 + 
ûí
;

466 
a
->
tŸªad
=0;

467 
a
->
tŸsize
=
ûí
;

469 
a
->
num_bôs
 = 0;

470 
a
->
code_buf„r
 = 0;

472  
a
;

473 
	}
}

478 
	$°bi_zlib_decode_nohódî_°ªam
(
zbuf
 *
a
,*
obuf„r
, 
ﬁí
) {

479 
ªaded
=0;

480 
tŸªad
=0;

481 
l
;

482 if(!
a
)  -1;

484 i‡(
a
->
tŸªad
>˜->
tŸsize
)  -1;

486 
a
->
zout_°¨t
=
obuf„r
;

487 
a
->
zout
=
obuf„r
;

488 
todo
=
ﬁí
;

490 i‡(
a
->
ty≥
==-1) {

491 
a
->
föÆ
 = 
	`zª˚ive
(a,1);

492 
a
->
ty≥
 = 
	`zª˚ive
(a,2);

494 
	`∑r£_hódî
(
a
);

497 
a
->
ty≥
) {

499 
ªaded
=
	`c›y_uncom¥es£d_block
(
a
,
todo
);

500 
tŸªad
+=
ªaded
;

506 
ªaded
=
	`∑r£_huffm™_block
(
a
,
todo
);

507 
tŸªad
+=
ªaded
;

514 
todo
-=
ªaded
;

516 } !
a
->
föÆ
 && 
tŸªad
<
ﬁí
);

518  
tŸªad
;

519 
	}
}

521 *
	$°bi_zlib_decode_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
) {

522 
zbuf
 *
z
=
	`°bi_zlib_¸óã_zbuf
(
buf„r
,
NULL
,
Àn
);

523 
ªaded
,
tŸªad
=0;

524 *
buf
;

525 
guesssize
=
Àn
*20;

527 
	`¥ötf
("°bi_zlib_decode_mÆlo¯%∞%d\n",
buf„r
,
guesssize
);

528 
buf
=
	`mÆloc
(
guesssize
);

529 i‡(!
buf
 || !
z
Ë 
NULL
;

531 i‡(!
	`∑r£_zlib_hódî
(
z
)Ë 
NULL
;

533 (
ªaded
=
	`°bi_zlib_decode_nohódî_°ªam
(
z
,
buf
,
guesssize
))!=-1) {

536 
tŸªad
+=
ªaded
;

537 
buf
=
	`ªÆloc
(buf,
guesssize
+
tŸªad
);

540 
buf
=
	`ªÆloc
(buf,
tŸªad
);

541 *
ouéí
=
tŸªad
;

542  
buf
;

543 
	}
}

	@src/stb_zlib.h

1 #i‚de‡
STB_ZLIB_H


2 
	#STB_ZLIB_H


	)

5 
	~<°dio.h
>

7 
	tuöt8
;

8 
	tuöt16
;

9 sig√d 
	töt16
;

10 
	tuöt32
;

11 sig√d 
	töt32
;

12 
	tuöt
;

16 
	#ZFAST_BITS
 9

17 
	#ZFAST_MASK
 ((1 << 
ZFAST_BITS
Ë- 1)

	)

23 
uöt16
 
	mÁ°
[1 << 
ZFAST_BITS
];

24 
uöt16
 
	mfú°code
[16];

25 
	mmaxcode
[17];

26 
uöt16
 
	mfú°symbﬁ
[16];

27 
uöt8
 
	msize
[288];

28 
uöt16
 
	mvÆue
[288];

29 } 
	tzhuffm™
;

33 
uöt8
 *
	mzbuf„r
, *
	mzbuf„r_íd
;

34 
FILE
 *
	mzf
;

35 
	mtŸªad
,
	mtŸsize
;

36 
	mnum_bôs
;

37 
uöt32
 
	mcode_buf„r
;

39 *
	mzout
;

40 *
	mzout_°¨t
;

41 *
	mzout_íd
;

42 
	mz_ex∑ndabÀ
;

44 
uöt8
 *
	mcbuf
;

45 
uöt32
 
	mcb_pos
;

46 
	mföÆ
,
	mÀ·
,
	mty≥
,
	mdi°
;

48 
zhuffm™
 
	mz_Àngth
, 
	mz_di°™˚
;

49 } 
	tzbuf
;

54 *
°bi_zlib_decode_mÆloc
(c⁄° *
buf„r
, 
Àn
, *
ouéí
);

56 
zbuf
 *
°bi_zlib_¸óã_zbuf
(c⁄° *
ibuf„r
,
FILE
 *
f
, 
ûí
);

57 
°bi_zlib_decode_nohódî_°ªam
(
zbuf
 *
a
,*
obuf„r
, 
ﬁí
);

	@src/timer.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<°dlib.h
>

24 
	~"emu.h
"

25 
	~"timî.h
"

26 
	~"°©e.h
"

27 
	~"ym2610/ym2610.h
"

28 #ifde‡
GP2X


29 
	~"ym2610-940/940sh¨ed.h
"

32 
	gtimî_cou¡
;

35 
timî_°ru˘
 *
	gtimî_li°
;

36 
	#MAX_TIMER
 3

	)

37 
timî_°ru˘
 
	gtimîs
[
MAX_TIMER
];

38 
nb_öãæa˚
;

41 
	$timî_gë_time
() {

43  
timî_cou¡
;

44 
	}
}

46 
timî_°ru˘
 *
	$ö£π_timî
(
duøti⁄
, 
∑øm
, (*
func
) ())

49 
i
;

50 
i
 = 0; i < 
MAX_TIMER
; i++) {

51 i‡(
timîs
[
i
].
dñ_ô
) {

52 
timîs
[
i
].
time
 = 
timî_cou¡
 + 
duøti⁄
;

53 
timîs
[
i
].
∑øm
 =Öaram;

54 
timîs
[
i
].
func
 = func;

56 
timîs
[
i
].
dñ_ô
 = 0;

57  &
timîs
[
i
];

60 
	`¥ötf
("YM2610: NoÅimer free!\n");

61  
NULL
;

62 
	}
}

64 
	$‰ì_Æl_timî
() {

65 
i
;

66 
i
 = 0; i < 
MAX_TIMER
; i++) {

67 
timîs
[
i
].
dñ_ô
=1;

69 
	}
}

71 #ifde‡
ENABLE_940T


72 
	$timî_ˇŒback_2610
(
∑øm
){
	}
}

74 
timî_ˇŒback_2610
(
∑øm
);

77 
	$dñ_timî
(
timî_°ru˘
 * 
ts
)

79 
ts
->
dñ_ô
 = 1;

80 
	}
}

82 
	göc
;

85 
	$my_timî
()

87 
öô
 = 1;

88 
i
;

90 i‡(
öô
) {

92 
öô
 = 0;

94 i‡(
c⁄f
.
∑l
) {

95 
öc
 = ((Ë(0.02Ë/ 
nb_öãæa˚
);

98 
öc
 = ((Ë(0.01666Ë/ 
nb_öãæa˚
);

101 
i
 = 0; i < 
MAX_TIMER
; i++)

102 
timîs
[
i
].
dñ_ô
 = 1;

105 
timî_cou¡
 +
öc
;

107 
i
 = 0; i < 
MAX_TIMER
; i++) {

108 i‡(
timî_cou¡
 >
timîs
[
i
].
time
 &&Åimîs[i].
dñ_ô
 == 0) {

110 i‡(
timîs
[
i
].
func
Ëtimîs[i].
	`func
—imîs[i].
∑øm
);

111 
timîs
[
i
].
dñ_ô
 = 1;

114 
	}
}

	@src/timer.h

19 #i‚de‡
_TIMER_H_


20 
	#_TIMER_H_


	)

22 
	~"SDL.h
"

24 
	stimî_°ru˘
 {

25 
	mtime
;

27 
Uöt32
 
	modo_debut
;

28 
Uöt32
 
	mnb_cy˛e
;

29 
	m∑øm
;

30 
Uöt32
 
	mdñ_ô
;

31 (*
	mfunc
Ë(
	m∑øm
);

32 
timî_°ru˘
 *
	m√xt
;

33 } 
	ttimî_°ru˘
;

35 
timî_cou¡
;

38 
timî_°ru˘
 *
ö£π_timî
(
duøti⁄
, 
∑øm
, (*
func
) ());

40 
	`dñ_timî
(
timî_°ru˘
 * 
ts
);

41 
	`my_timî
();

42 
	`timî_gë_time
();

44 
	`‰ì_Æl_timî
();

	@src/transpack.c

20 #ifde‡
HAVE_CONFIG_H


21 
	~<c⁄fig.h
>

23 
	~"SDL.h
"

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 
	~"å™•ack.h
"

31 
	$å™s_∑ck_add
(
Uöt32
 
begö
,Uöt32 
íd
,Uöt32 
ty≥
)

33 
TRANS_PACK
 *
t
;

34 
t
=(
TRANS_PACK
*)
	`mÆloc
((TRANS_PACK));

35 
t
->
begö
=begin;

36 
t
->
íd
=end;

37 
t
->
ty≥
=type;

38 
t
->
√xt
=
tûe_å™s
;

39 
tûe_å™s
=
t
;

40 
	}
}

42 
TRANS_PACK
* 
	$å™s_∑ck_föd
(
Uöt32
 
tûe
)

44 
TRANS_PACK
 *
t
=
tûe_å™s
;

45 
t
!=
NULL
) {

46 i‡(
tûe
>=
t
->
begö
 &&Åûe<Ò->
íd
)

47  
t
;

48 
t
Ò->
√xt
;

50  
NULL
;

51 
	}
}

53 
	$å™s_∑ck_‰ì
() {

54 
TRANS_PACK
 *
t
=
tûe_å™s
;

55 
TRANS_PACK
 *
p
;

56 
t
!=
NULL
) {

57 
p
=
t
;

58 
t
Ò->
√xt
;

59 
	`‰ì
(
p
);

61 
tûe_å™s
=
NULL
;

62 
	}
}

65 
	$å™s_∑ck_›í
(*
fûíame
)

67 
FILE
 *
f
;

68 
buf
[256];

69 *
ªs
;

70 
ønge
[32];

71 
ty≥
, 
begö
, 
íd
;

72 *
t
;

74 
tûe_å™s
 = 
NULL
;

75 i‡(
	`°rcmp
(
fûíame
,"none")==0)

78 
f
 = 
	`f›í
(
fûíame
, "r");

80 i‡(
f
 =
NULL
) {

81 
	`¥ötf
("C™'à›í %s\n", 
fûíame
);

84 !
	`„of
(
f
)) {

85 
ªs
=
	`fgës
(
buf
, 256, 
f
);

87 
t
 = 
	`°rchr
(
buf
, ';');

88 i‡(
t
)

89 
t
[0] = 0;

91 
t
 = 
	`°r°r
(
buf
, "Game");

92 i‡(
t
)

94 
t
 = 
	`°r°r
(
buf
, "Name");

95 i‡(
t
)

98 i‡(
	`ssˇnf
(
buf
, " %†%d \n", 
ønge
, &
ty≥
) == 2) {

99 
t
 = 
	`°rchr
(
ønge
, '-');

100 i‡(
t
) {

101 
t
[0] = 0;

102 
t
++;

103 
	`ssˇnf
(
ønge
, "%x", &
begö
);

104 
	`ssˇnf
(
t
, "%x", &
íd
);

106 
	`ssˇnf
(
ønge
, "%x", &
begö
);

107 
íd
 = 
begö
;

110 
	`å™s_∑ck_add
(
begö
, 
íd
, 
ty≥
);

113 
	`f˛o£
(
f
);

114 
	}
}

	@src/transpack.h

1 #i‚de‡
_TRANSPACK_H_


2 
	#_TRANSPACK_H_


	)

4 
	~"SDL.h
"

6 
	mTILE_NORMAL
,

7 
	mTILE_INVISIBLE
,

8 
	mTILE_TRANSPARENT25
,

9 
	mTILE_TRANSPARENT50
,

12 
	sTRANS_PACK
 {

13 
Uöt32
 
	mbegö
, 
	míd
;

14 
Uöt8
 
	mty≥
;

15 
TRANS_PACK
 *
	m√xt
;

16 } 
	tTRANS_PACK
;

17 
TRANS_PACK
 *
	gtûe_å™s
;

19 
TRANS_PACK
* 
å™s_∑ck_föd
(
Uöt32
 
tûe
);

20 
å™s_∑ck_›í
(*
fûíame
);

21 
å™s_∑ck_‰ì
();

	@src/unzip.c

9 #ifde‡
HAVE_CONFIG_H


10 
	~"c⁄fig.h
"

14 
	~<sys/°©.h
>

16 #i‡
deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

17 
	~<zlib.h
>

19 
	~<uni°d.h
>

20 
	~<sys/mm™.h
>

21 
	~<as£π.h
>

23 
	~"°b_zlib.h
"

26 
	~<°d¨g.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<î∫o.h
>

30 
	~"unzù.h
"

32 
	$fgë8
(
FILE
 *
f
) {

33 i‡(
f
) {

34 
c
 = 
	`fgëc
(
f
);

35  
c
 =
EOF
 ? 0 : c;

38 
	}
}

39 
uöt8_t
 
	$fgë8u
(
FILE
 *
f
) {

40  (
uöt8_t
Ë
	`fgë8
(
f
);

41 
	}
}

42 
	$fskù
(
FILE
 *
f
, 
n
) {

43 
uöt8_t
 
a
, 
i
;

44 
size_t
 
å
;

45 i‡(!
f
)

47 
i
 = 0; i < 
n
; i++)

48 
å
=
	`‰ód
(&
a
, 1, 1, 
f
);

49 
	}
}

50 
uöt16_t
 
	$fgë16
(
FILE
 *
f
) {

51 
z
 = 
	`fgë8
(
f
);

52  (
z
 << 8Ë+ 
	`fgë8
(
f
);

53 
	}
}

55 
uöt32_t
 
	$fgë32
(
FILE
 *
f
) {

56 
uöt32_t
 
z
 = 
	`fgë16
(
f
);

57  (
z
 << 16Ë+ 
	`fgë16
(
f
);

58 
	}
}

60 
uöt16_t
 
	$fgë16À
(
FILE
 *
f
) {

61 
z
 = 
	`fgë8
(
f
);

62  
z
 + (
	`fgë8
(
f
) << 8);

63 
	}
}

65 
uöt32_t
 
	$fgë32À
(
FILE
 *
f
) {

66 
uöt32_t
 
z
 = 
	`fgë16À
(
f
);

67  
z
 + (
	`fgë16À
(
f
) << 16);

68 
	}
}

70 
	$‰ódvÀ
(
FILE
 *
f
, *
fmt
, ...) {

71 
va_li°
 
v
;

72 
	`va_°¨t
(
v
,
fmt
);

74 *
fmt
) {

75 *
fmt
++) {

79 
uöt8_t
 *
x
 = (uöt8_t*Ë
	`va_¨g
(
v
, *);

81 i‡(
x
)

82 (*
x
Ë
	`fgë8
(
f
);

84 
	`fskù
(
f
, 1);

88 
uöt16_t
 *
x
 = (uöt16_t*Ë
	`va_¨g
(
v
, *);

90 i‡(
x
)

91 (*
x
Ë
	`fgë16À
(
f
);

93 
	`fskù
(
f
, 2);

97 
uöt32_t
 *
x
 = (uöt32_t*Ë
	`va_¨g
(
v
, *);

99 i‡(
x
)

100 (*
x
Ë
	`fgë32À
(
f
);

102 
	`fskù
(
f
, 4);

106 
	`va_íd
(
v
);

110 
	`va_íd
(
v
);

111 
	}
}

113 
	$£¨ch_sig32
(
PKZIP
 *
zf
, 
uöt8_t
 
sig
[4]) {

114 
i
 = 0, 
pos
;

115 
uöt8_t
 
a
;

116 
t
 = 0;

117 
size_t
 
å
=0;

119 i‡(!
zf
 || !zf->
fûe
)

122 !
	`„of
(
zf
->
fûe
)) {

123 
å
+=
	`‰ód
(&
a
, (), 1, 
zf
->
fûe
);

125 i‡(
sig
[
i
] =
a
) {

127 i‡(
i
 == 3) {

129 
pos
 = 
	`·ñl
(
zf
->
fûe
) - 4;

130  
pos
;

133 
i
++;

135 
i
 = 0;

136 
t
++;

139 
	}
}

141 
	$£¨ch_˚¡øl_dú
(
PKZIP
 *
zf
) {

142 
i
 = 0;

143 
sig_cde
[4] = { 0x50, 0x4b, 0x05, 0x06 };

144 
sig_cd
[4] = { 0x50, 0x4b, 0x01, 0x02 };

145 
uöt16_t
 
nbdsk
;

147 i‡(!
zf
 || !zf->
fûe
)

149 
zf
->
cde_off£t
 = 0;

150 
i
 = 0; i < 0xFFFF; i += 0x100) {

151 
	`f£ek
(
zf
->
fûe
, -
i
 - 22, 
SEEK_END
);

154 
zf
->
cde_off£t
 = 
	`£¨ch_sig32
(zf, 
sig_cde
);

156 i‡(
zf
->
cde_off£t
 != -1) {

160 i‡(
zf
->
cde_off£t
 == -1) {

161 
	`¥ötf
("Couldn't find central dir, Corrupted zip\n");

166 
	`‰ódvÀ
(
zf
->
fûe
, "22 22 44", &
nbdsk
, 0, 0, &zf->
nb_ôem
, &zf->
cd_size
,

167 &
zf
->
cd_off£t
);

168 i‡(
nbdsk
 != 0) {

169 
	`¥ötf
("Mu…òdiskÇŸ suµ‹ãd (%d)\n", 
nbdsk
);

177 
	`f£ek
(
zf
->
fûe
, zf->
cd_off£t
, 
SEEK_SET
);

178 i‡(
	`£¨ch_sig32
(
zf
, 
sig_cd
Ë!zf->
cd_off£t
) {

179 
	`¥ötf
("Corrupted zip\n");

184 
	}
}

186 
	$unzù_loˇã_fûe
(
PKZIP
 *
zf
, c⁄° *
fûíame
, 
uöt32_t
 
fûe_¸c
) {

187 
pos
;

188 
uöt32_t
 
¸c
, 
off£t
;

189 
uöt16_t
 
xf_Àn
, 
fcommít_Àn
, 
‚ame_Àn
;

190 
uöt32_t
 
sig
;

191 *
‚ame
 = 
NULL
;

192 
size_t
 
å
=0;

194 
	`f£ek
(
zf
->
fûe
, zf->
cd_off£t
, 
SEEK_SET
);

195 
pos
 = 
	`·ñl
(
zf
->
fûe
);

196 i‡(
fûe_¸c
 == 0)

197 
fûe_¸c
 = (
uöt32_t
) -1;

199 
sig
 = 
	`fgë32À
(
zf
->
fûe
);

201 i‡(
sig
 == 0x02014b50) {

202 
	`‰ódvÀ
(
zf
->
fûe
, "222222 4 44 222 224 4 ", 
NULL
, NULL, NULL,

203 
NULL
, NULL, NULL, &
¸c
, NULL, NULL, &
‚ame_Àn
, &
xf_Àn
,

204 &
fcommít_Àn
, 
NULL
, NULL, NULL, &
off£t
);

205 i‡(
‚ame
)

206 
	`‰ì
(
‚ame
);

207 
‚ame
 = 
	`ˇŒoc
(
‚ame_Àn
 + 1, ());

208 
å
+=
	`‰ód
(
‚ame
, 
‚ame_Àn
, 1, 
zf
->
fûe
);

209 
	`fskù
(
zf
->
fûe
, 
xf_Àn
 + 
fcommít_Àn
);

211 i‡((
	`°rcmp
(
‚ame
, 
fûíame
Ë=0 && 
	`°æí
(fname) == strlen(

212 
fûíame
)Ë|| 
¸c
 =
fûe_¸c
) {

214 
	`‰ì
(
‚ame
);

215 
	`f£ek
(
zf
->
fûe
, 
off£t
, 
SEEK_SET
);

221 i‡(
‚ame
)

222 
	`‰ì
(
‚ame
);

224 
	}
}

226 
ZFILE
 *
	$gn_unzù_f›í
(
PKZIP
 *
zf
, c⁄° *
fûíame
, 
uöt32_t
 
fûe_¸c
) {

227 
ZFILE
 *
z
;

228 
uöt32_t
 
sig
;

229 
cmëh
, 
xf_Àn
, 
‚ame_Àn
;

230 
csize
, 
uncsize
;

232 i‡(
	`unzù_loˇã_fûe
(
zf
, 
fûíame
, 
fûe_¸c
) == 0) {

233 
sig
 = 
	`fgë32À
(
zf
->
fûe
);

235 i‡(
sig
 != 0x04034b50) {

236 
	`¥ötf
("Error\n");

237  
NULL
;

239 
	`fskù
(
zf
->
fûe
, 2 + 2);

240 
cmëh
 = 
	`fgë16À
(
zf
->
fûe
);

241 i‡(
cmëh
 != 0 && cmeth != 8) {

242 
	`¥ötf
("Error: Unsupported compression method\n");

243  
NULL
;

245 
	`fskù
(
zf
->
fûe
, 2 + 2 + 4);

246 
csize
 = 
	`fgë32À
(
zf
->
fûe
);

247 
uncsize
 = 
	`fgë32À
(
zf
->
fûe
);

249 
‚ame_Àn
 = 
	`fgë16À
(
zf
->
fûe
);

250 
xf_Àn
 = 
	`fgë16À
(
zf
->
fûe
);

252 
	`fskù
(
zf
->
fûe
, 
xf_Àn
 + 
‚ame_Àn
);

256 
z
 = 
	`mÆloc
((
ZFILE
));

257 i‡(!
z
)

258  
NULL
;

260 
z
->
pos
 = 
	`·ñl
(
zf
->
fûe
);

261 
z
->
csize
 = csize;

262 
z
->
uncsize
 = uncsize;

263 i‡(
cmëh
 == 8) {

264 #i‡
	`deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

265 
z
->
zb
 = 
	`mÆloc
((
z_°ªam
));

266 
z
->
öbuf
 = 
zf
->
m≠
+z->
pos
;

269 
	`mem£t
(
z
->
zb
, 0, (
z_°ªam
));

271 
z
->
zb
->
avaû_ö
=
csize
;

272 
z
->
zb
->
√xt_ö
=z->
öbuf
;

273 
	`öÊ©eInô2
(
z
->
zb
, -
MAX_WBITS
);

275 
z
->
zb
=
	`°bi_zlib_¸óã_zbuf
(
NULL
,
zf
->
fûe
,
csize
);

278 
z
->
cmëh
 = cmeth;

279 
z
->
ªaded
 = 0;

280 
z
->
f
 = 
zf
->
fûe
;

281  
z
;

284  
NULL
;

286 
	}
}

288 
	$gn_unzù_‰ód
(
ZFILE
 *
z
, 
uöt8_t
 *
d©a
, 
size
) {

289 
ªaded
;

290 
todo
;

291 
ªt
;

292 
size_t
 
å
=0;

293 i‡(!
z
)

297 i‡(
z
->
cmëh
 == 8) {

298 #i‡
	`deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

299 
z
->
zb
->
√xt_out
 = 
d©a
;

300 
z
->
zb
->
avaû_out
 = 
size
;

301 
ªt
 = 
	`öÊ©e
(
z
->
zb
, 
Z_NO_FLUSH
);

303 
	`as£π
(
ªt
 !
Z_STREAM_ERROR
);

304 
ªt
) {

305 
Z_NEED_DICT
:

306 
ªt
 = 
Z_DATA_ERROR
;

307 
Z_DATA_ERROR
:

308 
Z_MEM_ERROR
:

309 (Ë
	`öÊ©eEnd
(
z
->
zb
);

310  
ªt
;

312 
ªaded
 = 
size
 - 
z
->
zb
->
avaû_out
;

314 
ªaded
=
	`°bi_zlib_decode_nohódî_°ªam
(
z
->
zb
,
d©a
,
size
);

317 
todo
 = 
z
->
ªaded
 - z->
uncsize
;

318 i‡(
todo
 < 
size
)

319 
todo
 = 
size
;

321 
ªaded
 = 
	`‰ód
(
d©a
, 1, 
size
, 
z
->
f
);

322 
z
->
ªaded
 +=Ñeaded;

325 
z
->
pos
 = 
	`·ñl
(z->
f
);

326  
ªaded
;

327 
	}
}

329 
uöt8_t
 *
	$gn_unzù_fûe_mÆloc
(
PKZIP
 *
zf
, c⁄° *
fûíame
, 
uöt32_t
 
fûe_¸c
,

330 *
ouéí
) {

331 
ZFILE
 *
z
 = 
	`gn_unzù_f›í
(
zf
, 
fûíame
, 
fûe_¸c
);

332 
ªaded
;

333 i‡(!
z
)

334  
NULL
;

335 
uöt8_t
 *
d©a
 = 
	`mÆloc
(
z
->
uncsize
);

336 i‡(!
d©a
)

337  
NULL
;

338 i‡(
z
->
cmëh
 == 8) {

339 #i‡!
	`deföed
(
HAVE_LIBZ
Ë|| !deföed (
HAVE_MMAP
)

340 
ªaded
 = 
	`°bi_zlib_decode_nohódî_°ªam
(
z
->
zb
, 
d©a
, z->
uncsize
);

342 
ªaded
=
	`gn_unzù_‰ód
(
z
,
d©a
,z->
uncsize
);

343 
	`¥ötf
("Róded=%d \n",
ªaded
);

346 
ªaded
 = 
	`‰ód
(
d©a
, 1, 
z
->
uncsize
, z->
f
);

347 i‡(
ªaded
 !
z
->
uncsize
)

348 
	`¥ötf
(

350 
ªaded
, 
z
->
uncsize
);

351 *
ouéí
 = 
z
->
uncsize
;

352 
	`gn_unzù_f˛o£
(
z
);

353  
d©a
;

354 
	}
}

356 
	$gn_unzù_f˛o£
(
ZFILE
 *
z
) {

357 i‡(!
z
)

359 #i‡
	`deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

360 i‡(
z
->
cmëh
==8) {

361 
	`öÊ©eEnd
(
z
->
zb
);

362 
	`‰ì
(
z
->
zb
);

365 i‡(
z
->
cmëh
==8Ë
	`‰ì
(z->
zb
->
cbuf
);

367 
	`‰ì
(
z
);

368 
	}
}

370 
PKZIP
 *
	$gn_›í_zù
(*
fûe
) {

371 
PKZIP
 *
zf
 = 
	`mÆloc
((PKZIP));

372 
size
;

373 
e
;

374 
°©
 
sb
;

377 i‡(
	`l°©
(
fûe
,&
sb
)==-1) {

378 
	`¥ötf
("Couldn'à›í %s\n", 
fûe
);

379 
	`‰ì
(
zf
);

380  
NULL
;

383 i‡(!
	`S_ISREG
(
sb
.
°_mode
Ë&& !
	`S_ISLNK
(sb.st_mode)) {

384 
	`¥ötf
("%†i†nŸáÑeguœ∏fûe\n", 
fûe
);

385 
	`‰ì
(
zf
);

386  
NULL
;

389 
zf
->
fûe
 = 
	`f›í
(file, "rb");

390 i‡(
zf
->
fûe
 =
NULL
) {

391 
	`¥ötf
("Hÿno! Couldn'à›í %s\n", 
fûe
);

392 
	`‰ì
(
zf
);

393  
NULL
;

395 #i‡
	`deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

396 
	`f£ek
(
zf
->
fûe
,0,
SEEK_END
);

397 
size
=
	`·ñl
(
zf
->
fûe
);

398 
zf
->
m≠
=
	`mm≠
(0,
size
,
PROT_READ
,
MAP_SHARED
,
	`fûío
(zf->
fûe
),0);

401 
e
 = 
	`£¨ch_˚¡øl_dú
(
zf
);

402 i‡(
e
) {

403 
	`¥ötf
("Så™gê%d %s\n", 
e
, 
fûe
);

404 
	`f˛o£
(
zf
->
fûe
);

405 
	`‰ì
(
zf
);

406  
NULL
;

408  
zf
;

409 
	}
}

410 
	$gn_˛o£_zù
(
PKZIP
 *
zf
) {

411 #i‡
	`deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

412 
	`f£ek
(
zf
->
fûe
,0,
SEEK_END
);

413 
size
=
	`·ñl
(
zf
->
fûe
);

414 
	`munm≠
(
zf
->
m≠
, 
size
);

416 
	`f˛o£
(
zf
->
fûe
);

417 
	`‰ì
(
zf
);

418 
	}
}

	@src/unzip.h

9 #i‚de‡
UNZIP_H_


10 
	#UNZIP_H_


	)

12 #ifde‡
HAVE_CONFIG_H


13 
	~"c⁄fig.h
"

16 #i‡
deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

17 
	~"zlib.h
"

19 
	~"°b_zlib.h
"

22 
	~<°dio.h
>

23 
	~<°döt.h
>

25 
	sZFILE
 {

27 
	mpos
;

28 #i‡
deföed
(
HAVE_LIBZ
Ë&& deföed (
HAVE_MMAP
)

29 
z_°ªamp
 
	mzb
;

30 
uöt8_t
 *
	möbuf
;

32 
zbuf
 *
	mzb
;

34 
FILE
 *
	mf
;

35 
	mcsize
,
	muncsize
;

36 
	mcmëh
;

37 
	mªaded
;

38 }
	tZFILE
;

40 
	sPKZIP
 {

41 
FILE
 *
	mfûe
;

42 
	mcd_off£t
;

43 
	mcd_size
;

44 
	mcde_off£t
;

45 
uöt16_t
 
	mnb_ôem
;

46 
uöt8_t
 *
	mm≠
;

47 }
	tPKZIP
;

49 
gn_unzù_f˛o£
(
ZFILE
 *
z
);

50 
gn_unzù_‰ód
(
ZFILE
 *
z
,
uöt8_t
 *
d©a
,
size
);

51 
ZFILE
 *
gn_unzù_f›í
(
PKZIP
 *
zf
,c⁄° *
fûíame
,
uöt32_t
 
fûe_¸c
);

52 
PKZIP
 *
gn_›í_zù
(*
fûe
);

53 
uöt8_t
 *
gn_unzù_fûe_mÆloc
(
PKZIP
 *
zf
,c⁄° *
fûíame
,
uöt32_t
 
fûe_¸c
,*
ouéí
);

54 
gn_˛o£_zù
(
PKZIP
 *
zf
);

	@src/video.c

19 #ifde‡
HAVE_CONFIG_H


20 
	~<c⁄fig.h
>

23 
	~<°rög.h
>

24 
	~<°dlib.h
>

25 
	~<zlib.h
>

26 
	~"video.h
"

27 
	~"mem‹y.h
"

28 
	~"emu.h
"

29 
	~"mesßges.h
"

30 
	~"s¸ìn.h
"

31 
	~"‰ame_skù.h
"

32 
	~"å™•ack.h
"

33 
	~"gnutû.h
"

35 
√ogeo_fix_b™k_ty≥
;

36 
	g√ogeo_‰ame_cou¡î
;

38 #ifde‡
PROCESSOR_ARM


40 
Uöt8
 *
	gmem_gfx
 = 
NULL
;

41 
Uöt8
 *
	gmem_video
 = 
NULL
;

43 
Uöt32
 *
	gmem_b™k_ußge
;

47 
døw_⁄e_ch¨_¨m
(
byã1
, 
byã2
, *
br
);

48 
døw_tûe_¨m_n‹m
(
tûío
, 
cﬁ‹
, *
bmp
, 
zy
);

51 #ifde‡
I386_ASM


53 
Uöt8
 **
	gmem_gfx
;

54 
Uöt8
 *
	gmem_video
;

57 
døw_tûe_i386_n‹m
(
tûío
, 
sx
, 
sy
, 
zx
, 
zy
,

58 
cﬁ‹
, 
xÊù
, 
yÊù
, *
bmp
);

59 
døw_tûe_i386_50
(
tûío
, 
sx
, 
sy
, 
zx
, 
zy
,

60 
cﬁ‹
, 
xÊù
, 
yÊù
, *
bmp
);

61 
døw_⁄e_ch¨_i386
(
byã1
, 
byã2
, *
br
);

63 
døw_sˇ∆öe_tûe_i386_n‹m
(
tûío
, 
yoffs
, 
sx
, 
löe
, 
zx
,

64 
cﬁ‹
, 
xÊù
, *
bmp
);

66 
døw_sˇ∆öe_tûe_i386_50
(
tûío
, 
yoffs
, 
sx
, 
löe
, 
zx
,

67 
cﬁ‹
, 
xÊù
, *
bmp
);

71 
	#PEN_USAGE
(
tûío
Ë((((
Uöt32
*Ë
mem‹y
.
rom
.
•r_ußge
.
p
)[tûío>>4]>>(—ûío&0xF)*2))&0x3)

	)

74 *
	gldda_y_skù
;

75 *
	gdda_x_skù
;

76 
	gddaxskù
[16][16] = {

94 
Uöt32
 
	gddaxskù_i
[16] = {

98 
Uöt32
 
	gdda_x_skù_i
;

100 
__ölöe__
 
Uöt16
 
	$Æpha_bÀnd
(
Uöt16
 
de°
, Uöt16 
§c
, 
Uöt8
 
a
) {

101 
Uöt8
 
dr
, 
dg
, 
db
, 
§
, 
sg
, 
sb
;

103 
dr
 = ((
de°
 & 0xF800) >> 11) << 3;

104 
dg
 = ((
de°
 & 0x7E0) >> 5) << 2;

105 
db
 = ((
de°
 & 0x1F)) << 3;

107 
§
 = ((
§c
 & 0xF800) >> 11) << 3;

108 
sg
 = ((
§c
 & 0x7E0) >> 5) << 2;

109 
sb
 = ((
§c
 & 0x1F)) << 3;

111 
dr
 = (((
§
 - dr)*(
a
)) >> 8) + dr;

112 
dg
 = (((
sg
 - dg)*(
a
)) >> 8) + dg;

113 
db
 = (((
sb
 - db)*(
a
)) >> 8) + db;

115  ((
dr
 >> 3Ë<< 11Ë| ((
dg
 >> 2Ë<< 5Ë| (
db
 >> 3);

116 
	}
}

117 
	#BLEND16_50
(
a
,
b
Ë(((◊)&0xf7de)>>1)+(((b)&0xf7de)>>1))

	)

118 
	#BLEND16_25
(
a
,
b
Ë
	`Æpha_bÀnd
◊,b,63)

	)

121 
	gdda_y_skù
[17];

122 
Uöt32
 
	gdda_y_skù_i
;

123 
Uöt32
 
	gfuŒ_y_skù_i
 = 0xFFFE;

124 
	gfuŒ_y_skù
[16] = {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};

125 
	g√ogeo_‰ame_cou¡î_•ìd
 = 8;

126 
Uöt16
 
	gfix_addr
[40][32];

127 
Uöt8
 
	gfix_shi·
[40];

130 
	$öô_•rôe_ˇche
(
Uöt32
 
size
, Uöt32 
bsize
) {

131 
GFX_CACHE
 *
gˇche
 = &
mem‹y
.
vid
.
•r_ˇche
;

132 
i
;

134 i‡(
gˇche
->
d©a
 !
NULL
) {

135 
	`mem£t
(
gˇche
->
±r
, 0, gˇche->
tŸÆ_b™k
 *  (
Uöt8
*));

136 
i
 = 0; i < 
gˇche
->
max_¶Ÿ
; i++)

137 
gˇche
->
ußge
[
i
] = -1;

142 
gˇche
->
¶Ÿ_size
 = 
bsize
;

143 
	`¥ötf
("gfx_size=%08x\n", 
mem‹y
.
rom
.
tûes
.
size
);

144 
gˇche
->
tŸÆ_b™k
 = 
mem‹y
.
rom
.
tûes
.
size
 / gˇche->
¶Ÿ_size
;

145 
gˇche
->
±r
 = 
	`mÆloc
(gˇche->
tŸÆ_b™k
 *  (
Uöt8
*));

146 i‡(
gˇche
->
±r
 =
NULL
)

147  
GN_FALSE
;

149 
	`mem£t
(
gˇche
->
±r
, 0, gˇche->
tŸÆ_b™k
 *  (
Uöt8
*));

151 
gˇche
->
size
 = size;

152 
gˇche
->
d©a
 = 
	`mÆloc
(gˇche->
size
);

153 i‡(
gˇche
->
d©a
 =
NULL
) {

154 
	`‰ì
(
gˇche
->
±r
);

155  
GN_FALSE
;

157 
	`¥ötf
("INIT CACHE %p\n", 
gˇche
->
d©a
);

161 
gˇche
->
max_¶Ÿ
 = 
size
 / gˇche->
¶Ÿ_size
;

163 
	`¥ötf
("AŒoˇtög %08x f‹ gfx cachê(%d %d slŸ)\n", 
gˇche
->
size
, gˇche->
max_¶Ÿ
, gˇche->
¶Ÿ_size
);

164 
gˇche
->
ußge
 = 
	`mÆloc
(gˇche->
max_¶Ÿ
 *  (
Uöt32
));

165 
i
 = 0; i < 
gˇche
->
max_¶Ÿ
; i++)

166 
gˇche
->
ußge
[
i
] = -1;

168 #ifde‡
WIZ


169 
gˇche
->
ö_buf
 = 
	`mÆloc
(
bsize
 + 1024);

171 
gˇche
->
ö_buf
 = 
	`mÆloc
(
	`com¥essBound
(
bsize
));

173  
GN_TRUE
;

174 
	}
}

176 
	$‰ì_•rôe_ˇche
() {

177 
GFX_CACHE
 *
gˇche
 = &
mem‹y
.
vid
.
•r_ˇche
;

178 i‡(
gˇche
->
d©a
) {

179 
	`‰ì
(
gˇche
->
d©a
);

180 
gˇche
->
d©a
 = 
NULL
;

182 i‡(
gˇche
->
±r
) {

183 
	`‰ì
(
gˇche
->
±r
);

184 
gˇche
->
±r
 = 
NULL
;

186 i‡(
gˇche
->
ußge
) {

187 
	`‰ì
(
gˇche
->
ußge
);

188 
gˇche
->
ußge
 = 
NULL
;

190 i‡(
gˇche
->
ö_buf
) {

191 
	`‰ì
(
gˇche
->
ö_buf
);

192 
gˇche
->
ö_buf
 = 
NULL
;

194 
	}
}

196 
Uöt8
 *
	$gë_ˇched_•rôe_±r
(
Uöt32
 
tûío
) {

197 
GFX_CACHE
 *
gˇche
 = &
mem‹y
.
vid
.
•r_ˇche
;

198 
pos
 = 0;

199 
öô
 = 1;

200 
tûe_sh
 = ~((
gˇche
->
¶Ÿ_size
 >> 7) - 1);

202 
b™k
 = ((
tûío
 & 
tûe_sh
Ë/ (
gˇche
->
¶Ÿ_size
 >> 7));

203 
a
;

204 
r
;

205 
Uöt32
 
cmp_size
;

206 
uL⁄gf
 
d°_size
;

208 i‡(
gˇche
->
±r
[
b™k
]) {

210  
gˇche
->
±r
[
b™k
];

213 
a
 = 
pos
;

214 
pos
++;

215 i‡(
pos
 >
gˇche
->
max_¶Ÿ
)Öos = 0;

218 
	`f£ek
(
gˇche
->
gno
, gˇche->
off£t
[
b™k
], 
SEEK_SET
);

219 
r
 = 
	`‰ód
(&
cmp_size
,  (
Uöt32
), 1, 
gˇche
->
gno
);

220 
r
 = 
	`‰ód
(
gˇche
->
ö_buf
, 
cmp_size
, 1, gˇche->
gno
);

221 
d°_size
 = 
gˇche
->
¶Ÿ_size
;

222 
r
 = 
	`uncom¥ess
(
gˇche
->
d©a
 + 
a
 * gˇche->
¶Ÿ_size
, &
d°_size
, gˇche->
ö_buf
, 
cmp_size
);

224 
gˇche
->
±r
[
b™k
] = gˇche->
d©a
 + 
a
 * gˇche->
¶Ÿ_size
;

226 i‡(
gˇche
->
ußge
[
a
] != -1) {

227 
gˇche
->
±r
[gˇche->
ußge
[
a
]] = 0;

229 
gˇche
->
ußge
[
a
] = 
b™k
;

230  
gˇche
->
±r
[
b™k
];

231 
	}
}

233 
	$fix_vÆue_öô
() {

234 
x
, 
y
;

235 
x
 = 0; x < 40; x++) {

236 
y
 = 0; y < 32; y++) {

237 
fix_addr
[
x
][
y
] = 0xea00 + (y << 1) + 64 * (x / 6);

239 
fix_shi·
[
x
] = (5 - (x % 6));

241 
	}
}

243 
	#fix_add
(
x
, 
y
Ë((((
	`READ_WORD
(
mem‹y
.
vid
.
øm
 + 0xEA00 + (((y-1)&31)*2 + 64 * (x/6))Ë>> (5-(x%6))*2Ë& 3Ë^ 3))

	)

246 
	#RENAME
(
«me
Ë«me##
_tûe


	)

247 
	#PUTPIXEL
(
d°
,
§c
Ëd°=
	)
src

248 
	~"video_ãm∂©e.h
"

250 
	#RENAME
(
«me
Ë«me##
_tûe_50


	)

251 
	#PUTPIXEL
(
d°
,
§c
Ëd°=
	`BLEND16_50
(§c,d°)

	)

252 
	~"video_ãm∂©e.h
"

254 
	#RENAME
(
«me
Ë«me##
_tûe_25


	)

255 
	#PUTPIXEL
(
d°
,
§c
Ëd°=
	`BLEND16_25
(§c,d°)

	)

256 
	~"video_ãm∂©e.h
"

258 #ifde‡
PROCESSOR_ARM


260 
__ölöe__
 
	$døw_tûe_¨m
(
tûío
, 
sx
, 
sy
, 
zx
, 
zy
,

261 
cﬁ‹
, 
xÊù
, 
yÊù
, *
bmp
) {

262 
Uöt32
 
pôch
 = 352 ;

265 i‡(
zy
 == 16)

266 
ldda_y_skù
 = 
fuŒ_y_skù
;

268 
ldda_y_skù
 = 
dda_y_skù
;

271 i‡(
zx
 == 16) {

272 i‡(!
xÊù
) {

273 i‡(!
yÊù
) {

274 
	`døw_tûe_¨m_n‹m
(
tûío
, 
cﬁ‹
, (*Ë
bmp
 + (
sy
Ë* 
pôch
 + 
sx
, 
zy
);

277 
	`døw_tûe_¨m_yÊù_n‹m
(
tûío
, 
cﬁ‹
, (*Ë
bmp
 + ((
zy
 - 1Ë+ 
sy
Ë* 
pôch
 + 
sx
, zy);

281 i‡(!
yÊù
) {

283 
	`døw_tûe_¨m_xÊù_n‹m
(
tûío
, 
cﬁ‹
, (*Ë
bmp
 + (
sy
Ë* 
pôch
 + 
sx
, 
zy
);

285 
	`døw_tûe_¨m_xyÊù_n‹m
(
tûío
, 
cﬁ‹
, (*Ë
bmp
 + ((
zy
 - 1Ë+ 
sy
Ë* 
pôch
 + 
sx
, zy);

290 
dda_x_skù_i
 = 
ddaxskù_i
[
zx
];

296 i‡(!
xÊù
) {

297 i‡(!
yÊù
) {

298 
	`døw_tûe_¨m_xzoom
(
tûío
, 
cﬁ‹
,

299 (*Ë
bmp
 + (
sy
Ë* 
pôch
 + 
sx
,

300 
zy
);

302 
	`døw_tûe_¨m_yÊù_xzoom
(
tûío
, 
cﬁ‹
,

303 (*Ë
bmp
 + ((
zy
 - 1Ë+ 
sy
Ë* 
pôch
 + 
sx
,

304 
zy
);

307 i‡(!
yÊù
) {

308 
	`døw_tûe_¨m_xÊù_xzoom
(
tûío
, 
cﬁ‹
,

309 (*Ë
bmp
 + (
sy
Ë* 
pôch
 + 
sx
,

310 
zy
);

312 
	`døw_tûe_¨m_xyÊù_xzoom
(
tûío
, 
cﬁ‹
,

313 (*Ë
bmp
 + ((
zy
 - 1Ë+ 
sy
Ë* 
pôch
 + 
sx
,

314 
zy
);

318 
	}
}

321 
__ölöe__
 
	$døw_fix_ch¨
(*
buf
, 
°¨t
, 
íd
) {

322 *
gfxd©a
, 
myw‹d
;

323 
x
, 
y
, 
yy
;

324 
cﬁ
;

325 *
br
;

326 *
∑ld©a
;

327 
byã1
, 
byã2
;

328 
b™ked
, 
g¨ouoff£ts
[32];

329 
SDL_Re˘
 
˛ù
;

330 
y°¨t
 = 1, 
yíd
 = 32;

333 
b™ked
 = (
cuºít_fix
 =
mem‹y
.
rom
.
game_sfix
.
p
 && 
√ogeo_fix_b™k_ty≥
 && mem‹y.rom.game_sfix.
size
 > 0x1000) ? 1 : 0;

335 i‡(
b™ked
 && 
√ogeo_fix_b™k_ty≥
 == 1) {

336 
g¨oub™k
 = 0;

337 
k
 = 0;

338 
y
 = 0;

340 
y
 < 32) {

341 i‡(
	`READ_WORD
(&
mem‹y
.
vid
.
øm
[0xó00 + (
k
 << 1)]) == 0x0200 &&

342 (
	`READ_WORD
(&
mem‹y
.
vid
.
øm
[0xeb00 + (
k
 << 1)]) & 0xff00) == 0xff00) {

344 
g¨oub™k
 = 
	`READ_WORD
(&
mem‹y
.
vid
.
øm
[0xeb00 + (
k
 << 1)]) & 3;

345 
g¨ouoff£ts
[
y
++] = 
g¨oub™k
;

347 
g¨ouoff£ts
[
y
++] = 
g¨oub™k
;

348 
k
 += 2;

352 i‡(
°¨t
 !0 && 
íd
 != 0) {

353 
y°¨t
 = 
°¨t
 >> 3;

354 
yíd
 = (
íd
 >> 3) + 1;

355 i‡(
y°¨t
 < 1) ystart = 1;

356 
˛ù
.
x
 = 0;

357 
˛ù
.
y
 = 
°¨t
 + 16;

358 
˛ù
.
w
 = 
buf„r
->w;

359 
˛ù
.
h
 = (
íd
 - 
°¨t
) + 16;

360 
	`SDL_SëClùRe˘
(
buf„r
, &
˛ù
);

363 
y
 = 
y°¨t
; y < 
yíd
; y++)

364 
x
 = 1; x < 39; x++) {

365 
byã1
 = (
	`READ_WORD
(&
mem‹y
.
vid
.
øm
[0xE000 + ((
y
 + (
x
 << 5)) << 1)]));

366 
byã2
 = 
byã1
 >> 12;

367 
byã1
 = byte1 & 0xfff;

369 i‡(
b™ked
) {

370 
√ogeo_fix_b™k_ty≥
) {

373 
byã1
 +0x1000 * (
g¨ouoff£ts
[(
y
 - 2)&31] ^ 3);

376 
byã1
 +0x1000 * 
	`fix_add
(
x
, 
y
);

381 i‡((
byã1
 >(
mem‹y
.
rom
.
game_sfix
.
size
 >> 5)Ë|| (
fix_ußge
[byte1] == 0x00)) ;

383 
br
 = (*Ë
buf
 + ((
y
 << 3)Ë* 
buf„r
->
w
 + (
x
 << 3) + 16;

384 #ifde‡
PROCESSOR_ARM


385 
	`døw_⁄e_ch¨_¨m
(
byã1
, 
byã2
, 
br
);

386 #ñi‡
I386_ASM


387 
	`døw_⁄e_ch¨_i386
(
byã1
, 
byã2
, 
br
);

389 
∑ld©a
 = (*Ë&
cuºít_pc_∑l
[16 * 
byã2
];

390 
gfxd©a
 = (*Ë&
cuºít_fix
[ 
byã1
 << 5];

392 
yy
 = 0; yy < 8; yy++) {

393 
myw‹d
 = 
gfxd©a
[
yy
];

394 
cﬁ
 = (
myw‹d
 >> 28)&0xf;

395 i‡(
cﬁ
Ë
br
[7] = 
∑ld©a
[col];

396 
cﬁ
 = (
myw‹d
 >> 24)&0xf;

397 i‡(
cﬁ
Ë
br
[6] = 
∑ld©a
[col];

398 
cﬁ
 = (
myw‹d
 >> 20)&0xf;

399 i‡(
cﬁ
Ë
br
[5] = 
∑ld©a
[col];

400 
cﬁ
 = (
myw‹d
 >> 16)&0xf;

401 i‡(
cﬁ
Ë
br
[4] = 
∑ld©a
[col];

402 
cﬁ
 = (
myw‹d
 >> 12)&0xf;

403 i‡(
cﬁ
Ë
br
[3] = 
∑ld©a
[col];

404 
cﬁ
 = (
myw‹d
 >> 8)&0xf;

405 i‡(
cﬁ
Ë
br
[2] = 
∑ld©a
[col];

406 
cﬁ
 = (
myw‹d
 >> 4)&0xf;

407 i‡(
cﬁ
Ë
br
[1] = 
∑ld©a
[col];

408 
cﬁ
 = (
myw‹d
 >> 0)&0xf;

409 i‡(
cﬁ
Ë
br
[0] = 
∑ld©a
[col];

410 
br
 +
buf„r
->
w
;

415 i‡(
°¨t
 !0 && 
íd
 !0Ë
	`SDL_SëClùRe˘
(
buf„r
, 
NULL
);

416 
	}
}

418 
	$døw_s¸ìn
() {

419 
sx
 = 0, 
sy
 = 0, 
oy
 = 0, 
my
 = 0, 
zx
 = 1, 
rzy
 = 1;

420 
offs
, 
i
, 
cou¡
, 
y
;

421 
tûío
, 
tûóå
, 
t1
, 
t2
, 
t3
;

422 
fuŒmode
 = 0;

423 
ddax
 = 0, 
dday
 = 0, 
rzx
 = 15, 
yskù
 = 0;

424 
Uöt8
 *
vidøm
 = 
mem‹y
.
vid
.
øm
;

425 
Uöt8
 
≥nußge
;

429 
	`SDL_FûlRe˘
(
buf„r
, 
NULL
, 
cuºít_pc_∑l
[4095]);

430 
	`SDL_LockSurÁ˚
(
buf„r
);

433 
cou¡
 = 0; count < 0x300; count += 2) {

434 
t3
 = 
	`READ_WORD
(&
vidøm
[0x10000 + 
cou¡
]);

435 
t1
 = 
	`READ_WORD
(&
vidøm
[0x10400 + 
cou¡
]);

436 
t2
 = 
	`READ_WORD
(&
vidøm
[0x10800 + 
cou¡
]);

440 i‡(
t1
 & 0x40) {

441 
sx
 +
rzx
;

448 
zx
 = (
t3
 >> 8) & 0x0f;

449 
sy
 = 
oy
;

452 
zx
 = (
t3
 >> 8) & 0x0f;

453 
rzy
 = 
t3
 & 0xff;

454 i‡(
rzy
 == 0) ;

455 
sx
 = (
t2
 >> 7);

464 
my
 = 
t1
 & 0x3f;

468 i‡(
my
 =0x20Ë
fuŒmode
 = 1;

469 i‡(
my
 >0x21Ë
fuŒmode
 = 2;

471 
fuŒmode
 = 0;

473 
sy
 = 0x200 - (
t1
 >> 7);

475 i‡(
sy
 > 0x110) sy -= 0x200;

477 i‡(
fuŒmode
 =2 || (fuŒmodê=1 && 
rzy
 == 0xff)) {

478 
sy
 < 0Ësy +((
rzy
 + 1) << 1);

481 
oy
 = 
sy
;

484 i‡(
rzy
 < 0xf‡&& 
my
 < 0x10 && my) {

486 
my
 = my * 255 / 
rzy
;

487 i‡(
my
 > 0x10) my = 0x10;

490 i‡(
my
 > 0x20) my = 0x20;

492 
ddax
 = 0;

496 i‡(
my
 == 0) ;

499 i‡(
zx
 != 15) {

500 
dda_x_skù
 = 
ddaxskù
[
zx
];

501 
rzx
 = 
zx
 + 1;

503 } 
rzx
 = 16;

505 i‡(
sx
 >= 0x1F0) sx -= 0x200;

506 i‡(
sx
 >= 320) ;

510 i‡(
rzy
 == 255)

511 
yskù
 = 16;

513 
dday
 = 0;

515 
offs
 = 
cou¡
 << 6;

518 
y
 = 0; y < 
my
; y++) {

519 
tûío
 = 
	`READ_WORD
(&
vidøm
[
offs
]);

520 
offs
 += 2;

521 
tûóå
 = 
	`READ_WORD
(&
vidøm
[
offs
]);

522 
offs
 += 2;

525 i‡(
mem‹y
.
nb_of_tûes
 > 0x10000 && (
tûóå
 & 0x10)Ë
tûío
 += 0x10000;

526 i‡(
mem‹y
.
nb_of_tûes
 > 0x20000 && (
tûóå
 & 0x20)Ë
tûío
 += 0x20000;

527 i‡(
mem‹y
.
nb_of_tûes
 > 0x40000 && (
tûóå
 & 0x40)Ë
tûío
 += 0x40000;

532 i‡(
tûóå
 & 0x8) {

533 
tûío
 = (tûío&~7)+(—ûíÿ+ 
√ogeo_‰ame_cou¡î
)&7);

535 i‡(
tûóå
 & 0x4) {

536 
tûío
 = (tûío&~3)+(—ûíÿ+ 
√ogeo_‰ame_cou¡î
)&3);

540 i‡(
tûío
 > 
mem‹y
.
nb_of_tûes
) {

546 i‡(
fuŒmode
 =2 || (fuŒmodê=1 && 
rzy
 == 0xff)) {

548 i‡(
sy
 >248Ësy -((
rzy
 + 1) << 1);

549 } i‡(
fuŒmode
 == 1) {

551 i‡(
y
 =0x10Ë
sy
 -((
rzy
 + 1) << 1);

552 } i‡(
sy
 > 0x110) sy -= 0x200;

556 i‡(
rzy
 != 255) {

557 
yskù
 = 0;

558 
dda_y_skù_i
 = 0;

559 
dda_y_skù
[0] = 0;

560 
i
 = 0; i < 16; i++) {

561 
dda_y_skù
[
i
 + 1] = 0;

562 
dday
 -(
rzy
 + 1);

563 i‡(
dday
 <= 0) {

564 
dday
 += 256;

565 
yskù
++;

566 
dda_y_skù
[
yskù
]++;

567 } 
dda_y_skù
[
yskù
]++;

578 i‡(
sx
 >-16 && sx + 15 < 336 && 
sy
 >= 0 && sy + 15 < 256) {

580 
≥nußge
 = 
	`PEN_USAGE
(
tûío
);

581 i‡(
mem‹y
.
vid
.
•r_ˇche
.
d©a
) {

582 
mem‹y
.
rom
.
tûes
.
p
 = 
	`gë_ˇched_•rôe_±r
(
tûío
);

583 
tûío
 = (tûíÿ& ((
mem‹y
.
vid
.
•r_ˇche
.
¶Ÿ_size
 >> 7) - 1));

587 #ifde‡
PROCESSOR_ARM


588 
mem_gfx
 = 
mem‹y
.
rom
.
tûes
.
p
;

590 i‡(
≥nußge
 !
TILE_INVISIBLE
)

591 
	`døw_tûe_¨m
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

592 
tûóå
 & 0x01,Åileatr & 0x02,

593 (*Ë
buf„r
->
pixñs
);

594 #ñi‡
I386_ASM


595 
mem_gfx
 = &
mem‹y
.
rom
.
tûes
.
p
;

597 
≥nußge
) {

598 
TILE_NORMAL
:

600 
	`døw_tûe_i386_n‹m
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

601 
tûóå
 & 0x01,Åileatr & 0x02,

602 (*Ë
buf„r
->
pixñs
);

604 
TILE_TRANSPARENT50
:

605 
	`døw_tûe_i386_50
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

606 
tûóå
 & 0x01,Åileatr & 0x02,

607 (*Ë
buf„r
->
pixñs
);

610 
TILE_TRANSPARENT25
:

611 
	`døw_tûe_25
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

612 
tûóå
 & 0x01,Åileatr & 0x02,

613 (*Ë
buf„r
->
pixñs
);

615 
TILE_INVISIBLE
:

620 
≥nußge
) {

621 
TILE_NORMAL
:

622 
	`døw_tûe
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

623 
tûóå
 & 0x01,Åileatr & 0x02,

624 (*Ë
buf„r
->
pixñs
);

626 
TILE_TRANSPARENT50
:

627 
	`døw_tûe_50
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

628 
tûóå
 & 0x01,Åileatr & 0x02,

629 (*Ë
buf„r
->
pixñs
);

631 
TILE_TRANSPARENT25
:

632 
	`døw_tûe_25
(
tûío
, 
sx
 + 16, 
sy
, 
rzx
, 
yskù
, 
tûóå
 >> 8,

633 
tûóå
 & 0x01,Åileatr & 0x02,

634 (*Ë
buf„r
->
pixñs
);

651 
sy
 +
yskù
;

655 
	`døw_fix_ch¨
(
buf„r
->
pixñs
, 0, 0);

656 
	`SDL_U∆ockSurÁ˚
(
buf„r
);

658 i‡(
c⁄f
.
do_mesßge
) {

659 
	`SDL_ãxtout
(
buf„r
, 
visibÀ_¨ó
.
x
, visibÀ_¨ó.
h
 + visibÀ_¨ó.
y
 - 13, 
c⁄f
.
mesßge
);

660 
c⁄f
.
do_mesßge
--;

662 i‡(
c⁄f
.
show_Âs
)

663 
	`SDL_ãxtout
(
buf„r
, 
visibÀ_¨ó
.
x
+8, visibÀ_¨ó.
y
, 
Âs_°r
);

666 
	`s¸ìn_upd©e
();

667 
	}
}

669 
	$døw_s¸ìn_sˇ∆öe
(
°¨t_löe
, 
íd_löe
, 
ª‰esh
) {

670 
sx
 = 0, 
sy
 = 0, 
my
 = 0, 
zx
 = 1, 
zy
 = 1;

671 
offs
, 
cou¡
, 
y
;

672 
tûío
, 
tûóå
;

673 
t˘l1
, 
t˘l2
, 
t˘l3
;

674 *
vidøm
 = 
mem‹y
.
vid
.
øm
;

675 
SDL_Re˘
 
˛ór_ª˘
;

676 
yy
;

677 
Ÿûe
, 
tûe
, 
yoffs
;

678 
zoom_löe
;

679 
övît
;

680 
Uöt8
 *
zoomy_rom
;

681 
Uöt8
 
≥nußge
;

683 i‡(
°¨t_löe
 > 255) start_line = 255;

684 i‡(
íd_löe
 > 255)Énd_line = 255;

686 
˛ór_ª˘
.
x
 = 
visibÀ_¨ó
.x;

687 
˛ór_ª˘
.
w
 = 
visibÀ_¨ó
.w;

688 
˛ór_ª˘
.
y
 = 
°¨t_löe
;

689 
˛ór_ª˘
.
h
 = 
íd_löe
 - 
°¨t_löe
 + 1;

692 
	`SDL_FûlRe˘
(
buf„r
, &
˛ór_ª˘
, 
cuºít_pc_∑l
[4095]);

695 
cou¡
 = 0; count < 0x300; count += 2) {

698 
t˘l3
 = 
	`READ_WORD
(&
vidøm
[0x10000 + 
cou¡
]);

699 
t˘l1
 = 
	`READ_WORD
(&
vidøm
[0x10400 + 
cou¡
]);

700 
t˘l2
 = 
	`READ_WORD
(&
vidøm
[0x10800 + 
cou¡
]);

703 i‡(
t˘l1
 & 0x40) {

704 
sx
 +
zx
 + 1;

708 
zx
 = (
t˘l3
 >> 8) & 0x0f;

711 
zx
 = (
t˘l3
 >> 8) & 0x0f;

712 
zy
 = 
t˘l3
 & 0xff;

714 
sx
 = (
t˘l2
 >> 7);

718 
my
 = 
t˘l1
 & 0x3f;

720 
sy
 = 512 - (
t˘l1
 >> 7);

722 i‡(
my
 > 0x20) my = 0x20;

727 i‡(
my
 == 0) ;

728 i‡(
sx
 >= 496) {

730 
sx
 -= 512;

734 i‡(
sx
 > 320) {

740 i‡(
sx
<-16) ;

744 i‡(
zx
 != 16) {

745 
dda_x_skù
 = 
ddaxskù
[
zx
];

746 } 
zx
 = 16;

750 
offs
 = 
cou¡
 << 6;

751 
zoomy_rom
 = 
mem‹y
.
ng_lo
 + (
zy
 << 8);

753 
Ÿûe
 = -1;

754 
yy
 = 
°¨t_löe
; yy <
íd_löe
; yy++) {

755 
y
 = 
yy
 - 
sy
;

757 i‡(
y
 < 0) y += 512;

759 i‡(
y
 >(
my
 << 4)) ;

761 
övît
 = 0;

763 
zoom_löe
 = 
y
 & 0xff;

765 i‡(
y
 & 0x100) {

766 
zoom_löe
 ^= 0xff;

767 
övît
 = 1;

770 i‡(
my
 == 0x20) {

771 i‡(
zy
) {

772 
zoom_löe
 %(
zy
 << 1);

773 i‡(
zoom_löe
 >
zy
) {

774 
zoom_löe
 = (
zy
 << 1) - 1 - zoom_line;

775 
övît
 ^= 1;

780 
yoffs
 = 
zoomy_rom
[
zoom_löe
] & 0x0f;

781 
tûe
 = 
zoomy_rom
[
zoom_löe
] >> 4;

783 i‡(
övît
) {

784 
tûe
 ^= 0x1f;

785 
yoffs
 ^= 0x0f;

788 
tûío
 = 
	`READ_WORD
(&
vidøm
[
offs
 + (
tûe
 << 2)]);

789 
tûóå
 = 
	`READ_WORD
(&
vidøm
[
offs
 + (
tûe
 << 2) + 2]);

791 i‡(
mem‹y
.
nb_of_tûes
 > 0x10000 && (
tûóå
 & 0x10)Ë
tûío
 += 0x10000;

792 i‡(
mem‹y
.
nb_of_tûes
 > 0x20000 && (
tûóå
 & 0x20)Ë
tûío
 += 0x20000;

793 i‡(
mem‹y
.
nb_of_tûes
 > 0x40000 && (
tûóå
 & 0x40)Ë
tûío
 += 0x40000;

796 i‡(
tûóå
 & 0x8Ë
tûío
 = (tûío&~7)+(—ûíÿ+ 
√ogeo_‰ame_cou¡î
)&7);

797 i‡(
tûóå
 & 0x4Ë
tûío
 = (tûío&~3)+(—ûíÿ+ 
√ogeo_‰ame_cou¡î
)&3);

798 i‡(
tûóå
 & 0x02Ë
yoffs
 ^= 0x0f;

800 
≥nußge
 = 
	`PEN_USAGE
(
tûío
);

801 i‡(
mem‹y
.
vid
.
•r_ˇche
.
d©a
) {

802 
mem‹y
.
rom
.
tûes
.
p
 = 
	`gë_ˇched_•rôe_±r
(
tûío
);

803 
tûío
 = (tûíÿ& ((
mem‹y
.
vid
.
•r_ˇche
.
¶Ÿ_size
 >> 7) - 1));

806 
≥nußge
) {

807 #ifde‡
I386_ASM


808 
mem_gfx
 = &
mem‹y
.
rom
.
tûes
.
p
;

809 
TILE_NORMAL
:

810 
	`døw_sˇ∆öe_tûe_i386_n‹m
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

811 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

813 
TILE_TRANSPARENT50
:

814 
	`døw_sˇ∆öe_tûe_i386_50
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

815 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

817 
TILE_TRANSPARENT25
:

818 
	`døw_sˇ∆öe_tûe_25
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

819 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

822 
TILE_NORMAL
:

823 
	`døw_sˇ∆öe_tûe
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

824 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

826 
TILE_TRANSPARENT50
:

827 
	`døw_sˇ∆öe_tûe_50
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

828 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

830 
TILE_TRANSPARENT25
:

831 
	`døw_sˇ∆öe_tûe_25
(
tûío
, 
yoffs
, 
sx
 + 16, 
yy
, 
zx
, 
tûóå
 >> 8,

832 
tûóå
 & 0x01, (*Ë
buf„r
->
pixñs
);

841 i‡(
ª‰esh
) {

842 
	`døw_fix_ch¨
(
buf„r
->
pixñs
, 0, 0);

844 i‡(
c⁄f
.
do_mesßge
) {

845 
	`SDL_ãxtout
(
buf„r
, 
visibÀ_¨ó
.
x
, visibÀ_¨ó.
h
 + visibÀ_¨ó.
y
 - 13, 
c⁄f
.
mesßge
);

846 
c⁄f
.
do_mesßge
--;

848 i‡(
c⁄f
.
show_Âs
)

849 
	`SDL_ãxtout
(
buf„r
, 
visibÀ_¨ó
.
x
, visibÀ_¨ó.
y
, 
Âs_°r
);

850 
	`s¸ìn_upd©e
();

852 
	}
}

854 
	$öô_video
() {

855 #ifde‡
PROCESSOR_ARM


856 i‡(!
mem_gfx
) {

857 
mem_gfx
 = 
mem‹y
.
rom
.
tûes
.
p
;

859 i‡(!
mem_video
) {

860 
mem_video
 = 
mem‹y
.
vid
.
øm
;

862 #ñi‡
I386_ASM


863 
mem_gfx
 = &
mem‹y
.
rom
.
tûes
.
p
;

864 
mem_video
 = 
mem‹y
.
vid
.
øm
;

866 
	`fix_vÆue_öô
();

867 
mem‹y
.
vid
.
modulo
 = 1;

868 
	}
}

	@src/video.h

19 #i‚de‡
_VIDEO_H_


20 
	#_VIDEO_H_


	)

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~"SDL.h
"

28 
	sgfx_ˇche
 {

29 
Uöt8
 *
	md©a
;

30 
Uöt32
 
	msize
;

31 
Uöt32
 
	mtŸÆ_b™k
;

32 
Uöt8
 **
	m±r
 ;

33 
	mmax_¶Ÿ
;

34 
	m¶Ÿ_size
;

35 *
	mußge
;

36 
FILE
 *
	mgno
;

37 
Uöt32
 *
	moff£t
;

38 
Uöt8
* 
	mö_buf
;

39 }
	tGFX_CACHE
;

41 
	sVIDEO
 {

43 
Uöt8
 
	møm
[0x20000];

44 
Uöt8
 
	m∑l_√o
[2][0x2000];

45 
Uöt8
 
	m∑l_ho°
[2][0x4000];

46 
Uöt8
 
	mcuºíçÆ
;

47 
Uöt8
 
	mcuºítfix
;

48 
Uöt16
 
	mrbuf
;

51 
Uöt32
 
	mfc
;

52 
Uöt32
 
	mfc_•ìd
;

54 
Uöt32
 
	mv±r
;

55 
Söt16
 
	mmodulo
;

57 
Uöt32
 
	mcuºít_löe
;

60 
Uöt32
 
	múq2c⁄åﬁ
;

61 
Uöt32
 
	múq2èkí
;

62 
Uöt32
 
	múq2°¨t
;

63 
Uöt32
 
	múq2pos
;

65 
GFX_CACHE
 
	m•r_ˇche
;

66 }
	tVIDEO
;

68 
	#RASTER_LINES
 261

	)

70 
√ogeo_‰ame_cou¡î
;

71 
√ogeo_‰ame_cou¡î_•ìd
;

73 
öô_video
();

74 
debug_døw_tûe
(
tûío
,
sx
,
sy
,
zx
,
zy
,

75 
cﬁ‹
,
xÊù
,
yÊù
,*
bmp
);

76 
døw_s¸ìn_sˇ∆öe
(
°¨t_löe
, 
íd_löe
, 
ª‰esh
);

77 
døw_s¸ìn
();

79 
öô_•rôe_ˇche
(
Uöt32
 
size
,Uöt32 
bsize
);

80 
‰ì_•rôe_ˇche
();

	@src/video_template.h

7 
__ölöe__
 
	$RENAME
(
døw
)(
tûío
,
sx
,
sy
,
zx
,
zy
,

8 
cﬁ‹
,
xÊù
,
yÊù
,*
bmp
)

10 *
gfxd©a
,
myw‹d
;

11 
y
;

12 
cﬁ
;

13 *
br
;

14 *
∑ld©a
=(*)&
cuºít_pc_∑l
[16*
cﬁ‹
];

15 *
l_y_skù
;

16 
l
;

17 #ifde‡
DEBUG_VIDEO


18 
buf_w
=544-
zx
;

19 
buf_w_yÊù
=544+
zx
;

21 
buf_w
=(
buf„r
->
pôch
>>1)-
zx
;

22 
buf_w_yÊù
=(
buf„r
->
pôch
>>1)+
zx
;

24 
tûío
Òûío%
mem‹y
.
nb_of_tûes
;

26 
gfxd©a
 = (*)&
mem‹y
.
rom
.
tûes
.
p
[ 
tûío
<<7];

29 if(
zy
==16)

30 
l_y_skù
=
fuŒ_y_skù
;

32 
l_y_skù
=
dda_y_skù
;

34 i‡(
zx
==16) {

35 i‡(
xÊù
) {

36 
l
=0;

37 i‡(
yÊù
) {

38 #ifde‡
DEBUG_VIDEO


39 
br
(*)
bmp
+((
zy
-1)+
sy
)*544+
sx
;

41 
br
(*)
bmp
+((
zy
-1)+
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

43 
y
=0;y<
zy
;y++) {

44 
gfxd©a
+=
l_y_skù
[
l
]<<1;

45 i‡(
gfxd©a
[1] || gfxdata[0]) {

46 
myw‹d
 = 
gfxd©a
[1];

47 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[0],
∑ld©a
[col]);

48 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[1],
∑ld©a
[col]);

49 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[2],
∑ld©a
[col]);

50 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[3],
∑ld©a
[col]);

51 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[4],
∑ld©a
[col]);

52 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[5],
∑ld©a
[col]);

53 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[6],
∑ld©a
[col]);

54 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[7],
∑ld©a
[col]);

55 
myw‹d
 = 
gfxd©a
[0];

56 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[8],
∑ld©a
[col]);

57 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[9],
∑ld©a
[col]);

58 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[10],
∑ld©a
[col]);

59 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[11],
∑ld©a
[col]);

60 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[12],
∑ld©a
[col]);

61 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[13],
∑ld©a
[col]);

62 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[14],
∑ld©a
[col]);

63 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[15],
∑ld©a
[col]);

65 #ifde‡
DEBUG_VIDEO


66 
br
-=544;

68 
br
-=(
buf„r
->
pôch
>>1);

70 
l
++;

73 #ifde‡
DEBUG_VIDEO


74 
br
(*)
bmp
+(
sy
)*544+
sx
;

76 
br
(*)
bmp
+(
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

78 
y
=0;y<
zy
;y++) {

80 
gfxd©a
+=
l_y_skù
[
l
]<<1;

81 i‡(
gfxd©a
[1] || gfxdata[0]) {

82 
myw‹d
 = 
gfxd©a
[1];

83 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[0],
∑ld©a
[col]);

84 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[1],
∑ld©a
[col]);

85 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[2],
∑ld©a
[col]);

86 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[3],
∑ld©a
[col]);

87 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[4],
∑ld©a
[col]);

88 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[5],
∑ld©a
[col]);

89 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[6],
∑ld©a
[col]);

90 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[7],
∑ld©a
[col]);

91 
myw‹d
 = 
gfxd©a
[0];

92 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[8],
∑ld©a
[col]);

93 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[9],
∑ld©a
[col]);

94 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[10],
∑ld©a
[col]);

95 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[11],
∑ld©a
[col]);

96 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[12],
∑ld©a
[col]);

97 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[13],
∑ld©a
[col]);

98 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[14],
∑ld©a
[col]);

99 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[15],
∑ld©a
[col]);

101 #ifde‡
DEBUG_VIDEO


102 
br
+=544;

104 
br
+=(
buf„r
->
pôch
>>1);

106 
l
++;

111 
l
=0;

112 i‡(
yÊù
) {

113 #ifde‡
DEBUG_VIDEO


114 
br
(*)
bmp
+((
zy
-1)+
sy
)*544+
sx
;

116 
br
(*)
bmp
+((
zy
-1)+
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

118 
y
=0;y<
zy
;y++) {

119 
gfxd©a
+=
l_y_skù
[
l
]<<1;

120 i‡(
gfxd©a
[1] || gfxdata[0]) {

121 
myw‹d
 = 
gfxd©a
[0];

122 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[0],
∑ld©a
[col]);

123 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[1],
∑ld©a
[col]);

124 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[2],
∑ld©a
[col]);

125 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[3],
∑ld©a
[col]);

126 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[4],
∑ld©a
[col]);

127 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[5],
∑ld©a
[col]);

128 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[6],
∑ld©a
[col]);

129 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[7],
∑ld©a
[col]);

131 
myw‹d
 = 
gfxd©a
[1];

132 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[8],
∑ld©a
[col]);

133 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[9],
∑ld©a
[col]);

134 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[10],
∑ld©a
[col]);

135 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[11],
∑ld©a
[col]);

136 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[12],
∑ld©a
[col]);

137 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[13],
∑ld©a
[col]);

138 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[14],
∑ld©a
[col]);

139 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[15],
∑ld©a
[col]);

141 
l
++;

142 #ifde‡
DEBUG_VIDEO


143 
br
-=544;

145 
br
-=(
buf„r
->
pôch
>>1);

149 #ifde‡
DEBUG_VIDEO


150 
br
(*)
bmp
+(
sy
)*544+
sx
;

152 
br
(*)
bmp
+(
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

154 
y
=0;y<
zy
;y++) {

155 
gfxd©a
+=
l_y_skù
[
l
]<<1;

156 i‡(
gfxd©a
[1] || gfxdata[0]) {

157 
myw‹d
 = 
gfxd©a
[0];

158 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[0],
∑ld©a
[col]);

159 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[1],
∑ld©a
[col]);

160 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[2],
∑ld©a
[col]);

161 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[3],
∑ld©a
[col]);

162 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[4],
∑ld©a
[col]);

163 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[5],
∑ld©a
[col]);

164 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[6],
∑ld©a
[col]);

165 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[7],
∑ld©a
[col]);

167 
myw‹d
 = 
gfxd©a
[1];

168 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[8],
∑ld©a
[col]);

169 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[9],
∑ld©a
[col]);

170 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[10],
∑ld©a
[col]);

171 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[11],
∑ld©a
[col]);

172 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[12],
∑ld©a
[col]);

173 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[13],
∑ld©a
[col]);

174 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[14],
∑ld©a
[col]);

175 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(
br
[15],
∑ld©a
[col]);

177 
l
++;

178 #ifde‡
DEBUG_VIDEO


179 
br
+=544;

181 
br
+=(
buf„r
->
pôch
>>1);

187 i‡(
xÊù
) {

188 
l
=0;

189 i‡(
yÊù
) {

190 #ifde‡
DEBUG_VIDEO


191 
br
(*)
bmp
+((
zy
-1)+
sy
)*544+
sx
;

193 
br
(*)
bmp
+((
zy
-1)+
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

195 
y
=0;y<
zy
;y++) {

196 
gfxd©a
+=
l_y_skù
[
l
]<<1;

197 
myw‹d
 = 
gfxd©a
[1];

198 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

199 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

200 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

201 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

202 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

203 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

204 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

205 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

207 
myw‹d
 = 
gfxd©a
[0];

208 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

209 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

210 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

211 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

212 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

213 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

214 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

215 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

216 
br
-=
buf_w_yÊù
;

217 
l
++;

220 #ifde‡
DEBUG_VIDEO


221 
br
(*)
bmp
+(
sy
)*544+
sx
;

223 
br
(*)
bmp
+(
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

225 
y
=0;y<
zy
;y++) {

226 
gfxd©a
+=
l_y_skù
[
l
]<<1;

227 
myw‹d
 = 
gfxd©a
[1];

228 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

229 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

230 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

231 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

232 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

233 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

234 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

235 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

237 
myw‹d
 = 
gfxd©a
[0];

238 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

239 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

240 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

241 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

242 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

243 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

244 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

245 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

247 
br
+=
buf_w
;

248 
l
++;

252 
l
=0;

253 i‡(
yÊù
) {

254 #ifde‡
DEBUG_VIDEO


255 
br
(*)
bmp
+((
zy
-1)+
sy
)*544+
sx
;

257 
br
(*)
bmp
+((
zy
-1)+
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

259 
y
=0;y<
zy
;y++) {

261 
gfxd©a
+=
l_y_skù
[
l
]<<1;

262 
myw‹d
 = 
gfxd©a
[0];

263 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

264 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

265 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

266 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

267 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

268 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

269 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

270 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

272 
myw‹d
 = 
gfxd©a
[1];

273 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

274 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

275 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

276 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

277 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

278 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

279 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

280 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

281 
l
++;

282 
br
-=
buf_w_yÊù
;

285 #ifde‡
DEBUG_VIDEO


286 
br
(*)
bmp
+(
sy
)*544+
sx
;

288 
br
(*)
bmp
+(
sy
)*(
buf„r
->
pôch
>>1)+
sx
;

290 
y
=0;y<
zy
;y++) {

292 
gfxd©a
+=
l_y_skù
[
l
]<<1;

293 
myw‹d
 = 
gfxd©a
[0];

294 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

295 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

296 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

297 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

298 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

299 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

300 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

301 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

303 
myw‹d
 = 
gfxd©a
[1];

304 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

305 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

306 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

307 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

308 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

309 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

310 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

311 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

312 
l
++;

313 
br
+=
buf_w
;

318 
	}
}

320 
ölöe
 
	$RENAME
(
døw_sˇ∆öe
)(
tûío
,
yoffs
,
sx
,
löe
,
zx
,

321 
cﬁ‹
,
xÊù
,*
bmp
)

323 *
gfxd©a
,
myw‹d
;

324 
cﬁ
;

325 *
br
;

326 *
∑ld©a
=(*)&
cuºít_pc_∑l
[16*
cﬁ‹
];

328 
tûío
Òûío%
mem‹y
.
nb_of_tûes
;

329 
gfxd©a
 = (*)&
mem‹y
.
rom
.
tûes
.
p
[ (
tûío
<<7)];

330 
gfxd©a
+=(
yoffs
<<1);

332 i‡(
gfxd©a
[1]+gfxdata[0]==0) ;

334 i‡(
zx
==16) {

335 i‡(
xÊù
)

337 #ifde‡
DEBUG_VIDEO


338 
br
(*)
bmp
+(
löe
)*(512+32)+
sx
;

340 
br
(*)
bmp
+(
löe
)*(
buf„r
->
pôch
>>1)+
sx
;

343 
myw‹d
 = 
gfxd©a
[1];

344 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

345 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

346 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

347 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

348 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

349 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

350 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

351 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

353 
myw‹d
 = 
gfxd©a
[0];

354 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

355 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

356 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

357 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

358 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

359 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

360 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

361 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]); br++;

363 #ifde‡
DEBUG_VIDEO


364 
br
(*)
bmp
+(
löe
)*(512+32)+
sx
;

366 
br
(*)
bmp
+(
löe
)*(
buf„r
->
pôch
>>1)+
sx
;

368 
myw‹d
 = 
gfxd©a
[0];

369 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

370 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

371 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

372 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

373 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

374 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

375 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

376 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

378 
myw‹d
 = 
gfxd©a
[1];

379 
cﬁ
=(
myw‹d
>>28)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

380 
cﬁ
=(
myw‹d
>>24)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

381 
cﬁ
=(
myw‹d
>>20)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

382 
cﬁ
=(
myw‹d
>>16)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

383 
cﬁ
=(
myw‹d
>>12)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

384 
cﬁ
=(
myw‹d
>>8)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

385 
cﬁ
=(
myw‹d
>>4)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

386 
cﬁ
=(
myw‹d
>>0)&0xf; i‡(cﬁË
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;

389 i‡(
xÊù
) {

390 #ifde‡
DEBUG_VIDEO


391 
br
(*)
bmp
+(
löe
)*(512+32)+
sx
;

393 
br
(*)
bmp
+(
löe
)*(
buf„r
->
pôch
>>1)+
sx
;

395 
myw‹d
 = 
gfxd©a
[1];

396 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

397 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

398 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

399 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

400 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

401 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

402 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

403 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

405 
myw‹d
 = 
gfxd©a
[0];

406 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

407 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

408 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

409 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

410 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

411 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

412 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

413 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

416 #ifde‡
DEBUG_VIDEO


417 
br
(*)
bmp
+(
löe
)*(512+32)+
sx
;

419 
br
(*)
bmp
+(
löe
)*(
buf„r
->
pôch
>>1)+
sx
;

422 
myw‹d
 = 
gfxd©a
[0];

423 i‡(
dda_x_skù
[ 0]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

424 i‡(
dda_x_skù
[ 1]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

425 i‡(
dda_x_skù
[ 2]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

426 i‡(
dda_x_skù
[ 3]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

427 i‡(
dda_x_skù
[ 4]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

428 i‡(
dda_x_skù
[ 5]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

429 i‡(
dda_x_skù
[ 6]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

430 i‡(
dda_x_skù
[ 7]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

432 
myw‹d
 = 
gfxd©a
[1];

433 i‡(
dda_x_skù
[ 8]Ë{i‡((
cﬁ
=((
myw‹d
>>28)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

434 i‡(
dda_x_skù
[ 9]Ë{i‡((
cﬁ
=((
myw‹d
>>24)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

435 i‡(
dda_x_skù
[10]Ë{i‡((
cﬁ
=((
myw‹d
>>20)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

436 i‡(
dda_x_skù
[11]Ë{i‡((
cﬁ
=((
myw‹d
>>16)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

437 i‡(
dda_x_skù
[12]Ë{i‡((
cﬁ
=((
myw‹d
>>12)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

438 i‡(
dda_x_skù
[13]Ë{i‡((
cﬁ
=((
myw‹d
>>8)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

439 i‡(
dda_x_skù
[14]Ë{i‡((
cﬁ
=((
myw‹d
>>4)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

440 i‡(
dda_x_skù
[15]Ë{i‡((
cﬁ
=((
myw‹d
>>0)&0xf))Ë
	`PUTPIXEL
(*
br
,
∑ld©a
[col]);br++;}

444 
	}
}

447 #unde‡
RENAME


448 #unde‡
PUTPIXEL


	@src/ym2610-940/2610intf.c

14 
	~<°dio.h
>

15 
	~"2610ötf.h
"

16 
	~"timî.h
"

18 
timî_°ru˘
 *
	gTimî
[2];

29 
	$√ogeo_sound_úq
(
úq
) {

31 i‡(
úq
) {

32 
	`˝u_z80_øi£_úq
(0);

34 
	`˝u_z80_lowî_úq
();

35 
	}
}

38 
	$timî_ˇŒback_2610
(
∑øm
)

40 
c
 = 
∑øm
;

42 
Timî
[
c
] = 0;

43 
	`YM2610TimîOvî
(
c
);

44 
	}
}

47 
	$TimîH™dÀr
(
c
, 
cou¡
, 
°ïTime
)

51 i‡(
cou¡
 == 0) {

52 i‡(
Timî
[
c
]) {

53 
	`dñ_timî
(
Timî
[
c
]);

54 
Timî
[
c
] = 0;

57 
timeSec
 = (Ë
cou¡
 * 
°ïTime
;

60 i‡(
Timî
[
c
] == 0) {

61 
Timî
[
c
] =

62 (
timî_°ru˘
 *Ë
	`ö£π_timî
(
timeSec
, 
c
,

63 
timî_ˇŒback_2610
);

66 
	}
}

67 
	$FMTimîInô
()

69 
Timî
[0] = Timer[1] = 0;

70 
	`‰ì_Æl_timî
();

71 
	}
}

74 
	$YM2610Upd©eReque°
()

76 
ﬁd_tc
;

78 
tc
=
timî_cou¡
-
ﬁd_tc
;

80 
Àn
=()((
c⁄f
.
ßm∂e_øã
*
tc
)>>
TIMER_SH
)<<2;

81 i‡(
Àn
 >4 ) {

82 
ﬁd_tc
=
timî_cou¡
;

83 
	`°ªamupd©e
(
Àn
);

85 
	}
}

88 
	$YM2610_sh_°¨t
()

90 
j
;

91 
øã
 = 
sh¨ed_d©a
->
ßm∂e_øã
;

93 *
pcmbuÁ
, *
pcmbufb
;

94 
pcmsizó
, 
pcmsizeb
;

97 
	`FMTimîInô
();

105 
pcmbuÁ
 = (*Ë
sh¨ed_d©a
->pcmbufa;

106 
pcmsizó
 = 
sh¨ed_d©a
->
pcmbuÁ_size
;

107 
pcmbufb
 = (*Ë
sh¨ed_d©a
->pcmbufb;

108 
pcmsizeb
 = 
sh¨ed_d©a
->
pcmbufb_size
;

113 
	`YM2610Inô
(8000000, 
øã
,

114 
pcmbuÁ
, 
pcmsizó
, 
pcmbufb
, 
pcmsizeb
,

115 
TimîH™dÀr
, 
√ogeo_sound_úq
);

117 
	}
}

123 
	$YM2610_sh_°›
()

125 
	}
}

128 
	$YM2610_sh_ª£t
()

130 
	`YM2610Re£t
();

131 
	}
}

136 
Uöt32
 
	$YM2610_°©us_p‹t_A_r
(
Uöt32
 
off£t
)

138  
	`YM2610Ród
(0);

139 
	}
}

141 
Uöt32
 
	$YM2610_°©us_p‹t_B_r
(
Uöt32
 
off£t
)

143  
	`YM2610Ród
(2);

144 
	}
}

149 
Uöt32
 
	$YM2610_ªad_p‹t_r
(
Uöt32
 
off£t
)

151  
	`YM2610Ród
(1);

152 
	}
}

159 
	$YM2610_c⁄åﬁ_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

161 
	`YM2610Wrôe
(0, 
d©a
);

162 
	}
}

164 
	$YM2610_c⁄åﬁ_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

166 
	`YM2610Wrôe
(2, 
d©a
);

167 
	}
}

173 
	$YM2610_d©a_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

175 
	`YM2610Wrôe
(1, 
d©a
);

176 
	}
}

178 
	$YM2610_d©a_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

180 
	`YM2610Wrôe
(3, 
d©a
);

181 
	}
}

	@src/ym2610-940/2610intf.h

1 #i‚de‡
__2610INTF_H__


2 
	#__2610INTF_H__


	)

4 #ifde‡
HAVE_CONFIG_H


5 
	~<c⁄fig.h
>

8 
	~"ym2610.h
"

10 
	#YM2610Upd©eReque°
()

	)

15 
YM2610_sh_°¨t
();

20 
YM2610_sh_°›
();

22 
YM2610_sh_ª£t
();

23 
timî_ˇŒback_2610
(
∑øm
);

28 
Uöt32
 
YM2610_°©us_p‹t_A_r
(Uöt32 
off£t
);

29 
Uöt32
 
YM2610_°©us_p‹t_B_r
(Uöt32 
off£t
);

30 
Uöt32
 
YM2610_ªad_p‹t_r
(Uöt32 
off£t
);

31 
YM2610_c⁄åﬁ_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

32 
YM2610_c⁄åﬁ_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

33 
YM2610_d©a_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

34 
YM2610_d©a_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

	@src/ym2610-940/940.c

4 
	~"940sh¨ed.h
"

5 
	~"940¥iv©e.h
"

6 
	~"mvs.h
"

7 
	~"2610ötf.h
"

11 vﬁ©ûê
_940_d©a_t
 *
	gsh¨ed_d©a
 = (_940_data_t *) 0x1C00000;

12 vﬁ©ûê
_940_˘l_t
 *
	gsh¨ed_˘l
 = (_940_ctl_t *) 0x1C00100;

13 vﬁ©ûê
_940_¥iv©e_t
 *
	g¥iv©e_d©a
 = (_940_private_t *) 0x1B00000;

14 vﬁ©ûê*
	ggp2x_memªgl
 = (*) (0xc0000000-0x02000000);

19 
waô_gë_job
(
ﬁdjob
);

20 
•íd_cy˛es
(
c
);

21 
dˇche_˛ón
();

22 
dˇche_˛ón_Êush
();

23 
døö_wb
();

26 
£t_if_nŸ_ch™ged
(*
vÆ
, 
ﬁdvÆ
, 
√wvÆ
);

33 
	$Maö940
()

35 
job
 = 0;

36 
l
;

46 
job
 = 
	`waô_gë_job
(job);

47 
sh¨ed_˘l
->
œ°job
 = 
job
;

49 
job
)

51 
JOB940_INITALL
:

59 i‡(
sh¨ed_d©a
->
z80_cy˛e
==0) shared_data->z80_cycle=73333;

61 
¥iv©e_d©a
->
z80_cy˛e_öãæa˚
=
sh¨ed_d©a
->
z80_cy˛e
/256.0;

62 
¥iv©e_d©a
->
ßm∂e
=(
sh¨ed_d©a
->
ßm∂e_øã
/60.0);

63 
¥iv©e_d©a
->
tŸ_ßm∂e
==0;

64 
¥iv©e_d©a
->
nb_‰ame
=0;

66 
	`˝u_z80_öô
();

67 
	`YM2610_sh_°¨t
();

69 
sh¨ed_˘l
->
nmi_≥ndög
=0;

70 
sh¨ed_˘l
->
ã°
=0;

71 
	`öô_timî
(256);

73 
sh¨ed_˘l
->
buf_pos
=0;

79 
JOB940_INVALIDATE_DCACHE
:

80 
	`døö_wb
();

81 
	`dˇche_˛ón_Êush
();

83 
JOB940_RUN_Z80
:

84 
sh¨ed_˘l
->
z80_run
=1;

86 
l
=0;l<256;l++) {

88 i‡(
sh¨ed_˘l
->
nmi_≥ndög
) {

89 
sh¨ed_˘l
->
nmi_≥ndög
=0;

90 
	`˝u_z80_nmi
();

91 
	`˝u_z80_run
(300);

93 
	`˝u_z80_run
(
¥iv©e_d©a
->
z80_cy˛e_öãæa˚
);

94 
	`my_timî
();

96 
sh¨ed_˘l
->
z80_run
=0;

99 
sh¨ed_˘l
->
upd©eym
=1;

102 i‡(
¥iv©e_d©a
->
nb_‰ame
>=60) {

103 
a
=
sh¨ed_d©a
->
ßm∂e_øã
-
¥iv©e_d©a
->
tŸ_ßm∂e
;

105 i‡(
a
>0)

106 
	`YM2610Upd©e_°ªam
(
a
);

107 
¥iv©e_d©a
->
nb_‰ame
=0;

108 
¥iv©e_d©a
->
tŸ_ßm∂e
=0;

110 
	`YM2610Upd©e_°ªam
(
¥iv©e_d©a
->
ßm∂e
);

111 
¥iv©e_d©a
->
tŸ_ßm∂e
+ıriv©e_d©a->
ßm∂e
;

120 
¥iv©e_d©a
->
nb_‰ame
++;

122 
	`YM2610Upd©e_°ªam
(
sh¨ed_˘l
->
ßm∂e_todo
);

124 
sh¨ed_˘l
->
upd©eym
=0;

130 
JOB940_RUN_Z80_2
: {

131 
z80_cy˛e
=(
sh¨ed_˘l
->
ßm∂e_todo
*4400000)/

132 ()
sh¨ed_d©a
->
ßm∂e_øã
;

133 
sh¨ed_˘l
->
ã°
+=(sh¨ed_˘l->
ßm∂e_todo
*256*60)/

134 ()
sh¨ed_d©a
->
ßm∂e_øã
;

137 i‡(
sh¨ed_˘l
->
ã°
>256) {

138 
sh¨ed_˘l
->
z80_run
=1;

139 
l
=0;l<
sh¨ed_˘l
->
ã°
;l++) {

140 i‡(
sh¨ed_˘l
->
nmi_≥ndög
) {

141 
sh¨ed_˘l
->
nmi_≥ndög
=0;

142 
	`˝u_z80_nmi
();

143 
	`˝u_z80_run
(300);

145 
	`˝u_z80_run
(
z80_cy˛e
/
sh¨ed_˘l
->
ã°
);

146 
	`my_timî
();

148 
sh¨ed_˘l
->
z80_run
=0;

149 
sh¨ed_˘l
->
ã°
=0;

151 
sh¨ed_˘l
->
upd©eym
=1;

153 
	`YM2610Upd©e_°ªam
(
sh¨ed_˘l
->
ßm∂e_todo
);

154 
sh¨ed_˘l
->
upd©eym
=0;

157 
JOB940_RUN_Z80_NMI
:

158 i‡(
sh¨ed_˘l
->
nmi_≥ndög
) {

159 
sh¨ed_˘l
->
nmi_≥ndög
=0;

160 
	`˝u_z80_nmi
();

161 
	`˝u_z80_run
(300);

164 
JOB940_RUN_Z80_300
:

165 
	`˝u_z80_run
(300);

169 
sh¨ed_˘l
->
lo›c
++;

170 
	`dˇche_˛ón
();

172 
	}
}

	@src/ym2610-940/940private.h

1 #i‚de‡
_940PRIVATE_H_


2 
	#_940PRIVATE_H_


	)

5 
	möc
;

6 
	mnb_‰ame
;

7 
	mßm∂e
;

8 
	mtŸ_ßm∂e
;

9 
	mz80_cy˛e_öãæa˚
;

10 } 
	t_940_¥iv©e_t
;

12 vﬁ©ûê
_940_¥iv©e_t
 *
¥iv©e_d©a
;

	@src/ym2610-940/940shared.h

2 #i‚de‡
_940SHARED_H_


3 
	#_940SHARED_H_


	)

8 
	e_940_job_t
 {

9 
	mJOB940_INITALL
 = 1,

10 
	mJOB940_INVALIDATE_DCACHE
,

11 
	mJOB940_RUN_Z80
,

12 
	mJOB940_RUN_Z80_NMI
,

13 
	mJOB940_RUN_Z80_300
,

14 
	mJOB940_RUN_Z80_2
,

21 
	mz80_cy˛e
;

22 
	mßm∂e_øã
;

23 *
	mpcmbuÁ
;

24 *
	mpcmbufb
;

25 
	mpcmbuÁ_size
;

26 
	mpcmbufb_size
;

27 *
	msm1
;

29 } 
	t_940_d©a_t
;

33 
	#SAMPLE_BUFLEN
 8096

	)

37 
	mv°¨ts
[8];

38 
	mœ°_Ã
;

41 
	mœ°job
;

42 
	mlo›c
;

44 
	mã°
;

45 
	mªsu…_code
;

46 
	msound_code
;

47 
	m≥ndög_comm™d
;

48 
	mnmi_≥ndög
;

49 
	mz80_run
;

50 
	mz80_ªndî_a_‰ame
;

51 
	mupd©eym
;

52 
	mbuf_pos
;

53 
	mßm∂e_Àn
;

54 
	mßm∂e_todo
;

55 
	m∂ay_buf„r
[
SAMPLE_BUFLEN
];

56 } 
	t_940_˘l_t
;

58 vﬁ©ûê
_940_d©a_t
 *
sh¨ed_d©a
;

59 vﬁ©ûê
_940_˘l_t
 *
sh¨ed_˘l
;

	@src/ym2610-940/DrZ80.h

9 #ifde‡
__˝lu•lus


13 #i‚de‡
DRZ80_H


14 
	#DRZ80_H


	)

16 
DrZ80Vî
;

18 
	sDrZ80


20 
	mZ80PC
;

21 
	mZ80A
;

22 
	mZ80F
;

23 
	mZ80BC
;

24 
	mZ80DE
;

25 
	mZ80HL
;

26 
	mZ80SP
;

27 
	mZ80PC_BASE
;

28 
	mZ80SP_BASE
;

29 
	mZ80IX
;

30 
	mZ80IY
;

31 
	mZ80I
;

32 
	mZ80A2
;

33 
	mZ80F2
;

34 
	mZ80BC2
;

35 
	mZ80DE2
;

36 
	mZ80HL2
;

39 
	mZ80_IRQ
;

40 
	mZ80IF
;

41 
	mZ80IM
;

42 
	m•¨e
;

43 
	mz80úqve˘‹
;

44 (*
	mz80_úq_ˇŒback
 )();

45 (*
	mz80_wrôe8
 )(
	md
,
	ma
);

46 (*
	mz80_wrôe16
 )(
	md
,
	ma
);

47 (*
	mz80_ö
)(
	mp
);

48 (*
	mz80_out
 )(
	mp
,
	md
);

49 (*
	mz80_ªad8
)(
	ma
);

50 (*
	mz80_ªad16
)(
	ma
);

51 (*
	mz80_ªba£SP
)(
	m√w_•
);

52 (*
	mz80_ªba£PC
)(
	m√w_pc
);

55 
DrZ80Run
(
DrZ80
 *
pcy
,
cyc
);

59 #ifde‡
__˝lu•lus


	@src/ym2610-940/drz80_interf.c

19 
	~"940sh¨ed.h
"

20 
	~"mvs.h
"

21 
	~"DrZ80.h
"

22 
	~"2610ötf.h
"

24 
Uöt16
 
	gz80_b™k
[4];

25 
Uöt8
 *
	gz80m≠1
, *
	gz80m≠2
, *
	gz80m≠3
, *
	gz80m≠4
;

26 
Uöt8
 
	gdrz80mem
[0x10000];

27 
Uöt32
 
	gmydrz80_Z80PC
,
	gmydrz80_Z80SP
;

29 
DrZ80
 
	gmydrz80
;

32 
	$drz80_ªba£PC
(
addªss
)

36 
mydrz80
.
Z80PC_BASE
 = ()
drz80mem
;

37 
mydrz80
.
Z80PC
 = mydrz80.
Z80PC_BASE
 + 
addªss
;

38  
mydrz80
.
Z80PC_BASE
 + 
addªss
;

39 
	}
}

41 
	$drz80_ªba£SP
(
addªss
)

44 
mydrz80
.
Z80SP_BASE
 = ()
drz80mem
;

45 
mydrz80
.
Z80SP
 = mydrz80.
Z80SP_BASE
 + 
addªss
;

46  
mydrz80
.
Z80SP_BASE
 + 
addªss
;

47 
	}
}

49 
	$drz80_ªad8
(
addªss
) {

50  (
drz80mem
[
addªss
&0xFFFF]);

51 
	}
}

53 
	$drz80_ªad16
(
addªss
) {

54  
	`drz80_ªad8
(
addªss
) | (drz80_read8(address + 1) << 8);

55 
	}
}

57 
	$drz80_wrôe8
(
d©a
,
addªss
) {

58 i‡(
addªss
>=0xf800Ë
drz80mem
[addªss&0xFFFF]=
d©a
;

59 
	}
}

61 
	$drz80_wrôe16
(
d©a
,
addªss
) {

62 
	`drz80_wrôe8
(
d©a
 & 0xFF,
addªss
);

63 
	`drz80_wrôe8
(
d©a
 >> 8,
addªss
 + 1);

64 
	}
}

66 
	$˝u_z80_swôchb™k
(
Uöt8
 
b™k
, 
Uöt16
 
P‹tNo
)

69 i‡(
b™k
<=3)

70 
z80_b™k
[
b™k
]=
P‹tNo
;

72 
b™k
) {

74 
z80m≠1
 = 
sh¨ed_d©a
->
sm1
 + (0x4000 * ((
P‹tNo
 >> 8) & 0x0f));

75 
	`mem˝y
(
drz80mem
 + 0x8000, 
z80m≠1
, 0x4000);

78 
z80m≠2
 = 
sh¨ed_d©a
->
sm1
 + (0x2000 * ((
P‹tNo
 >> 8) & 0x1f));

79 
	`mem˝y
(
drz80mem
 + 0xc000, 
z80m≠2
, 0x2000);

82 
z80m≠3
 = 
sh¨ed_d©a
->
sm1
 + (0x1000 * ((
P‹tNo
 >> 8) & 0x3f));

83 
	`mem˝y
(
drz80mem
 + 0xe000, 
z80m≠3
, 0x1000);

86 
z80m≠4
 = 
sh¨ed_d©a
->
sm1
 + (0x0800 * ((
P‹tNo
 >> 8) & 0x7f));

87 
	`mem˝y
(
drz80mem
 + 0xf000, 
z80m≠4
, 0x0800);

90 
	}
}

94 
Uöt8
 
	$z80_p‹t_ªad
(
Uöt16
 
P‹tNo
)

98 
P‹tNo
 & 0xff) {

100 
sh¨ed_˘l
->
≥ndög_comm™d
 = 0;

102  
sh¨ed_˘l
->
sound_code
;

107  
	`YM2610_°©us_p‹t_A_r
(0);

112  
	`YM2610_ªad_p‹t_r
(0);

117  
	`YM2610_°©us_p‹t_B_r
(0);

122 
	`˝u_z80_swôchb™k
(3, 
P‹tNo
);

128 
	`˝u_z80_swôchb™k
(2, 
P‹tNo
);

134 
	`˝u_z80_swôchb™k
(1, 
P‹tNo
);

140 
	`˝u_z80_swôchb™k
(0, 
P‹tNo
);

146 
	}
}

148 
	$z80_p‹t_wrôe
(
Uöt16
 
P‹tNb
, 
Uöt8
 
VÆue
)

150 
Uöt8
 
d©a
 = 
VÆue
;

153 
P‹tNb
 & 0xff) {

155 
	`YM2610_c⁄åﬁ_p‹t_A_w
(0, 
d©a
);

159 
	`YM2610_d©a_p‹t_A_w
(0, 
d©a
);

163 
	`YM2610_c⁄åﬁ_p‹t_B_w
(0, 
d©a
);

167 
	`YM2610_d©a_p‹t_B_w
(0, 
d©a
);

172 
sh¨ed_˘l
->
ªsu…_code
 = 
VÆue
;

175 
	}
}

177 
	$drz80_wrôï‹t16
(
Uöt16
 
p‹t
, 
Uöt8
 
vÆue
)

180 
	`z80_p‹t_wrôe
(
p‹t
, 
vÆue
);

181 
	}
}

183 
Uöt8
 
	$drz80_ªadp‹t16
(
Uöt16
 
p‹t
)

186  
	`z80_p‹t_ªad
(
p‹t
);

187 
	}
}

190 
	$drz80_úq_ˇŒback
()

195 
	}
}

198 
	$˝u_z80_öô
()

202 
	`mem£t
 (&
mydrz80
, 0, (mydrz80));

204 
mydrz80
.
z80_ªba£PC
=
drz80_ªba£PC
;

205 
mydrz80
.
z80_ªba£SP
=
drz80_ªba£SP
;

206 
mydrz80
.
z80_ªad8
 =
drz80_ªad8
;

207 
mydrz80
.
z80_ªad16
 =
drz80_ªad16
;

208 
mydrz80
.
z80_wrôe8
 =
drz80_wrôe8
;

209 
mydrz80
.
z80_wrôe16
 =
drz80_wrôe16
;

210 
mydrz80
.
z80_ö
 =
drz80_ªadp‹t16
;

211 
mydrz80
.
z80_out
 =
drz80_wrôï‹t16
;

213 
mydrz80
.
Z80A
 = 0x00 <<24;

214 
mydrz80
.
Z80F
 = (1<<2);

215 
mydrz80
.
Z80BC
 = 0x0000 <<16;

216 
mydrz80
.
Z80DE
 = 0x0000 <<16;

217 
mydrz80
.
Z80HL
 = 0x0000 <<16;

218 
mydrz80
.
Z80A2
 = 0x00 <<24;

219 
mydrz80
.
Z80F2
 = 1<<2;

220 
mydrz80
.
Z80BC2
 = 0x0000 <<16;

221 
mydrz80
.
Z80DE2
 = 0x0000 <<16;

222 
mydrz80
.
Z80HL2
 = 0x0000 <<16;

223 
mydrz80
.
Z80IX
 = 0xFFFF;

224 
mydrz80
.
Z80IY
 = 0xFFFF;

225 
mydrz80
.
Z80I
 = 0x00;

226 
mydrz80
.
Z80IM
 = 0x01;

227 
mydrz80
.
Z80_IRQ
 = 0x00;

228 
mydrz80
.
Z80IF
 = 0x00;

229 
mydrz80
.
Z80PC
=mydrz80.
	`z80_ªba£PC
(0);

230 
mydrz80
.
Z80SP
=mydrz80.
	`z80_ªba£SP
(0xffff);

235 
z80m≠1
 = 
sh¨ed_d©a
->
sm1
 + 0x8000;

236 
z80m≠2
 = 
sh¨ed_d©a
->
sm1
 + 0xc000;

237 
z80m≠3
 = 
sh¨ed_d©a
->
sm1
 + 0xe000;

238 
z80m≠4
 = 
sh¨ed_d©a
->
sm1
 + 0xf000;

242 
z80_b™k
[0]=0x8000;

243 
z80_b™k
[1]=0xc000;

244 
z80_b™k
[2]=0xe000;

245 
z80_b™k
[3]=0xf000;

247 
	`mem˝y
(
drz80mem
, 
sh¨ed_d©a
->
sm1
, 0xf800);

250 
	}
}

251 
	$˝u_z80_run
(
nbcy˛e
)

253 
	`DrZ80Run
(&
mydrz80
, 
nbcy˛e
);

254 
	}
}

256 
	$˝u_z80_nmi
()

258 
mydrz80
.
Z80_IRQ
 |= 0x02;

259 
	}
}

260 
	$˝u_z80_øi£_úq
(
l
)

262 
mydrz80
.
Z80_IRQ
 |= 0x1;

263 
	}
}

264 
	$˝u_z80_lowî_úq
()

266 
mydrz80
.
Z80_IRQ
 &= ~0x1;

267 
	}
}

	@src/ym2610-940/mvs.h

1 #i‚de‡
_MVS_H_


2 
	#_MVS_H_


	)

4 
	~"940sh¨ed.h
"

7 
	#s8
 sig√d 

	)

8 
	#s16
 sig√d 

	)

9 
	#s32
 sig√d 

	)

11 
	#u8
 

	)

12 
	#u16
 

	)

13 
	#u32
 

	)

15 
	#Uöt8
 
u8


	)

16 
	#Uöt16
 
u16


	)

17 
	#Uöt32
 
u32


	)

18 
	#Söt8
 
s8


	)

19 
	#Söt16
 
s16


	)

20 
	#Söt32
 
s32


	)

22 
	#ALIGN_DATA


	)

23 
	#INLINE
 
__ölöe__


	)

24 
	#SOUND_SAMPLES
 512

	)

27 
	#Limô
(
vÆ
, 
max
, 
mö
) \

29 i‡(
vÆ
 > 
max
) val = max; \

30 i‡(
vÆ
 < 
mö
) val = min; \

31 }

	)

	@src/ym2610-940/timer.c

19 
	~<°dlib.h
>

20 
	~"timî.h
"

21 
	~"ym2610.h
"

22 
	~"940sh¨ed.h
"

23 
	~"940¥iv©e.h
"

25 
	gtimî_cou¡
;

27 
	#MAX_TIMER
 3

	)

28 
timî_°ru˘
 
	gtimîs
[
MAX_TIMER
];

30 
	$timî_gë_time
() {

32  
timî_cou¡
;

33 
	}
}

35 
timî_°ru˘
 *
	$ö£π_timî
(
duøti⁄
, 
∑øm
, (*
func
) ())

38 
i
;

39 
i
 = 0; i < 
MAX_TIMER
; i++) {

40 i‡(
timîs
[
i
].
dñ_ô
) {

41 
timîs
[
i
].
time
 = 
timî_cou¡
 + 
duøti⁄
;

42 
timîs
[
i
].
∑øm
 =Öaram;

43 
timîs
[
i
].
func
 = func;

45 
timîs
[
i
].
dñ_ô
 = 0;

46  &
timîs
[
i
];

50  
NULL
;

51 
	}
}

53 
	$‰ì_Æl_timî
() {

54 
i
;

55 
i
 = 0; i < 
MAX_TIMER
; i++) {

56 
timîs
[
i
].
dñ_ô
=1;

58 
	}
}

61 
timî_ˇŒback_2610
(
∑øm
);

62 
	$timî_po°_lﬂd_°©e
() {

63 
i
;

64 
i
 = 0; i < 
MAX_TIMER
; i++) {

65 i‡(
timîs
[
i
].
dñ_ô
) {

66 
timîs
[
i
].
func
=
NULL
;

69 
timîs
[
i
].
func
=
timî_ˇŒback_2610
;

72 
	}
}

74 
	$dñ_timî
(
timî_°ru˘
 * 
ts
)

76 
ts
->
dñ_ô
 = 1;

77 
	}
}

82 
	$öô_timî
(
nb_öãæa˚
) {

83 
i
;

85 
¥iv©e_d©a
->
öc
 = ((Ë(0.01666Ë/ 
nb_öãæa˚
);

87 
i
 = 0; i < 
MAX_TIMER
; i++)

88 
timîs
[
i
].
dñ_ô
 = 1;

89 
	}
}

91 
	$my_timî
()

94 
i
;

96 
timî_cou¡
 +
¥iv©e_d©a
->
öc
;

98 
i
 = 0; i < 
MAX_TIMER
; i++) {

99 i‡(
timî_cou¡
 >
timîs
[
i
].
time
 &&Åimîs[i].
dñ_ô
 == 0) {

101 i‡(
timîs
[
i
].
func
Ëtimîs[i].
	`func
—imîs[i].
∑øm
);

102 
timîs
[
i
].
dñ_ô
 = 1;

105 
	}
}

	@src/ym2610-940/timer.h

19 #i‚de‡
_TIMER_H_


20 
	#_TIMER_H_


	)

22 
	~"mvs.h
"

24 
	stimî_°ru˘
 {

25 
	mtime
;

27 
Uöt32
 
	modo_debut
;

28 
Uöt32
 
	mnb_cy˛e
;

29 
	m∑øm
;

30 
Uöt32
 
	mdñ_ô
;

31 (*
	mfunc
Ë(
	m∑øm
);

32 
timî_°ru˘
 *
	m√xt
;

33 } 
	ttimî_°ru˘
;

35 
timî_cou¡
;

38 
timî_°ru˘
 *
ö£π_timî
(
duøti⁄
, 
∑øm
, (*
func
) ());

40 
	`dñ_timî
(
timî_°ru˘
 * 
ts
);

41 
	`my_timî
();

42 
	`timî_gë_time
();

44 
	`‰ì_Æl_timî
();

45 
	`öô_timî
(
nb_öãæa˚
);

	@src/ym2610-940/uClibc/e_log.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD:É_log.c,v 1.8 1995/05/10 20:45:49 jtc Exp $";

68 
	~"m©h.h
"

69 
	~"m©h_¥iv©e.h
"

71 #ifde‡
__STDC__


76 
	g 2_hi
 = 6.93147180369123816490e-01,

77 
	g 2_lo
 = 1.90821492927058770002e-10,

78 
	gtwo54
 = 1.80143985094819840000e+16,

79 
	gLg1
 = 6.666666666666735130e-01,

80 
	gLg2
 = 3.999999999940941908e-01,

81 
	gLg3
 = 2.857142874366239149e-01,

82 
	gLg4
 = 2.222219843214978396e-01,

83 
	gLg5
 = 1.818357216161805012e-01,

84 
	gLg6
 = 1.531383769920937332e-01,

85 
	gLg7
 = 1.479819860511658591e-01;

87 #ifde‡
__STDC__


88 c⁄° 
	gzîo
 = 0.0;

90 
	gzîo
 = 0.0;

93 #ifde‡
__STDC__


94 
	$__õì754_log
(
x
)

96 
	$__õì754_log
(
x
)

97 
x
;

100 
hfsq
,
f
,
s
,
z
,
R
,
w
,
t1
,
t2
,
dk
;

101 
öt32_t
 
k
,
hx
,
i
,
j
;

102 
u_öt32_t
 
lx
;

104 
	`EXTRACT_WORDS
(
hx
,
lx
,
x
);

106 
k
=0;

107 i‡(
hx
 < 0x00100000) {

108 i‡(((
hx
&0x7fffffff)|
lx
)==0)

109  -
two54
/
zîo
;

110 i‡(
hx
<0Ë (
x
-x)/
zîo
;

111 
k
 -54; 
x
 *
two54
;

112 
	`GET_HIGH_WORD
(
hx
,
x
);

114 i‡(
hx
 >0x7ff00000Ë 
x
+x;

115 
k
 +(
hx
>>20)-1023;

116 
hx
 &= 0x000fffff;

117 
i
 = (
hx
+0x95f64)&0x100000;

118 
	`SET_HIGH_WORD
(
x
,
hx
|(
i
^0x3ff00000));

119 
k
 +(
i
>>20);

120 
f
 = 
x
-1.0;

121 if((0x000fffff&(2+
hx
))<3) {

122 if(
f
==
zîo
Ë{if(
k
==0Ë zîo; {
dk
=()k;

123  
dk
*
 2_hi
+dk*
 2_lo
;}

125 
R
 = 
f
*f*(0.5-0.33333333333333333*f);

126 if(
k
==0Ë 
f
-
R
; {
dk
=()k;

127  
dk
*
 2_hi
-((
R
-dk*
 2_lo
)-
f
);}

129 
s
 = 
f
/(2.0+f);

130 
dk
 = ()
k
;

131 
z
 = 
s
*s;

132 
i
 = 
hx
-0x6147a;

133 
w
 = 
z
*z;

134 
j
 = 0x6b851-
hx
;

135 
t1

w
*(
Lg2
+w*(
Lg4
+w*
Lg6
));

136 
t2

z
*(
Lg1
+
w
*(
Lg3
+w*(
Lg5
+w*
Lg7
)));

137 
i
 |
j
;

138 
R
 = 
t2
+
t1
;

139 if(
i
>0) {

140 
hfsq
=0.5*
f
*f;

141 if(
k
==0Ë 
f
-(
hfsq
-
s
*(hfsq+
R
)); 

142  
dk
*
 2_hi
-((
hfsq
-(
s
*(hfsq+
R
)+dk*
 2_lo
))-
f
);

144 if(
k
==0Ë 
f
-
s
*(f-
R
); 

145  
dk
*
 2_hi
-((
s
*(
f
-
R
)-dk*
 2_lo
)-f);

147 
	}
}

	@src/ym2610-940/uClibc/e_pow.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD:É_pow.c,v 1.9 1995/05/12 04:57:32 jtc Exp $";

62 
	~"m©h.h
"

63 
	~"m©h_¥iv©e.h
"

65 #ifde‡
__STDC__


70 
	gbp
[] = {1.0, 1.5,},

71 
	gdp_h
[] = { 0.0, 5.84962487220764160156e-01,},

72 
	gdp_l
[] = { 0.0, 1.35003920212974897128e-08,},

73 
	gzîo
 = 0.0,

74 
	g⁄e
 = 1.0,

75 
	gtwo
 = 2.0,

76 
	gtwo53
 = 9007199254740992.0,

77 
	ghuge
 = 1.0e300,

78 
	gtöy
 = 1.0e-300,

80 
	gL1
 = 5.99999999999994648725e-01,

81 
	gL2
 = 4.28571428578550184252e-01,

82 
	gL3
 = 3.33333329818377432918e-01,

83 
	gL4
 = 2.72728123808534006489e-01,

84 
	gL5
 = 2.30660745775561754067e-01,

85 
	gL6
 = 2.06975017800338417784e-01,

86 
	gP1
 = 1.66666666666666019037e-01,

87 
	gP2
 = -2.77777777770155933842e-03,

88 
	gP3
 = 6.61375632143793436117e-05,

89 
	gP4
 = -1.65339022054652515390e-06,

90 
	gP5
 = 4.13813679705723846039e-08,

91 
	glg2
 = 6.93147180559945286227e-01,

92 
	glg2_h
 = 6.93147182464599609375e-01,

93 
	glg2_l
 = -1.90465429995776804525e-09,

94 
	govt
 = 8.0085662595372944372e-0017,

95 
	g˝
 = 9.61796693925975554329e-01,

96 
	g˝_h
 = 9.61796700954437255859e-01,

97 
	g˝_l
 = -7.02846165095275826516e-09,

98 
	giv 2
 = 1.44269504088896338700e+00,

99 
	giv 2_h
 = 1.44269502162933349609e+00,

100 
	giv 2_l
 = 1.92596299112661746887e-08;

102 #ifde‡
__STDC__


103 
	$__õì754_pow
(
x
, 
y
)

105 
	$__õì754_pow
(
x
,
y
)

106 
x
, 
y
;

109 
z
,
ax
,
z_h
,
z_l
,
p_h
,
p_l
;

110 
y1
,
t1
,
t2
,
r
,
s
,
t
,
u
,
v
,
w
;

111 
öt32_t
 
i
,
j
,
k
,
yisöt
,
n
;

112 
öt32_t
 
hx
,
hy
,
ix
,
iy
;

113 
u_öt32_t
 
lx
,
ly
;

115 
	`EXTRACT_WORDS
(
hx
,
lx
,
x
);

116 
	`EXTRACT_WORDS
(
hy
,
ly
,
y
);

117 
ix
 = 
hx
&0x7fffffff; 
iy
 = 
hy
&0x7fffffff;

120 if((
iy
|
ly
)==0Ë 
⁄e
;

123 if(
ix
 > 0x7ff00000 || ((ix==0x7ff00000)&&(
lx
!=0)) ||

124 
iy
 > 0x7ff00000 || ((iy==0x7ff00000)&&(
ly
!=0)))

125  
x
+
y
;

132 
yisöt
 = 0;

133 if(
hx
<0) {

134 if(
iy
>=0x43400000Ë
yisöt
 = 2;

135 if(
iy
>=0x3ff00000) {

136 
k
 = (
iy
>>20)-0x3ff;

137 if(
k
>20) {

138 
j
 = 
ly
>>(52-
k
);

139 if((
j
<<(52-
k
))==
ly
Ë
yisöt
 = 2-(j&1);

140 } if(
ly
==0) {

141 
j
 = 
iy
>>(20-
k
);

142 if((
j
<<(20-
k
))==
iy
Ë
yisöt
 = 2-(j&1);

148 if(
ly
==0) {

149 i‡(
iy
==0x7ff00000) {

150 if(((
ix
-0x3ff00000)|
lx
)==0)

151  
y
 - y;

152 i‡(
ix
 >= 0x3ff00000)

153  (
hy
>=0)? 
y
: 
zîo
;

155  (
hy
<0)?-
y
: 
zîo
;

157 if(
iy
==0x3ff00000) {

158 if(
hy
<0Ë 
⁄e
/
x
;  x;

160 if(
hy
==0x40000000Ë 
x
*x;

161 if(
hy
==0x3fe00000) {

162 if(
hx
>=0)

163  
	`__õì754_sqπ
(
x
);

167 
ax
 = 
	`Ábs
(
x
);

169 if(
lx
==0) {

170 if(
ix
==0x7ff00000||ix==0||ix==0x3ff00000){

171 
z
 = 
ax
;

172 if(
hy
<0Ë
z
 = 
⁄e
/z;

173 if(
hx
<0) {

174 if(((
ix
-0x3ff00000)|
yisöt
)==0) {

175 
z
 = (z-z)/(z-z);

176 } if(
yisöt
==1)

177 
z
 = -z;

179  
z
;

184 if(((((
u_öt32_t
)
hx
>>31)-1)|
yisöt
)==0Ë (
x
-x)/(x-x);

187 if(
iy
>0x41e00000) {

188 if(
iy
>0x43f00000){

189 if(
ix
<=0x3„fffffË (
hy
<0)? 
huge
*huge:
töy
*tiny;

190 if(
ix
>=0x3ff00000Ë (
hy
>0)? 
huge
*huge:
töy
*tiny;

193 if(
ix
<0x3„fffffË (
hy
<0)? 
huge
*huge:
töy
*tiny;

194 if(
ix
>0x3ff00000Ë (
hy
>0)? 
huge
*huge:
töy
*tiny;

197 
t
 = 
x
-1;

198 
w
 = (
t
*t)*(0.5-t*(0.3333333333333333333333-t*0.25));

199 
u
 = 
iv 2_h
*
t
;

200 
v
 = 
t
*
iv 2_l
-
w
*
iv 2
;

201 
t1
 = 
u
+
v
;

202 
	`SET_LOW_WORD
(
t1
,0);

203 
t2
 = 
v
-(
t1
-
u
);

205 
s2
,
s_h
,
s_l
,
t_h
,
t_l
;

206 
n
 = 0;

208 if(
ix
<0x00100000)

209 {
ax
 *
two53
; 
n
 -53; 
	`GET_HIGH_WORD
(
ix
,ax); }

210 
n
 +((
ix
)>>20)-0x3ff;

211 
j
 = 
ix
&0x000fffff;

213 
ix
 = 
j
|0x3ff00000;

214 if(
j
<=0x3988EË
k
=0;

215 if(
j
<0xBB67AË
k
=1;

216 {
k
=0;
n
+=1;
ix
 -= 0x00100000;}

217 
	`SET_HIGH_WORD
(
ax
,
ix
);

220 
u
 = 
ax
-
bp
[
k
];

221 
v
 = 
⁄e
/(
ax
+
bp
[
k
]);

222 
s
 = 
u
*
v
;

223 
s_h
 = 
s
;

224 
	`SET_LOW_WORD
(
s_h
,0);

226 
t_h
 = 
zîo
;

227 
	`SET_HIGH_WORD
(
t_h
,((
ix
>>1)|0x20000000)+0x00080000+(
k
<<18));

228 
t_l
 = 
ax
 - (
t_h
-
bp
[
k
]);

229 
s_l
 = 
v
*((
u
-
s_h
*
t_h
)-s_h*
t_l
);

231 
s2
 = 
s
*s;

232 
r
 = 
s2
*s2*(
L1
+s2*(
L2
+s2*(
L3
+s2*(
L4
+s2*(
L5
+s2*
L6
)))));

233 
r
 +
s_l
*(
s_h
+
s
);

234 
s2
 = 
s_h
*s_h;

235 
t_h
 = 3.0+
s2
+
r
;

236 
	`SET_LOW_WORD
(
t_h
,0);

237 
t_l
 = 
r
-((
t_h
-3.0)-
s2
);

239 
u
 = 
s_h
*
t_h
;

240 
v
 = 
s_l
*
t_h
+
t_l
*
s
;

242 
p_h
 = 
u
+
v
;

243 
	`SET_LOW_WORD
(
p_h
,0);

244 
p_l
 = 
v
-(
p_h
-
u
);

245 
z_h
 = 
˝_h
*
p_h
;

246 
z_l
 = 
˝_l
*
p_h
+
p_l
*
˝
+
dp_l
[
k
];

248 
t
 = ()
n
;

249 
t1
 = (((
z_h
+
z_l
)+
dp_h
[
k
])+
t
);

250 
	`SET_LOW_WORD
(
t1
,0);

251 
t2
 = 
z_l
-(((
t1
-
t
)-
dp_h
[
k
])-
z_h
);

254 
s
 = 
⁄e
;

255 if(((((
u_öt32_t
)
hx
>>31)-1)|(
yisöt
-1))==0)

256 
s
 = -
⁄e
;

259 
y1
 = 
y
;

260 
	`SET_LOW_WORD
(
y1
,0);

261 
p_l
 = (
y
-
y1
)*
t1
+y*
t2
;

262 
p_h
 = 
y1
*
t1
;

263 
z
 = 
p_l
+
p_h
;

264 
	`EXTRACT_WORDS
(
j
,
i
,
z
);

265 i‡(
j
>=0x40900000) {

266 if(((
j
-0x40900000)|
i
)!=0)

267  
s
*
huge
*huge;

269 if(
p_l
+
ovt
>
z
-
p_h
Ë 
s
*
huge
*huge;

271 } if((
j
&0x7fffffff)>=0x4090cc00 ) {

272 if(((
j
-0xc090cc00)|
i
)!=0)

273  
s
*
töy
*tiny;

275 if(
p_l
<=
z
-
p_h
Ë 
s
*
töy
*tiny;

281 
i
 = 
j
&0x7fffffff;

282 
k
 = (
i
>>20)-0x3ff;

283 
n
 = 0;

284 if(
i
>0x3fe00000) {

285 
n
 = 
j
+(0x00100000>>(
k
+1));

286 
k
 = ((
n
&0x7fffffff)>>20)-0x3ff;

287 
t
 = 
zîo
;

288 
	`SET_HIGH_WORD
(
t
,
n
&~(0x000fffff>>
k
));

289 
n
 = (“&0x000fffff)|0x00100000)>>(20-
k
);

290 if(
j
<0Ë
n
 = -n;

291 
p_h
 -
t
;

293 
t
 = 
p_l
+
p_h
;

294 
	`SET_LOW_WORD
(
t
,0);

295 
u
 = 
t
*
lg2_h
;

296 
v
 = (
p_l
-(
t
-
p_h
))*
lg2
+t*
lg2_l
;

297 
z
 = 
u
+
v
;

298 
w
 = 
v
-(
z
-
u
);

299 
t
 = 
z
*z;

300 
t1
 = 
z
 - 
t
*(
P1
+t*(
P2
+t*(
P3
+t*(
P4
+t*
P5
))));

301 
r
 = (
z
*
t1
)/—1-
two
)-(
w
+z*w);

302 
z
 = 
⁄e
-(
r
-z);

303 
	`GET_HIGH_WORD
(
j
,
z
);

304 
j
 +(
n
<<20);

305 if((
j
>>20)<=0Ë
z
 = 
	`sˇlbn
(z,
n
);

306 
	`SET_HIGH_WORD
(
z
,
j
);

307  
s
*
z
;

308 
	}
}

	@src/ym2610-940/uClibc/e_rem_pio2.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD:É_rem_pio2.c,v 1.8 1995/05/10 20:46:02 jtc Exp $";

23 
	~"m©h.h
"

24 
	~"m©h_¥iv©e.h
"

29 #ifde‡
__STDC__


30 c⁄° 
öt32_t
 
	gtwo_ovî_pi
[] = {

32 
öt32_t
 
two_ovî_pi
[] = {

47 #ifde‡
__STDC__


48 c⁄° 
öt32_t
 
	g≈io2_hw
[] = {

50 
öt32_t
 
≈io2_hw
[] = {

70 #ifde‡
__STDC__


75 
	gzîo
 = 0.00000000000000000000e+00,

76 
	ghÆf
 = 5.00000000000000000000e-01,

77 
	gtwo24
 = 1.67772160000000000000e+07,

78 
	gövpio2
 = 6.36619772367581382433e-01,

79 
	gpio2_1
 = 1.57079632673412561417e+00,

80 
	gpio2_1t
 = 6.07710050650619224932e-11,

81 
	gpio2_2
 = 6.07710050630396597660e-11,

82 
	gpio2_2t
 = 2.02226624879595063154e-21,

83 
	gpio2_3
 = 2.02226624871116645580e-21,

84 
	gpio2_3t
 = 8.47842766036889956997e-32;

86 #ifde‡
__STDC__


87 
öt32_t
 
	$__õì754_ªm_pio2
(
x
, *
y
)

89 
öt32_t
 
	$__õì754_ªm_pio2
(
x
,
y
)

90 
x
,
y
[];

93 
z
=0.0,
w
,
t
,
r
,
‚
;

94 
tx
[3];

95 
öt32_t
 
e0
,
i
,
j
,
nx
,
n
,
ix
,
hx
;

96 
u_öt32_t
 
low
;

98 
	`GET_HIGH_WORD
(
hx
,
x
);

99 
ix
 = 
hx
&0x7fffffff;

100 if(
ix
<=0x3fe921fb)

101 {
y
[0] = 
x
; y[1] = 0;  0;}

102 if(
ix
<0x4002d97c) {

103 if(
hx
>0) {

104 
z
 = 
x
 - 
pio2_1
;

105 if(
ix
!=0x3ff921fb) {

106 
y
[0] = 
z
 - 
pio2_1t
;

107 
y
[1] = (
z
-y[0])-
pio2_1t
;

109 
z
 -
pio2_2
;

110 
y
[0] = 
z
 - 
pio2_2t
;

111 
y
[1] = (
z
-y[0])-
pio2_2t
;

115 
z
 = 
x
 + 
pio2_1
;

116 if(
ix
!=0x3ff921fb) {

117 
y
[0] = 
z
 + 
pio2_1t
;

118 
y
[1] = (
z
-y[0])+
pio2_1t
;

120 
z
 +
pio2_2
;

121 
y
[0] = 
z
 + 
pio2_2t
;

122 
y
[1] = (
z
-y[0])+
pio2_2t
;

127 if(
ix
<=0x413921fb) {

128 
t
 = 
	`Ábs
(
x
);

129 
n
 = (
öt32_t
Ë(
t
*
övpio2
+
hÆf
);

130 
‚
 = ()
n
;

131 
r
 = 
t
-
‚
*
pio2_1
;

132 
w
 = 
‚
*
pio2_1t
;

133 if(
n
<32&&
ix
!=
≈io2_hw
[n-1]) {

134 
y
[0] = 
r
-
w
;

136 
u_öt32_t
 
high
;

137 
j
 = 
ix
>>20;

138 
y
[0] = 
r
-
w
;

139 
	`GET_HIGH_WORD
(
high
,
y
[0]);

140 
i
 = 
j
-((
high
>>20)&0x7ff);

141 if(
i
>16) {

142 
t
 = 
r
;

143 
w
 = 
‚
*
pio2_2
;

144 
r
 = 
t
-
w
;

145 
w
 = 
‚
*
pio2_2t
-((
t
-
r
)-w);

146 
y
[0] = 
r
-
w
;

147 
	`GET_HIGH_WORD
(
high
,
y
[0]);

148 
i
 = 
j
-((
high
>>20)&0x7ff);

149 if(
i
>49) {

150 
t
 = 
r
;

151 
w
 = 
‚
*
pio2_3
;

152 
r
 = 
t
-
w
;

153 
w
 = 
‚
*
pio2_3t
-((
t
-
r
)-w);

154 
y
[0] = 
r
-
w
;

158 
y
[1] = (
r
-y[0])-
w
;

159 if(
hx
<0Ë{
y
[0] = -y[0]; y[1] = -y[1];  -
n
;}

160  
n
;

165 if(
ix
>=0x7ff00000) {

166 
y
[0]=y[1]=
x
-x;  0;

169 
	`GET_LOW_WORD
(
low
,
x
);

170 
	`SET_LOW_WORD
(
z
,
low
);

171 
e0
 = (
ix
>>20)-1046;

172 
	`SET_HIGH_WORD
(
z
, 
ix
 - ((
öt32_t
)(
e0
<<20)));

173 
i
=0;i<2;i++) {

174 
tx
[
i
] = ()((
öt32_t
)(
z
));

175 
z
 = (z-
tx
[
i
])*
two24
;

177 
tx
[2] = 
z
;

178 
nx
 = 3;

179 
tx
[
nx
-1]==
zîo
)Çx--;

180 
n
 = 
	`__kî√l_ªm_pio2
(
tx
,
y
,
e0
,
nx
,2,
two_ovî_pi
);

181 if(
hx
<0Ë{
y
[0] = -y[0]; y[1] = -y[1];  -
n
;}

182  
n
;

183 
	}
}

	@src/ym2610-940/uClibc/e_sqrt.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD:É_sqrt.c,v 1.8 1995/05/10 20:46:17 jtc Exp $";

87 
	~"m©h.h
"

88 
	~"m©h_¥iv©e.h
"

90 #ifde‡
__STDC__


91 c⁄° 
	g⁄e
 = 1.0, 
	gtöy
=1.0e-300;

93 
	g⁄e
 = 1.0, 
	gtöy
=1.0e-300;

96 #ifde‡
__STDC__


97 
	$__õì754_sqπ
(
x
)

99 
	$__õì754_sqπ
(
x
)

100 
x
;

103 
z
;

104 
öt32_t
 
sign
 = ()0x80000000;

105 
öt32_t
 
ix0
,
s0
,
q
,
m
,
t
,
i
;

106 
u_öt32_t
 
r
,
t1
,
s1
,
ix1
,
q1
;

108 
	`EXTRACT_WORDS
(
ix0
,
ix1
,
x
);

111 if((
ix0
&0x7ff00000)==0x7ff00000) {

112  
x
*x+x;

116 if(
ix0
<=0) {

117 if(((
ix0
&(~
sign
))|
ix1
)==0Ë 
x
;

118 if(
ix0
<0)

119  (
x
-x)/(x-x);

122 
m
 = (
ix0
>>20);

123 if(
m
==0) {

124 
ix0
==0) {

125 
m
 -= 21;

126 
ix0
 |(
ix1
>>11); ix1 <<= 21;

128 
i
=0;(
ix0
&0x00100000)==0;i++) ix0<<=1;

129 
m
 -
i
-1;

130 
ix0
 |(
ix1
>>(32-
i
));

131 
ix1
 <<
i
;

133 
m
 -= 1023;

134 
ix0
 = (ix0&0x000fffff)|0x00100000;

135 if(
m
&1){

136 
ix0
 +ix0 + ((
ix1
&
sign
)>>31);

137 
ix1
 += ix1;

139 
m
 >>= 1;

142 
ix0
 +ix0 + ((
ix1
&
sign
)>>31);

143 
ix1
 += ix1;

144 
q
 = 
q1
 = 
s0
 = 
s1
 = 0;

145 
r
 = 0x00200000;

147 
r
!=0) {

148 
t
 = 
s0
+
r
;

149 if(
t
<=
ix0
) {

150 
s0
 = 
t
+
r
;

151 
ix0
 -
t
;

152 
q
 +
r
;

154 
ix0
 +ix0 + ((
ix1
&
sign
)>>31);

155 
ix1
 += ix1;

156 
r
>>=1;

159 
r
 = 
sign
;

160 
r
!=0) {

161 
t1
 = 
s1
+
r
;

162 
t
 = 
s0
;

163 if((
t
<
ix0
)||(—==ix0)&&(
t1
<=
ix1
))) {

164 
s1
 = 
t1
+
r
;

165 if(((
t1
&
sign
)==sign)&&(
s1
&sign)==0Ë
s0
 += 1;

166 
ix0
 -
t
;

167 i‡(
ix1
 < 
t1
Ë
ix0
 -= 1;

168 
ix1
 -
t1
;

169 
q1
 +
r
;

171 
ix0
 +ix0 + ((
ix1
&
sign
)>>31);

172 
ix1
 += ix1;

173 
r
>>=1;

177 if((
ix0
|
ix1
)!=0) {

178 
z
 = 
⁄e
-
töy
;

179 i‡(
z
>=
⁄e
) {

180 
z
 = 
⁄e
+
töy
;

181 i‡(
q1
==(
u_öt32_t
)0xffffffffË{ q1=0; 
q
 += 1;}

182 i‡(
z
>
⁄e
) {

183 i‡(
q1
==(
u_öt32_t
)0xffffff„Ë
q
+=1;

184 
q1
+=2;

186 
q1
 += (q1&1);

189 
ix0
 = (
q
>>1)+0x3fe00000;

190 
ix1
 = 
q1
>>1;

191 i‡((
q
&1)==1Ë
ix1
 |
sign
;

192 
ix0
 +(
m
 <<20);

193 
	`INSERT_WORDS
(
z
,
ix0
,
ix1
);

194  
z
;

195 
	}
}

	@src/ym2610-940/uClibc/k_cos.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: k_cos.c,v 1.8 1995/05/10 20:46:22 jtc Exp $";

52 
	~"m©h.h
"

53 
	~"m©h_¥iv©e.h
"

55 #ifde‡
__STDC__


60 
	g⁄e
 = 1.00000000000000000000e+00,

61 
	gC1
 = 4.16666666666666019037e-02,

62 
	gC2
 = -1.38888888888741095749e-03,

63 
	gC3
 = 2.48015872894767294178e-05,

64 
	gC4
 = -2.75573143513906633035e-07,

65 
	gC5
 = 2.08757232129817482790e-09,

66 
	gC6
 = -1.13596475577881948265e-11;

68 #ifde‡
__STDC__


69 
	$__kî√l_cos
(
x
, 
y
)

71 
	$__kî√l_cos
(
x
, 
y
)

72 
x
,
y
;

75 
a
,
hz
,
z
,
r
,
qx
;

76 
öt32_t
 
ix
;

77 
	`GET_HIGH_WORD
(
ix
,
x
);

78 
ix
 &= 0x7fffffff;

79 if(
ix
<0x3e400000) {

80 if((()
x
)==0Ë 
⁄e
;

82 
z
 = 
x
*x;

83 
r
 = 
z
*(
C1
+z*(
C2
+z*(
C3
+z*(
C4
+z*(
C5
+z*
C6
)))));

84 if(
ix
 < 0x3FD33333)

85  
⁄e
 - (0.5*
z
 - (z*
r
 - 
x
*
y
));

87 if(
ix
 > 0x3fe90000) {

88 
qx
 = 0.28125;

90 
	`INSERT_WORDS
(
qx
,
ix
-0x00200000,0);

92 
hz
 = 0.5*
z
-
qx
;

93 
a
 = 
⁄e
-
qx
;

94  
a
 - (
hz
 - (
z
*
r
-
x
*
y
));

96 
	}
}

	@src/ym2610-940/uClibc/k_rem_pio2.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: k_rem_pio2.c,v 1.7 1995/05/10 20:46:25 jtc Exp $";

133 
	~"m©h.h
"

134 
	~"m©h_¥iv©e.h
"

136 #ifde‡
__STDC__


137 c⁄° 
	göô_jk
[] = {2,3,4,6};

139 
	göô_jk
[] = {2,3,4,6};

142 #ifde‡
__STDC__


143 c⁄° 
	gPIo2
[] = {

145 
PIo2
[] = {

157 #ifde‡
__STDC__


162 
	gzîo
 = 0.0,

163 
	g⁄e
 = 1.0,

164 
	gtwo24
 = 1.67772160000000000000e+07,

165 
	gtw⁄24
 = 5.96046447753906250000e-08;

167 #ifde‡
__STDC__


168 
	$__kî√l_ªm_pio2
(*
x
, *
y
, 
e0
, 
nx
, 
¥ec
, c⁄° 
öt32_t
 *
ùio2
)

170 
	$__kî√l_ªm_pio2
(
x
,
y
,
e0
,
nx
,
¥ec
,
ùio2
)

171 
x
[], 
y
[]; 
e0
,
nx
,
¥ec
; 
öt32_t
 
ùio2
[];

174 
öt32_t
 
jz
,
jx
,
jv
,
jp
,
jk
,
ˇºy
,
n
,
iq
[20],
i
,
j
,
k
,
m
,
q0
,
ih
;

175 
z
,
fw
,
f
[20],
fq
[20],
q
[20];

178 
jk
 = 
öô_jk
[
¥ec
];

179 
jp
 = 
jk
;

182 
jx
 = 
nx
-1;

183 
jv
 = (
e0
-3)/24; if(jv<0) jv=0;

184 
q0
 = 
e0
-24*(
jv
+1);

187 
j
 = 
jv
-
jx
; 
m
 = jx+
jk
;

188 
i
=0;i<=
m
;i++,
j
++Ë
f
[i] = (j<0)? 
zîo
 : (Ë
ùio2
[j];

191 
i
=0;i<=
jk
;i++) {

192 
j
=0,
fw
=0.0;j<=
jx
;j++Ëfw +
x
[j]*
f
[jx+
i
-j]; 
q
[i] = fw;

195 
jz
 = 
jk
;

196 
ªcompuã
:

198 
i
=0,
j
=
jz
,
z
=
q
[jz];j>0;i++,j--) {

199 
fw
 = ()((
öt32_t
)(
tw⁄24
* 
z
));

200 
iq
[
i
] = (
öt32_t
)(
z
-
two24
*
fw
);

201 
z
 = 
q
[
j
-1]+
fw
;

205 
z
 = 
	`sˇlbn
(z,
q0
);

206 
z
 -8.0*
	`Êo‹
(z*0.125);

207 
n
 = (
öt32_t
Ë
z
;

208 
z
 -()
n
;

209 
ih
 = 0;

210 if(
q0
>0) {

211 
i
 = (
iq
[
jz
-1]>>(24-
q0
)); 
n
 += i;

212 
iq
[
jz
-1] -
i
<<(24-
q0
);

213 
ih
 = 
iq
[
jz
-1]>>(23-
q0
);

215 if(
q0
==0Ë
ih
 = 
iq
[
jz
-1]>>23;

216 if(
z
>=0.5Ë
ih
=2;

218 if(
ih
>0) {

219 
n
 +1; 
ˇºy
 = 0;

220 
i
=0;i<
jz
 ;i++) {

221 
j
 = 
iq
[
i
];

222 if(
ˇºy
==0) {

223 if(
j
!=0) {

224 
ˇºy
 = 1; 
iq
[
i
] = 0x1000000- 
j
;

226 } 
iq
[
i
] = 0xfffff‡- 
j
;

228 if(
q0
>0) {

229 
q0
) {

231 
iq
[
jz
-1] &= 0x7fffff; ;

233 
iq
[
jz
-1] &= 0x3fffff; ;

236 if(
ih
==2) {

237 
z
 = 
⁄e
 - z;

238 if(
ˇºy
!=0Ë
z
 -
	`sˇlbn
(
⁄e
,
q0
);

243 if(
z
==
zîo
) {

244 
j
 = 0;

245 
i
=
jz
-1;i>=
jk
;i--Ë
j
 |
iq
[i];

246 if(
j
==0) {

247 
k
=1;
iq
[
jk
-k]==0;k++);

249 
i
=
jz
+1;i<=jz+
k
;i++) {

250 
f
[
jx
+
i
] = (Ë
ùio2
[
jv
+i];

251 
j
=0,
fw
=0.0;j<=
jx
;j++Ëfw +
x
[j]*
f
[jx+
i
-j];

252 
q
[
i
] = 
fw
;

254 
jz
 +
k
;

255 
ªcompuã
;

260 if(
z
==0.0) {

261 
jz
 -1; 
q0
 -= 24;

262 
iq
[
jz
]==0Ë{ jz--; 
q0
-=24;}

264 
z
 = 
	`sˇlbn
(z,-
q0
);

265 if(
z
>=
two24
) {

266 
fw
 = ()((
öt32_t
)(
tw⁄24
*
z
));

267 
iq
[
jz
] = (
öt32_t
)(
z
-
two24
*
fw
);

268 
jz
 +1; 
q0
 += 24;

269 
iq
[
jz
] = (
öt32_t
Ë
fw
;

270 } 
iq
[
jz
] = (
öt32_t
Ë
z
 ;

274 
fw
 = 
	`sˇlbn
(
⁄e
,
q0
);

275 
i
=
jz
;i>=0;i--) {

276 
q
[
i
] = 
fw
*()
iq
[i]; fw*=
tw⁄24
;

280 
i
=
jz
;i>=0;i--) {

281 
fw
=0.0,
k
=0;k<=
jp
&&k<=
jz
-
i
;k++Ëfw +
PIo2
[k]*
q
[i+k];

282 
fq
[
jz
-
i
] = 
fw
;

286 
¥ec
) {

288 
fw
 = 0.0;

289 
i
=
jz
;i>=0;i--Ë
fw
 +
fq
[i];

290 
y
[0] = (
ih
==0)? 
fw
: -fw;

294 
fw
 = 0.0;

295 
i
=
jz
;i>=0;i--Ë
fw
 +
fq
[i];

296 
y
[0] = (
ih
==0)? 
fw
: -fw;

297 
fw
 = 
fq
[0]-fw;

298 
i
=1;i<=
jz
;i++Ë
fw
 +
fq
[i];

299 
y
[1] = (
ih
==0)? 
fw
: -fw;

302 
i
=
jz
;i>0;i--) {

303 
fw
 = 
fq
[
i
-1]+fq[i];

304 
fq
[
i
] +fq[i-1]-
fw
;

305 
fq
[
i
-1] = 
fw
;

307 
i
=
jz
;i>1;i--) {

308 
fw
 = 
fq
[
i
-1]+fq[i];

309 
fq
[
i
] +fq[i-1]-
fw
;

310 
fq
[
i
-1] = 
fw
;

312 
fw
=0.0,
i
=
jz
;i>=2;i--Ëfw +
fq
[i];

313 if(
ih
==0) {

314 
y
[0] = 
fq
[0]; y[1] = fq[1]; y[2] = 
fw
;

316 
y
[0] = -
fq
[0]; y[1] = -fq[1]; y[2] = -
fw
;

319  
n
&7;

320 
	}
}

	@src/ym2610-940/uClibc/k_sin.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: k_sin.c,v 1.8 1995/05/10 20:46:31 jtc Exp $";

45 
	~"m©h.h
"

46 
	~"m©h_¥iv©e.h
"

48 #ifde‡
__STDC__


53 
	ghÆf
 = 5.00000000000000000000e-01,

54 
	gS1
 = -1.66666666666666324348e-01,

55 
	gS2
 = 8.33333333332248946124e-03,

56 
	gS3
 = -1.98412698298579493134e-04,

57 
	gS4
 = 2.75573137070700676789e-06,

58 
	gS5
 = -2.50507602534068634195e-08,

59 
	gS6
 = 1.58969099521155010221e-10;

61 #ifde‡
__STDC__


62 
	$__kî√l_sö
(
x
, 
y
, 
iy
)

64 
	$__kî√l_sö
(
x
, 
y
, 
iy
)

65 
x
,
y
; 
iy
;

68 
z
,
r
,
v
;

69 
öt32_t
 
ix
;

70 
	`GET_HIGH_WORD
(
ix
,
x
);

71 
ix
 &= 0x7fffffff;

72 if(
ix
<0x3e400000)

73 {if(()
x
==0)  x;}

74 
z
 = 
x
*x;

75 
v
 = 
z
*
x
;

76 
r
 = 
S2
+
z
*(
S3
+z*(
S4
+z*(
S5
+z*
S6
)));

77 if(
iy
==0Ë 
x
+
v
*(
S1
+
z
*
r
);

78  
x
-((
z
*(
hÆf
*
y
-
v
*
r
)-y)-v*
S1
);

79 
	}
}

	@src/ym2610-940/uClibc/math.h

1 
	~<sys/ty≥s.h
>

3 
__kî√l_ªm_pio2
(*
x
, *
y
, 
e0
, 
nx
, 
¥ec
, c⁄° 
öt32_t
 *
ùio2
);

4 
__kî√l_sö
(
x
, 
y
, 
iy
);

5 
__kî√l_cos
(
x
, 
y
);

7 
__õì754_pow
(
x
, 
y
);

8 
__õì754_sqπ
(
x
);

9 
__õì754_log
(
x
);

10 
öt32_t
 
__õì754_ªm_pio2
(
x
, *
y
);

12 
Ábs
(
x
);

13 
sˇlbn
(
x
, 
n
);

14 
c›ysign
(
x
, 
y
);

15 
Êo‹
(
x
);

	@src/ym2610-940/uClibc/math_private.h

17 #i‚de‡
_MATH_PRIVATE_H_


18 
	#_MATH_PRIVATE_H_


	)

20 
	~<ídün.h
>

21 
	~<sys/ty≥s.h
>

43 #i‡(
__BYTE_ORDER
 =
__BIG_ENDIAN
) || \

44 (!
deföed
(
__VFP_FP__
Ë&& (deföed(
__¨m__
Ë|| 
	$deföed
(
__thumb__
)))

48 
vÆue
;

51 
u_öt32_t
 
msw
;

52 
u_öt32_t
 
lsw
;

53 } 
∑πs
;

54 } 
	tõì_doubÀ_sh≠e_ty≥
;

60 
vÆue
;

63 
u_öt32_t
 
lsw
;

64 
u_öt32_t
 
msw
;

65 } 
∑πs
;

66 } 
	tõì_doubÀ_sh≠e_ty≥
;

72 
	#EXTRACT_WORDS
(
ix0
,
ix1
,
d
) \

74 
õì_doubÀ_sh≠e_ty≥
 
ew_u
; \

75 
ew_u
.
vÆue
 = (
d
); \

76 (
ix0
Ë
ew_u
.
∑πs
.
msw
; \

77 (
ix1
Ë
ew_u
.
∑πs
.
lsw
; \

78 
	}
} 0)

	)

82 
	#GET_HIGH_WORD
(
i
,
d
) \

84 
õì_doubÀ_sh≠e_ty≥
 
gh_u
; \

85 
gh_u
.
vÆue
 = (
d
); \

86 (
i
Ë
gh_u
.
∑πs
.
msw
; \

87 } 0)

	)

91 
	#GET_LOW_WORD
(
i
,
d
) \

93 
õì_doubÀ_sh≠e_ty≥
 
gl_u
; \

94 
gl_u
.
vÆue
 = (
d
); \

95 (
i
Ë
gl_u
.
∑πs
.
lsw
; \

96 } 0)

	)

100 
	#INSERT_WORDS
(
d
,
ix0
,
ix1
) \

102 
õì_doubÀ_sh≠e_ty≥
 
iw_u
; \

103 
iw_u
.
∑πs
.
msw
 = (
ix0
); \

104 
iw_u
.
∑πs
.
lsw
 = (
ix1
); \

105 (
d
Ë
iw_u
.
vÆue
; \

106 } 0)

	)

110 
	#SET_HIGH_WORD
(
d
,
v
) \

112 
õì_doubÀ_sh≠e_ty≥
 
sh_u
; \

113 
sh_u
.
vÆue
 = (
d
); \

114 
sh_u
.
∑πs
.
msw
 = (
v
); \

115 (
d
Ë
sh_u
.
vÆue
; \

116 } 0)

	)

120 
	#SET_LOW_WORD
(
d
,
v
) \

122 
õì_doubÀ_sh≠e_ty≥
 
¶_u
; \

123 
¶_u
.
vÆue
 = (
d
); \

124 
¶_u
.
∑πs
.
lsw
 = (
v
); \

125 (
d
Ë
¶_u
.
vÆue
; \

126 } 0)

	)

	@src/ym2610-940/uClibc/s_copysign.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: s_copysign.c,v 1.8 1995/05/10 20:46:57 jtc Exp $";

23 
	~"m©h.h
"

24 
	~"m©h_¥iv©e.h
"

26 #ifde‡
__STDC__


27 
	$c›ysign
(
x
, 
y
)

29 
	$c›ysign
(
x
,
y
)

30 
x
,
y
;

33 
u_öt32_t
 
hx
,
hy
;

34 
	`GET_HIGH_WORD
(
hx
,
x
);

35 
	`GET_HIGH_WORD
(
hy
,
y
);

36 
	`SET_HIGH_WORD
(
x
,(
hx
&0x7fffffff)|(
hy
&0x80000000));

37  
x
;

38 
	}
}

	@src/ym2610-940/uClibc/s_fabs.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: s_fabs.c,v 1.7 1995/05/10 20:47:13 jtc Exp $";

21 
	~"m©h.h
"

22 
	~"m©h_¥iv©e.h
"

24 #ifde‡
__STDC__


25 
	$Ábs
(
x
)

27 
	$Ábs
(
x
)

28 
x
;

31 
u_öt32_t
 
high
;

32 
	`GET_HIGH_WORD
(
high
,
x
);

33 
	`SET_HIGH_WORD
(
x
,
high
&0x7fffffff);

34  
x
;

35 
	}
}

	@src/ym2610-940/uClibc/s_floor.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: s_floor.c,v 1.8 1995/05/10 20:47:20 jtc Exp $";

26 
	~"m©h.h
"

27 
	~"m©h_¥iv©e.h
"

29 #ifde‡
__STDC__


30 c⁄° 
	ghuge
 = 1.0e300;

32 
	ghuge
 = 1.0e300;

35 #ifde‡
__STDC__


36 
	$Êo‹
(
x
)

38 
	$Êo‹
(
x
)

39 
x
;

42 
öt32_t
 
i0
,
i1
,
j0
;

43 
u_öt32_t
 
i
,
j
;

44 
	`EXTRACT_WORDS
(
i0
,
i1
,
x
);

45 
j0
 = ((
i0
>>20)&0x7ff)-0x3ff;

46 if(
j0
<20) {

47 if(
j0
<0) {

48 if(
huge
+
x
>0.0) {

49 if(
i0
>=0Ë{i0=
i1
=0;}

50 if(((
i0
&0x7fffffff)|
i1
)!=0)

51 { 
i0
=0xbff00000;
i1
=0;}

54 
i
 = (0x000fffff)>>
j0
;

55 if(((
i0
&
i
)|
i1
)==0Ë 
x
;

56 if(
huge
+
x
>0.0) {

57 if(
i0
<0Ëi0 +(0x00100000)>>
j0
;

58 
i0
 &(~
i
); 
i1
=0;

61 } i‡(
j0
>51) {

62 if(
j0
==0x400Ë 
x
+x;

63  
x
;

65 
i
 = ((
u_öt32_t
)(0xffffffff))>>(
j0
-20);

66 if((
i1
&
i
)==0Ë 
x
;

67 if(
huge
+
x
>0.0) {

68 if(
i0
<0) {

69 if(
j0
==20Ë
i0
+=1;

71 
j
 = 
i1
+(1<<(52-
j0
));

72 if(
j
<
i1
Ë
i0
 +=1 ;

73 
i1
=
j
;

76 
i1
 &(~
i
);

79 
	`INSERT_WORDS
(
x
,
i0
,
i1
);

80  
x
;

81 
	}
}

	@src/ym2610-940/uClibc/s_scalbn.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: s_scalbn.c,v 1.8 1995/05/10 20:48:08 jtc Exp $";

24 
	~"m©h.h
"

25 
	~"m©h_¥iv©e.h
"

27 #ifde‡
__STDC__


32 
	gtwo54
 = 1.80143985094819840000e+16,

33 
	gtwom54
 = 5.55111512312578270212e-17,

34 
	ghuge
 = 1.0e+300,

35 
	gtöy
 = 1.0e-300;

37 #ifde‡
__STDC__


38 
	$sˇlbn
 (
x
, 
n
)

40 
	$sˇlbn
 (
x
,
n
)

41 
x
; 
n
;

44 
öt32_t
 
k
,
hx
,
lx
;

45 
	`EXTRACT_WORDS
(
hx
,
lx
,
x
);

46 
k
 = (
hx
&0x7ff00000)>>20;

47 i‡(
k
==0) {

48 i‡((
lx
|(
hx
&0x7fffffff))==0Ë 
x
;

49 
x
 *
two54
;

50 
	`GET_HIGH_WORD
(
hx
,
x
);

51 
k
 = ((
hx
&0x7ff00000)>>20) - 54;

52 i‡(
n
< -50000Ë 
töy
*
x
;

54 i‡(
k
==0x7ffË 
x
+x;

55 
k
 = k+
n
;

56 i‡(
k
 > 0x7„Ë 
huge
*
	`c›ysign
(huge,
x
);

57 i‡(
k
 > 0)

58 {
	`SET_HIGH_WORD
(
x
,(
hx
&0x800fffff)|(
k
<<20));  x;}

59 i‡(
k
 <= -54) {

60 i‡(
n
 > 50000)

61  
huge
*
	`c›ysign
(huge,
x
);

62  
töy
*
	`c›ysign
—öy,
x
);

64 
k
 += 54;

65 
	`SET_HIGH_WORD
(
x
,(
hx
&0x800fffff)|(
k
<<20));

66  
x
*
twom54
;

67 
	}
}

	@src/ym2610-940/uClibc/s_sin.c

13 #i‡
deföed
(
LIBM_SCCS
Ë&& !deföed(
löt
)

14 
	grcsid
[] = "$NetBSD: s_sin.c,v 1.7 1995/05/10 20:48:15 jtc Exp $";

48 
	~"m©h.h
"

49 
	~"m©h_¥iv©e.h
"

51 #ifde‡
__STDC__


52 
	$sö
(
x
)

54 
	$sö
(
x
)

55 
x
;

58 
y
[2],
z
=0.0;

59 
öt32_t
 
n
, 
ix
;

62 
	`GET_HIGH_WORD
(
ix
,
x
);

65 
ix
 &= 0x7fffffff;

66 if(
ix
 <0x3„921fbË 
	`__kî√l_sö
(
x
,
z
,0);

69 i‡(
ix
>=0x7ff00000Ë 
x
-x;

73 
n
 = 
	`__õì754_ªm_pio2
(
x
,
y
);

74 
n
&3) {

75 0:  
	`__kî√l_sö
(
y
[0],y[1],1);

76 1:  
	`__kî√l_cos
(
y
[0],y[1]);

77 2:  -
	`__kî√l_sö
(
y
[0],y[1],1);

79  -
	`__kî√l_cos
(
y
[0],y[1]);

82 
	}
}

	@src/ym2610-940/uClibc/wrappers.c

1 
	~"m©h.h
"

3 
	$pow
(
x
, 
y
)

5  
	`__õì754_pow
(
x
, 
y
);

6 
	}
}

9 
	$log
(
x
)

11  
	`__õì754_log
(
x
);

12 
	}
}

14 
	$øi£
() {

15 
	}
}

	@src/ym2610-940/ym2610.c

104 
	~<°dio.h
>

105 
	~<°dlib.h
>

106 
	~<°rög.h
>

107 
	~<°d¨g.h
>

108 
	~<m©h.h
>

110 
	~"mvs.h
"

111 
	~"2610ötf.h
"

112 
	~"ym2610.h
"

115 #i‚de‡
PI


116 
	#PI
 3.14159265358979323846

	)

121 
	#FM_INTERNAL_TIMER
 0

	)

125 
	#FM_BUSY_FLAG_SUPPORT
 0

	)

130 
	#FREQ_SH
 16

	)

131 
	#EG_SH
 16

	)

132 
	#LFO_SH
 24

	)

133 
	#TIMER_SH
 16

	)

135 
	#FREQ_MASK
 ((1<<
FREQ_SH
)-1)

	)

137 
	#ENV_BITS
 10

	)

138 
	#ENV_LEN
 (1<<
ENV_BITS
)

	)

139 
	#ENV_STEP
 (128.0/
ENV_LEN
)

	)

141 
	#MAX_ATT_INDEX
 (
ENV_LEN
-1Ë

	)

142 
	#MIN_ATT_INDEX
 (0Ë

	)

144 
	#EG_ATT
 4

	)

145 
	#EG_DEC
 3

	)

146 
	#EG_SUS
 2

	)

147 
	#EG_REL
 1

	)

148 
	#EG_OFF
 0

	)

150 
	#SIN_BITS
 10

	)

151 
	#SIN_LEN
 (1<<
SIN_BITS
)

	)

152 
	#SIN_MASK
 (
SIN_LEN
-1)

	)

154 
	#TL_RES_LEN
 (256Ë

	)

157 
	#FINAL_SH
 (0)

	)

158 
	#MAXOUT
 (+32767)

	)

159 
	#MINOUT
 (-32768)

	)

167 
	#TL_TAB_LEN
 (13*2*
TL_RES_LEN
)

	)

168 sig√d 
ALIGN_DATA
 
	gé_èb
[
TL_TAB_LEN
];

171 
	#ENV_QUIET
 (
TL_TAB_LEN
>>3)

	)

174 
ALIGN_DATA
 
	gsö_èb
[
SIN_LEN
];

182 
	#SC
(
db
Ë(
u32
Ë–db * (4.0/
ENV_STEP
Ë)

	)

183 c⁄° 
u32
 
ALIGN_DATA
 
	g¶_èbÀ
[16]={

184 
SC
( 0),SC( 1),SC( 2),SC(3 ),SC(4 ),SC(5 ),SC(6 ),SC( 7),

185 
SC
( 8),SC( 9),SC(10),SC(11),SC(12),SC(13),SC(14),SC(31)

187 #unde‡
SC


190 
	#RATE_STEPS
 (8)

	)

191 c⁄° 
u8
 
ALIGN_DATA
 
	geg_öc
[19*
RATE_STEPS
]={

221 
	#O
(
a
Ë◊*
RATE_STEPS
)

	)

224 c⁄° 
u8
 
ALIGN_DATA
 
	geg_øã_£À˘
[32+64+32]={

226 
O
(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),

227 
O
(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),

228 
O
(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),

229 
O
(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),

232 
O
( 0),O( 1),O( 2),O( 3),

233 
O
( 0),O( 1),O( 2),O( 3),

234 
O
( 0),O( 1),O( 2),O( 3),

235 
O
( 0),O( 1),O( 2),O( 3),

236 
O
( 0),O( 1),O( 2),O( 3),

237 
O
( 0),O( 1),O( 2),O( 3),

238 
O
( 0),O( 1),O( 2),O( 3),

239 
O
( 0),O( 1),O( 2),O( 3),

240 
O
( 0),O( 1),O( 2),O( 3),

241 
O
( 0),O( 1),O( 2),O( 3),

242 
O
( 0),O( 1),O( 2),O( 3),

243 
O
( 0),O( 1),O( 2),O( 3),

246 
O
( 4),O( 5),O( 6),O( 7),

249 
O
( 8),O( 9),O(10),O(11),

252 
O
(12),O(13),O(14),O(15),

255 
O
(16),O(16),O(16),O(16),

258 
O
(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),

259 
O
(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),

260 
O
(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),

261 
O
(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16)

264 #unde‡
O


270 
	#O
(
a
Ë◊*1)

	)

271 c⁄° 
u8
 
ALIGN_DATA
 
	geg_øã_shi·
[32+64+32]={

273 
O
(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),

274 
O
(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),

275 
O
(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),

276 
O
(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),

279 
O
(11),O(11),O(11),O(11),

280 
O
(10),O(10),O(10),O(10),

281 
O
( 9),O( 9),O( 9),O( 9),

282 
O
( 8),O( 8),O( 8),O( 8),

283 
O
( 7),O( 7),O( 7),O( 7),

284 
O
( 6),O( 6),O( 6),O( 6),

285 
O
( 5),O( 5),O( 5),O( 5),

286 
O
( 4),O( 4),O( 4),O( 4),

287 
O
( 3),O( 3),O( 3),O( 3),

288 
O
( 2),O( 2),O( 2),O( 2),

289 
O
( 1),O( 1),O( 1),O( 1),

290 
O
( 0),O( 0),O( 0),O( 0),

293 
O
( 0),O( 0),O( 0),O( 0),

296 
O
( 0),O( 0),O( 0),O( 0),

299 
O
( 0),O( 0),O( 0),O( 0),

302 
O
( 0),O( 0),O( 0),O( 0),

305 
O
( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),

306 
O
( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),

307 
O
( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),

308 
O
( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0)

311 #unde‡
O


313 c⁄° 
u8
 
ALIGN_DATA
 
	gdt_èb
[4 * 32]={

332 c⁄° 
u8
 
ALIGN_DATA
 
	g›n_fkèbÀ
[16] = {0,0,0,0,0,0,0,1,2,3,3,3,3,3,3,3};

337 c⁄° 
u32
 
ALIGN_DATA
 
	glfo_ßm∂es_≥r_°ï
[8] = {108, 77, 71, 67, 62, 44, 8, 5};

358 c⁄° 
u8
 
	glfo_ams_dïth_shi·
[4] = {8, 3, 1, 0};

382 c⁄° 
u8
 
ALIGN_DATA
 
	glfo_pm_ouçut
[7*8][8]={

456 
s32
 
ALIGN_DATA
 
	glfo_pm_èbÀ
[128*8*32];

463 
	#SSG_MAX_OUTPUT
 0x7fff

	)

464 
	#SSG_STEP
 0x8000

	)

467 
	#SSG_AFINE
 (0)

	)

468 
	#SSG_ACOARSE
 (1)

	)

469 
	#SSG_BFINE
 (2)

	)

470 
	#SSG_BCOARSE
 (3)

	)

471 
	#SSG_CFINE
 (4)

	)

472 
	#SSG_CCOARSE
 (5)

	)

473 
	#SSG_NOISEPER
 (6)

	)

474 
	#SSG_ENABLE
 (7)

	)

475 
	#SSG_AVOL
 (8)

	)

476 
	#SSG_BVOL
 (9)

	)

477 
	#SSG_CVOL
 (10)

	)

478 
	#SSG_EFINE
 (11)

	)

479 
	#SSG_ECOARSE
 (12)

	)

480 
	#SSG_ESHAPE
 (13)

	)

482 
	#SSG_PORTA
 (14)

	)

483 
	#SSG_PORTB
 (15)

	)

487 
	#OPN_CHAN
(
N
Ë(N&3)

	)

488 
	#OPN_SLOT
(
N
Ë((N>>2)&3)

	)

491 
	#SLOT1
 0

	)

492 
	#SLOT2
 2

	)

493 
	#SLOT3
 1

	)

494 
	#SLOT4
 3

	)

497 
	#OUTD_RIGHT
 1

	)

498 
	#OUTD_LEFT
 2

	)

499 
	#OUTD_CENTER
 3

	)

505 
s32
 *
	mDT
;

506 
u8
 
	mKSR
;

507 
u32
 
	m¨
;

508 
u32
 
	md1r
;

509 
u32
 
	md2r
;

510 
u32
 
	mº
;

511 
u8
 
	mk§
;

512 
u32
 
	mmul
;

515 
u32
 
	mpha£
;

516 
u32
 
	mIn¸
;

519 
u8
 
	m°©e
;

520 
u32
 
	mé
;

521 
s32
 
	mvﬁume
;

522 
u32
 
	m¶
;

523 
u32
 
	mvﬁ_out
;

525 
u8
 
	meg_sh_¨
;

526 
u8
 
	meg_£l_¨
;

527 
u8
 
	meg_sh_d1r
;

528 
u8
 
	meg_£l_d1r
;

529 
u8
 
	meg_sh_d2r
;

530 
u8
 
	meg_£l_d2r
;

531 
u8
 
	meg_sh_º
;

532 
u8
 
	meg_£l_º
;

534 
u8
 
	mssg
;

535 
u8
 
	mssgn
;

537 
u32
 
	mkey
;

540 
u32
 
	mAMmask
;

542 } 
	tFM_SLOT
;

546 
FM_SLOT
 
	mSLOT
[4];

548 
u8
 
	mALGO
;

549 
u8
 
	mFB
;

550 
s32
 
	m›1_out
[2];

552 
s32
 *
	mc⁄√˘1
;

553 
s32
 *
	mc⁄√˘3
;

554 
s32
 *
	mc⁄√˘2
;

555 
s32
 *
	mc⁄√˘4
;

557 
s32
 *
	mmem_c⁄√˘
;

558 
s32
 
	mmem_vÆue
;

560 
s32
 
	mpms
;

561 
u8
 
	mams
;

563 
u32
 
	mfc
;

564 
u8
 
	mkcode
;

565 
u32
 
	mblock_‚um
;

566 } 
	tFM_CH
;

571 
	m˛ock
;

572 
	møã
;

573 
	m‰eqba£
;

574 
	mTimîBa£
;

575 
Uöt32
 
	mTimîBa£f
;

576 #i‡
FM_BUSY_FLAG_SUPPORT


577 
	mBusyExpúe
;

579 
u8
 
	maddªss
;

580 
u8
 
	múq
;

581 
u8
 
	múqmask
;

582 
u8
 
	m°©us
;

583 
u32
 
	mmode
;

584 
u8
 
	m¥esˇÀr_£l
;

585 
u8
 
	m‚_h
;

586 
s32
 
	mTA
;

587 
s32
 
	mTAC
;

588 
u8
 
	mTB
;

589 
s32
 
	mTBC
;

591 
s32
 
	mdt_èb
[8][32];

593 
FM_TIMERHANDLER
 
	mTimî_H™dÀr
;

594 
FM_IRQHANDLER
 
	mIRQ_H™dÀr
;

595 } 
	tFM_ST
;

601 
u32
 
	mfc
[3];

602 
u8
 
	m‚_h
;

603 
u8
 
	mkcode
[3];

604 
u32
 
	mblock_‚um
[3];

605 } 
	tFM_3SLOT
;

610 
FM_ST
 
	mST
;

611 
FM_3SLOT
 
	mSL3
;

612 
FM_CH
 *
	mP_CH
;

613 
	m∑n
[6*2];

615 
u32
 
	meg_˙t
;

616 
u32
 
	meg_timî
;

617 
u32
 
	meg_timî_add
;

618 
u32
 
	meg_timî_ovîÊow
;

624 
u32
 
	m‚_èbÀ
[4096];

628 
u32
 
	mlfo_˙t
;

629 
u32
 
	mlfo_öc
;

631 
u32
 
	mlfo_‰eq
[8];

632 } 
	tFM_OPN
;

637 
	sSSG_t


639 
	mœ°E«bÀ
;

640 
u32
 
	m°ï
;

641 
	m≥riod
[3];

642 
	mPîiodN
;

643 
	mPîiodE
;

644 
	mcou¡
[3];

645 
	mCou¡N
;

646 
	mCou¡E
;

647 
u32
 
	mvﬁ
[3];

648 
u32
 
	mVﬁE
;

649 
u8
 
	mívñ›e
[3];

650 
u8
 
	mouçut
[3];

651 
u8
 
	mOuçutN
;

652 
s8
 
	mcou¡_ív
;

653 
u8
 
	mhﬁd
;

654 
u8
 
	mÆã∫©e
;

655 
u8
 
	m©èck
;

656 
u8
 
	mhﬁdög
;

657 
	mRNG
;

658 
u32
 
	mvﬁ_èbÀ
[32];

661 
SSG_t
 *
	gSSG
;

667 
u8
 
	mÊag
;

668 
u8
 
	mÊagMask
;

669 
u8
 
	mnow_d©a
;

670 
u32
 
	mnow_addr
;

671 
u32
 
	mnow_°ï
;

672 
u32
 
	m°ï
;

673 
u32
 
	m°¨t
;

674 
u32
 
	míd
;

675 
u8
 
	mIL
;

676 
s32
 
	madpcma_acc
;

677 
s32
 
	madpcma_°ï
;

678 
s32
 
	madpcma_out
;

679 
s8
 
	mvﬁ_mul
;

680 
u8
 
	mvﬁ_shi·
;

681 
s32
 *
	m∑n
;

682 } 
	tADPCMA
;

686 
	sadpcmb_°©e


688 
s32
 *
	m∑n
;

689 
	m‰eqba£
;

690 
	mouçut_ønge
;

691 
u32
 
	mnow_addr
;

692 
u32
 
	mnow_°ï
;

693 
u32
 
	m°ï
;

694 
u32
 
	m°¨t
;

695 
u32
 
	mlimô
;

696 
u32
 
	míd
;

697 
u32
 
	mdñè
;

698 
s32
 
	mvﬁume
;

699 
s32
 
	macc
;

700 
s32
 
	madpcmd
;

701 
s32
 
	madpcml
;

702 
s32
 
	m¥ev_acc
;

703 
u8
 
	mnow_d©a
;

704 
u8
 
	mCPU_d©a
;

705 
u8
 
	mp‹t°©e
;

706 
u8
 
	mc⁄åﬁ2
;

707 
u8
 
	mp‹tshi·
;

711 
u8
 
	mDRAMp‹tshi·
;

715 
u8
 
	mmemªad
;

720 
u8
 
	m°©us_ch™ge_EOS_bô
;

721 
u8
 
	m°©us_ch™ge_BRDY_bô
;

726 
u8
 
	mPCM_BSY
;

728 } 
	tADPCMB
;

733 
	sym2610_t


735 
u8
 
	mªgs
[512];

736 
FM_OPN
 
	mOPN
;

737 
FM_CH
 
	mCH
[6];

738 
u8
 
	maddr_A1
;

741 
u8
 
	madpcmaTL
;

742 
ADPCMA
 
	madpcma
[6];

743 
u8
 
	madpcm_¨rivedEndAddªss
;

746 
ADPCMB
 
	madpcmb
;

750 
ym2610_t
 *
	gYM2610
;

753 
s32
 
	gm2
,
	gc1
,
	gc2
;

754 
s32
 
	gmem
;

756 
s32
 
ALIGN_DATA
 
	gout_fm
[8];

757 
s32
 
	gout_ssg
;

758 
s32
 
ALIGN_DATA
 
	gout_adpcma
[4];

759 
s32
 
ALIGN_DATA
 
	gout_dñè
[4];

761 
u32
 
	gLFO_AM
;

762 
s32
 
	gLFO_PM
;

766 
	#LOG_ERR
 3

	)

767 
	#LOG_WAR
 2

	)

768 
	#LOG_INF
 1

	)

769 
	#LOG_LEVEL
 
LOG_INF


	)

771 
	#LOG
(
n
,
x
Ëif–“)>=
LOG_LEVEL
 ) 
logîr‹
 
	)
x

776 
INLINE
 
	$FM_STATUS_SET
(
FM_ST
 *
ST
,
Êag
)

779 
ST
->
°©us
 |
Êag
;

780 i‡–!(
ST
->
úq
Ë&& (ST->
°©us
 & ST->
úqmask
) )

782 
ST
->
úq
 = 1;

784 (
ST
->
IRQ_H™dÀr
)(1);

786 
	}
}

789 
INLINE
 
	$FM_STATUS_RESET
(
FM_ST
 *
ST
,
Êag
)

792 
ST
->
°©us
 &=~
Êag
;

793 i‡–(
ST
->
úq
Ë&& !(ST->
°©us
 & ST->
úqmask
) )

795 
ST
->
úq
 = 0;

797 (
ST
->
IRQ_H™dÀr
)(0);

799 
	}
}

802 
INLINE
 
	$FM_IRQMASK_SET
(
FM_ST
 *
ST
,
Êag
)

804 
ST
->
úqmask
 = 
Êag
;

806 
	`FM_STATUS_SET
(
ST
,0);

807 
	`FM_STATUS_RESET
(
ST
,0);

808 
	}
}

811 
INLINE
 
	$£t_timîs
–
FM_ST
 *
ST
, 
v
 )

821 
ST
->
mode
 = 
v
;

824 if–
v
 & 0x20 )

825 
	`FM_STATUS_RESET
(
ST
,0x02);

827 if–
v
 & 0x10 )

828 
	`FM_STATUS_RESET
(
ST
,0x01);

830 if–
v
 & 0x02 )

832 if–
ST
->
TBC
 == 0 )

834 
ST
->
TBC
 = ( 256-ST->
TB
)<<4;

836 #i‡
FM_INTERNAL_TIMER
==0

837 (
ST
->
Timî_H™dÀr
)(1,ST->
TBC
,ST->
TimîBa£
);

843 if–
ST
->
TBC
 != 0 )

845 
ST
->
TBC
 = 0;

846 #i‡
FM_INTERNAL_TIMER
==0

847 (
ST
->
Timî_H™dÀr
)(1,0,ST->
TimîBa£
);

852 if–
v
 & 0x01 )

854 if–
ST
->
TAC
 == 0 )

856 
ST
->
TAC
 = (1024-ST->
TA
);

858 #i‡
FM_INTERNAL_TIMER
==0

859 (
ST
->
Timî_H™dÀr
)(0,ST->
TAC
,ST->
TimîBa£
);

865 if–
ST
->
TAC
 != 0 )

867 
ST
->
TAC
 = 0;

868 #i‡
FM_INTERNAL_TIMER
==0

869 (
ST
->
Timî_H™dÀr
)(0,0,ST->
TimîBa£
);

873 
	}
}

877 
INLINE
 
	$TimîAOvî
(
FM_ST
 *
ST
)

880 if(
ST
->
mode
 & 0x04Ë
	`FM_STATUS_SET
(ST,0x01);

882 
ST
->
TAC
 = (1024-ST->
TA
);

883 #i‡
FM_INTERNAL_TIMER
==0

884 (
ST
->
Timî_H™dÀr
)(0,ST->
TAC
,ST->
TimîBa£
);

886 
	}
}

888 
INLINE
 
	$TimîBOvî
(
FM_ST
 *
ST
)

891 if(
ST
->
mode
 & 0x08Ë
	`FM_STATUS_SET
(ST,0x02);

893 
ST
->
TBC
 = ( 256-ST->
TB
)<<4;

894 #i‡
FM_INTERNAL_TIMER
==0

895 (
ST
->
Timî_H™dÀr
)(1,ST->
TBC
,ST->
TimîBa£
);

897 
	}
}

900 #i‡
FM_INTERNAL_TIMER


904 
	#INTERNAL_TIMER_A
(
ST
,
CSM_CH
) \

906 if–
ST
.
TAC
 ) \

908 if–(
ST
.
TAC
 -()((1000.0/ST.
øã
)*4096)) <= 0 ) \

910 
	`TimîAOvî
–&
ST
 ); \

912 if–
ST
.
mode
 & 0x80 ) \

913 
	`CSMKeyC⁄åﬁl
–
CSM_CH
 ); \

915 }

	)

917 
	#INTERNAL_TIMER_B
(
ST
,
°ï
) \

919 if–
ST
.
TBC
 ) \

921 if–(
ST
.
TBC
 -()((1000.0/ST.
øã
)*4096*
°ï
)) <= 0 ) \

922 
	`TimîBOvî
–&
ST
 ); \

923 }

	)

926 
	#INTERNAL_TIMER_A
(
ST
,
CSM_CH
)

	)

927 
	#INTERNAL_TIMER_B
(
ST
,
°ï
)

	)

932 #i‡
FM_BUSY_FLAG_SUPPORT


933 
INLINE
 
u8
 
	$FM_STATUS_FLAG
(
FM_ST
 *
ST
)

935 if–
ST
->
BusyExpúe
 )

937 if–(
ST
->
BusyExpúe
 - 
	`FM_GET_TIME_NOW
()) > 0)

938  
ST
->
°©us
 | 0x80;

940 
ST
->
BusyExpúe
 = 0;

942  
ST
->
°©us
;

943 
	}
}

944 
INLINE
 
	$FM_BUSY_SET
(
FM_ST
 *
ST
,
busy˛ock
 )

946 
ST
->
BusyExpúe
 = 
	`FM_GET_TIME_NOW
(Ë+ (ST->
TimîBa£
 * 
busy˛ock
);

947 
	}
}

948 
	#FM_BUSY_CLEAR
(
ST
Ë((ST)->
BusyExpúe
 = 0)

	)

950 
	#FM_STATUS_FLAG
(
ST
Ë((ST)->
°©us
)

	)

951 
	#FM_BUSY_SET
(
ST
,
b˛ock
Ë{}

	)

952 
	#FM_BUSY_CLEAR
(
ST
Ë{}

	)

958 
INLINE
 
	$FM_KEYON
(
FM_CH
 *
CH
 , 
s
 )

960 
FM_SLOT
 *
SLOT
 = &
CH
->SLOT[
s
];

961 if–!
SLOT
->
key
 )

963 
SLOT
->
key
 = 1;

964 
SLOT
->
pha£
 = 0;

965 
SLOT
->
°©e
 = 
EG_ATT
;

967 
	}
}

969 
INLINE
 
	$FM_KEYOFF
(
FM_CH
 *
CH
 , 
s
 )

971 
FM_SLOT
 *
SLOT
 = &
CH
->SLOT[
s
];

972 if–
SLOT
->
key
 )

974 
SLOT
->
key
 = 0;

975 i‡(
SLOT
->
°©e
>
EG_REL
)

976 
SLOT
->
°©e
 = 
EG_REL
;

978 
	}
}

981 
	$£tup_c⁄√˘i⁄
–
FM_CH
 *
CH
, 
ch
 )

983 
s32
 *
ˇºõr
 = &
out_fm
[
ch
];

985 
s32
 **
om1
 = &
CH
->
c⁄√˘1
;

986 
s32
 **
om2
 = &
CH
->
c⁄√˘3
;

987 
s32
 **
oc1
 = &
CH
->
c⁄√˘2
;

989 
s32
 **
memc
 = &
CH
->
mem_c⁄√˘
;

991  
CH
->
ALGO
 ){

994 *
om1
 = &
c1
;

995 *
oc1
 = &
mem
;

996 *
om2
 = &
c2
;

997 *
memc
&
m2
;

1002 *
om1
 = &
mem
;

1003 *
oc1
 = &
mem
;

1004 *
om2
 = &
c2
;

1005 *
memc
&
m2
;

1010 *
om1
 = &
c2
;

1011 *
oc1
 = &
mem
;

1012 *
om2
 = &
c2
;

1013 *
memc
&
m2
;

1018 *
om1
 = &
c1
;

1019 *
oc1
 = &
mem
;

1020 *
om2
 = &
c2
;

1021 *
memc
&
c2
;

1027 *
om1
 = &
c1
;

1028 *
oc1
 = 
ˇºõr
;

1029 *
om2
 = &
c2
;

1030 *
memc
&
mem
;

1036 *
om1
 = 0;

1037 *
oc1
 = 
ˇºõr
;

1038 *
om2
 = 
ˇºõr
;

1039 *
memc
&
m2
;

1046 *
om1
 = &
c1
;

1047 *
oc1
 = 
ˇºõr
;

1048 *
om2
 = 
ˇºõr
;

1049 *
memc
&
mem
;

1057 *
om1
 = 
ˇºõr
;

1058 *
oc1
 = 
ˇºõr
;

1059 *
om2
 = 
ˇºõr
;

1060 *
memc
&
mem
;

1064 
CH
->
c⁄√˘4
 = 
ˇºõr
;

1065 
	}
}

1068 
INLINE
 
	$£t_dë_mul
(
FM_ST
 *
ST
,
FM_CH
 *
CH
,
FM_SLOT
 *
SLOT
,
v
)

1070 
SLOT
->
mul
 = (
v
&0x0f)? (v&0x0f)*2 : 1;

1071 
SLOT
->
DT
 = 
ST
->
dt_èb
[(
v
>>4)&7];

1072 
CH
->
SLOT
[
SLOT1
].
In¸
=-1;

1073 
	}
}

1076 
INLINE
 
	$£t_é
(
FM_CH
 *
CH
,
FM_SLOT
 *
SLOT
 , 
v
)

1078 
SLOT
->
é
 = (
v
&0x7f)<<(
ENV_BITS
-7);

1079 
	}
}

1082 
INLINE
 
	$£t_¨_k§
(
FM_CH
 *
CH
,
FM_SLOT
 *
SLOT
,
v
)

1084 
u8
 
ﬁd_KSR
 = 
SLOT
->
KSR
;

1086 
SLOT
->
¨
 = (
v
&0x1f) ? 32 + ((v&0x1f)<<1) : 0;

1088 
SLOT
->
KSR
 = 3-(
v
>>6);

1089 i‡(
SLOT
->
KSR
 !
ﬁd_KSR
)

1091 
CH
->
SLOT
[
SLOT1
].
In¸
=-1;

1096 i‡((
SLOT
->
¨
 + SLOT->
k§
) < 32+62)

1098 
SLOT
->
eg_sh_¨
 = 
eg_øã_shi·
 [SLOT->
¨
 + SLOT->
k§
 ];

1099 
SLOT
->
eg_£l_¨
 = 
eg_øã_£À˘
[SLOT->
¨
 + SLOT->
k§
 ];

1103 
SLOT
->
eg_sh_¨
 = 0;

1104 
SLOT
->
eg_£l_¨
 = 17*
RATE_STEPS
;

1107 
	}
}

1110 
INLINE
 
	$£t_dr
(
FM_SLOT
 *
SLOT
,
v
)

1112 
SLOT
->
d1r
 = (
v
&0x1f) ? 32 + ((v&0x1f)<<1) : 0;

1114 
SLOT
->
eg_sh_d1r
 = 
eg_øã_shi·
 [SLOT->
d1r
 + SLOT->
k§
];

1115 
SLOT
->
eg_£l_d1r

eg_øã_£À˘
[SLOT->
d1r
 + SLOT->
k§
];

1117 
	}
}

1120 
INLINE
 
	$£t_§
(
FM_SLOT
 *
SLOT
,
v
)

1122 
SLOT
->
d2r
 = (
v
&0x1f) ? 32 + ((v&0x1f)<<1) : 0;

1124 
SLOT
->
eg_sh_d2r
 = 
eg_øã_shi·
 [SLOT->
d2r
 + SLOT->
k§
];

1125 
SLOT
->
eg_£l_d2r

eg_øã_£À˘
[SLOT->
d2r
 + SLOT->
k§
];

1126 
	}
}

1129 
INLINE
 
	$£t_¶_º
(
FM_SLOT
 *
SLOT
,
v
)

1131 
SLOT
->
¶
 = 
¶_èbÀ
[ 
v
>>4 ];

1133 
SLOT
->
º
 = 34 + ((
v
&0x0f)<<2);

1135 
SLOT
->
eg_sh_º
 = 
eg_øã_shi·
 [SLOT->
º
 + SLOT->
k§
];

1136 
SLOT
->
eg_£l_º
 = 
eg_øã_£À˘
[SLOT->
º
 + SLOT->
k§
];

1137 
	}
}

1141 
INLINE
 sig√d 
	$›_ˇlc
(
u32
 
pha£
, 
ív
, sig√d 
pm
)

1143 
u32
 
p
;

1145 
p
 = (
ív
<<3Ë+ 
sö_èb
[ ( ((sig√d )((
pha£
 & ~
FREQ_MASK
Ë+ (
pm
<<15))Ë>> 
FREQ_SH
 ) & 
SIN_MASK
 ];

1147 i‡(
p
 >
TL_TAB_LEN
)

1149  
é_èb
[
p
];

1150 
	}
}

1152 
INLINE
 sig√d 
	$›_ˇlc1
(
u32
 
pha£
, 
ív
, sig√d 
pm
)

1154 
u32
 
p
;

1156 
p
 = (
ív
<<3Ë+ 
sö_èb
[ ( ((sig√d )((
pha£
 & ~
FREQ_MASK
Ë+ 
pm
 )Ë>> 
FREQ_SH
 ) & 
SIN_MASK
 ];

1158 i‡(
p
 >
TL_TAB_LEN
)

1160  
é_èb
[
p
];

1161 
	}
}

1164 
INLINE
 
	$adv™˚_lfo
(
FM_OPN
 *
OPN
)

1166 
u8
 
pos
;

1167 
u8
 
¥ev_pos
;

1169 i‡(
OPN
->
lfo_öc
)

1171 
¥ev_pos
 = 
OPN
->
lfo_˙t
>>
LFO_SH
 & 127;

1173 
OPN
->
lfo_˙t
 +OPN->
lfo_öc
;

1175 
pos
 = (
OPN
->
lfo_˙t
 >> 
LFO_SH
) & 127;

1187 i‡(
pos
<64)

1188 
LFO_AM
 = (
pos
&63) * 2;

1190 
LFO_AM
 = 126 - ((
pos
&63) * 2);

1194 
¥ev_pos
 >>= 2;

1195 
pos
 >>= 2;

1199 
LFO_PM
 = 
pos
;

1205 
LFO_AM
 = 0;

1206 
LFO_PM
 = 0;

1208 
	}
}

1210 
INLINE
 
	$adv™˚_eg_ch™√l
(
FM_OPN
 *
OPN
, 
FM_SLOT
 *
SLOT
)

1212 
out
;

1213 
sw≠_Êag
 = 0;

1214 
i
;

1217 
i
 = 4;

1221 
SLOT
->
°©e
)

1223 
EG_ATT
:

1224 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_¨
)-1) ) )

1226 
SLOT
->
vﬁume
 += (~SLOT->volume *

1227 (
eg_öc
[
SLOT
->
eg_£l_¨
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_¨
)&7)])

1229 i‡(
SLOT
->
vﬁume
 <
MIN_ATT_INDEX
)

1231 
SLOT
->
vﬁume
 = 
MIN_ATT_INDEX
;

1232 
SLOT
->
°©e
 = 
EG_DEC
;

1238 
EG_DEC
:

1239 i‡(
SLOT
->
ssg
&0x08)

1241 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_d1r
)-1) ) )

1243 
SLOT
->
vﬁume
 +(
eg_öc
[SLOT->
eg_£l_d1r
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_d1r
)&7)]<<2);

1245 i‡–
SLOT
->
vﬁume
 >SLOT->
¶
 )

1246 
SLOT
->
°©e
 = 
EG_SUS
;

1251 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_d1r
)-1) ) )

1253 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_d1r
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_d1r
)&7)];

1255 i‡–
SLOT
->
vﬁume
 >SLOT->
¶
 )

1256 
SLOT
->
°©e
 = 
EG_SUS
;

1261 
EG_SUS
:

1262 i‡(
SLOT
->
ssg
&0x08)

1264 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_d2r
)-1) ) )

1266 
SLOT
->
vﬁume
 +(
eg_öc
[SLOT->
eg_£l_d2r
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_d2r
)&7)]<<2);

1268 i‡–
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
 )

1270 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1272 i‡(
SLOT
->
ssg
&0x01)

1274 i‡(
SLOT
->
ssgn
&1)

1279 
sw≠_Êag
 = (
SLOT
->
ssg
&0x02) | 1 ;

1291 
SLOT
->
°©e
 = 
EG_ATT
;

1293 
sw≠_Êag
 = (
SLOT
->
ssg
&0x02);

1300 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_d2r
)-1) ) )

1302 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_d2r
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_d2r
)&7)];

1304 i‡–
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
 )

1306 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1314 
EG_REL
:

1315 i‡–!(
OPN
->
eg_˙t
 & ((1<<
SLOT
->
eg_sh_º
)-1) ) )

1317 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_º
 + ((
OPN
->
eg_˙t
>>SLOT->
eg_sh_º
)&7)];

1319 i‡–
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
 )

1321 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1322 
SLOT
->
°©e
 = 
EG_OFF
;

1329 
out
 = 
SLOT
->
é
 + ((
u32
)SLOT->
vﬁume
);

1331 i‡((
SLOT
->
ssg
&0x08Ë&& (SLOT->
ssgn
&2))

1332 
out
 ^((1<<
ENV_BITS
)-1);

1336 
SLOT
->
vﬁ_out
 = 
out
;

1338 
SLOT
->
ssgn
 ^
sw≠_Êag
;

1340 
SLOT
++;

1341 
i
--;

1342 }
i
);

1344 
	}
}

1348 
	#vﬁume_ˇlc
(
OP
Ë((OP)->
vﬁ_out
 + (
AM
 & (OP)->
AMmask
))

	)

1350 
INLINE
 
	$ch™_ˇlc
(
FM_OPN
 *
OPN
, 
FM_CH
 *
CH
)

1352 
eg_out
;

1354 
u32
 
AM
 = 
LFO_AM
 >> 
CH
->
ams
;

1357 
m2
 = 
c1
 = 
c2
 = 
mem
 = 0;

1359 *
CH
->
mem_c⁄√˘
 = CH->
mem_vÆue
;

1361 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT1
]);

1363 
s32
 
out
 = 
CH
->
›1_out
[0] + CH->op1_out[1];

1364 
CH
->
›1_out
[0] = CH->op1_out[1];

1366 if–!
CH
->
c⁄√˘1
 ){

1368 
mem
 = 
c1
 = 
c2
 = 
CH
->
›1_out
[0];

1371 *
CH
->
c⁄√˘1
 +CH->
›1_out
[0];

1374 
CH
->
›1_out
[1] = 0;

1375 if–
eg_out
 < 
ENV_QUIET
 )

1377 i‡(!
CH
->
FB
)

1378 
out
=0;

1380 
CH
->
›1_out
[1] = 
	`›_ˇlc1
(CH->
SLOT
[
SLOT1
].
pha£
, 
eg_out
, (
out
<<CH->
FB
) );

1386 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT3
]);

1387 if–
eg_out
 < 
ENV_QUIET
 )

1388 *
CH
->
c⁄√˘3
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT3
].
pha£
, 
eg_out
, 
m2
);

1390 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT2
]);

1391 if–
eg_out
 < 
ENV_QUIET
 )

1392 *
CH
->
c⁄√˘2
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT2
].
pha£
, 
eg_out
, 
c1
);

1395 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT4
]);

1396 if–
eg_out
 < 
ENV_QUIET
 )

1397 *
CH
->
c⁄√˘4
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT4
].
pha£
, 
eg_out
, 
c2
);

1401 
CH
->
mem_vÆue
 = 
mem
;

1404 if(
CH
->
pms
)

1411 
u32
 
block_‚um
 = 
CH
->block_fnum;

1413 
u32
 
‚um_lfo
 = ((
block_‚um
 & 0x7f0) >> 4) * 32 * 8;

1414 
s32
 
lfo_‚_èbÀ_ödex_off£t
 = 
lfo_pm_èbÀ
[ 
‚um_lfo
 + 
CH
->
pms
 + 
LFO_PM
 ];

1416 i‡(
lfo_‚_èbÀ_ödex_off£t
)

1418 
u8
 
blk
;

1419 
u32
 
‚
;

1420 
kc
,
fc
;

1422 
block_‚um
 = block_‚um*2 + 
lfo_‚_èbÀ_ödex_off£t
;

1424 
blk
 = (
block_‚um
&0x7000) >> 12;

1425 
‚
 = 
block_‚um
 & 0xfff;

1428 
kc
 = (
blk
<<2Ë| 
›n_fkèbÀ
[
‚
 >> 8];

1430 
fc
 = 
OPN
->
‚_èbÀ
[
‚
]>>(7-
blk
);

1432 
CH
->
SLOT
[
SLOT1
].
pha£
 +((
fc
+CH->SLOT[SLOT1].
DT
[
kc
])*CH->SLOT[SLOT1].
mul
) >> 1;

1433 
CH
->
SLOT
[
SLOT2
].
pha£
 +((
fc
+CH->SLOT[SLOT2].
DT
[
kc
])*CH->SLOT[SLOT2].
mul
) >> 1;

1434 
CH
->
SLOT
[
SLOT3
].
pha£
 +((
fc
+CH->SLOT[SLOT3].
DT
[
kc
])*CH->SLOT[SLOT3].
mul
) >> 1;

1435 
CH
->
SLOT
[
SLOT4
].
pha£
 +((
fc
+CH->SLOT[SLOT4].
DT
[
kc
])*CH->SLOT[SLOT4].
mul
) >> 1;

1439 
CH
->
SLOT
[
SLOT1
].
pha£
 +CH->SLOT[SLOT1].
In¸
;

1440 
CH
->
SLOT
[
SLOT2
].
pha£
 +CH->SLOT[SLOT2].
In¸
;

1441 
CH
->
SLOT
[
SLOT3
].
pha£
 +CH->SLOT[SLOT3].
In¸
;

1442 
CH
->
SLOT
[
SLOT4
].
pha£
 +CH->SLOT[SLOT4].
In¸
;

1447 
CH
->
SLOT
[
SLOT1
].
pha£
 +CH->SLOT[SLOT1].
In¸
;

1448 
CH
->
SLOT
[
SLOT2
].
pha£
 +CH->SLOT[SLOT2].
In¸
;

1449 
CH
->
SLOT
[
SLOT3
].
pha£
 +CH->SLOT[SLOT3].
In¸
;

1450 
CH
->
SLOT
[
SLOT4
].
pha£
 +CH->SLOT[SLOT4].
In¸
;

1453 
CH
->
SLOT
[
SLOT1
].
pha£
 +CH->SLOT[SLOT1].
In¸
;

1454 
CH
->
SLOT
[
SLOT2
].
pha£
 +CH->SLOT[SLOT2].
In¸
;

1455 
CH
->
SLOT
[
SLOT3
].
pha£
 +CH->SLOT[SLOT3].
In¸
;

1456 
CH
->
SLOT
[
SLOT4
].
pha£
 +CH->SLOT[SLOT4].
In¸
;

1459 
	}
}

1462 
INLINE
 
	$ª‰esh_fc_eg_¶Ÿ
(
FM_SLOT
 *
SLOT
 , 
fc
 , 
kc
 )

1464 
k§
;

1467 
SLOT
->
In¸
 = ((
fc
+SLOT->
DT
[
kc
])*SLOT->
mul
) >> 1;

1469 
k§
 = 
kc
 >> 
SLOT
->
KSR
;

1470 if–
SLOT
->
k§
 != ksr )

1472 
SLOT
->
k§
 = ksr;

1475 i‡((
SLOT
->
¨
 + SLOT->
k§
) < 32+62)

1477 
SLOT
->
eg_sh_¨
 = 
eg_øã_shi·
 [SLOT->
¨
 + SLOT->
k§
 ];

1478 
SLOT
->
eg_£l_¨
 = 
eg_øã_£À˘
[SLOT->
¨
 + SLOT->
k§
 ];

1482 
SLOT
->
eg_sh_¨
 = 0;

1483 
SLOT
->
eg_£l_¨
 = 17*
RATE_STEPS
;

1486 
SLOT
->
eg_sh_d1r
 = 
eg_øã_shi·
 [SLOT->
d1r
 + SLOT->
k§
];

1487 
SLOT
->
eg_£l_d1r

eg_øã_£À˘
[SLOT->
d1r
 + SLOT->
k§
];

1489 
SLOT
->
eg_sh_d2r
 = 
eg_øã_shi·
 [SLOT->
d2r
 + SLOT->
k§
];

1490 
SLOT
->
eg_£l_d2r

eg_øã_£À˘
[SLOT->
d2r
 + SLOT->
k§
];

1492 
SLOT
->
eg_sh_º
 = 
eg_øã_shi·
 [SLOT->
º
 + SLOT->
k§
];

1493 
SLOT
->
eg_£l_º
 = 
eg_øã_£À˘
[SLOT->
º
 + SLOT->
k§
];

1495 
	}
}

1498 
INLINE
 
	$ª‰esh_fc_eg_ch™
(
FM_CH
 *
CH
 )

1500 if–
CH
->
SLOT
[
SLOT1
].
In¸
==-1){

1501 
fc
 = 
CH
->fc;

1502 
kc
 = 
CH
->
kcode
;

1503 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT1
] , 
fc
 , 
kc
 );

1504 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT2
] , 
fc
 , 
kc
 );

1505 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT3
] , 
fc
 , 
kc
 );

1506 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT4
] , 
fc
 , 
kc
 );

1508 
	}
}

1511 
	$öô_timëabÀs
–
FM_ST
 *
ST
 , c⁄° 
u8
 *
dâabÀ
 )

1513 
i
,
d
;

1514 
øã
;

1517 
	`logîr‹
("FM.C: samplerate=%8i chip clock=%8i freqbase=%f \n",

1518 
ST
->
øã
, ST->
˛ock
, ST->
‰eqba£
 );

1522 
d
 = 0;d <= 3;d++){

1523 
i
 = 0;i <= 31;i++){

1524 
øã
 = (()
dâabÀ
[
d
*32 + 
i
]Ë* 
SIN_LEN
 * 
ST
->
‰eqba£
 * (1<<
FREQ_SH
) / (()(1<<20));

1525 
ST
->
dt_èb
[
d
][
i
] = (
s32
Ë
øã
;

1526 
ST
->
dt_èb
[
d
+4][
i
] = -ST->dt_tab[d][i];

1528 
	`logîr‹
("FM.C: DT [%2ò%2i] = %8x \n", 
d
, 
i
, 
ST
->
dt_èb
[d][i] );

1533 
	}
}

1536 
	$ª£t_ch™√ls
–
FM_ST
 *
ST
 , 
FM_CH
 *
CH
 , 
num
 )

1538 
c
,
s
;

1540 
ST
->
mode
 = 0;

1541 
ST
->
TA
 = 0;

1542 
ST
->
TAC
 = 0;

1543 
ST
->
TB
 = 0;

1544 
ST
->
TBC
 = 0;

1546  
c
 = 0 ; c < 
num
 ; c++ )

1548 
CH
[
c
].
fc
 = 0;

1549 
s
 = 0 ; s < 4 ; s++ )

1551 
CH
[
c
].
SLOT
[
s
].
ssg
 = 0;

1552 
CH
[
c
].
SLOT
[
s
].
ssgn
 = 0;

1553 
CH
[
c
].
SLOT
[
s
].
°©e

EG_OFF
;

1554 
CH
[
c
].
SLOT
[
s
].
vﬁume
 = 
MAX_ATT_INDEX
;

1555 
CH
[
c
].
SLOT
[
s
].
vﬁ_out

MAX_ATT_INDEX
;

1558 
	}
}

1561 
	$OPNInôTabÀ
()

1563 sig√d 
i
,
x
;

1564 sig√d 
n
;

1565 
o
,
m
;

1567 
x
=0; x<
TL_RES_LEN
; x++)

1569 
m
 = (1<<16Ë/ 
	`pow
(2, (
x
+1Ë* (
ENV_STEP
/4.0) / 8.0);

1570 
m
 = 
	`Êo‹
(m);

1575 
n
 = ()
m
;

1576 
n
 >>= 4;

1577 i‡(
n
&1)

1578 
n
 = (n>>1)+1;

1580 
n
 =Ç>>1;

1582 
n
 <<= 2;

1583 
é_èb
[ 
x
*2 + 0 ] = 
n
;

1584 
é_èb
[ 
x
*2 + 1 ] = -tl_tab[ x*2 + 0 ];

1586 
i
=1; i<13; i++)

1588 
é_èb
[ 
x
*2+0 + 
i
*2*
TL_RES_LEN
 ] =Ål_tab[ x*2+0 ]>>i;

1589 
é_èb
[ 
x
*2+1 + 
i
*2*
TL_RES_LEN
 ] = -tl_tab[ x*2+0 + i*2*TL_RES_LEN ];

1592 
	`logîr‹
("é %04i", 
x
);

1593 
i
=0; i<13; i++)

1594 
	`logîr‹
(", [%02i] %4x", 
i
*2, 
é_èb
[ 
x
*2 + i*2*
TL_RES_LEN
 ]);

1595 
	`logîr‹
("\n");

1598 
	}
}

1602 
	gi
=0; i<
	gSIN_LEN
; i++)

1605 
	gm
 = 
sö
–((
i
*2)+1Ë* 
M_PI
 / 
SIN_LEN
 );

1609 i‡(
	gm
>0.0)

1610 
	go
 = 8*
log
(1.0/
m
)/log(2);

1612 
	go
 = 8*
log
(-1.0/
m
)/log(2);

1614 
	go
 = 
o
 / (
ENV_STEP
/4);

1616 
	gn
 = ()(2.0*
o
);

1617 i‡(
	gn
&1)

1618 
	gn
 = (
n
>>1)+1;

1620 
	gn
 = 
n
>>1;

1622 
	gsö_èb
[ 
i
 ] = 
n
*2 + (
m
>=0.0? 0: 1 );

1630 
	gi
 = 0; i < 8; i++)

1632 
u8
 
	g‚um
;

1633 
	g‚um
=0; fnum<128; fnum++)

1635 
u8
 
	gvÆue
;

1636 
u8
 
	g°ï
;

1637 
u32
 
	goff£t_dïth
 = 
i
;

1638 
u32
 
	goff£t_‚um_bô
;

1639 
u32
 
	gbô_tmp
;

1641 
	g°ï
=0; step<8; step++)

1643 
	gvÆue
 = 0;

1644 
	gbô_tmp
=0; bit_tmp<7; bit_tmp++)

1646 i‡(
	g‚um
 & (1<<
	gbô_tmp
))

1648 
	goff£t_‚um_bô
 = 
bô_tmp
 * 8;

1649 
	gvÆue
 +
lfo_pm_ouçut
[
off£t_‚um_bô
 + 
off£t_dïth
][
°ï
];

1652 
	glfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+ 
°ï
 + 0] = 
vÆue
;

1653 
	glfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+(
°ï
^7)+ 8] = 
vÆue
;

1654 
	glfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+ 
°ï
 +16] = -
vÆue
;

1655 
	glfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+(
°ï
^7)+24] = -
vÆue
;

1658 
logîr‹
("LFO dïth=%1x FNUM=%04x (<<4=%4x): ", 
i
, 
‚um
, fnum<<4);

1659 
	g°ï
=0; step<16; step++)

1660 
logîr‹
("%02x ", 
lfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+ 
°ï
] );

1661 
logîr‹
("\n");

1671 
INLINE
 
	$CSMKeyC⁄åﬁl
(
FM_CH
 *
CH
)

1676 
	`FM_KEYON
(
CH
,
SLOT1
);

1677 
	`FM_KEYON
(
CH
,
SLOT2
);

1678 
	`FM_KEYON
(
CH
,
SLOT3
);

1679 
	`FM_KEYON
(
CH
,
SLOT4
);

1680 
	}
}

1686 
	$OPNSëPªs
(
FM_OPN
 *
OPN
 , 
¥es
 , 
TimîPªs
, 
SSG¥es
)

1688 
i
;

1691 
OPN
->
ST
.
‰eqba£
 = (OPN->ST.
øã
Ë? (()OPN->ST.
˛ock
 / OPN->ST.øãË/ 
¥es
 : 0;

1694 
OPN
->
ST
.
øã
 = ()OPN->ST.
˛ock
 / 
¥es
;

1695 
OPN
->
ST
.
‰eqba£
 = 1.0;

1698 
OPN
->
eg_timî_add
 = (1<<
EG_SH
Ë* OPN->
ST
.
‰eqba£
;

1699 
OPN
->
eg_timî_ovîÊow
 = ( 3 ) * (1<<
EG_SH
);

1703 
OPN
->
ST
.
TimîBa£
 = 1.0/(()OPN->ST.
˛ock
 / ()
TimîPªs
);

1704 
OPN
->
ST
.
TimîBa£f
 = (1.0/(()OPN->ST.
˛ock
 / ()
TimîPªs
))*(1<<
TIMER_SH
);

1707 i‡(
SSG¥es
Ë
SSG
->
°ï
 = (()
SSG_STEP
 * 
OPN
->
ST
.
øã
 * 8Ë/ (OPN->ST.
˛ock
 * 2 / SSGpres);

1710 
	`öô_timëabÀs
–&
OPN
->
ST
, 
dt_èb
 );

1715 
i
 = 0; i < 4096; i++)

1719 
OPN
->
‚_èbÀ
[
i
] = (
u32
)–()ò* 32 * OPN->
ST
.
‰eqba£
 * (1<<(
FREQ_SH
-10)) );

1721 
	`logîr‹
("FM.C: fn_table[%4i] = %08x (dec=%8i)\n",

1722 
i
, 
OPN
->
‚_èbÀ
[i]>>6,OPN->fn_table[i]>>6 );

1727 
i
 = 0; i < 8; i++)

1731 
OPN
->
lfo_‰eq
[
i
] = (1.0 / 
lfo_ßm∂es_≥r_°ï
[i]Ë* (1<<
LFO_SH
Ë* OPN->
ST
.
‰eqba£
;

1733 
	`logîr‹
("FM.C:Üfo_freq[%i] = %08x (dec=%8i)\n",

1734 
i
, 
OPN
->
lfo_‰eq
[i],OPN->lfo_freq[i] );

1737 
	}
}

1742 
	$OPNWrôeMode
(
FM_OPN
 *
OPN
, 
r
, 
v
)

1744 
u8
 
c
;

1745 
FM_CH
 *
CH
;

1747 
r
){

1751 i‡(
v
&0x08)

1753 
OPN
->
lfo_öc
 = OPN->
lfo_‰eq
[
v
&7];

1757 
OPN
->
lfo_öc
 = 0;

1761 
OPN
->
ST
.
TA
 = (OPN->ST.TA & 0x03)|((()
v
)<<2);

1764 
OPN
->
ST
.
TA
 = (OPN->ST.TA & 0x3fc)|(
v
&3);

1767 
OPN
->
ST
.
TB
 = 
v
;

1770 
	`£t_timîs
–&(
OPN
->
ST
),
v
 );

1773 
c
 = 
v
 & 0x03;

1774 if–
c
 == 3 ) ;

1775 if–
v
&0x04 ) 
c
+=3;

1776 
CH
 = 
OPN
->
P_CH
;

1777 
CH
 = &CH[
c
];

1778 if(
v
&0x10Ë
	`FM_KEYON
(
CH
,
SLOT1
); 
	`FM_KEYOFF
(CH,SLOT1);

1779 if(
v
&0x20Ë
	`FM_KEYON
(
CH
,
SLOT2
); 
	`FM_KEYOFF
(CH,SLOT2);

1780 if(
v
&0x40Ë
	`FM_KEYON
(
CH
,
SLOT3
); 
	`FM_KEYOFF
(CH,SLOT3);

1781 if(
v
&0x80Ë
	`FM_KEYON
(
CH
,
SLOT4
); 
	`FM_KEYOFF
(CH,SLOT4);

1784 
	}
}

1787 
	$OPNWrôeReg
(
FM_OPN
 *
OPN
, 
r
, 
v
)

1789 
FM_CH
 *
CH
;

1790 
FM_SLOT
 *
SLOT
;

1792 
u8
 
c
 = 
	`OPN_CHAN
(
r
);

1794 i‡(
c
 == 3) ;

1796 i‡(
r
 >0x100Ë
c
+=3;

1798 
CH
 = 
OPN
->
P_CH
;

1799 
CH
 = &CH[
c
];

1801 
SLOT
 = &(
CH
->SLOT[
	`OPN_SLOT
(
r
)]);

1803  
r
 & 0xf0 ) {

1805 
	`£t_dë_mul
(&
OPN
->
ST
,
CH
,
SLOT
,
v
);

1809 
	`£t_é
(
CH
,
SLOT
,
v
);

1813 
	`£t_¨_k§
(
CH
,
SLOT
,
v
);

1817 
	`£t_dr
(
SLOT
,
v
);

1818 
SLOT
->
AMmask
 = (
v
&0x80) ? ~0 : 0;

1822 
	`£t_§
(
SLOT
,
v
);

1826 
	`£t_¶_º
(
SLOT
,
v
);

1831 
SLOT
->
ssg
 = 
v
&0x0f;

1832 
SLOT
->
ssgn
 = (
v
&0x04)>>1;

1912  
	`OPN_SLOT
(
r
) ){

1915 
u32
 
‚
 = (((u32)–(
OPN
->
ST
.
‚_h
)&7))<<8Ë+ 
v
;

1916 
u8
 
blk
 = 
OPN
->
ST
.
‚_h
>>3;

1918 
CH
->
kcode
 = (
blk
<<2Ë| 
›n_fkèbÀ
[
‚
 >> 7];

1920 
CH
->
fc
 = 
OPN
->
‚_èbÀ
[
‚
*2]>>(7-
blk
);

1923 
CH
->
block_‚um
 = (
blk
<<11Ë| 
‚
;

1925 
CH
->
SLOT
[
SLOT1
].
In¸
=-1;

1929 
OPN
->
ST
.
‚_h
 = 
v
&0x3f;

1932 if(
r
 < 0x100)

1934 
u32
 
‚
 = (((u32)(
OPN
->
SL3
.
‚_h
&7))<<8Ë+ 
v
;

1935 
u8
 
blk
 = 
OPN
->
SL3
.
‚_h
>>3;

1937 
OPN
->
SL3
.
kcode
[
c
](
blk
<<2Ë| 
›n_fkèbÀ
[
‚
 >> 7];

1939 
OPN
->
SL3
.
fc
[
c
] = OPN->
‚_èbÀ
[
‚
*2]>>(7-
blk
);

1940 
OPN
->
SL3
.
block_‚um
[
c
] = 
‚
;

1941 (
OPN
->
P_CH
)[2].
SLOT
[
SLOT1
].
In¸
=-1;

1945 if(
r
 < 0x100)

1946 
OPN
->
SL3
.
‚_h
 = 
v
&0x3f;

1952  
	`OPN_SLOT
(
r
) ){

1955 
„edback
 = (
v
>>3)&7;

1956 
CH
->
ALGO
 = 
v
&7;

1957 
CH
->
FB
 = 
„edback
 ? feedback+6 : 0;

1958 
	`£tup_c⁄√˘i⁄
–
CH
, 
c
 );

1964 
CH
->
pms
 = (
v
 & 7) * 32;

1967 
CH
->
ams
 = 
lfo_ams_dïth_shi·
[(
v
>>4) & 0x03];

1970 
OPN
->
∑n
[ 
c
*2 ] = (
v
 & 0x80) ? ~0 : 0;

1971 
OPN
->
∑n
[ 
c
*2+1 ] = (
v
 & 0x40) ? ~0 : 0;

1978 
	}
}

1986 
	$SSGWrôeReg
(
r
, 
v
)

1988 
ﬁd
;

1990 
YM2610
->
ªgs
[
r
] = 
v
;

1992 
r
)

1997 
ch
 = 
r
 >> 1;

1999 
r
 &= ~1;

2000 
YM2610
->
ªgs
[
r
 + 1] &= 0x0f;

2001 
ﬁd
 = 
SSG
->
≥riod
[
ch
];

2002 
SSG
->
≥riod
[
ch
] = (
YM2610
->
ªgs
[
r
] + 256 * YM2610->ªgs[∏+ 1]Ë* SSG->
°ï
;

2003 i‡(
SSG
->
≥riod
[
ch
] =0ËSSG->≥riod[ch] = SSG->
°ï
;

2004 
SSG
->
cou¡
[
ch
] +SSG->
≥riod
[ch] - 
ﬁd
;

2005 i‡(
SSG
->
cou¡
[
ch
] <= 0) SSG->count[ch] = 1;

2010 
YM2610
->
ªgs
[
SSG_NOISEPER
] &= 0x1f;

2011 
ﬁd
 = 
SSG
->
PîiodN
;

2012 
SSG
->
PîiodN
 = 
YM2610
->
ªgs
[
SSG_NOISEPER
] * SSG->
°ï
;

2013 i‡(
SSG
->
PîiodN
 =0ËSSG->PîiodN = SSG->
°ï
;

2014 
SSG
->
Cou¡N
 +SSG->
PîiodN
 - 
ﬁd
;

2015 i‡(
SSG
->
Cou¡N
 <= 0) SSG->CountN = 1;

2019 
SSG
->
œ°E«bÀ
 = 
YM2610
->
ªgs
[
SSG_ENABLE
];

2024 
ch
 = 
r
 & 3;

2026 
YM2610
->
ªgs
[
r
] &= 0x1f;

2027 
SSG
->
ívñ›e
[
ch
] = 
YM2610
->
ªgs
[
r
] & 0x10;

2028 
SSG
->
vﬁ
[
ch
] = SSG->
ívñ›e
[ch] ? SSG->
VﬁE
 : SSG->
vﬁ_èbÀ
[
YM2610
->
ªgs
[
r
] ? YM2610->regs[r] * 2 + 1 : 0];

2032 
SSG_EFINE
:

2033 
SSG_ECOARSE
:

2034 
ﬁd
 = 
SSG
->
PîiodE
;

2035 
SSG
->
PîiodE
 = (
YM2610
->
ªgs
[
SSG_EFINE
] + 256 * YM2610->ªgs[
SSG_ECOARSE
]Ë* SSG->
°ï
;

2036 i‡(
SSG
->
PîiodE
 =0ËSSG->PîiodE = SSG->
°ï
 / 2;

2037 
SSG
->
Cou¡E
 +SSG->
PîiodE
 - 
ﬁd
;

2038 i‡(
SSG
->
Cou¡E
 <= 0) SSG->CountE = 1;

2041 
SSG_ESHAPE
:

2042 
YM2610
->
ªgs
[
SSG_ESHAPE
] &= 0x0f;

2043 
SSG
->
©èck
 = (
YM2610
->
ªgs
[
SSG_ESHAPE
] & 0x04) ? 0x1f : 0x00;

2044 i‡((
YM2610
->
ªgs
[
SSG_ESHAPE
] & 0x08) == 0)

2047 
SSG
->
hﬁd
 = 1;

2048 
SSG
->
Æã∫©e
 = SSG->
©èck
;

2052 
SSG
->
hﬁd
 = 
YM2610
->
ªgs
[
SSG_ESHAPE
] & 0x01;

2053 
SSG
->
Æã∫©e
 = 
YM2610
->
ªgs
[
SSG_ESHAPE
] & 0x02;

2055 
SSG
->
Cou¡E
 = SSG->
PîiodE
;

2056 
SSG
->
cou¡_ív
 = 0x1f;

2057 
SSG
->
hﬁdög
 = 0;

2058 
SSG
->
VﬁE
 = SSG->
vﬁ_èbÀ
[SSG->
cou¡_ív
 ^ SSG->
©èck
];

2059 i‡(
SSG
->
ívñ›e
[0]ËSSG->
vﬁ
[0] = SSG->
VﬁE
;

2060 i‡(
SSG
->
ívñ›e
[1]ËSSG->
vﬁ
[1] = SSG->
VﬁE
;

2061 i‡(
SSG
->
ívñ›e
[2]ËSSG->
vﬁ
[2] = SSG->
VﬁE
;

2064 
SSG_PORTA
:

2065 
SSG_PORTB
:

2068 
	}
}

2070 
	$SSG_ˇlc_cou¡
(
Àngth
)

2072 
i
;

2075 
i
 = 0; i < 3; i++)

2077 i‡(
YM2610
->
ªgs
[
SSG_ENABLE
] & (0x01 << 
i
))

2079 i‡(
SSG
->
cou¡
[
i
] <
Àngth
 * 
SSG_STEP
)

2080 
SSG
->
cou¡
[
i
] +
Àngth
 * 
SSG_STEP
;

2081 
SSG
->
ouçut
[
i
] = 1;

2083 i‡(
YM2610
->
ªgs
[0x08 + 
i
] == 0)

2085 i‡(
SSG
->
cou¡
[
i
] <
Àngth
 * 
SSG_STEP
)

2086 
SSG
->
cou¡
[
i
] +
Àngth
 * 
SSG_STEP
;

2092 i‡((
YM2610
->
ªgs
[
SSG_ENABLE
] & 0x38) == 0x38)

2094 i‡(
SSG
->
Cou¡N
 <
Àngth
 * 
SSG_STEP
)

2095 
SSG
->
Cou¡N
 +
Àngth
 * 
SSG_STEP
;

2098  (
SSG
->
OuçutN
 | 
YM2610
->
ªgs
[
SSG_ENABLE
]);

2099 
	}
}

2101 
	$SSG_CALC
(
ouä
)

2103 
ch
;

2104 
vﬁ
[3];

2105 
À·
;

2109 
vﬁ
[0] = vol[1] = vol[2] = 0;

2111 
À·
 = 
SSG_STEP
;

2115 
√xãvít
;

2117 
√xãvít
 = (
SSG
->
Cou¡N
 < 
À·
) ? SSG->CountN :Üeft;

2119 
ch
 = 0; ch < 3; ch++)

2121 i‡(
ouä
 & (0x08 << 
ch
))

2123 i‡(
SSG
->
ouçut
[
ch
]Ë
vﬁ
[ch] +SSG->
cou¡
[ch];

2124 
SSG
->
cou¡
[
ch
] -
√xãvít
;

2126 
SSG
->
cou¡
[
ch
] <= 0)

2128 
SSG
->
cou¡
[
ch
] +SSG->
≥riod
[ch];

2129 i‡(
SSG
->
cou¡
[
ch
] > 0)

2131 
SSG
->
ouçut
[
ch
] ^= 1;

2132 i‡(
SSG
->
ouçut
[
ch
]Ë
vﬁ
[ch] +SSG->
≥riod
[ch];

2135 
SSG
->
cou¡
[
ch
] +SSG->
≥riod
[ch];

2136 
vﬁ
[
ch
] +
SSG
->
≥riod
[ch];

2138 i‡(
SSG
->
ouçut
[
ch
]Ë
vﬁ
[ch] -SSG->
cou¡
[ch];

2142 
SSG
->
cou¡
[
ch
] -
√xãvít
;

2143 
SSG
->
cou¡
[
ch
] <= 0)

2145 
SSG
->
cou¡
[
ch
] +SSG->
≥riod
[ch];

2146 i‡(
SSG
->
cou¡
[
ch
] > 0)

2148 
SSG
->
ouçut
[
ch
] ^= 1;

2151 
SSG
->
cou¡
[
ch
] +SSG->
≥riod
[ch];

2156 
SSG
->
Cou¡N
 -
√xãvít
;

2157 i‡(
SSG
->
Cou¡N
 <= 0)

2160 i‡((
SSG
->
RNG
 + 1) & 2)

2162 
SSG
->
OuçutN
 = ~SSG->OutputN;

2163 
ouä
 = (
SSG
->
OuçutN
 | 
YM2610
->
ªgs
[
SSG_ENABLE
]);

2166 i‡(
SSG
->
RNG
 & 1) SSG->RNG ^= 0x24000;

2167 
SSG
->
RNG
 >>= 1;

2168 
SSG
->
Cou¡N
 +SSG->
PîiodN
;

2171 
À·
 -
√xãvít
;

2172 } 
À·
 > 0);

2175 i‡(
SSG
->
hﬁdög
 == 0)

2177 
SSG
->
Cou¡E
 -
SSG_STEP
;

2178 i‡(
SSG
->
Cou¡E
 <= 0)

2182 
SSG
->
cou¡_ív
--;

2183 
SSG
->
Cou¡E
 +SSG->
PîiodE
;

2184 } 
SSG
->
Cou¡E
 <= 0);

2187 i‡(
SSG
->
cou¡_ív
 < 0)

2189 i‡(
SSG
->
hﬁd
)

2191 i‡(
SSG
->
Æã∫©e
)

2192 
SSG
->
©èck
 ^= 0x1f;

2193 
SSG
->
hﬁdög
 = 1;

2194 
SSG
->
cou¡_ív
 = 0;

2200 i‡(
SSG
->
Æã∫©e
 && (SSG->
cou¡_ív
 & 0x20))

2201 
SSG
->
©èck
 ^= 0x1f;

2203 
SSG
->
cou¡_ív
 &= 0x1f;

2207 
SSG
->
VﬁE
 = SSG->
vﬁ_èbÀ
[SSG->
cou¡_ív
 ^ SSG->
©èck
];

2209 i‡(
SSG
->
ívñ›e
[0]ËSSG->
vﬁ
[0] = SSG->
VﬁE
;

2210 i‡(
SSG
->
ívñ›e
[1]ËSSG->
vﬁ
[1] = SSG->
VﬁE
;

2211 i‡(
SSG
->
ívñ›e
[2]ËSSG->
vﬁ
[2] = SSG->
VﬁE
;

2215 
out_ssg
 = (((
vﬁ
[0] * 
SSG
->vﬁ[0]Ë+ (vﬁ[1] * SSG->vﬁ[1]Ë+ (vﬁ[2] * SSG->vﬁ[2])Ë/ 
SSG_STEP
) / 3;

2217  
ouä
;

2218 
	}
}

2221 
	$SSG_öô_èbÀ
()

2223 
i
;

2224 
out
;

2230 
out
 = 
SSG_MAX_OUTPUT
;

2231 
i
 = 31; i > 0; i--)

2233 
SSG
->
vﬁ_èbÀ
[
i
] = 
out
 + 0.5;

2235 
out
 /= 1.188502227;

2237 
SSG
->
vﬁ_èbÀ
[0] = 0;

2238 
	}
}

2241 
	$SSG_ª£t
()

2243 
i
;

2245 
SSG
->
RNG
 = 1;

2246 
SSG
->
ouçut
[0] = 0;

2247 
SSG
->
ouçut
[1] = 0;

2248 
SSG
->
ouçut
[2] = 0;

2249 
SSG
->
OuçutN
 = 0xff;

2250 
SSG
->
œ°E«bÀ
 = -1;

2251 
i
 = 0; i < 
SSG_PORTA
; i++)

2253 
YM2610
->
ªgs
[
i
] = 0x00;

2254 
	`SSGWrôeReg
(
i
, 0x00);

2256 
	}
}

2259 
	$SSG_wrôe
(
r
, 
v
)

2261 
	`SSGWrôeReg
(
r
, 
v
);

2262 
	}
}

2268 
	#ADPCM_SHIFT
 (16Ë

	)

2269 
	#ADPCMA_ADDRESS_SHIFT
 8

	)

2271 
u8
 *
	gpcmbufA
;

2272 
u32
 
	gpcmsizeA
;

2278 
	g°ïs
[49] =

2290 
	g°ï_öc
[8] = { -1*16, -1*16, -1*16, -1*16, 2*16, 5*16, 7*16, 9*16 };

2293 
	gjedi_èbÀ
[ 49*16 ];

2296 
	$OPNB_ADPCMA_öô_èbÀ
()

2298 
°ï
, 
nib
;

2300 
°ï
 = 0; step < 49; step++)

2303 
nib
 = 0;Çib < 16;Çib++)

2305 
vÆue
 = (2 * (
nib
 & 0x07Ë+ 1Ë* 
°ïs
[
°ï
] / 8;

2306 
jedi_èbÀ
[
°ï
 * 16 + 
nib
] = (nib & 0x08Ë? -
vÆue
 : value;

2310 
	}
}

2313 
INLINE
 
	$OPNB_ADPCMA_ˇlc_ch™
(
ADPCMA
 *
ch
)

2315 
u32
 
°ï
;

2316 
u8
 
d©a
;

2319 
ch
->
now_°ï
 +ch->
°ï
;

2320 i‡(
ch
->
now_°ï
 >(1 << 
ADPCM_SHIFT
))

2322 
°ï
 = 
ch
->
now_°ï
 >> 
ADPCM_SHIFT
;

2323 
ch
->
now_°ï
 &(1 << 
ADPCM_SHIFT
) - 1;

2332 i‡((
ch
->
now_addr
 & ((1 << 21Ë- 1)Ë=((ch->
íd
 << 1) & ((1 << 21) - 1)))

2334 
ch
->
Êag
 = 0;

2335 
YM2610
->
adpcm_¨rivedEndAddªss
 |
ch
->
ÊagMask
;

2339 i‡(
ch
->
now_addr
 & 1)

2340 
d©a
 = 
ch
->
now_d©a
 & 0x0f;

2343 
ch
->
now_d©a
 = *(
pcmbufA
 + (ch->
now_addr
 >> 1));

2344 
d©a
 = (
ch
->
now_d©a
 >> 4) & 0x0f;

2347 
ch
->
now_addr
++;

2349 
ch
->
adpcma_acc
 +
jedi_èbÀ
[ch->
adpcma_°ï
 + 
d©a
];

2352 i‡(
ch
->
adpcma_acc
 & 0x800)

2353 
ch
->
adpcma_acc
 |= ~0xfff;

2355 
ch
->
adpcma_acc
 &= 0xfff;

2357 
ch
->
adpcma_°ï
 +
°ï_öc
[
d©a
 & 7];

2358 
	`Limô
(
ch
->
adpcma_°ï
, 48*16, 0*16);

2360 } --
°ï
);

2363 
ch
->
adpcma_out
 = (((
Söt16
)ch->
adpcma_acc
 * ch->
vﬁ_mul
Ë>> ch->
vﬁ_shi·
) & ~3;

2367 *
ch
->
∑n
 +ch->
adpcma_out
;

2368 
	}
}

2371 
	$OPNB_ADPCMA_wrôe
(
r
, 
v
)

2373 
ADPCMA
 *
adpcma
 = 
YM2610
->adpcma;

2374 
u8
 
c
 = 
r
 & 0x07;

2376 
YM2610
->
ªgs
[
r
] = 
v
 & 0xff;

2378 
r
)

2381 i‡(!(
v
 & 0x80))

2384 
c
 = 0; c < 6; c++)

2386 i‡((
v
 >> 
c
) & 1)

2389 
adpcma
[
c
].
°ï
 = (
u32
)(()(1 << 
ADPCM_SHIFT
Ë* (()
YM2610
->
OPN
.
ST
.
‰eqba£
) / 3.0);

2390 
adpcma
[
c
].
now_addr
 =ádpcma[c].
°¨t
 << 1;

2391 
adpcma
[
c
].
now_°ï
 = 0;

2392 
adpcma
[
c
].
adpcma_acc
 = 0;

2393 
adpcma
[
c
].
adpcma_°ï
 = 0;

2394 
adpcma
[
c
].
adpcma_out
 = 0;

2395 
adpcma
[
c
].
Êag
 = 1;

2397 i‡(
pcmbufA
 =
NULL
)

2401 
adpcma
[
c
].
Êag
 = 0;

2405 i‡(
adpcma
[
c
].
íd
 >
pcmsizeA
)

2411 i‡(
adpcma
[
c
].
°¨t
 >
pcmsizeA
)

2414 
adpcma
[
c
].
Êag
 = 0;

2423 
c
 = 0; c < 6; c++)

2424 i‡((
v
 >> 
c
) & 1)

2425 
adpcma
[
c
].
Êag
 = 0;

2430 
YM2610
->
adpcmaTL
 = (
v
 & 0x3f) ^ 0x3f;

2431 
c
 = 0; c < 6; c++)

2433 
vﬁume
 = 
YM2610
->
adpcmaTL
 + 
adpcma
[
c
].
IL
;

2435 i‡(
vﬁume
 >= 63)

2437 
adpcma
[
c
].
vﬁ_mul
 = 0;

2438 
adpcma
[
c
].
vﬁ_shi·
 = 0;

2442 
adpcma
[
c
].
vﬁ_mul
 = 15 - (
vﬁume
 & 7);

2443 
adpcma
[
c
].
vﬁ_shi·
 = 1 + (
vﬁume
 >> 3);

2447 
adpcma
[
c
].
adpcma_out
 = (◊dpcma[c].
adpcma_acc
 *ádpcma[c].
vﬁ_mul
Ë>>ádpcma[c].
vﬁ_shi·
) & ~3;

2452 
c
 = 
r
 & 0x07;

2453 i‡(
c
 >= 0x06) ;

2454 
r
 & 0x138)

2458 
vﬁume
;

2460 
adpcma
[
c
].
IL
 = (
v
 & 0x1f) ^ 0x1f;

2462 
vﬁume
 = 
YM2610
->
adpcmaTL
 + 
adpcma
[
c
].
IL
;

2464 i‡(
vﬁume
 >= 63)

2466 
adpcma
[
c
].
vﬁ_mul
 = 0;

2467 
adpcma
[
c
].
vﬁ_shi·
 = 0;

2471 
adpcma
[
c
].
vﬁ_mul
 = 15 - (
vﬁume
 & 7);

2472 
adpcma
[
c
].
vﬁ_shi·
 = 1 + (
vﬁume
 >> 3);

2475 
adpcma
[
c
].
∑n
 = &
out_adpcma
[(
v
 >> 6) & 0x03];

2478 
adpcma
[
c
].
adpcma_out
 = (◊dpcma[c].
adpcma_acc
 *ádpcma[c].
vﬁ_mul
Ë>>ádpcma[c].
vﬁ_shi·
) & ~3;

2484 
adpcma
[
c
].
°¨t
 = ((
YM2610
->
ªgs
[0x118 + c] << 8Ë| YM2610->ªgs[0x110 + c]Ë<< 
ADPCMA_ADDRESS_SHIFT
;

2489 
adpcma
[
c
].
íd
 = ((
YM2610
->
ªgs
[0x128 + c] << 8Ë| YM2610->ªgs[0x120 + c]Ë<< 
ADPCMA_ADDRESS_SHIFT
;

2490 
adpcma
[
c
].
íd
 +(1 << 
ADPCMA_ADDRESS_SHIFT
) - 1;

2494 
	}
}

2500 
	#ADPCMB_DELTA_MAX
 (24576)

	)

2501 
	#ADPCMB_DELTA_MIN
 (127)

	)

2502 
	#ADPCMB_DELTA_DEF
 (127)

	)

2504 
	#ADPCMB_DECODE_RANGE
 32768

	)

2505 
	#ADPCMB_DECODE_MIN
 (-(
ADPCMB_DECODE_RANGE
))

	)

2506 
	#ADPCMB_DECODE_MAX
 ((
ADPCMB_DECODE_RANGE
)-1)

	)

2508 
u8
 *
	gpcmbufB
;

2509 
u32
 
	gpcmsizeB
;

2513 c⁄° 
s32
 
	gadpcmb_decode_èbÀ1
[16] =

2520 c⁄° 
s32
 
	gadpcmb_decode_èbÀ2
[16] =

2527 
u8
 
	gdøm_rightshi·
[4]={3,0,0,0};

2530 
	$OPNB_ADPCMB_wrôe
(
ADPCMB
 *
adpcmb
, 
r
, 
v
)

2532 i‡(
r
 >= 0x20) ;

2534 
YM2610
->
ªgs
[
r
] = 
v
;

2536 
r
)

2572 
v
 |= 0x20;

2573 
adpcmb
->
p‹t°©e
 = 
v
 & (0x80|0x40|0x20|0x10|0x01);

2575 i‡(
adpcmb
->
p‹t°©e
 & 0x80)

2578 
adpcmb
->
PCM_BSY
 = 1;

2581 
adpcmb
->
now_°ï
 = 0;

2582 
adpcmb
->
acc
 = 0;

2583 
adpcmb
->
¥ev_acc
 = 0;

2584 
adpcmb
->
adpcml
 = 0;

2585 
adpcmb
->
adpcmd
 = 
ADPCMB_DELTA_DEF
;

2586 
adpcmb
->
now_d©a
 = 0;

2591 
adpcmb
->
now_addr
 =ádpcmb->
°¨t
 << 1;

2592 
adpcmb
->
memªad
 = 2;

2595 i‡(!
pcmbufB
)

2598 
adpcmb
->
p‹t°©e
 = 0x00;

2599 
adpcmb
->
PCM_BSY
 = 0;

2603 i‡(
adpcmb
->
íd
 >
pcmsizeB
)

2606 
adpcmb
->
íd
 = 
pcmsizeB
 - 1;

2608 i‡(
adpcmb
->
°¨t
 >
pcmsizeB
)

2611 
adpcmb
->
p‹t°©e
 = 0x00;

2612 
adpcmb
->
PCM_BSY
 = 0;

2619 
adpcmb
->
now_addr
 = 0;

2623 i‡(
adpcmb
->
p‹t°©e
 & 0x01)

2625 
adpcmb
->
p‹t°©e
 = 0x00;

2628 
adpcmb
->
PCM_BSY
 = 0;

2631 i‡(
adpcmb
->
°©us_ch™ge_BRDY_bô
)

2632 
YM2610
->
adpcm_¨rivedEndAddªss
 |
adpcmb
->
°©us_ch™ge_BRDY_bô
;

2637 
v
 |= 0x01;

2638 
adpcmb
->
∑n
 = &
out_dñè
[(
v
 >> 6) & 0x03];

2639 i‡((
adpcmb
->
c⁄åﬁ2
 & 3Ë!(
v
 & 3))

2642 i‡(
adpcmb
->
DRAMp‹tshi·
 !
døm_rightshi·
[
v
 & 3])

2644 
adpcmb
->
DRAMp‹tshi·
 = 
døm_rightshi·
[
v
 & 3];

2654 
adpcmb
->
°¨t
 = ((
YM2610
->
ªgs
[0x13] << 8Ë| YM2610->ªgs[0x12]Ë<<ádpcmb->
p‹tshi·
;

2655 
adpcmb
->
íd
 = ((
YM2610
->
ªgs
[0x15] << 8Ë| YM2610->ªgs[0x14]Ë<<ádpcmb->
p‹tshi·
;

2656 
adpcmb
->
íd
 +(1 <<ádpcmb->
p‹tshi·
) - 1;

2657 
adpcmb
->
limô
 = ((
YM2610
->
ªgs
[0x1d] << 8Ë| YM2610->ªgs[0x1c]Ë<<ádpcmb->
p‹tshi·
;

2660 
adpcmb
->
c⁄åﬁ2
 = 
v
;

2665 
adpcmb
->
°¨t
 = ((
YM2610
->
ªgs
[0x13] << 8Ë| YM2610->ªgs[0x12]Ë<<ádpcmb->
p‹tshi·
;

2671 
adpcmb
->
íd
 = ((
YM2610
->
ªgs
[0x15] << 8Ë| YM2610->ªgs[0x14]Ë<<ádpcmb->
p‹tshi·
;

2672 
adpcmb
->
íd
 +(1 <<ádpcmb->
p‹tshi·
) - 1;

2678 
adpcmb
->
dñè
 = (
YM2610
->
ªgs
[0x1a] << 8) | YM2610->regs[0x19];

2679 
adpcmb
->
°ï
 = (
u32
)(()◊dpcmb->
dñè
 ) * (adpcmb->
‰eqba£
));

2685 
s32
 
ﬁdvﬁ
 = 
adpcmb
->
vﬁume
;

2686 
adpcmb
->
vﬁume
 = (
v
 & 0xffË* (adpcmb->
ouçut_ønge
 / 256Ë/ 
ADPCMB_DECODE_RANGE
;

2693 i‡(
ﬁdvﬁ
 != 0)

2695 
adpcmb
->
adpcml
 = ()((Ôdpcmb->adpcm»/ ()
ﬁdvﬁ
 * (Ôdpcmb->
vﬁume
);

2700 
	}
}

2703 
INLINE
 
	$OPNB_ADPCMB_CALC
(
ADPCMB
 *
adpcmb
)

2705 
u32
 
°ï
;

2706 
d©a
;

2708 
adpcmb
->
now_°ï
 +adpcmb->
°ï
;

2709 i‡(
adpcmb
->
now_°ï
 >(1 << 
ADPCM_SHIFT
))

2711 
°ï
 = 
adpcmb
->
now_°ï
 >> 
ADPCM_SHIFT
;

2712 
adpcmb
->
now_°ï
 &(1 << 
ADPCM_SHIFT
) - 1;

2715 i‡(
adpcmb
->
now_addr
 =◊dpcmb->
limô
 << 1))

2716 
adpcmb
->
now_addr
 = 0;

2718 i‡(
adpcmb
->
now_addr
 =◊dpcmb->
íd
 << 1))

2721 i‡(
adpcmb
->
p‹t°©e
 & 0x10)

2724 
adpcmb
->
now_addr
 =ádpcmb->
°¨t
 << 1;

2725 
adpcmb
->
acc
 = 0;

2726 
adpcmb
->
adpcmd
 = 
ADPCMB_DELTA_DEF
;

2727 
adpcmb
->
¥ev_acc
 = 0;

2732 i‡(
adpcmb
->
°©us_ch™ge_EOS_bô
)

2733 
YM2610
->
adpcm_¨rivedEndAddªss
 |
adpcmb
->
°©us_ch™ge_EOS_bô
;

2736 
adpcmb
->
PCM_BSY
 = 0;

2738 
adpcmb
->
p‹t°©e
 = 0;

2739 
adpcmb
->
adpcml
 = 0;

2740 
adpcmb
->
¥ev_acc
 = 0;

2744 i‡(
adpcmb
->
now_addr
 & 1)

2746 
d©a
 = 
adpcmb
->
now_d©a
 & 0x0f;

2750 
adpcmb
->
now_d©a
 = *(
pcmbufB
 + (adpcmb->
now_addr
 >> 1));

2751 
d©a
 = 
adpcmb
->
now_d©a
 >> 4;

2754 
adpcmb
->
now_addr
++;

2760 
adpcmb
->
now_addr
 &= ((1 << (24 + 1)) - 1);

2763 
adpcmb
->
¥ev_acc
 =ádpcmb->
acc
;

2766 
adpcmb
->
acc
 +(
adpcmb_decode_èbÀ1
[
d©a
] *ádpcmb->
adpcmd
 / 8);

2767 
	`Limô
(
adpcmb
->
acc
, 
ADPCMB_DECODE_MAX
, 
ADPCMB_DECODE_MIN
);

2770 
adpcmb
->
adpcmd
 = (adpcmb->adpcmd * 
adpcmb_decode_èbÀ2
[
d©a
]) / 64;

2771 
	`Limô
(
adpcmb
->
adpcmd
, 
ADPCMB_DELTA_MAX
, 
ADPCMB_DELTA_MIN
);

2776 } --
°ï
);

2782 
adpcmb
->
adpcml
 =ádpcmb->
¥ev_acc
 * ()((1 << 
ADPCM_SHIFT
Ë-ádpcmb->
now_°ï
);

2783 
adpcmb
->
adpcml
 +◊dpcmb->
acc
 * (Ôdpcmb->
now_°ï
);

2784 
adpcmb
->
adpcml
 = (adpcmb->adpcm»>> 
ADPCM_SHIFT
Ë* (Ôdpcmb->
vﬁume
;

2786 
adpcmb
->
adpcml
 = (◊dpcmb->
acc
 * (Ôdpcmb->
now_°ï
Ë>> 
ADPCM_SHIFT
)* (Ôdpcmb->
vﬁume
;;

2790 *
adpcmb
->
∑n
 +adpcmb->
adpcml
;

2791 
	}
}

2798 #ifde‡
SOUND_TEST


2799 
	g°ªam_pos
;

2800 
	gßm∂es_À·
;

2803 
	$YM2610Inô
(
˛ock
, 
øã
,

2804 *
pcmroma
, 
pcmsizó
,

2805 *
pcmromb
, 
pcmsizeb
,

2806 
FM_TIMERHANDLER
 
TimîH™dÀr
, 
FM_IRQHANDLER
 
IRQH™dÀr
)

2820 
YM2610
=(
ym2610_t
*)0x1900000;

2822 
SSG
=(
SSG_t
*)0x1A00000;

2823 
	`mem£t
(
YM2610
, 0, (
ym2610_t
));

2824 
	`mem£t
(
SSG
, 0, (
SSG_t
));

2826 
	`OPNInôTabÀ
();

2827 
	`SSG_öô_èbÀ
();

2828 
	`OPNB_ADPCMA_öô_èbÀ
();

2831 
YM2610
->
OPN
.
P_CH
 = YM2610->
CH
;

2832 
YM2610
->
OPN
.
ST
.
˛ock
 = clock;

2833 
YM2610
->
OPN
.
ST
.
øã
 =Ñate;

2835 
YM2610
->
OPN
.
ST
.
Timî_H™dÀr
 = 
TimîH™dÀr
;

2836 
YM2610
->
OPN
.
ST
.
IRQ_H™dÀr
 = 
IRQH™dÀr
;

2839 
SSG
->
°ï
 = (()
SSG_STEP
 * (
øã
/2Ë* 8Ë/ 
˛ock
;

2841 
pcmbufA
 = (
u8
 *)
pcmroma
;

2842 
pcmsizeA
 = 
pcmsizó
;

2844 
pcmbufB
 = (
u8
 *)
pcmromb
;

2845 
pcmsizeB
 = 
pcmsizeb
;

2847 
YM2610
->
adpcmb
.
°©us_ch™ge_EOS_bô
 = 0x80;

2849 
	`YM2610Re£t
();

2850 
	}
}

2853 
	$YM2610Re£t
()

2855 
i
;

2856 
FM_OPN
 *
OPN
 = &
YM2610
->OPN;

2859 
	`OPNSëPªs
(
OPN
, 6*24, 6*24, 4*2);

2861 
	`SSG_ª£t
();

2863 
	`FM_IRQMASK_SET
(&
OPN
->
ST
, 0x03);

2864 
	`FM_BUSY_CLEAR
(&
OPN
->
ST
);

2865 
	`OPNWrôeMode
(
OPN
, 0x27, 0x30);

2867 
OPN
->
eg_timî
 = 0;

2868 
OPN
->
eg_˙t
 = 0;

2870 
	`FM_STATUS_RESET
(&
OPN
->
ST
, 0xff);

2872 
	`ª£t_ch™√ls
(&
OPN
->
ST
, 
YM2610
->
CH
, 6);

2874 
i
 = 0xb6; i >= 0xb4; i--)

2876 
	`OPNWrôeReg
(
OPN
, 
i
 , 0xc0);

2877 
	`OPNWrôeReg
(
OPN
, 
i
|0x100, 0xc0);

2879 
i
 = 0xb2; i >= 0x30; i--)

2881 
	`OPNWrôeReg
(
OPN
, 
i
 , 0x00);

2882 
	`OPNWrôeReg
(
OPN
, 
i
|0x100, 0x00);

2884 
i
 = 0x26; i >= 0x20; i--)

2886 
	`OPNWrôeReg
(
OPN
, 
i
, 0x00);

2889 
i
 = 0; i < 6; i++)

2891 
YM2610
->
adpcma
[
i
].
°ï
 = (
u32
)(()(1 << 
ADPCM_SHIFT
Ë* (()YM2610->
OPN
.
ST
.
‰eqba£
) / 3.0);

2892 
YM2610
->
adpcma
[
i
].
now_addr
 = 0;

2893 
YM2610
->
adpcma
[
i
].
now_°ï
 = 0;

2894 
YM2610
->
adpcma
[
i
].
°¨t
 = 0;

2895 
YM2610
->
adpcma
[
i
].
íd
 = 0;

2896 
YM2610
->
adpcma
[
i
].
vﬁ_mul
 = 0;

2897 
YM2610
->
adpcma
[
i
].
∑n
 = &
out_adpcma
[
OUTD_CENTER
];

2898 
YM2610
->
adpcma
[
i
].
ÊagMask
 = 1 << i;

2899 
YM2610
->
adpcma
[
i
].
Êag
 = 0;

2900 
YM2610
->
adpcma
[
i
].
adpcma_acc
 = 0;

2901 
YM2610
->
adpcma
[
i
].
adpcma_°ï
 = 0;

2902 
YM2610
->
adpcma
[
i
].
adpcma_out
 = 0;

2904 
YM2610
->
adpcmaTL
 = 0x3f;

2906 
YM2610
->
adpcm_¨rivedEndAddªss
 = 0;

2909 
YM2610
->
adpcmb
.
‰eqba£
 = 
OPN
->
ST
.freqbase;

2910 
YM2610
->
adpcmb
.
p‹tshi·
 = 8;

2911 
YM2610
->
adpcmb
.
ouçut_ønge
 = 1 << 23;

2913 
YM2610
->
adpcmb
.
now_addr
 = 0;

2914 
YM2610
->
adpcmb
.
now_°ï
 = 0;

2915 
YM2610
->
adpcmb
.
°ï
 = 0;

2916 
YM2610
->
adpcmb
.
°¨t
 = 0;

2917 
YM2610
->
adpcmb
.
íd
 = 0;

2918 
YM2610
->
adpcmb
.
limô
 = ~0;

2919 
YM2610
->
adpcmb
.
vﬁume
 = 0;

2920 
YM2610
->
adpcmb
.
∑n
 = &
out_dñè
[
OUTD_CENTER
];

2921 
YM2610
->
adpcmb
.
acc
 = 0;

2922 
YM2610
->
adpcmb
.
¥ev_acc
 = 0;

2923 
YM2610
->
adpcmb
.
adpcmd
 = 127;

2924 
YM2610
->
adpcmb
.
adpcml
 = 0;

2925 
YM2610
->
adpcmb
.
p‹t°©e
 = 0x20;

2926 
YM2610
->
adpcmb
.
c⁄åﬁ2
 = 0x01;

2932 i‡(
YM2610
->
adpcmb
.
°©us_ch™ge_BRDY_bô
)

2933 
YM2610
->
adpcm_¨rivedEndAddªss
 |YM2610->
adpcmb
.
°©us_ch™ge_BRDY_bô
;

2935 #ifde‡
SOUND_TEST


2936 
°ªam_pos
 = 0;

2937 
ßm∂es_À·
 = 0;

2939 
	}
}

2944 
	$YM2610Wrôe
(
a
, 
u8
 
v
)

2946 
FM_OPN
 *
OPN
 = &
YM2610
->OPN;

2947 
addr
;

2948 
ch
;

2950 
v
 &= 0xff;

2952 
a
 & 3)

2955 
OPN
->
ST
.
addªss
 = 
v
;

2956 
YM2610
->
addr_A1
 = 0;

2963 i‡(
YM2610
->
addr_A1
 != 0)

2966 
	`YM2610Upd©eReque°
();

2967 
addr
 = 
OPN
->
ST
.
addªss
;

2968 
YM2610
->
ªgs
[
addr
] = 
v
;

2969 
addr
 & 0xf0)

2973 
	`SSG_wrôe
(
addr
, 
v
);

2977 
addr
)

2989 
	`OPNB_ADPCMB_wrôe
(&
YM2610
->
adpcmb
, 
addr
, 
v
);

2994 
u8
 
°©usmask
 = ~
v
;

2996 
ch
 = 0; ch < 6; ch++)

2997 
YM2610
->
adpcma
[
ch
].
ÊagMask
 = 
°©usmask
 & (1 << ch);

2999 
YM2610
->
adpcmb
.
°©us_ch™ge_EOS_bô
 = 
°©usmask
 & 0x80;

3002 
YM2610
->
adpcm_¨rivedEndAddªss
 &
°©usmask
;

3009 
	`OPNWrôeMode
(
OPN
, 
addr
, 
v
);

3014 
	`OPNWrôeReg
(
OPN
, 
addr
, 
v
);

3020 
OPN
->
ST
.
addªss
 = 
v
;

3021 
YM2610
->
addr_A1
 = 1;

3025 i‡(
YM2610
->
addr_A1
 != 1)

3028 
	`YM2610Upd©eReque°
();

3029 
addr
 = 
YM2610
->
OPN
.
ST
.
addªss
 | 0x100;

3030 
YM2610
->
ªgs
[
addr
 | 0x100] = 
v
;

3031 i‡(
addr
 < 0x130)

3033 
	`OPNB_ADPCMA_wrôe
(
addr
, 
v
);

3035 
	`OPNWrôeReg
(
OPN
, 
addr
, 
v
);

3039  
OPN
->
ST
.
úq
;

3040 
	}
}

3043 
u8
 
	$YM2610Ród
(
a
)

3045 
addr
 = 
YM2610
->
OPN
.
ST
.
addªss
;

3047 
a
 & 3)

3050  
	`FM_STATUS_FLAG
(&
YM2610
->
OPN
.
ST
) & 0x83;

3053 i‡(
addr
 < 
SSG_PORTA
Ë 
YM2610
->
ªgs
[addr];

3054 i‡(
addr
 == 0xff)  0x01;

3062  
YM2610
->
adpcm_¨rivedEndAddªss
;

3065 
	}
}

3068 
	$YM2610TimîOvî
(
ch
)

3070 
FM_ST
 *
ST
 = &
YM2610
->
OPN
.ST;

3072 i‡(
ch
)

3075 
	`TimîBOvî
(
ST
);

3081 
	`YM2610Upd©eReque°
();

3084 
	`TimîAOvî
(
ST
);

3087 i‡(
ST
->
mode
 & 0x80)

3090 
	`CSMKeyC⁄åﬁl
(&
YM2610
->
CH
[2]);

3094  
ST
->
úq
;

3095 
	}
}

3100 
Uöt32
 
	gbuf_pos
=0;

3103 
	$YM2610Upd©e_°ªam
(
Àngth
)

3105 
FM_OPN
 *
OPN
 = &
YM2610
->OPN;

3106 
i
, 
j
, 
ouä
;

3107 
FMSAMPLE_MIX
 
…
, 
π
;

3108 
FM_CH
 *
cch
[6];

3109 
Uöt16
 *
∂
 = (
Uöt8
*)
sh¨ed_˘l
->
∂ay_buf„r
+
buf_pos
;

3110 
sh¨ed_˘l
->
buf_pos
=buf_pos;

3111 
sh¨ed_˘l
->
ßm∂e_Àn
=
Àngth
*4;

3113 
cch
[0] = &
YM2610
->
CH
[1];

3114 
cch
[1] = &
YM2610
->
CH
[2];

3115 
cch
[2] = &
YM2610
->
CH
[4];

3116 
cch
[3] = &
YM2610
->
CH
[5];

3119 
	`ª‰esh_fc_eg_ch™
(
cch
[0]);

3120 i‡(
OPN
->
ST
.
mode
 & 0xc0)

3123 i‡(
cch
[1]->
SLOT
[
SLOT1
].
In¸
 == -1)

3126 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT1
], 
OPN
->
SL3
.
fc
[1], OPN->SL3.
kcode
[1]);

3127 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT2
], 
OPN
->
SL3
.
fc
[2], OPN->SL3.
kcode
[2]);

3128 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT3
], 
OPN
->
SL3
.
fc
[0], OPN->SL3.
kcode
[0]);

3129 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT4
], cch[1]->
fc
, cch[1]->
kcode
);

3133 
	`ª‰esh_fc_eg_ch™
(
cch
[1]);

3134 
	`ª‰esh_fc_eg_ch™
(
cch
[2]);

3135 
	`ª‰esh_fc_eg_ch™
(
cch
[3]);

3138 
ouä
 = 
	`SSG_ˇlc_cou¡
(
Àngth
);

3143 
i
 = 0; i < 
Àngth
; i++)

3146 
	`adv™˚_lfo
(
OPN
);

3150 
out_adpcma
[
OUTD_LEFT
] = out_adpcma[
OUTD_RIGHT
]out_adpcma[
OUTD_CENTER
] = 0;

3151 
out_dñè
[
OUTD_LEFT
] = out_dñè[
OUTD_RIGHT
]out_dñè[
OUTD_CENTER
] = 0;

3154 
out_fm
[1] = 0;

3155 
out_fm
[2] = 0;

3156 
out_fm
[4] = 0;

3157 
out_fm
[5] = 0;

3160 
out_ssg
 = 0;

3163 
OPN
->
eg_timî
 +OPN->
eg_timî_add
;

3164 
OPN
->
eg_timî
 >OPN->
eg_timî_ovîÊow
)

3166 
OPN
->
eg_timî
 -OPN->
eg_timî_ovîÊow
;

3167 
OPN
->
eg_˙t
++;

3169 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[0]->
SLOT
[
SLOT1
]);

3170 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[1]->
SLOT
[
SLOT1
]);

3171 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[2]->
SLOT
[
SLOT1
]);

3172 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[3]->
SLOT
[
SLOT1
]);

3179 
	`ch™_ˇlc
(
OPN
, 
cch
[0]);

3180 
	`ch™_ˇlc
(
OPN
, 
cch
[1]);

3181 
	`ch™_ˇlc
(
OPN
, 
cch
[2]);

3182 
	`ch™_ˇlc
(
OPN
, 
cch
[3]);

3186 i‡(
i
&0x1Ë
ouä
 = 
	`SSG_CALC
(outn);

3190 i‡(
YM2610
->
adpcmb
.
p‹t°©e
 & 0x80)

3191 
	`OPNB_ADPCMB_CALC
(&
YM2610
->
adpcmb
);

3193 
j
 = 0; j < 6; j++)

3196 i‡(
YM2610
->
adpcma
[
j
].
Êag
)

3197 
	`OPNB_ADPCMA_ˇlc_ch™
(&
YM2610
->
adpcma
[
j
]);

3200 
…
 = 
out_adpcma
[
OUTD_LEFT
] + out_adpcma[
OUTD_CENTER
];

3201 
π
 = 
out_adpcma
[
OUTD_RIGHT
] + out_adpcma[
OUTD_CENTER
];

3203 
…
 +(
out_dñè
[
OUTD_LEFT
] + out_dñè[
OUTD_CENTER
])>>9;

3204 
π
 +(
out_dñè
[
OUTD_RIGHT
] + out_dñè[
OUTD_CENTER
])>>9;

3206 
…
 +
out_ssg
;

3207 
π
 +
out_ssg
;

3209 
…
 +((
out_fm
[1]>>1Ë& 
OPN
->
∑n
[2]);

3210 
π
 +((
out_fm
[1]>>1Ë& 
OPN
->
∑n
[3]);

3211 
…
 +((
out_fm
[2]>>1Ë& 
OPN
->
∑n
[4]);

3212 
π
 +((
out_fm
[2]>>1Ë& 
OPN
->
∑n
[5]);

3214 
…
 +((
out_fm
[4]>>1Ë& 
OPN
->
∑n
[8]);

3215 
π
 +((
out_fm
[4]>>1Ë& 
OPN
->
∑n
[9]);

3216 
…
 +((
out_fm
[5]>>1Ë& 
OPN
->
∑n
[10]);

3217 
π
 +((
out_fm
[5]>>1Ë& 
OPN
->
∑n
[11]);

3219 
…
 <<= 1;

3220 
π
 <<= 1;

3222 
	`Limô
(
…
, 
MAXOUT
, 
MINOUT
);

3223 
	`Limô
(
π
, 
MAXOUT
, 
MINOUT
);

3228 
buf_pos
+=4;

3229 i‡(
buf_pos
>
SAMPLE_BUFLEN
) {

3230 
buf_pos
=0;

3231 
∂
 = (
Uöt16
*)
sh¨ed_˘l
->
∂ay_buf„r
;

3233 *
∂
++ = 
…
;

3234 *
∂
++ = 
π
;

3237 
	`INTERNAL_TIMER_A
–
OPN
->
ST
 , 
cch
[1] );

3239 
	`INTERNAL_TIMER_B
(
OPN
->
ST
,
Àngth
);

3240 
	}
}

3243 #ifde‡
SOUND_TEST


3244 
	g°ªam_pos
;

3245 
	gßm∂es_À·
;

3247 
	$YM2610Upd©e_SoundTe°
(
p
)

3249 
i
, 
Àngth
;

3250 
s16
 *
buf„r
 = (s16 *)
p
;

3252 
Àngth
 = 
SOUND_SAMPLES
;

3254 i‡(
ßm∂es_À·
)

3256 
i
 = 0; i < 
ßm∂es_À·
; i++)

3258 *
buf„r
++ = 
mixög_buf„r
[0][
°ªam_pos
];

3259 *
buf„r
++ = 
mixög_buf„r
[1][
°ªam_pos
];

3260 
°ªam_pos
++;

3261 
Àngth
--;

3265 
√xt_‰ame
:

3266 
	`timî_upd©e_sub˝u
();

3267 
	`YM2610Upd©e_°ªam
(736);

3268 
ßm∂es_À·
 = 736;

3269 
°ªam_pos
 = 0;

3271 
i
 = 0; i < 736; i++)

3273 *
buf„r
++ = 
mixög_buf„r
[0][
°ªam_pos
];

3274 *
buf„r
++ = 
mixög_buf„r
[1][
°ªam_pos
];

3275 
°ªam_pos
++;

3276 
ßm∂es_À·
--;

3278 i‡(--
Àngth
 == 0) ;

3280 i‡(
Àngth
Ë
√xt_‰ame
;

3281 
	}
}

3285 #ifde‡
SAVE_STATE


3287 
	$STATE_SAVE
–
ym2610
 )

3289 
¶Ÿ
, 
ch
;

3291 
	`°©e_ßve_byã
(
YM2610
->
ªgs
, 512);

3293 
	`°©e_ßve_doubÀ
(&
YM2610
->
OPN
.
ST
.
BusyExpúe
, 1);

3294 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
addªss
, 1);

3295 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
úq
, 1);

3296 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
úqmask
, 1);

3297 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
°©us
, 1);

3298 
	`°©e_ßve_l⁄g
(&
YM2610
->
OPN
.
ST
.
mode
, 1);

3299 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
¥esˇÀr_£l
, 1);

3300 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
‚_h
, 1);

3301 
	`°©e_ßve_l⁄g
(&
YM2610
->
OPN
.
ST
.
TA
, 1);

3302 
	`°©e_ßve_l⁄g
(&
YM2610
->
OPN
.
ST
.
TAC
, 1);

3303 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
ST
.
TB
, 1);

3304 
	`°©e_ßve_l⁄g
(&
YM2610
->
OPN
.
ST
.
TBC
, 1);

3306 
ch
 = 0; ch < 6; ch++)

3308 
	`°©e_ßve_l⁄g
(
YM2610
->
CH
[
ch
].
›1_out
, 2);

3309 
	`°©e_ßve_l⁄g
(&
YM2610
->
CH
[
ch
].
fc
, 1);

3311 
¶Ÿ
 = 0; slot < 4; slot++)

3313 
FM_SLOT
 *
SLOT
 = &
YM2610
->
CH
[
ch
].SLOT[
¶Ÿ
];

3315 
	`°©e_ßve_l⁄g
(&
SLOT
->
pha£
, 1);

3316 
	`°©e_ßve_byã
(&
SLOT
->
°©e
, 1);

3317 
	`°©e_ßve_l⁄g
(&
SLOT
->
vﬁume
, 1);

3321 
	`°©e_ßve_l⁄g
(
YM2610
->
OPN
.
SL3
.
fc
, 3);

3322 
	`°©e_ßve_byã
(&
YM2610
->
OPN
.
SL3
.
‚_h
, 1);

3323 
	`°©e_ßve_byã
(
YM2610
->
OPN
.
SL3
.
kcode
, 3);

3325 
	`°©e_ßve_byã
(&
YM2610
->
addr_A1
, 1);

3326 
	`°©e_ßve_byã
(&
YM2610
->
adpcm_¨rivedEndAddªss
, 1);

3328 
ch
 = 0; ch < 6; ch++)

3330 
	`°©e_ßve_byã
(&
YM2610
->
adpcma
[
ch
].
Êag
, 1);

3331 
	`°©e_ßve_byã
(&
YM2610
->
adpcma
[
ch
].
now_d©a
, 1);

3332 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcma
[
ch
].
now_addr
, 1);

3333 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcma
[
ch
].
now_°ï
, 1);

3334 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_acc
, 1);

3335 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_°ï
, 1);

3336 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_out
, 1);

3339 
	`°©e_ßve_byã
(&
YM2610
->
adpcmb
.
p‹t°©e
, 1);

3340 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
now_addr
, 1);

3341 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
now_°ï
, 1);

3342 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
acc
, 1);

3343 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
¥ev_acc
, 1);

3344 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
adpcmd
, 1);

3345 
	`°©e_ßve_l⁄g
(&
YM2610
->
adpcmb
.
adpcml
, 1);

3347 
	`°©e_ßve_l⁄g
(&
›ti⁄_ßm∂î©e
, 1);

3348 
	}
}

3350 
	$STATE_LOAD
–
ym2610
 )

3352 
¶Ÿ
, 
ch
, 
r
;

3354 
	`°©e_lﬂd_byã
(
YM2610
->
ªgs
, 512);

3356 
	`°©e_lﬂd_doubÀ
(&
YM2610
->
OPN
.
ST
.
BusyExpúe
, 1);

3357 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
addªss
, 1);

3358 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
úq
, 1);

3359 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
úqmask
, 1);

3360 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
°©us
, 1);

3361 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
OPN
.
ST
.
mode
, 1);

3362 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
¥esˇÀr_£l
, 1);

3363 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
‚_h
, 1);

3364 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
OPN
.
ST
.
TA
, 1);

3365 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
OPN
.
ST
.
TAC
, 1);

3366 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
ST
.
TB
, 1);

3367 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
OPN
.
ST
.
TBC
, 1);

3369 
ch
 = 0; ch < 6; ch++)

3371 
	`°©e_lﬂd_l⁄g
(
YM2610
->
CH
[
ch
].
›1_out
, 2);

3372 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
CH
[
ch
].
fc
, 1);

3374 
¶Ÿ
 = 0; slot < 4; slot++)

3376 
FM_SLOT
 *
SLOT
 = &
YM2610
->
CH
[
ch
].SLOT[
¶Ÿ
];

3378 
	`°©e_lﬂd_l⁄g
(&
SLOT
->
pha£
, 1);

3379 
	`°©e_lﬂd_byã
(&
SLOT
->
°©e
, 1);

3380 
	`°©e_lﬂd_l⁄g
(&
SLOT
->
vﬁume
, 1);

3384 
	`°©e_lﬂd_l⁄g
(
YM2610
->
OPN
.
SL3
.
fc
, 3);

3385 
	`°©e_lﬂd_byã
(&
YM2610
->
OPN
.
SL3
.
‚_h
, 1);

3386 
	`°©e_lﬂd_byã
(
YM2610
->
OPN
.
SL3
.
kcode
, 3);

3388 
	`°©e_lﬂd_byã
(&
YM2610
->
addr_A1
, 1);

3389 
	`°©e_lﬂd_byã
(&
YM2610
->
adpcm_¨rivedEndAddªss
, 1);

3391 
ch
 = 0; ch < 6; ch++)

3393 
	`°©e_lﬂd_byã
(&
YM2610
->
adpcma
[
ch
].
Êag
, 1);

3394 
	`°©e_lﬂd_byã
(&
YM2610
->
adpcma
[
ch
].
now_d©a
, 1);

3395 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcma
[
ch
].
now_addr
, 1);

3396 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcma
[
ch
].
now_°ï
, 1);

3397 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_acc
, 1);

3398 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_°ï
, 1);

3399 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcma
[
ch
].
adpcma_out
, 1);

3402 
	`°©e_lﬂd_byã
(&
YM2610
->
adpcmb
.
p‹t°©e
, 1);

3403 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
now_addr
, 1);

3404 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
now_°ï
, 1);

3405 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
acc
, 1);

3406 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
¥ev_acc
, 1);

3407 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
adpcmd
, 1);

3408 
	`°©e_lﬂd_l⁄g
(&
YM2610
->
adpcmb
.
adpcml
, 1);

3410 
	`°©e_lﬂd_l⁄g
(&
›ti⁄_ßm∂î©e
, 1);

3412 
r
 = 0;Ñ < 16;Ñ++)

3414 
	`SSG_wrôe
(0, 
r
);

3415 
	`SSG_wrôe
(1, 
YM2610
->
ªgs
[
r
]);

3418 
r
 = 0x30;Ñ <0x9e;Ñ++)

3420 i‡((
r
 & 3) != 3)

3422 
	`OPNWrôeReg
(&
YM2610
->
OPN
, 
r
, YM2610->
ªgs
[r]);

3423 
	`OPNWrôeReg
(&
YM2610
->
OPN
, 
r
 | 0x100, YM2610->
ªgs
[r | 0x100]);

3427 
r
 = 0xb0;Ñ < 0xb6;Ñ++)

3429 i‡((
r
 & 3) != 3)

3431 
	`OPNWrôeReg
(&
YM2610
->
OPN
, 
r
, YM2610->
ªgs
[r]);

3432 
	`OPNWrôeReg
(&
YM2610
->
OPN
, 
r
 | 0x100, YM2610->
ªgs
[r | 0x100]);

3436 
	`OPNB_ADPCMA_wrôe
(0x101, 
YM2610
->
ªgs
[0x101]);

3437 
r
 = 0;Ñ < 6;Ñ++)

3439 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x108, 
YM2610
->
ªgs
[r + 0x108]);

3440 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x110, 
YM2610
->
ªgs
[r + 0x110]);

3441 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x118, 
YM2610
->
ªgs
[r + 0x118]);

3442 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x120, 
YM2610
->
ªgs
[r + 0x120]);

3443 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x128, 
YM2610
->
ªgs
[r + 0x128]);

3446 
YM2610
->
adpcmb
.
vﬁume
 = 0;

3448 
r
 = 1;Ñ < 16;Ñ++)

3449 
	`OPNB_ADPCMB_wrôe
(&
YM2610
->
adpcmb
, 
r
 + 0x10, YM2610->
ªgs
[r + 0x10]);

3451 i‡(
pcmbufB
)

3452 
YM2610
->
adpcmb
.
now_d©a
 = *(
pcmbufB
 + (YM2610->adpcmb.
now_addr
 >> 1));

3453 
	}
}

	@src/ym2610-940/ym2610.h

9 #i‚de‡
_YM2610_H_


10 
	#_YM2610_H_


	)

12 
	~"mvs.h
"

13 
	~"timî.h
"

18 
	#FM_GET_TIME_NOW
(Ë
	`timî_gë_time
()

	)

20 
s16
 
	tFMSAMPLE
;

21 
s32
 
	tFMSAMPLE_MIX
;

22 
	#TIMER_SH
 16

	)

24 (*
	tFM_TIMERHANDLER
)(
	tch™√l
, 
	tcou¡
, 
	t°ïTime
);

26 (*
	tFM_IRQHANDLER
)(
	túq
);

28 
	`YM2610Inô
(
ba£˛ock
, 
øã
,

29 *
pcmroma
, 
pcmsizó
,

30 *
pcmromb
, 
pcmsizeb
,

31 
FM_TIMERHANDLER
 
TimîH™dÀr
,

32 
FM_IRQHANDLER
 
IRQH™dÀr
);

34 
	`YM2610Re£t
();

35 
	`YM2610Wrôe
(
addr
, 
u8
 
vÆue
);

36 
u8
 
	`YM2610Ród
(
addr
);

37 
	`YM2610TimîOvî
(
ch™√l
);

39 
	`YM2610Upd©e_°ªam
(
Àngth
);

40 
	`YM2610Upd©e
(
p
);

41 #ifde‡
SOUND_TEST


42 
	`YM2610Upd©e_SoundTe°
(
p
);

45 #ifde‡
SAVE_STATE


46 
	`STATE_SAVE
–
ym2610
 );

47 
	`STATE_LOAD
–
ym2610
 );

	@src/ym2610/2610intf.c

14 #ifde‡
HAVE_CONFIG_H


15 
	~<c⁄fig.h
>

18 
	~<°dio.h
>

19 
	~"2610ötf.h
"

20 
	~"../emu.h
"

21 
	~"../mem‹y.h
"

22 
	~"../timî.h
"

24 
timî_°ru˘
 *
	gTimî
[2];

36 
	$timî_ˇŒback_2610
(
∑øm
)

38 
c
 = 
∑øm
;

40 
Timî
[
c
] = 0;

41 
	`YM2610TimîOvî
(
c
);

42 
	}
}

45 
	$TimîH™dÀr
(
c
, 
cou¡
, 
°ïTime
)

49 i‡(
cou¡
 == 0) {

50 i‡(
Timî
[
c
]) {

51 
	`dñ_timî
(
Timî
[
c
]);

52 
Timî
[
c
] = 0;

55 
timeSec
 = (Ë
cou¡
 * 
°ïTime
;

58 i‡(
Timî
[
c
] == 0) {

59 
Timî
[
c
] =

60 (
timî_°ru˘
 *Ë
	`ö£π_timî
(
timeSec
, 
c
,

61 
timî_ˇŒback_2610
);

64 
	}
}

65 
	$FMTimîInô
()

67 
Timî
[0] = Timer[1] = 0;

68 
	`‰ì_Æl_timî
();

69 
	}
}

72 
	$YM2610Upd©eReque°
()

74 
ﬁd_tc
;

76 
tc
=
timî_cou¡
-
ﬁd_tc
;

78 
Àn
=()((
c⁄f
.
ßm∂e_øã
*
tc
)>>
TIMER_SH
)<<2;

79 i‡(
Àn
 >4 ) {

80 
ﬁd_tc
=
timî_cou¡
;

81 
	`°ªamupd©e
(
Àn
);

83 
	}
}

86 
	$YM2610_sh_°¨t
() {

87 
øã
 = 
c⁄f
.
ßm∂e_øã
;

88 *
pcmbuÁ
, *
pcmbufb
;

89 
pcmsizó
, 
pcmsizeb
;

92 
	`FMTimîInô
();

94 
pcmbuÁ
 = (*Ë
mem‹y
.
rom
.
adpcma
.
p
;

95 
pcmsizó
 = 
mem‹y
.
rom
.
adpcma
.
size
;

96 
pcmbufb
 = (*Ë
mem‹y
.
rom
.
adpcmb
.
p
;

97 
pcmsizeb
 = 
mem‹y
.
rom
.
adpcmb
.
size
;

100 
	`YM2610Inô
(8000000, 
øã
, 
pcmbuÁ
, 
pcmsizó
, 
pcmbufb
, 
pcmsizeb
,

101 
TimîH™dÀr
, 
√ogeo_sound_úq
);

103 
	}
}

109 
	$YM2610_sh_°›
()

111 
	}
}

114 
	$YM2610_sh_ª£t
()

117 
	`YM2610Re£t
();

118 
	}
}

123 
Uöt32
 
	$YM2610_°©us_p‹t_A_r
(
Uöt32
 
off£t
)

125  
	`YM2610Ród
(0);

126 
	}
}

128 
Uöt32
 
	$YM2610_°©us_p‹t_B_r
(
Uöt32
 
off£t
)

130  
	`YM2610Ród
(2);

131 
	}
}

136 
Uöt32
 
	$YM2610_ªad_p‹t_r
(
Uöt32
 
off£t
)

138  
	`YM2610Ród
(1);

139 
	}
}

146 
	$YM2610_c⁄åﬁ_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

148 
	`YM2610Wrôe
(0, 
d©a
);

149 
	}
}

151 
	$YM2610_c⁄åﬁ_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

153 
	`YM2610Wrôe
(2, 
d©a
);

154 
	}
}

160 
	$YM2610_d©a_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

162 
	`YM2610Wrôe
(1, 
d©a
);

163 
	}
}

165 
	$YM2610_d©a_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
)

167 
	`YM2610Wrôe
(3, 
d©a
);

168 
	}
}

	@src/ym2610/2610intf.h

1 #i‚de‡
__2610INTF_H__


2 
	#__2610INTF_H__


	)

4 #ifde‡
HAVE_CONFIG_H


5 
	~<c⁄fig.h
>

8 
	~"ym2610.h
"

10 
	#YM2610Upd©eReque°
()

	)

15 
YM2610_sh_°¨t
();

20 
YM2610_sh_°›
();

22 
YM2610_sh_ª£t
();

23 
timî_ˇŒback_2610
(
∑øm
);

28 
Uöt32
 
YM2610_°©us_p‹t_A_r
(Uöt32 
off£t
);

29 
Uöt32
 
YM2610_°©us_p‹t_B_r
(Uöt32 
off£t
);

30 
Uöt32
 
YM2610_ªad_p‹t_r
(Uöt32 
off£t
);

31 
YM2610_c⁄åﬁ_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

32 
YM2610_c⁄åﬁ_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

33 
YM2610_d©a_p‹t_A_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

34 
YM2610_d©a_p‹t_B_w
(
Uöt32
 
off£t
, Uöt32 
d©a
);

	@src/ym2610/mvs.h

1 #i‚de‡
_MVS_H_


2 
	#_MVS_H_


	)

4 
	~"SDL.h
"

16 
	#s8
 
Söt8


	)

17 
	#s16
 
Söt16


	)

18 
	#s32
 
Söt32


	)

20 
	#u8
 
Uöt8


	)

21 
	#u16
 
Uöt16


	)

22 
	#u32
 
Uöt32


	)

24 
	#ALIGN_DATA


	)

25 #i‚de‡
INLINE


26 
	#INLINE
 
__ölöe__


	)

28 
	#SOUND_SAMPLES
 512

	)

30 
	#Limô
(
vÆ
, 
max
, 
mö
) \

32 i‡(
vÆ
 > 
max
) val = max; \

33 i‡(
vÆ
 < 
mö
) val = min; \

34 }

	)

	@src/ym2610/ym2610.c

104 #ifde‡
HAVE_CONFIG_H


105 
	~"c⁄fig.h
"

108 
	~<°dio.h
>

109 
	~<°dlib.h
>

110 
	~<°rög.h
>

111 
	~<°d¨g.h
>

112 
	~<m©h.h
>

114 
	~"mvs.h
"

115 
	~"../°©e.h
"

116 
	~"2610ötf.h
"

117 
	~"ym2610.h
"

119 #i‚de‡
PI


120 
	#PI
 3.14159265358979323846

	)

124 
	#FM_INTERNAL_TIMER
 0

	)

128 
	#FM_BUSY_FLAG_SUPPORT
 1

	)

132 
	#FREQ_SH
 16

	)

133 
	#EG_SH
 16

	)

134 
	#LFO_SH
 24

	)

135 
	#TIMER_SH
 16

	)

137 
	#FREQ_MASK
 ((1<<
FREQ_SH
)-1)

	)

139 
	#ENV_BITS
 10

	)

140 
	#ENV_LEN
 (1<<
ENV_BITS
)

	)

141 
	#ENV_STEP
 (128.0/
ENV_LEN
)

	)

143 
	#MAX_ATT_INDEX
 (
ENV_LEN
-1Ë

	)

144 
	#MIN_ATT_INDEX
 (0Ë

	)

146 
	#EG_ATT
 4

	)

147 
	#EG_DEC
 3

	)

148 
	#EG_SUS
 2

	)

149 
	#EG_REL
 1

	)

150 
	#EG_OFF
 0

	)

152 
	#SIN_BITS
 10

	)

153 
	#SIN_LEN
 (1<<
SIN_BITS
)

	)

154 
	#SIN_MASK
 (
SIN_LEN
-1)

	)

156 
	#TL_RES_LEN
 (256Ë

	)

158 
	#FINAL_SH
 (0)

	)

159 
	#MAXOUT
 (+32767)

	)

160 
	#MINOUT
 (-32768)

	)

167 
	#TL_TAB_LEN
 (13*2*
TL_RES_LEN
)

	)

168 sig√d 
ALIGN_DATA
 
	gé_èb
[
TL_TAB_LEN
];

170 
	#ENV_QUIET
 (
TL_TAB_LEN
>>3)

	)

173 
ALIGN_DATA
 
	gsö_èb
[
SIN_LEN
];

181 
	#SC
(
db
Ë(
u32
Ë–db * (4.0/
ENV_STEP
Ë)

	)

182 c⁄° 
u32
 
ALIGN_DATA
 
	g¶_èbÀ
[16] = { 
SC
( 0), SC( 1), SC( 2), SC(3 ),

183 
SC
(4 ), SC(5 ), SC(6 ), SC( 7), SC( 8), SC( 9), SC(10), SC(11),

184 
SC
(12), SC(13), SC(14), SC(31) };

185 #unde‡
SC


187 
	#RATE_STEPS
 (8)

	)

188 c⁄° 
u8
 
ALIGN_DATA
 
	geg_öc
[19 * 
RATE_STEPS
] = {

217 
	#O
(
a
Ë◊*
RATE_STEPS
)

	)

220 c⁄° 
u8
 
ALIGN_DATA
 
	geg_øã_£À˘
[32+64+32]={

221  
O
(18), O(18), O(18), O(18), O(18), O(18), O(18),

222 
O
(18), O(18), O(18), O(18), O(18), O(18), O(18), O(18), O(18),

223 
O
(18), O(18), O(18), O(18), O(18), O(18), O(18), O(18), O(18),

224 
O
(18), O(18), O(18), O(18), O(18), O(18), O(18),

226  
O
( 0), O( 1), O( 2), O( 3), O( 0), O( 1), O( 2), O( 3),

227 
O
( 0), O( 1), O( 2), O( 3), O( 0), O( 1), O( 2), O( 3), O( 0),

228 
O
( 1), O( 2), O( 3), O( 0), O( 1), O( 2), O( 3), O( 0), O( 1),

229 
O
( 2), O( 3), O( 0), O( 1), O( 2), O( 3), O( 0), O( 1), O( 2),

230 
O
( 3), O( 0), O( 1), O( 2), O( 3), O( 0), O( 1), O( 2), O( 3),

231 
O
( 0), O( 1), O( 2), O( 3),

233  
O
( 4), O( 5), O( 6), O( 7),

235  
O
( 8), O( 9), O(10), O(11),

237  
O
(12), O(13), O(14), O(15),

239  
O
(16), O(16), O(16), O(16),

241  
O
(16), O(16), O(16), O(16), O(16),

242 
O
(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16),

243 
O
(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16),

244 
O
(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16), O(16)

247 #unde‡
O


253 
	#O
(
a
Ë◊*1)

	)

254 c⁄° 
u8
 
ALIGN_DATA
 
	geg_øã_shi·
[32+64+32]={

255  
O
(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0),

256 
O
(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0),

257 
O
(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0), O(0),

258 
O
(0), O(0),

260  
O
(11), O(11), O(11), O(11), O(10), O(10), O(10), O(10),

261 
O
( 9), O( 9), O( 9), O( 9), O( 8), O( 8), O( 8), O( 8), O( 7),

262 
O
( 7), O( 7), O( 7), O( 6), O( 6), O( 6), O( 6), O( 5), O( 5),

263 
O
( 5), O( 5), O( 4), O( 4), O( 4), O( 4), O( 3), O( 3), O( 3),

264 
O
( 3), O( 2), O( 2), O( 2), O( 2), O( 1), O( 1), O( 1), O( 1),

265 
O
( 0), O( 0), O( 0), O( 0),

267  
O
( 0), O( 0), O( 0), O( 0),

269  
O
( 0), O( 0), O( 0), O( 0),

271  
O
( 0), O( 0), O( 0), O( 0),

273  
O
( 0), O( 0), O( 0), O( 0),

275  
O
( 0), O( 0), O( 0), O( 0), O( 0),

276 
O
( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0),

277 
O
( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0),

278 
O
( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0), O( 0)

281 #unde‡
O


283 c⁄° 
u8
 
ALIGN_DATA
 
	gdt_èb
[4 * 32] = {

300 c⁄° 
u8
 
ALIGN_DATA
 
	g›n_fkèbÀ
[16] = { 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3,

305 c⁄° 
u32
 
ALIGN_DATA
 
	glfo_ßm∂es_≥r_°ï
[8] = { 108, 77, 71, 67, 62, 44,

325 c⁄° 
u8
 
	glfo_ams_dïth_shi·
[4] = { 8, 3, 1, 0 };

347 c⁄° 
u8
 
ALIGN_DATA
 
	glfo_pm_ouçut
[7 * 8][8] = {

421 
s32
 
ALIGN_DATA
 
	glfo_pm_èbÀ
[128 * 8 * 32];

427 
	#SSG_MAX_OUTPUT
 0x7fff

	)

428 
	#SSG_STEP
 0x8000

	)

431 
	#SSG_AFINE
 (0)

	)

432 
	#SSG_ACOARSE
 (1)

	)

433 
	#SSG_BFINE
 (2)

	)

434 
	#SSG_BCOARSE
 (3)

	)

435 
	#SSG_CFINE
 (4)

	)

436 
	#SSG_CCOARSE
 (5)

	)

437 
	#SSG_NOISEPER
 (6)

	)

438 
	#SSG_ENABLE
 (7)

	)

439 
	#SSG_AVOL
 (8)

	)

440 
	#SSG_BVOL
 (9)

	)

441 
	#SSG_CVOL
 (10)

	)

442 
	#SSG_EFINE
 (11)

	)

443 
	#SSG_ECOARSE
 (12)

	)

444 
	#SSG_ESHAPE
 (13)

	)

446 
	#SSG_PORTA
 (14)

	)

447 
	#SSG_PORTB
 (15)

	)

450 
	#OPN_CHAN
(
N
Ë(N&3)

	)

451 
	#OPN_SLOT
(
N
Ë((N>>2)&3)

	)

454 
	#SLOT1
 0

	)

455 
	#SLOT2
 2

	)

456 
	#SLOT3
 1

	)

457 
	#SLOT4
 3

	)

460 
	#OUTD_RIGHT
 1

	)

461 
	#OUTD_LEFT
 2

	)

462 
	#OUTD_CENTER
 3

	)

466 
s32
 *
	mDT
;

467 
u8
 
	mKSR
;

468 
u32
 
	m¨
;

469 
u32
 
	md1r
;

470 
u32
 
	md2r
;

471 
u32
 
	mº
;

472 
u8
 
	mk§
;

473 
u32
 
	mmul
;

474  
u32
 
	mpha£
;

475 
u32
 
	mIn¸
;

476  
u8
 
	m°©e
;

477 
u32
 
	mé
;

478 
s32
 
	mvﬁume
;

479 
u32
 
	m¶
;

480 
u32
 
	mvﬁ_out
;

481 
u8
 
	meg_sh_¨
;

482 
u8
 
	meg_£l_¨
;

483 
u8
 
	meg_sh_d1r
;

484 
u8
 
	meg_£l_d1r
;

485 
u8
 
	meg_sh_d2r
;

486 
u8
 
	meg_£l_d2r
;

487 
u8
 
	meg_sh_º
;

488 
u8
 
	meg_£l_º
;

489 
u8
 
	mssg
;

490 
u8
 
	mssgn
;

491 
u32
 
	mkey
;

492  
u32
 
	mAMmask
;

494 } 
	tFM_SLOT
;

497 
FM_SLOT
 
	mSLOT
[4];

498 
u8
 
	mALGO
;

499 
u8
 
	mFB
;

500 
s32
 
	m›1_out
[2];

501 
s32
 *
	mc⁄√˘1
;

502 
s32
 *
	mc⁄√˘3
;

503 
s32
 *
	mc⁄√˘2
;

504 
s32
 *
	mc⁄√˘4
;

505 
s32
 *
	mmem_c⁄√˘
;

506 
s32
 
	mmem_vÆue
;

507 
s32
 
	mpms
;

508 
u8
 
	mams
;

509 
u32
 
	mfc
;

510 
u8
 
	mkcode
;

511 
u32
 
	mblock_‚um
;

512 } 
	tFM_CH
;

515 
	m˛ock
;

516 
	møã
;

517 
	m‰eqba£
;

518 
	mTimîBa£
;

519 #i‡
FM_BUSY_FLAG_SUPPORT


520 
	mBusyExpúe
;

522 
u8
 
	maddªss
;

523 
u8
 
	múq
;

524 
u8
 
	múqmask
;

525 
u8
 
	m°©us
;

526 
u32
 
	mmode
;

527 
u8
 
	m¥esˇÀr_£l
;

528 
u8
 
	m‚_h
;

529 
s32
 
	mTA
;

530 
s32
 
	mTAC
;

531 
u8
 
	mTB
;

532 
s32
 
	mTBC
;

533  
s32
 
	mdt_èb
[8][32];

535 
FM_TIMERHANDLER
 
	mTimî_H™dÀr
;

536 
FM_IRQHANDLER
 
	mIRQ_H™dÀr
;

537 } 
	tFM_ST
;

541 
u32
 
	mfc
[3];

542 
u8
 
	m‚_h
;

543 
u8
 
	mkcode
[3];

544 
u32
 
	mblock_‚um
[3];

545 } 
	tFM_3SLOT
;

549 
FM_ST
 
	mST
;

550 
FM_3SLOT
 
	mSL3
;

551 
FM_CH
 *
	mP_CH
;

552 
	m∑n
[6 * 2];

553 
u32
 
	meg_˙t
;

554 
u32
 
	meg_timî
;

555 
u32
 
	meg_timî_add
;

556 
u32
 
	meg_timî_ovîÊow
;

558  
u32
 
	m‚_èbÀ
[4096];

559  
u32
 
	mlfo_˙t
;

560 
u32
 
	mlfo_öc
;

561 
u32
 
	mlfo_‰eq
[8];

562 } 
	tFM_OPN
;

565 
	sSSG_t
 {

566 
	mœ°E«bÀ
;

567 
u32
 
	m°ï
;

568 
	m≥riod
[3];

569 
	mPîiodN
;

570 
	mPîiodE
;

571 
	mcou¡
[3];

572 
	mCou¡N
;

573 
	mCou¡E
;

574 
u32
 
	mvﬁ
[3];

575 
u32
 
	mVﬁE
;

576 
u8
 
	mívñ›e
[3];

577 
u8
 
	mouçut
[3];

578 
u8
 
	mOuçutN
;

579 
s8
 
	mcou¡_ív
;

580 
u8
 
	mhﬁd
;

581 
u8
 
	mÆã∫©e
;

582 
u8
 
	m©èck
;

583 
u8
 
	mhﬁdög
;

584 
	mRNG
;

585 
u32
 
	mvﬁ_èbÀ
[32];

586 } 
	gSSG
;

590 
u8
 
	mÊag
;

591 
u8
 
	mÊagMask
;

592 
u8
 
	mnow_d©a
;

593 
u32
 
	mnow_addr
;

594 
u32
 
	mnow_°ï
;

595 
u32
 
	m°ï
;

596 
u32
 
	m°¨t
;

597 
u32
 
	míd
;

598 
u8
 
	mIL
;

599 
s32
 
	madpcma_acc
;

600 
s32
 
	madpcma_°ï
;

601 
s32
 
	madpcma_out
;

602 
s8
 
	mvﬁ_mul
;

603 
u8
 
	mvﬁ_shi·
;

604 
s32
 *
	m∑n
;

605 } 
	tADPCMA
;

608 
	sadpcmb_°©e
 {

609 
s32
 *
	m∑n
;

610 
	m‰eqba£
;

611 
	mouçut_ønge
;

612 
u32
 
	mnow_addr
;

613 
u32
 
	mnow_°ï
;

614 
u32
 
	m°ï
;

615 
u32
 
	m°¨t
;

616 
u32
 
	mlimô
;

617 
u32
 
	míd
;

618 
u32
 
	mdñè
;

619 
s32
 
	mvﬁume
;

620 
s32
 
	macc
;

621 
s32
 
	madpcmd
;

622 
s32
 
	madpcml
;

623 
s32
 
	m¥ev_acc
;

624 
u8
 
	mnow_d©a
;

625 
u8
 
	mCPU_d©a
;

626 
u8
 
	mp‹t°©e
;

627 
u8
 
	mc⁄åﬁ2
;

628 
u8
 
	mp‹tshi·
;

631 
u8
 
	mDRAMp‹tshi·
;

634 
u8
 
	mmemªad
;

637  
u8
 
	m°©us_ch™ge_EOS_bô
;

638 
u8
 
	m°©us_ch™ge_BRDY_bô
;

641  
u8
 
	mPCM_BSY
;

643 } 
	tADPCMB
;

646 
	sym2610_t
 {

647 
u8
 
	mªgs
[512];

648 
FM_OPN
 
	mOPN
;

649 
FM_CH
 
	mCH
[6];

650 
u8
 
	maddr_A1
;

651  
u8
 
	madpcmaTL
;

652 
ADPCMA
 
	madpcma
[6];

653 
u8
 
	madpcm_¨rivedEndAddªss
;

656 
ADPCMB
 
	madpcmb
;

658 }
ALIGN_DATA
 
	gYM2610
;

661 
s32
 
	gm2
, 
	gc1
, 
	gc2
;

662 
s32
 
	gmem
;

664 
s32
 
ALIGN_DATA
 
	gout_fm
[8];

665 
s32
 
	gout_ssg
;

666 
s32
 
ALIGN_DATA
 
	gout_adpcma
[4];

667 
s32
 
ALIGN_DATA
 
	gout_dñè
[4];

669 
u32
 
	gLFO_AM
;

670 
s32
 
	gLFO_PM
;

673 
	#LOG_ERR
 3

	)

674 
	#LOG_WAR
 2

	)

675 
	#LOG_INF
 1

	)

676 
	#LOG_LEVEL
 
LOG_INF


	)

678 
	#LOG
(
n
,
x
Ëif–“)>=
LOG_LEVEL
 ) 
logîr‹
 
	)
x

682  
INLINE
 
	$FM_STATUS_SET
(
FM_ST
 *
ST
, 
Êag
) {

684 
ST
->
°©us
 |
Êag
;

685 i‡(!(
ST
->
úq
Ë&& (ST->
°©us
 & ST->
úqmask
)) {

686 
ST
->
úq
 = 1;

688 (
ST
->
IRQ_H™dÀr
)(1);

690 
	}
}

692  
INLINE
 
	$FM_STATUS_RESET
(
FM_ST
 *
ST
,

693 
Êag
) {

695 
ST
->
°©us
 &~
Êag
;

696 i‡((
ST
->
úq
Ë&& !(ST->
°©us
 & ST->
úqmask
)) {

697 
ST
->
úq
 = 0;

699 (
ST
->
IRQ_H™dÀr
)(0);

701 
	}
}

703  
INLINE
 
	$FM_IRQMASK_SET
(
FM_ST
 *
ST
, 
Êag
) {

704 
ST
->
úqmask
 = 
Êag
;

706 
	`FM_STATUS_SET
(
ST
, 0);

707 
	`FM_STATUS_RESET
(
ST
, 0);

708 
	}
}

710  
INLINE
 
	$£t_timîs
(
FM_ST
 *
ST
, 
v
) {

719 
ST
->
mode
 = 
v
;

722 i‡(
v
 & 0x20)

723 
	`FM_STATUS_RESET
(
ST
, 0x02);

725 i‡(
v
 & 0x10)

726 
	`FM_STATUS_RESET
(
ST
, 0x01);

728 i‡(
v
 & 0x02) {

729 i‡(
ST
->
TBC
 == 0) {

730 
ST
->
TBC
 = (256 - ST->
TB
) << 4;

732 #i‡
FM_INTERNAL_TIMER
==0

733 (
ST
->
Timî_H™dÀr
)(1, ST->
TBC
, ST->
TimîBa£
);

737 i‡(
ST
->
TBC
 != 0) {

738 
ST
->
TBC
 = 0;

739 #i‡
FM_INTERNAL_TIMER
==0

740 (
ST
->
Timî_H™dÀr
)(1, 0, ST->
TimîBa£
);

745 i‡(
v
 & 0x01) {

746 i‡(
ST
->
TAC
 == 0) {

747 
ST
->
TAC
 = (1024 - ST->
TA
);

749 #i‡
FM_INTERNAL_TIMER
==0

750 (
ST
->
Timî_H™dÀr
)(0, ST->
TAC
, ST->
TimîBa£
);

754 i‡(
ST
->
TAC
 != 0) {

755 
ST
->
TAC
 = 0;

756 #i‡
FM_INTERNAL_TIMER
==0

757 (
ST
->
Timî_H™dÀr
)(0, 0, ST->
TimîBa£
);

761 
	}
}

763  
INLINE
 
	$TimîAOvî
(
FM_ST
 *
ST
) {

765 i‡(
ST
->
mode
 & 0x04)

766 
	`FM_STATUS_SET
(
ST
, 0x01);

768 
ST
->
TAC
 = (1024 - ST->
TA
);

769 #i‡
FM_INTERNAL_TIMER
==0

770 (
ST
->
Timî_H™dÀr
)(0, ST->
TAC
, ST->
TimîBa£
);

772 
	}
}

773  
INLINE
 
	$TimîBOvî
(
FM_ST
 *
ST
) {

775 i‡(
ST
->
mode
 & 0x08)

776 
	`FM_STATUS_SET
(
ST
, 0x02);

778 
ST
->
TBC
 = (256 - ST->
TB
) << 4;

779 #i‡
FM_INTERNAL_TIMER
==0

780 (
ST
->
Timî_H™dÀr
)(1, ST->
TBC
, ST->
TimîBa£
);

782 
	}
}

784 #i‡
FM_INTERNAL_TIMER


788 
	#INTERNAL_TIMER_A
(
ST
,
CSM_CH
) \

790 if–
ST
.
TAC
 ) \

792 if–(
ST
.
TAC
 -()((1000.0/ST.
øã
)*4096)) <= 0 ) \

794 
	`TimîAOvî
–&
ST
 ); \

796 if–
ST
.
mode
 & 0x80 ) \

797 
	`CSMKeyC⁄åﬁl
–
CSM_CH
 ); \

799 }

	)

801 
	#INTERNAL_TIMER_B
(
ST
,
°ï
) \

803 if–
ST
.
TBC
 ) \

805 if–(
ST
.
TBC
 -()((1000.0/ST.
øã
)*4096*
°ï
)) <= 0 ) \

806 
	`TimîBOvî
–&
ST
 ); \

807 }

	)

810 
	#INTERNAL_TIMER_A
(
ST
,
CSM_CH
)

	)

811 
	#INTERNAL_TIMER_B
(
ST
,
°ï
)

	)

814 #i‡
FM_BUSY_FLAG_SUPPORT


815 
INLINE
 
u8
 
	$FM_STATUS_FLAG
(
FM_ST
 *
ST
) {

816 i‡(
ST
->
BusyExpúe
) {

817 i‡((
ST
->
BusyExpúe
 - 
	`FM_GET_TIME_NOW
()) > 0)

818  
ST
->
°©us
 | 0x80;

820 
ST
->
BusyExpúe
 = 0;

822  
ST
->
°©us
;

823 
	}
}

824 
INLINE
 
	$FM_BUSY_SET
(
FM_ST
 *
ST
, 
busy˛ock
) {

825 
ST
->
BusyExpúe
 = 
	`FM_GET_TIME_NOW
(Ë+ (ST->
TimîBa£
 * 
busy˛ock
);

826 
	}
}

827 
	#FM_BUSY_CLEAR
(
ST
Ë((ST)->
BusyExpúe
 = 0)

	)

829 
	#FM_STATUS_FLAG
(
ST
Ë((ST)->
°©us
)

	)

830 
	#FM_BUSY_SET
(
ST
,
b˛ock
Ë{}

	)

831 
	#FM_BUSY_CLEAR
(
ST
Ë{}

	)

834 
INLINE
 
	$FM_KEYON
(
FM_CH
 *
CH
, 
s
) {

835 
FM_SLOT
 *
SLOT
 = &
CH
->SLOT[
s
];

836 i‡(!
SLOT
->
key
) {

837 
SLOT
->
key
 = 1;

838 
SLOT
->
pha£
 = 0;

839 
SLOT
->
°©e
 = 
EG_ATT
;

841 
	}
}

843 
INLINE
 
	$FM_KEYOFF
(
FM_CH
 *
CH
, 
s
) {

844 
FM_SLOT
 *
SLOT
 = &
CH
->SLOT[
s
];

845 i‡(
SLOT
->
key
) {

846 
SLOT
->
key
 = 0;

847 i‡(
SLOT
->
°©e
 > 
EG_REL
)

848 
SLOT
->
°©e
 = 
EG_REL
;

850 
	}
}

853 
	$£tup_c⁄√˘i⁄
(
FM_CH
 *
CH
, 
ch
) {

854 
s32
 *
ˇºõr
 = &
out_fm
[
ch
];

856 
s32
 **
om1
 = &
CH
->
c⁄√˘1
;

857 
s32
 **
om2
 = &
CH
->
c⁄√˘3
;

858 
s32
 **
oc1
 = &
CH
->
c⁄√˘2
;

860 
s32
 **
memc
 = &
CH
->
mem_c⁄√˘
;

862 
CH
->
ALGO
) {

865 *
om1
 = &
c1
;

866 *
oc1
 = &
mem
;

867 *
om2
 = &
c2
;

868 *
memc
 = &
m2
;

873 *
om1
 = &
mem
;

874 *
oc1
 = &
mem
;

875 *
om2
 = &
c2
;

876 *
memc
 = &
m2
;

881 *
om1
 = &
c2
;

882 *
oc1
 = &
mem
;

883 *
om2
 = &
c2
;

884 *
memc
 = &
m2
;

889 *
om1
 = &
c1
;

890 *
oc1
 = &
mem
;

891 *
om2
 = &
c2
;

892 *
memc
 = &
c2
;

898 *
om1
 = &
c1
;

899 *
oc1
 = 
ˇºõr
;

900 *
om2
 = &
c2
;

901 *
memc
 = &
mem
;

907 *
om1
 = 0;

908 *
oc1
 = 
ˇºõr
;

909 *
om2
 = 
ˇºõr
;

910 *
memc
 = &
m2
;

917 *
om1
 = &
c1
;

918 *
oc1
 = 
ˇºõr
;

919 *
om2
 = 
ˇºõr
;

920 *
memc
 = &
mem
;

928 *
om1
 = 
ˇºõr
;

929 *
oc1
 = 
ˇºõr
;

930 *
om2
 = 
ˇºõr
;

931 *
memc
 = &
mem
;

935 
CH
->
c⁄√˘4
 = 
ˇºõr
;

936 
	}
}

938  
INLINE
 
	$£t_dë_mul
(
FM_ST
 *
ST
, 
FM_CH
 *
CH
,

939 
FM_SLOT
 *
SLOT
, 
v
) {

940 
SLOT
->
mul
 = (
v
 & 0x0f) ? (v & 0x0f) * 2 : 1;

941 
SLOT
->
DT
 = 
ST
->
dt_èb
[(
v
 >> 4) & 7];

942 
CH
->
SLOT
[
SLOT1
].
In¸
 = -1;

943 
	}
}

945  
INLINE
 
	$£t_é
(
FM_CH
 *
CH
, 
FM_SLOT
 *
SLOT
, 
v
) {

946 
SLOT
->
é
 = (
v
 & 0x7fË<< (
ENV_BITS
 - 7);

947 
	}
}

949  
INLINE
 
	$£t_¨_k§
(
FM_CH
 *
CH
,

950 
FM_SLOT
 *
SLOT
, 
v
) {

951 
u8
 
ﬁd_KSR
 = 
SLOT
->
KSR
;

953 
SLOT
->
¨
 = (
v
 & 0x1f) ? 32 + ((v & 0x1f) << 1) : 0;

955 
SLOT
->
KSR
 = 3 - (
v
 >> 6);

956 i‡(
SLOT
->
KSR
 !
ﬁd_KSR
) {

957 
CH
->
SLOT
[
SLOT1
].
In¸
 = -1;

960 i‡((
SLOT
->
¨
 + SLOT->
k§
) < 32 + 62) {

961 
SLOT
->
eg_sh_¨
 = 
eg_øã_shi·
[SLOT->
¨
 + SLOT->
k§
];

962 
SLOT
->
eg_£l_¨
 = 
eg_øã_£À˘
[SLOT->
¨
 + SLOT->
k§
];

964 
SLOT
->
eg_sh_¨
 = 0;

965 
SLOT
->
eg_£l_¨
 = 17 * 
RATE_STEPS
;

968 
	}
}

970  
INLINE
 
	$£t_dr
(
FM_SLOT
 *
SLOT
, 
v
) {

971 
SLOT
->
d1r
 = (
v
 & 0x1f) ? 32 + ((v & 0x1f) << 1) : 0;

973 
SLOT
->
eg_sh_d1r
 = 
eg_øã_shi·
[SLOT->
d1r
 + SLOT->
k§
];

974 
SLOT
->
eg_£l_d1r
 = 
eg_øã_£À˘
[SLOT->
d1r
 + SLOT->
k§
];

976 
	}
}

978  
INLINE
 
	$£t_§
(
FM_SLOT
 *
SLOT
, 
v
) {

979 
SLOT
->
d2r
 = (
v
 & 0x1f) ? 32 + ((v & 0x1f) << 1) : 0;

981 
SLOT
->
eg_sh_d2r
 = 
eg_øã_shi·
[SLOT->
d2r
 + SLOT->
k§
];

982 
SLOT
->
eg_£l_d2r
 = 
eg_øã_£À˘
[SLOT->
d2r
 + SLOT->
k§
];

983 
	}
}

985  
INLINE
 
	$£t_¶_º
(
FM_SLOT
 *
SLOT
, 
v
) {

986 
SLOT
->
¶
 = 
¶_èbÀ
[
v
 >> 4];

988 
SLOT
->
º
 = 34 + ((
v
 & 0x0f) << 2);

990 
SLOT
->
eg_sh_º
 = 
eg_øã_shi·
[SLOT->
º
 + SLOT->
k§
];

991 
SLOT
->
eg_£l_º
 = 
eg_øã_£À˘
[SLOT->
º
 + SLOT->
k§
];

992 
	}
}

994 
INLINE
 sig√d 
	$›_ˇlc
(
u32
 
pha£
, 
ív
, sig√d 
pm
) {

995 
u32
 
p
;

997 
p
 = (
ív
 << 3)

998 + 
sö_èb
[(((sig√d Ë((
pha£
 & ~
FREQ_MASK
Ë+ (
pm
 << 15)))

999 >> 
FREQ_SH
Ë& 
SIN_MASK
];

1001 i‡(
p
 >
TL_TAB_LEN
)

1003  
é_èb
[
p
];

1004 
	}
}

1006 
INLINE
 sig√d 
	$›_ˇlc1
(
u32
 
pha£
, 
ív
, sig√d 
pm
) {

1007 
u32
 
p
;

1009 
p
 = (
ív
 << 3)

1010 + 
sö_èb
[(((sig√d Ë((
pha£
 & ~
FREQ_MASK
Ë+ 
pm
)Ë>> 
FREQ_SH
)

1011 & 
SIN_MASK
];

1013 i‡(
p
 >
TL_TAB_LEN
)

1015  
é_èb
[
p
];

1016 
	}
}

1018  
INLINE
 
	$adv™˚_lfo
(
FM_OPN
 *
OPN
) {

1019 
u8
 
pos
;

1020 
u8
 
¥ev_pos
;

1022 i‡(
OPN
->
lfo_öc
)

1024 
¥ev_pos
 = 
OPN
->
lfo_˙t
 >> 
LFO_SH
 & 127;

1026 
OPN
->
lfo_˙t
 +OPN->
lfo_öc
;

1028 
pos
 = (
OPN
->
lfo_˙t
 >> 
LFO_SH
) & 127;

1039 i‡(
pos
 < 64)

1040 
LFO_AM
 = (
pos
 & 63) * 2;

1042 
LFO_AM
 = 126 - ((
pos
 & 63) * 2);

1046 
¥ev_pos
 >>= 2;

1047 
pos
 >>= 2;

1051 
LFO_PM
 = 
pos
;

1055 
LFO_AM
 = 0;

1056 
LFO_PM
 = 0;

1058 
	}
}

1060 
INLINE
 
	$adv™˚_eg_ch™√l
(
FM_OPN
 *
OPN
, 
FM_SLOT
 *
SLOT
) {

1061 
out
;

1062 
sw≠_Êag
 = 0;

1063 
i
;

1065 
i
 = 4;

1067 
SLOT
->
°©e
) {

1068 
EG_ATT
:

1069 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_¨
) - 1))) {

1070 
SLOT
->
vﬁume
 += (~SLOT->volume

1071 * (
eg_öc
[
SLOT
->
eg_£l_¨


1072 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_¨
) & 7)])) >> 4;

1073 i‡(
SLOT
->
vﬁume
 <
MIN_ATT_INDEX
) {

1074 
SLOT
->
vﬁume
 = 
MIN_ATT_INDEX
;

1075 
SLOT
->
°©e
 = 
EG_DEC
;

1081 
EG_DEC
:

1082 i‡(
SLOT
->
ssg
 & 0x08)

1084 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_d1r
) - 1))) {

1085 
SLOT
->
vﬁume
 +(
eg_öc
[SLOT->
eg_£l_d1r


1086 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_d1r
) & 7)] << 2);

1088 i‡(
SLOT
->
vﬁume
 >SLOT->
¶
)

1089 
SLOT
->
°©e
 = 
EG_SUS
;

1092 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_d1r
) - 1))) {

1093 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_d1r


1094 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_d1r
) & 7)];

1096 i‡(
SLOT
->
vﬁume
 >SLOT->
¶
)

1097 
SLOT
->
°©e
 = 
EG_SUS
;

1102 
EG_SUS
:

1103 i‡(
SLOT
->
ssg
 & 0x08)

1105 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_d2r
) - 1))) {

1106 
SLOT
->
vﬁume
 +(
eg_öc
[SLOT->
eg_£l_d2r


1107 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_d2r
) & 7)] << 2);

1109 i‡(
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
) {

1110 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1112 i‡(
SLOT
->
ssg
 & 0x01)

1114 i‡(
SLOT
->
ssgn
 & 1)

1118 
sw≠_Êag
 = (
SLOT
->
ssg
 & 0x02) | 1;

1128 
SLOT
->
°©e
 = 
EG_ATT
;

1130 
sw≠_Êag
 = (
SLOT
->
ssg
 & 0x02);

1135 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_d2r
) - 1))) {

1136 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_d2r


1137 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_d2r
) & 7)];

1139 i‡(
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
) {

1140 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1148 
EG_REL
:

1149 i‡(!(
OPN
->
eg_˙t
 & ((1 << 
SLOT
->
eg_sh_º
) - 1))) {

1150 
SLOT
->
vﬁume
 +
eg_öc
[SLOT->
eg_£l_º


1151 + ((
OPN
->
eg_˙t
 >> 
SLOT
->
eg_sh_º
) & 7)];

1153 i‡(
SLOT
->
vﬁume
 >
MAX_ATT_INDEX
) {

1154 
SLOT
->
vﬁume
 = 
MAX_ATT_INDEX
;

1155 
SLOT
->
°©e
 = 
EG_OFF
;

1162 
out
 = 
SLOT
->
é
 + ((
u32
ËSLOT->
vﬁume
);

1164 i‡((
SLOT
->
ssg
 & 0x08Ë&& (SLOT->
ssgn
 & 2))

1165 
out
 ^((1 << 
ENV_BITS
) - 1);

1169 
SLOT
->
vﬁ_out
 = 
out
;

1171 
SLOT
->
ssgn
 ^
sw≠_Êag
;

1173 
SLOT
++;

1174 
i
--;

1175 } 
i
);

1177 
	}
}

1179 
	#vﬁume_ˇlc
(
OP
Ë((OP)->
vﬁ_out
 + (
AM
 & (OP)->
AMmask
))

	)

1181 
INLINE
 
	$ch™_ˇlc
(
FM_OPN
 *
OPN
, 
FM_CH
 *
CH
) {

1182 
eg_out
;

1184 
u32
 
AM
 = 
LFO_AM
 >> 
CH
->
ams
;

1186 
m2
 = 
c1
 = 
c2
 = 
mem
 = 0;

1188 *
CH
->
mem_c⁄√˘
 = CH->
mem_vÆue
;

1190 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT1
]);

1192 
s32
 
out
 = 
CH
->
›1_out
[0] + CH->op1_out[1];

1193 
CH
->
›1_out
[0] = CH->op1_out[1];

1195 i‡(!
CH
->
c⁄√˘1
) {

1197 
mem
 = 
c1
 = 
c2
 = 
CH
->
›1_out
[0];

1200 *
CH
->
c⁄√˘1
 +CH->
›1_out
[0];

1203 
CH
->
›1_out
[1] = 0;

1204 i‡(
eg_out
 < 
ENV_QUIET
)

1206 i‡(!
CH
->
FB
)

1207 
out
 = 0;

1209 
CH
->
›1_out
[1] = 
	`›_ˇlc1
(CH->
SLOT
[
SLOT1
].
pha£
, 
eg_out
,

1210 (
out
 << 
CH
->
FB
));

1214 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT3
]);

1215 i‡(
eg_out
 < 
ENV_QUIET
)

1216 *
CH
->
c⁄√˘3
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT3
].
pha£
, 
eg_out
, 
m2
);

1218 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT2
]);

1219 i‡(
eg_out
 < 
ENV_QUIET
)

1220 *
CH
->
c⁄√˘2
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT2
].
pha£
, 
eg_out
, 
c1
);

1222 
eg_out
 = 
	`vﬁume_ˇlc
(&
CH
->
SLOT
[
SLOT4
]);

1223 i‡(
eg_out
 < 
ENV_QUIET
)

1224 *
CH
->
c⁄√˘4
 +
	`›_ˇlc
(CH->
SLOT
[
SLOT4
].
pha£
, 
eg_out
, 
c2
);

1227 
CH
->
mem_vÆue
 = 
mem
;

1230 i‡(
CH
->
pms
) {

1234 
u32
 
block_‚um
 = 
CH
->block_fnum;

1236 
u32
 
‚um_lfo
 = ((
block_‚um
 & 0x7f0) >> 4) * 32 * 8;

1237 
s32
 
lfo_‚_èbÀ_ödex_off£t
 =

1238 
lfo_pm_èbÀ
[
‚um_lfo
 + 
CH
->
pms
 + 
LFO_PM
];

1240 i‡(
lfo_‚_èbÀ_ödex_off£t
)

1242 
u8
 
blk
;

1243 
u32
 
‚
;

1244 
kc
, 
fc
;

1246 
block_‚um
 = block_‚um * 2 + 
lfo_‚_èbÀ_ödex_off£t
;

1248 
blk
 = (
block_‚um
 & 0x7000) >> 12;

1249 
‚
 = 
block_‚um
 & 0xfff;

1252 
kc
 = (
blk
 << 2Ë| 
›n_fkèbÀ
[
‚
 >> 8];

1254 
fc
 = 
OPN
->
‚_èbÀ
[
‚
] >> (7 - 
blk
);

1256 
CH
->
SLOT
[
SLOT1
].
pha£
 +((
fc
 + CH->SLOT[SLOT1].
DT
[
kc
])

1257 * 
CH
->
SLOT
[
SLOT1
].
mul
) >> 1;

1258 
CH
->
SLOT
[
SLOT2
].
pha£
 +((
fc
 + CH->SLOT[SLOT2].
DT
[
kc
])

1259 * 
CH
->
SLOT
[
SLOT2
].
mul
) >> 1;

1260 
CH
->
SLOT
[
SLOT3
].
pha£
 +((
fc
 + CH->SLOT[SLOT3].
DT
[
kc
])

1261 * 
CH
->
SLOT
[
SLOT3
].
mul
) >> 1;

1262 
CH
->
SLOT
[
SLOT4
].
pha£
 +((
fc
 + CH->SLOT[SLOT4].
DT
[
kc
])

1263 * 
CH
->
SLOT
[
SLOT4
].
mul
) >> 1;

1266 
CH
->
SLOT
[
SLOT1
].
pha£
 +CH->SLOT[SLOT1].
In¸
;

1267 
CH
->
SLOT
[
SLOT2
].
pha£
 +CH->SLOT[SLOT2].
In¸
;

1268 
CH
->
SLOT
[
SLOT3
].
pha£
 +CH->SLOT[SLOT3].
In¸
;

1269 
CH
->
SLOT
[
SLOT4
].
pha£
 +CH->SLOT[SLOT4].
In¸
;

1273 
CH
->
SLOT
[
SLOT1
].
pha£
 +CH->SLOT[SLOT1].
In¸
;

1274 
CH
->
SLOT
[
SLOT2
].
pha£
 +CH->SLOT[SLOT2].
In¸
;

1275 
CH
->
SLOT
[
SLOT3
].
pha£
 +CH->SLOT[SLOT3].
In¸
;

1276 
CH
->
SLOT
[
SLOT4
].
pha£
 +CH->SLOT[SLOT4].
In¸
;

1278 
	}
}

1280  
INLINE
 
	$ª‰esh_fc_eg_¶Ÿ
(

1281 
FM_SLOT
 *
SLOT
, 
fc
, 
kc
) {

1282 
k§
;

1285 
SLOT
->
In¸
 = ((
fc
 + SLOT->
DT
[
kc
]Ë* SLOT->
mul
) >> 1;

1287 
k§
 = 
kc
 >> 
SLOT
->
KSR
;

1288 i‡(
SLOT
->
k§
 != ksr) {

1289 
SLOT
->
k§
 = ksr;

1292 i‡((
SLOT
->
¨
 + SLOT->
k§
) < 32 + 62) {

1293 
SLOT
->
eg_sh_¨
 = 
eg_øã_shi·
[SLOT->
¨
 + SLOT->
k§
];

1294 
SLOT
->
eg_£l_¨
 = 
eg_øã_£À˘
[SLOT->
¨
 + SLOT->
k§
];

1296 
SLOT
->
eg_sh_¨
 = 0;

1297 
SLOT
->
eg_£l_¨
 = 17 * 
RATE_STEPS
;

1300 
SLOT
->
eg_sh_d1r
 = 
eg_øã_shi·
[SLOT->
d1r
 + SLOT->
k§
];

1301 
SLOT
->
eg_£l_d1r
 = 
eg_øã_£À˘
[SLOT->
d1r
 + SLOT->
k§
];

1303 
SLOT
->
eg_sh_d2r
 = 
eg_øã_shi·
[SLOT->
d2r
 + SLOT->
k§
];

1304 
SLOT
->
eg_£l_d2r
 = 
eg_øã_£À˘
[SLOT->
d2r
 + SLOT->
k§
];

1306 
SLOT
->
eg_sh_º
 = 
eg_øã_shi·
[SLOT->
º
 + SLOT->
k§
];

1307 
SLOT
->
eg_£l_º
 = 
eg_øã_£À˘
[SLOT->
º
 + SLOT->
k§
];

1309 
	}
}

1311  
INLINE
 
	$ª‰esh_fc_eg_ch™
(
FM_CH
 *
CH
) {

1312 i‡(
CH
->
SLOT
[
SLOT1
].
In¸
 == -1) {

1313 
fc
 = 
CH
->fc;

1314 
kc
 = 
CH
->
kcode
;

1315 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT1
], 
fc
, 
kc
);

1316 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT2
], 
fc
, 
kc
);

1317 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT3
], 
fc
, 
kc
);

1318 
	`ª‰esh_fc_eg_¶Ÿ
(&
CH
->
SLOT
[
SLOT4
], 
fc
, 
kc
);

1320 
	}
}

1323 
	$öô_timëabÀs
(
FM_ST
 *
ST
, c⁄° 
u8
 *
dâabÀ
) {

1324 
i
, 
d
;

1325 
øã
;

1328 
	`logîr‹
("FM.C: samplerate=%8i chip clock=%8i freqbase=%f \n",

1329 
ST
->
øã
, ST->
˛ock
, ST->
‰eqba£
 );

1333 
d
 = 0; d <= 3; d++) {

1334 
i
 = 0; i <= 31; i++) {

1335 
øã
 = ((Ë
dâabÀ
[
d
 * 32 + 
i
]Ë* 
SIN_LEN
 * 
ST
->
‰eqba£


1336 * (1 << 
FREQ_SH
) / (() (1 << 20));

1337 
ST
->
dt_èb
[
d
][
i
] = (
s32
Ë
øã
;

1338 
ST
->
dt_èb
[
d
 + 4][
i
] = -ST->dt_tab[d][i];

1340 
	`logîr‹
("FM.C: DT [%2ò%2i] = %8x \n", 
d
, 
i
, 
ST
->
dt_èb
[d][i] );

1345 
	}
}

1347 
	$ª£t_ch™√ls
(
FM_ST
 *
ST
, 
FM_CH
 *
CH
, 
num
) {

1348 
c
, 
s
;

1350 
ST
->
mode
 = 0;

1351 
ST
->
TA
 = 0;

1352 
ST
->
TAC
 = 0;

1353 
ST
->
TB
 = 0;

1354 
ST
->
TBC
 = 0;

1356 
c
 = 0; c < 
num
; c++) {

1357 
CH
[
c
].
fc
 = 0;

1358 
s
 = 0; s < 4; s++) {

1359 
CH
[
c
].
SLOT
[
s
].
ssg
 = 0;

1360 
CH
[
c
].
SLOT
[
s
].
ssgn
 = 0;

1361 
CH
[
c
].
SLOT
[
s
].
°©e
 = 
EG_OFF
;

1362 
CH
[
c
].
SLOT
[
s
].
vﬁume
 = 
MAX_ATT_INDEX
;

1363 
CH
[
c
].
SLOT
[
s
].
vﬁ_out
 = 
MAX_ATT_INDEX
;

1366 
	}
}

1369 
	$OPNInôTabÀ
() {

1370 sig√d 
i
, 
x
;

1371 sig√d 
n
;

1372 
o
, 
m
;

1374 
x
 = 0; x < 
TL_RES_LEN
; x++) {

1375 
m
 = (1 << 16Ë/ 
	`pow
(2, (
x
 + 1Ë* (
ENV_STEP
 / 4.0) / 8.0);

1376 
m
 = 
	`Êo‹
(m);

1381 
n
 = (Ë
m
;

1382 
n
 >>= 4;

1383 i‡(
n
 & 1)

1384 
n
 = (n >> 1) + 1;

1386 
n
 =Ç >> 1;

1388 
n
 <<= 2;

1389 
é_èb
[
x
 * 2 + 0] = 
n
;

1390 
é_èb
[
x
 * 2 + 1] = -tl_tab[x * 2 + 0];

1392 
i
 = 1; i < 13; i++) {

1393 
é_èb
[
x
 * 2 + 0 + 
i
 * 2 * 
TL_RES_LEN
] =Ål_tab[x * 2 + 0] >> i;

1394 
é_èb
[
x
 * 2 + 1 + 
i
 * 2 * 
TL_RES_LEN
] = -tl_tab[x * 2 + 0

1395 + 
i
 * 2 * 
TL_RES_LEN
];

1398 
	`logîr‹
("é %04i", 
x
);

1399 
i
=0; i<13; i++)

1400 
	`logîr‹
(", [%02i] %4x", 
i
*2, 
é_èb
[ 
x
*2 + i*2*
TL_RES_LEN
 ]);

1401 
	`logîr‹
("\n");

1404 
	}
}

1407 
	gi
 = 0; i < 
	gSIN_LEN
; i++) {

1409 
	gm
 = 
sö
(((
i
 * 2Ë+ 1Ë* 
M_PI
 / 
SIN_LEN
);

1413 i‡(
	gm
 > 0.0)

1414 
	go
 = 8 * 
log
(1.0 / 
m
) /Üog(2);

1416 
	go
 = 8 * 
log
(-1.0 / 
m
) /Üog(2);

1418 
	go
 = 
o
 / (
ENV_STEP
 / 4);

1420 
	gn
 = (Ë(2.0 * 
o
);

1421 i‡(
	gn
 & 1)

1422 
	gn
 = (
n
 >> 1) + 1;

1424 
	gn
 = 
n
 >> 1;

1426 
	gsö_èb
[
i
] = 
n
 * 2 + (
m
 >= 0.0 ? 0 : 1);

1433 
	gi
 = 0; i < 8; i++)

1435 
u8
 
	g‚um
;

1436 
	g‚um
 = 0; fnum < 128; fnum++)

1438 
u8
 
	gvÆue
;

1439 
u8
 
	g°ï
;

1440 
u32
 
	goff£t_dïth
 = 
i
;

1441 
u32
 
	goff£t_‚um_bô
;

1442 
u32
 
	gbô_tmp
;

1444 
	g°ï
 = 0; step < 8; step++) {

1445 
	gvÆue
 = 0;

1446 
	gbô_tmp
 = 0; bit_tmp < 7; bit_tmp++)

1448 i‡(
	g‚um
 & (1 << 
	gbô_tmp
))

1450 
	goff£t_‚um_bô
 = 
bô_tmp
 * 8;

1451 
	gvÆue
 +=

1452 
lfo_pm_ouçut
[
off£t_‚um_bô
 + 
off£t_dïth
][
°ï
];

1455 
	glfo_pm_èbÀ
[(
‚um
 * 32 * 8Ë+ (
i
 * 32Ë+ 
°ï
 + 0] = 
vÆue
;

1456 
	glfo_pm_èbÀ
[(
‚um
 * 32 * 8Ë+ (
i
 * 32Ë+ (
°ï
 ^ 7) + 8] =

1457 
vÆue
;

1458 
	glfo_pm_èbÀ
[(
‚um
 * 32 * 8Ë+ (
i
 * 32Ë+ 
°ï
 + 16] = -
vÆue
;

1459 
	glfo_pm_èbÀ
[(
‚um
 * 32 * 8Ë+ (
i
 * 32Ë+ (
°ï
 ^ 7) + 24] =

1460 -
vÆue
;

1463 
logîr‹
("LFO dïth=%1x FNUM=%04x (<<4=%4x): ", 
i
, 
‚um
, fnum<<4);

1464 
	g°ï
=0; step<16; step++)

1465 
logîr‹
("%02x ", 
lfo_pm_èbÀ
[(
‚um
*32*8Ë+ (
i
*32Ë+ 
°ï
] );

1466 
logîr‹
("\n");

1473  
INLINE
 
	$CSMKeyC⁄åﬁl
(
FM_CH
 *
CH
) {

1477 
	`FM_KEYON
(
CH
, 
SLOT1
);

1478 
	`FM_KEYON
(
CH
, 
SLOT2
);

1479 
	`FM_KEYON
(
CH
, 
SLOT3
);

1480 
	`FM_KEYON
(
CH
, 
SLOT4
);

1481 
	}
}

1484 
	$OPNSëPªs
(
FM_OPN
 *
OPN
, 
¥es
, 
TimîPªs
, 
SSG¥es
) {

1485 
i
;

1488 
OPN
->
ST
.
‰eqba£
 =

1489 (
OPN
->
ST
.
øã
Ë? ((ËOPN->ST.
˛ock
 / OPN->ST.øãË/ 
¥es
 : 0;

1492 
OPN
->
ST
.
øã
 = ()OPN->ST.
˛ock
 / 
¥es
;

1493 
OPN
->
ST
.
‰eqba£
 = 1.0;

1496 
OPN
->
eg_timî_add
 = (1 << 
EG_SH
Ë* OPN->
ST
.
‰eqba£
;

1497 
OPN
->
eg_timî_ovîÊow
 = (3Ë* (1 << 
EG_SH
);

1500 
OPN
->
ST
.
TimîBa£
 = 1.0 / ((ËOPN->ST.
˛ock
 / (Ë
TimîPªs
);

1503 i‡(
SSG¥es
)

1504 
SSG
.
°ï
 = ((Ë
SSG_STEP
 * 
OPN
->
ST
.
øã
 * 8)

1505 / (
OPN
->
ST
.
˛ock
 * 2 / 
SSG¥es
);

1508 
	`öô_timëabÀs
(&
OPN
->
ST
, 
dt_èb
);

1513 
i
 = 0; i < 4096; i++) {

1516 
OPN
->
‚_èbÀ
[
i
] = (
u32
Ë((Ëò* 32 * OPN->
ST
.
‰eqba£


1517 * (1 << (
FREQ_SH
 - 10)));

1519 
	`logîr‹
("FM.C: fn_table[%4i] = %08x (dec=%8i)\n",

1520 
i
, 
OPN
->
‚_èbÀ
[i]>>6,OPN->fn_table[i]>>6 );

1525 
i
 = 0; i < 8; i++) {

1528 
OPN
->
lfo_‰eq
[
i
] = (1.0 / 
lfo_ßm∂es_≥r_°ï
[i]Ë* (1 << 
LFO_SH
)

1529 * 
OPN
->
ST
.
‰eqba£
;

1531 
	`logîr‹
("FM.C:Üfo_freq[%i] = %08x (dec=%8i)\n",

1532 
i
, 
OPN
->
lfo_‰eq
[i],OPN->lfo_freq[i] );

1535 
	}
}

1538 
	$OPNWrôeMode
(
FM_OPN
 *
OPN
, 
r
, 
v
) {

1539 
u8
 
c
;

1540 
FM_CH
 *
CH
;

1542 
r
) {

1546 i‡(
v
 & 0x08)

1548 
OPN
->
lfo_öc
 = OPN->
lfo_‰eq
[
v
 & 7];

1550 
OPN
->
lfo_öc
 = 0;

1554 
OPN
->
ST
.
TA
 = (OPN->ST.TA & 0x03Ë| (((Ë
v
) << 2);

1557 
OPN
->
ST
.
TA
 = (OPN->ST.TA & 0x3fcË| (
v
 & 3);

1560 
OPN
->
ST
.
TB
 = 
v
;

1563 
	`£t_timîs
(&(
OPN
->
ST
), 
v
);

1566 
c
 = 
v
 & 0x03;

1567 i‡(
c
 == 3)

1569 i‡(
v
 & 0x04)

1570 
c
 += 3;

1571 
CH
 = 
OPN
->
P_CH
;

1572 
CH
 = &CH[
c
];

1573 i‡(
v
 & 0x10)

1574 
	`FM_KEYON
(
CH
, 
SLOT1
);

1576 
	`FM_KEYOFF
(
CH
, 
SLOT1
);

1577 i‡(
v
 & 0x20)

1578 
	`FM_KEYON
(
CH
, 
SLOT2
);

1580 
	`FM_KEYOFF
(
CH
, 
SLOT2
);

1581 i‡(
v
 & 0x40)

1582 
	`FM_KEYON
(
CH
, 
SLOT3
);

1584 
	`FM_KEYOFF
(
CH
, 
SLOT3
);

1585 i‡(
v
 & 0x80)

1586 
	`FM_KEYON
(
CH
, 
SLOT4
);

1588 
	`FM_KEYOFF
(
CH
, 
SLOT4
);

1591 
	}
}

1594 
	$OPNWrôeReg
(
FM_OPN
 *
OPN
, 
r
, 
v
) {

1595 
FM_CH
 *
CH
;

1596 
FM_SLOT
 *
SLOT
;

1598 
u8
 
c
 = 
	`OPN_CHAN
(
r
);

1600 i‡(
c
 == 3)

1603 i‡(
r
 >= 0x100)

1604 
c
 += 3;

1606 
CH
 = 
OPN
->
P_CH
;

1607 
CH
 = &CH[
c
];

1609 
SLOT
 = &(
CH
->SLOT[
	`OPN_SLOT
(
r
)]);

1611 
r
 & 0xf0) {

1613 
	`£t_dë_mul
(&
OPN
->
ST
, 
CH
, 
SLOT
, 
v
);

1617 
	`£t_é
(
CH
, 
SLOT
, 
v
);

1621 
	`£t_¨_k§
(
CH
, 
SLOT
, 
v
);

1625 
	`£t_dr
(
SLOT
, 
v
);

1626 
SLOT
->
AMmask
 = (
v
 & 0x80) ? ~0 : 0;

1630 
	`£t_§
(
SLOT
, 
v
);

1634 
	`£t_¶_º
(
SLOT
, 
v
);

1639 
SLOT
->
ssg
 = 
v
 & 0x0f;

1640 
SLOT
->
ssgn
 = (
v
 & 0x04) >> 1;

1717  
	`OPN_SLOT
(
r
)) {

1720 
u32
 
‚
 = (((u32)–(
OPN
->
ST
.
‚_h
)&7))<<8Ë+ 
v
;

1721 
u8
 
blk
 = 
OPN
->
ST
.
‚_h
>>3;

1723 
CH
->
kcode
 = (
blk
<<2Ë| 
›n_fkèbÀ
[
‚
 >> 7];

1725 
CH
->
fc
 = 
OPN
->
‚_èbÀ
[
‚
*2]>>(7-
blk
);

1728 
CH
->
block_‚um
 = (
blk
<<11Ë| 
‚
;

1730 
CH
->
SLOT
[
SLOT1
].
In¸
=-1;

1734 
OPN
->
ST
.
‚_h
 = 
v
&0x3f;

1737 if(
r
 < 0x100)

1739 
u32
 
‚
 = (((u32)(
OPN
->
SL3
.
‚_h
&7))<<8Ë+ 
v
;

1740 
u8
 
blk
 = 
OPN
->
SL3
.
‚_h
>>3;

1742 
OPN
->
SL3
.
kcode
[
c
](
blk
<<2Ë| 
›n_fkèbÀ
[
‚
 >> 7];

1744 
OPN
->
SL3
.
fc
[
c
] = OPN->
‚_èbÀ
[
‚
*2]>>(7-
blk
);

1745 
OPN
->
SL3
.
block_‚um
[
c
] = 
‚
;

1746 (
OPN
->
P_CH
)[2].
SLOT
[
SLOT1
].
In¸
=-1;

1750 if(
r
 < 0x100)

1751 
OPN
->
SL3
.
‚_h
 = 
v
&0x3f;

1757  
	`OPN_SLOT
(
r
) ) {

1760 
„edback
 = (
v
>>3)&7;

1761 
CH
->
ALGO
 = 
v
&7;

1762 
CH
->
FB
 = 
„edback
 ? feedback+6 : 0;

1763 
	`£tup_c⁄√˘i⁄
–
CH
, 
c
 );

1769 
CH
->
pms
 = (
v
 & 7) * 32;

1772 
CH
->
ams
 = 
lfo_ams_dïth_shi·
[(
v
>>4) & 0x03];

1775 
OPN
->
∑n
[ 
c
*2 ] = (
v
 & 0x80) ? ~0 : 0;

1776 
OPN
->
∑n
[ 
c
*2+1 ] = (
v
 & 0x40) ? ~0 : 0;

1783 
	}
}

1789 
	$SSGWrôeReg
(
r
, 
v
) {

1790 
ﬁd
;

1792 
YM2610
.
ªgs
[
r
] = 
v
;

1794 
r
) {

1802 
ch
 = 
r
 >> 1;

1804 
r
 &= ~1;

1805 
YM2610
.
ªgs
[
r
 + 1] &= 0x0f;

1806 
ﬁd
 = 
SSG
.
≥riod
[
ch
];

1807 
SSG
.
≥riod
[
ch
] = (
YM2610
.
ªgs
[
r
] + 256 * YM2610.ªgs[∏+ 1]Ë* SSG.
°ï
;

1808 i‡(
SSG
.
≥riod
[
ch
] == 0)

1809 
SSG
.
≥riod
[
ch
] = SSG.
°ï
;

1810 
SSG
.
cou¡
[
ch
] +SSG.
≥riod
[ch] - 
ﬁd
;

1811 i‡(
SSG
.
cou¡
[
ch
] <= 0)

1812 
SSG
.
cou¡
[
ch
] = 1;

1817 
YM2610
.
ªgs
[
SSG_NOISEPER
] &= 0x1f;

1818 
ﬁd
 = 
SSG
.
PîiodN
;

1819 
SSG
.
PîiodN
 = 
YM2610
.
ªgs
[
SSG_NOISEPER
] * SSG.
°ï
;

1820 i‡(
SSG
.
PîiodN
 == 0)

1821 
SSG
.
PîiodN
 = SSG.
°ï
;

1822 
SSG
.
Cou¡N
 +SSG.
PîiodN
 - 
ﬁd
;

1823 i‡(
SSG
.
Cou¡N
 <= 0)

1824 
SSG
.
Cou¡N
 = 1;

1828 
SSG
.
œ°E«bÀ
 = 
YM2610
.
ªgs
[
SSG_ENABLE
];

1835 
ch
 = 
r
 & 3;

1837 
YM2610
.
ªgs
[
r
] &= 0x1f;

1838 
SSG
.
ívñ›e
[
ch
] = 
YM2610
.
ªgs
[
r
] & 0x10;

1839 
SSG
.
vﬁ
[
ch
] =

1840 
SSG
.
ívñ›e
[
ch
] ?

1841 
SSG
.
VﬁE
 :

1842 
SSG
.
vﬁ_èbÀ
[

1843 
YM2610
.
ªgs
[
r
] ? YM2610.regs[r] * 2 + 1 : 0];

1847 
SSG_EFINE
:

1848 
SSG_ECOARSE
:

1849 
ﬁd
 = 
SSG
.
PîiodE
;

1850 
SSG
.
PîiodE
 = (
YM2610
.
ªgs
[
SSG_EFINE
] + 256 * YM2610.ªgs[
SSG_ECOARSE
])

1851 * 
SSG
.
°ï
;

1852 i‡(
SSG
.
PîiodE
 == 0)

1853 
SSG
.
PîiodE
 = SSG.
°ï
 / 2;

1854 
SSG
.
Cou¡E
 +SSG.
PîiodE
 - 
ﬁd
;

1855 i‡(
SSG
.
Cou¡E
 <= 0)

1856 
SSG
.
Cou¡E
 = 1;

1859 
SSG_ESHAPE
:

1860 
YM2610
.
ªgs
[
SSG_ESHAPE
] &= 0x0f;

1861 
SSG
.
©èck
 = (
YM2610
.
ªgs
[
SSG_ESHAPE
] & 0x04) ? 0x1f : 0x00;

1862 i‡((
YM2610
.
ªgs
[
SSG_ESHAPE
] & 0x08) == 0) {

1864 
SSG
.
hﬁd
 = 1;

1865 
SSG
.
Æã∫©e
 = SSG.
©èck
;

1867 
SSG
.
hﬁd
 = 
YM2610
.
ªgs
[
SSG_ESHAPE
] & 0x01;

1868 
SSG
.
Æã∫©e
 = 
YM2610
.
ªgs
[
SSG_ESHAPE
] & 0x02;

1870 
SSG
.
Cou¡E
 = SSG.
PîiodE
;

1871 
SSG
.
cou¡_ív
 = 0x1f;

1872 
SSG
.
hﬁdög
 = 0;

1873 
SSG
.
VﬁE
 = SSG.
vﬁ_èbÀ
[SSG.
cou¡_ív
 ^ SSG.
©èck
];

1874 i‡(
SSG
.
ívñ›e
[0])

1875 
SSG
.
vﬁ
[0] = SSG.
VﬁE
;

1876 i‡(
SSG
.
ívñ›e
[1])

1877 
SSG
.
vﬁ
[1] = SSG.
VﬁE
;

1878 i‡(
SSG
.
ívñ›e
[2])

1879 
SSG
.
vﬁ
[2] = SSG.
VﬁE
;

1882 
SSG_PORTA
:

1883 
SSG_PORTB
:

1886 
	}
}

1888 
	$SSG_ˇlc_cou¡
(
Àngth
) {

1889 
i
;

1892 
i
 = 0; i < 3; i++) {

1893 i‡(
YM2610
.
ªgs
[
SSG_ENABLE
] & (0x01 << 
i
)) {

1894 i‡(
SSG
.
cou¡
[
i
] <
Àngth
 * 
SSG_STEP
)

1895 
SSG
.
cou¡
[
i
] +
Àngth
 * 
SSG_STEP
;

1896 
SSG
.
ouçut
[
i
] = 1;

1897 } i‡(
YM2610
.
ªgs
[0x08 + 
i
] == 0) {

1898 i‡(
SSG
.
cou¡
[
i
] <
Àngth
 * 
SSG_STEP
)

1899 
SSG
.
cou¡
[
i
] +
Àngth
 * 
SSG_STEP
;

1905 i‡((
YM2610
.
ªgs
[
SSG_ENABLE
] & 0x38) == 0x38)

1907 i‡(
SSG
.
Cou¡N
 <
Àngth
 * 
SSG_STEP
)

1908 
SSG
.
Cou¡N
 +
Àngth
 * 
SSG_STEP
;

1911  (
SSG
.
OuçutN
 | 
YM2610
.
ªgs
[
SSG_ENABLE
]);

1912 
	}
}

1914 
	$SSG_CALC
(
ouä
) {

1915 
ch
;

1916 
vﬁ
[3];

1917 
À·
;

1921 
vﬁ
[0] = vol[1] = vol[2] = 0;

1923 
À·
 = 
SSG_STEP
;

1926 
√xãvít
;

1928 
√xãvít
 = (
SSG
.
Cou¡N
 < 
À·
) ? SSG.CountN :Üeft;

1930 
ch
 = 0; ch < 3; ch++) {

1931 i‡(
ouä
 & (0x08 << 
ch
)) {

1932 i‡(
SSG
.
ouçut
[
ch
])

1933 
vﬁ
[
ch
] +
SSG
.
cou¡
[ch];

1934 
SSG
.
cou¡
[
ch
] -
√xãvít
;

1936 
SSG
.
cou¡
[
ch
] <= 0) {

1937 
SSG
.
cou¡
[
ch
] +SSG.
≥riod
[ch];

1938 i‡(
SSG
.
cou¡
[
ch
] > 0) {

1939 
SSG
.
ouçut
[
ch
] ^= 1;

1940 i‡(
SSG
.
ouçut
[
ch
])

1941 
vﬁ
[
ch
] +
SSG
.
≥riod
[ch];

1944 
SSG
.
cou¡
[
ch
] +SSG.
≥riod
[ch];

1945 
vﬁ
[
ch
] +
SSG
.
≥riod
[ch];

1947 i‡(
SSG
.
ouçut
[
ch
])

1948 
vﬁ
[
ch
] -
SSG
.
cou¡
[ch];

1950 
SSG
.
cou¡
[
ch
] -
√xãvít
;

1951 
SSG
.
cou¡
[
ch
] <= 0) {

1952 
SSG
.
cou¡
[
ch
] +SSG.
≥riod
[ch];

1953 i‡(
SSG
.
cou¡
[
ch
] > 0) {

1954 
SSG
.
ouçut
[
ch
] ^= 1;

1957 
SSG
.
cou¡
[
ch
] +SSG.
≥riod
[ch];

1962 
SSG
.
Cou¡N
 -
√xãvít
;

1963 i‡(
SSG
.
Cou¡N
 <= 0) {

1965 i‡((
SSG
.
RNG
 + 1) & 2)

1967 
SSG
.
OuçutN
 = ~SSG.OutputN;

1968 
ouä
 = (
SSG
.
OuçutN
 | 
YM2610
.
ªgs
[
SSG_ENABLE
]);

1971 i‡(
SSG
.
RNG
 & 1)

1972 
SSG
.
RNG
 ^= 0x24000;

1973 
SSG
.
RNG
 >>= 1;

1974 
SSG
.
Cou¡N
 +SSG.
PîiodN
;

1977 
À·
 -
√xãvít
;

1978 } 
À·
 > 0);

1981 i‡(
SSG
.
hﬁdög
 == 0) {

1982 
SSG
.
Cou¡E
 -
SSG_STEP
;

1983 i‡(
SSG
.
Cou¡E
 <= 0) {

1985 
SSG
.
cou¡_ív
--;

1986 
SSG
.
Cou¡E
 +SSG.
PîiodE
;

1987 } 
SSG
.
Cou¡E
 <= 0);

1990 i‡(
SSG
.
cou¡_ív
 < 0) {

1991 i‡(
SSG
.
hﬁd
) {

1992 i‡(
SSG
.
Æã∫©e
)

1993 
SSG
.
©èck
 ^= 0x1f;

1994 
SSG
.
hﬁdög
 = 1;

1995 
SSG
.
cou¡_ív
 = 0;

1999 i‡(
SSG
.
Æã∫©e
 && (SSG.
cou¡_ív
 & 0x20))

2000 
SSG
.
©èck
 ^= 0x1f;

2002 
SSG
.
cou¡_ív
 &= 0x1f;

2006 
SSG
.
VﬁE
 = SSG.
vﬁ_èbÀ
[SSG.
cou¡_ív
 ^ SSG.
©èck
];

2008 i‡(
SSG
.
ívñ›e
[0])

2009 
SSG
.
vﬁ
[0] = SSG.
VﬁE
;

2010 i‡(
SSG
.
ívñ›e
[1])

2011 
SSG
.
vﬁ
[1] = SSG.
VﬁE
;

2012 i‡(
SSG
.
ívñ›e
[2])

2013 
SSG
.
vﬁ
[2] = SSG.
VﬁE
;

2017 
out_ssg
 = (((
vﬁ
[0] * 
SSG
.vol[0]) + (vol[1] * SSG.vol[1])

2018 + (
vﬁ
[2] * 
SSG
.vﬁ[2])Ë/ 
SSG_STEP
) / 3;

2020  
ouä
;

2021 
	}
}

2023 
	$SSG_öô_èbÀ
() {

2024 
i
;

2025 
out
;

2031 
out
 = 
SSG_MAX_OUTPUT
;

2032 
i
 = 31; i > 0; i--) {

2033 
SSG
.
vﬁ_èbÀ
[
i
] = 
out
 + 0.5;

2035 
out
 /= 1.188502227;

2037 
SSG
.
vﬁ_èbÀ
[0] = 0;

2038 
	}
}

2040 
	$SSG_ª£t
() {

2041 
i
;

2043 
SSG
.
RNG
 = 1;

2044 
SSG
.
ouçut
[0] = 0;

2045 
SSG
.
ouçut
[1] = 0;

2046 
SSG
.
ouçut
[2] = 0;

2047 
SSG
.
OuçutN
 = 0xff;

2048 
SSG
.
œ°E«bÀ
 = -1;

2049 
i
 = 0; i < 
SSG_PORTA
; i++) {

2050 
YM2610
.
ªgs
[
i
] = 0x00;

2051 
	`SSGWrôeReg
(
i
, 0x00);

2053 
	}
}

2055 
	$SSG_wrôe
(
r
, 
v
) {

2056 
	`SSGWrôeReg
(
r
, 
v
);

2057 
	}
}

2062 
	#ADPCM_SHIFT
 (16Ë

	)

2063 
	#ADPCMA_ADDRESS_SHIFT
 8

	)

2065 
u8
 *
	gpcmbufA
;

2066 
u32
 
	gpcmsizeA
;

2071 
	g°ïs
[49] = { 16, 17, 19, 21, 23, 25, 28, 31, 34, 37, 41, 45, 50, 55,

2077 
	g°ï_öc
[8] = { -1 * 16, -1 * 16, -1 * 16, -1 * 16, 2 * 16, 5 * 16, 7

2081 
	gjedi_èbÀ
[49 * 16];

2083 
	$OPNB_ADPCMA_öô_èbÀ
() {

2084 
°ï
, 
nib
;

2086 
°ï
 = 0; step < 49; step++) {

2088 
nib
 = 0;Çib < 16;Çib++) {

2089 
vÆue
 = (2 * (
nib
 & 0x07Ë+ 1Ë* 
°ïs
[
°ï
] / 8;

2090 
jedi_èbÀ
[
°ï
 * 16 + 
nib
] = (nib & 0x08Ë? -
vÆue
 : value;

2094 
	}
}

2096  
INLINE
 
	$OPNB_ADPCMA_ˇlc_ch™
(

2097 
ADPCMA
 *
ch
) {

2098 
u32
 
°ï
;

2099 
u8
 
d©a
;

2101 
ch
->
now_°ï
 +ch->
°ï
;

2102 i‡(
ch
->
now_°ï
 >(1 << 
ADPCM_SHIFT
)) {

2103 
°ï
 = 
ch
->
now_°ï
 >> 
ADPCM_SHIFT
;

2104 
ch
->
now_°ï
 &(1 << 
ADPCM_SHIFT
) - 1;

2112 i‡((
ch
->
now_addr
 & ((1 << 21) - 1))

2113 =((
ch
->
íd
 << 1) & ((1 << 21) - 1))) {

2114 
ch
->
Êag
 = 0;

2115 
YM2610
.
adpcm_¨rivedEndAddªss
 |
ch
->
ÊagMask
;

2119 i‡(
ch
->
now_addr
 & 1)

2120 
d©a
 = 
ch
->
now_d©a
 & 0x0f;

2122 
ch
->
now_d©a
 = *(
pcmbufA
 + (ch->
now_addr
 >> 1));

2123 
d©a
 = (
ch
->
now_d©a
 >> 4) & 0x0f;

2126 
ch
->
now_addr
++;

2128 
ch
->
adpcma_acc
 +
jedi_èbÀ
[ch->
adpcma_°ï
 + 
d©a
];

2131 i‡(
ch
->
adpcma_acc
 & 0x800)

2132 
ch
->
adpcma_acc
 |= ~0xfff;

2134 
ch
->
adpcma_acc
 &= 0xfff;

2136 
ch
->
adpcma_°ï
 +
°ï_öc
[
d©a
 & 7];

2137 
	`Limô
(
ch
->
adpcma_°ï
, 48*16, 0*16);

2139 } --
°ï
);

2142 
ch
->
adpcma_out
 = (((
Söt16
Ëch->
adpcma_acc
 * ch->
vﬁ_mul
)

2143 >> 
ch
->
vﬁ_shi·
) & ~3;

2147 *
ch
->
∑n
 +ch->
adpcma_out
;

2148 
	}
}

2151 
	$OPNB_ADPCMA_wrôe
(
r
, 
v
) {

2152 
ADPCMA
 *
adpcma
 = 
YM2610
.adpcma;

2153 
u8
 
c
 = 
r
 & 0x07;

2155 
YM2610
.
ªgs
[
r
] = 
v
 & 0xff;

2157 
r
) {

2159 i‡(!(
v
 & 0x80)) {

2161 
c
 = 0; c < 6; c++) {

2162 i‡((
v
 >> 
c
) & 1) {

2164 
adpcma
[
c
].
°ï
 = (
u32
Ë((Ë(1 << 
ADPCM_SHIFT
)

2165 * ((Ë
YM2610
.
OPN
.
ST
.
‰eqba£
) / 3.0);

2166 
adpcma
[
c
].
now_addr
 =ádpcma[c].
°¨t
 << 1;

2167 
adpcma
[
c
].
now_°ï
 = 0;

2168 
adpcma
[
c
].
adpcma_acc
 = 0;

2169 
adpcma
[
c
].
adpcma_°ï
 = 0;

2170 
adpcma
[
c
].
adpcma_out
 = 0;

2171 
adpcma
[
c
].
Êag
 = 1;

2173 i‡(
pcmbufA
 =
NULL
) {

2176 
adpcma
[
c
].
Êag
 = 0;

2178 i‡(
adpcma
[
c
].
íd
 >
pcmsizeA
) {

2183 i‡(
adpcma
[
c
].
°¨t
 >
pcmsizeA
)

2186 
adpcma
[
c
].
Êag
 = 0;

2193 
c
 = 0; c < 6; c++)

2194 i‡((
v
 >> 
c
) & 1)

2195 
adpcma
[
c
].
Êag
 = 0;

2200 
YM2610
.
adpcmaTL
 = (
v
 & 0x3f) ^ 0x3f;

2201 
c
 = 0; c < 6; c++) {

2202 
vﬁume
 = 
YM2610
.
adpcmaTL
 + 
adpcma
[
c
].
IL
;

2204 i‡(
vﬁume
 >= 63)

2206 
adpcma
[
c
].
vﬁ_mul
 = 0;

2207 
adpcma
[
c
].
vﬁ_shi·
 = 0;

2209 
adpcma
[
c
].
vﬁ_mul
 = 15 - (
vﬁume
 & 7);

2210 
adpcma
[
c
].
vﬁ_shi·
 = 1 + (
vﬁume
 >> 3);

2214 
adpcma
[
c
].
adpcma_out
 = (◊dpcma[c].
adpcma_acc
 *ádpcma[c].
vﬁ_mul
)

2215 >> 
adpcma
[
c
].
vﬁ_shi·
) & ~3;

2220 
c
 = 
r
 & 0x07;

2221 i‡(
c
 >= 0x06)

2223 
r
 & 0x138) {

2226 
vﬁume
;

2228 
adpcma
[
c
].
IL
 = (
v
 & 0x1f) ^ 0x1f;

2230 
vﬁume
 = 
YM2610
.
adpcmaTL
 + 
adpcma
[
c
].
IL
;

2232 i‡(
vﬁume
 >= 63)

2234 
adpcma
[
c
].
vﬁ_mul
 = 0;

2235 
adpcma
[
c
].
vﬁ_shi·
 = 0;

2237 
adpcma
[
c
].
vﬁ_mul
 = 15 - (
vﬁume
 & 7);

2238 
adpcma
[
c
].
vﬁ_shi·
 = 1 + (
vﬁume
 >> 3);

2241 
adpcma
[
c
].
∑n
 = &
out_adpcma
[(
v
 >> 6) & 0x03];

2244 
adpcma
[
c
].
adpcma_out
 = (◊dpcma[c].
adpcma_acc
 *ádpcma[c].
vﬁ_mul
)

2245 >> 
adpcma
[
c
].
vﬁ_shi·
) & ~3;

2251 
adpcma
[
c
].
°¨t
 = ((
YM2610
.
ªgs
[0x118 + c] << 8)

2252 | 
YM2610
.
ªgs
[0x110 + 
c
]Ë<< 
ADPCMA_ADDRESS_SHIFT
;

2257 
adpcma
[
c
].
íd
 = ((
YM2610
.
ªgs
[0x128 + c] << 8)

2258 | 
YM2610
.
ªgs
[0x120 + 
c
]Ë<< 
ADPCMA_ADDRESS_SHIFT
;

2259 
adpcma
[
c
].
íd
 +(1 << 
ADPCMA_ADDRESS_SHIFT
) - 1;

2263 
	}
}

2268 
	#ADPCMB_DELTA_MAX
 (24576)

	)

2269 
	#ADPCMB_DELTA_MIN
 (127)

	)

2270 
	#ADPCMB_DELTA_DEF
 (127)

	)

2272 
	#ADPCMB_DECODE_RANGE
 32768

	)

2273 
	#ADPCMB_DECODE_MIN
 (-(
ADPCMB_DECODE_RANGE
))

	)

2274 
	#ADPCMB_DECODE_MAX
 ((
ADPCMB_DECODE_RANGE
)-1)

	)

2276 
u8
 *
	gpcmbufB
;

2277 
u32
 
	gpcmsizeB
;

2281 c⁄° 
s32
 
	gadpcmb_decode_èbÀ1
[16] = { 1, 3, 5, 7, 9, 11, 13, 15, -1, -3,

2285 c⁄° 
s32
 
	gadpcmb_decode_èbÀ2
[16] = { 57, 57, 57, 57, 77, 102, 128, 153,

2289 
u8
 
	gdøm_rightshi·
[4] = { 3, 0, 0, 0 };

2292 
	$OPNB_ADPCMB_wrôe
(
ADPCMB
 *
adpcmb
, 
r
, 
v
) {

2293 i‡(
r
 >= 0x20)

2296 
YM2610
.
ªgs
[
r
] = 
v
;

2298 
r
) {

2333 
v
 |= 0x20;

2334 
adpcmb
->
p‹t°©e
 = 
v
 & (0x80 | 0x40 | 0x20 | 0x10 | 0x01);

2336 i‡(
adpcmb
->
p‹t°©e
 & 0x80)

2339 
adpcmb
->
PCM_BSY
 = 1;

2342 
adpcmb
->
now_°ï
 = 0;

2343 
adpcmb
->
acc
 = 0;

2344 
adpcmb
->
¥ev_acc
 = 0;

2345 
adpcmb
->
adpcml
 = 0;

2346 
adpcmb
->
adpcmd
 = 
ADPCMB_DELTA_DEF
;

2347 
adpcmb
->
now_d©a
 = 0;

2352 
adpcmb
->
now_addr
 =ádpcmb->
°¨t
 << 1;

2353 
adpcmb
->
memªad
 = 2;

2356 i‡(!
pcmbufB
) {

2358 
adpcmb
->
p‹t°©e
 = 0x00;

2359 
adpcmb
->
PCM_BSY
 = 0;

2361 i‡(
adpcmb
->
íd
 >
pcmsizeB
)

2364 
adpcmb
->
íd
 = 
pcmsizeB
 - 1;

2366 i‡(
adpcmb
->
°¨t
 >
pcmsizeB
)

2369 
adpcmb
->
p‹t°©e
 = 0x00;

2370 
adpcmb
->
PCM_BSY
 = 0;

2377 
adpcmb
->
now_addr
 = 0;

2381 i‡(
adpcmb
->
p‹t°©e
 & 0x01) {

2382 
adpcmb
->
p‹t°©e
 = 0x00;

2385 
adpcmb
->
PCM_BSY
 = 0;

2388 i‡(
adpcmb
->
°©us_ch™ge_BRDY_bô
)

2389 
YM2610
.
adpcm_¨rivedEndAddªss
 |=

2390 
adpcmb
->
°©us_ch™ge_BRDY_bô
;

2395 
v
 |= 0x01;

2396 
adpcmb
->
∑n
 = &
out_dñè
[(
v
 >> 6) & 0x03];

2397 i‡((
adpcmb
->
c⁄åﬁ2
 & 3Ë!(
v
 & 3)) {

2399 i‡(
adpcmb
->
DRAMp‹tshi·
 !
døm_rightshi·
[
v
 & 3]) {

2400 
adpcmb
->
DRAMp‹tshi·
 = 
døm_rightshi·
[
v
 & 3];

2410 
adpcmb
->
°¨t
 = ((
YM2610
.
ªgs
[0x13] << 8) | YM2610.regs[0x12])

2411 << 
adpcmb
->
p‹tshi·
;

2412 
adpcmb
->
íd
 = ((
YM2610
.
ªgs
[0x15] << 8) | YM2610.regs[0x14])

2413 << 
adpcmb
->
p‹tshi·
;

2414 
adpcmb
->
íd
 +(1 <<ádpcmb->
p‹tshi·
) - 1;

2415 
adpcmb
->
limô
 = ((
YM2610
.
ªgs
[0x1d] << 8) | YM2610.regs[0x1c])

2416 << 
adpcmb
->
p‹tshi·
;

2419 
adpcmb
->
c⁄åﬁ2
 = 
v
;

2424 
adpcmb
->
°¨t
 = ((
YM2610
.
ªgs
[0x13] << 8) | YM2610.regs[0x12])

2425 << 
adpcmb
->
p‹tshi·
;

2431 
adpcmb
->
íd
 = ((
YM2610
.
ªgs
[0x15] << 8) | YM2610.regs[0x14])

2432 << 
adpcmb
->
p‹tshi·
;

2433 
adpcmb
->
íd
 +(1 <<ádpcmb->
p‹tshi·
) - 1;

2439 
adpcmb
->
dñè
 = (
YM2610
.
ªgs
[0x1a] << 8) | YM2610.regs[0x19];

2440 
adpcmb
->
°ï
 =

2441 (
u32
Ë((Ë(
adpcmb
->
dñè
 )

2442 * (
adpcmb
->
‰eqba£
));

2448 
s32
 
ﬁdvﬁ
 = 
adpcmb
->
vﬁume
;

2449 
adpcmb
->
vﬁume
 = (
v
 & 0xff)

2450 * (
adpcmb
->
ouçut_ønge
 / 256Ë/ 
ADPCMB_DECODE_RANGE
;

2457 i‡(
ﬁdvﬁ
 != 0) {

2458 
adpcmb
->
adpcml
 = (Ë((Ëadpcmb->adpcm»/ (Ë
ﬁdvﬁ


2459 * (Ë
adpcmb
->
vﬁume
);

2464 
	}
}

2466 
INLINE
 
	$OPNB_ADPCMB_CALC
(
ADPCMB
 *
adpcmb
) {

2467 
u32
 
°ï
;

2468 
d©a
;

2470 
adpcmb
->
now_°ï
 +adpcmb->
°ï
;

2471 i‡(
adpcmb
->
now_°ï
 >(1 << 
ADPCM_SHIFT
)) {

2472 
°ï
 = 
adpcmb
->
now_°ï
 >> 
ADPCM_SHIFT
;

2473 
adpcmb
->
now_°ï
 &(1 << 
ADPCM_SHIFT
) - 1;

2475 i‡(
adpcmb
->
now_addr
 =◊dpcmb->
limô
 << 1))

2476 
adpcmb
->
now_addr
 = 0;

2478 i‡(
adpcmb
->
now_addr
 =◊dpcmb->
íd
 << 1)) {

2480 i‡(
adpcmb
->
p‹t°©e
 & 0x10) {

2482 
adpcmb
->
now_addr
 =ádpcmb->
°¨t
 << 1;

2483 
adpcmb
->
acc
 = 0;

2484 
adpcmb
->
adpcmd
 = 
ADPCMB_DELTA_DEF
;

2485 
adpcmb
->
¥ev_acc
 = 0;

2488 i‡(
adpcmb
->
°©us_ch™ge_EOS_bô
)

2489 
YM2610
.
adpcm_¨rivedEndAddªss
 |=

2490 
adpcmb
->
°©us_ch™ge_EOS_bô
;

2493 
adpcmb
->
PCM_BSY
 = 0;

2495 
adpcmb
->
p‹t°©e
 = 0;

2496 
adpcmb
->
adpcml
 = 0;

2497 
adpcmb
->
¥ev_acc
 = 0;

2501 i‡(
adpcmb
->
now_addr
 & 1) {

2502 
d©a
 = 
adpcmb
->
now_d©a
 & 0x0f;

2504 
adpcmb
->
now_d©a
 = *(
pcmbufB
 + (adpcmb->
now_addr
 >> 1));

2505 
d©a
 = 
adpcmb
->
now_d©a
 >> 4;

2508 
adpcmb
->
now_addr
++;

2514 
adpcmb
->
now_addr
 &= ((1 << (24 + 1)) - 1);

2517 
adpcmb
->
¥ev_acc
 =ádpcmb->
acc
;

2520 
adpcmb
->
acc
 +(
adpcmb_decode_èbÀ1
[
d©a
] *ádpcmb->
adpcmd
 / 8);

2521 
	`Limô
(
adpcmb
->
acc
, 
ADPCMB_DECODE_MAX
, 
ADPCMB_DECODE_MIN
);

2524 
adpcmb
->
adpcmd
 = (adpcmb->adpcmd * 
adpcmb_decode_èbÀ2
[
d©a
]) / 64;

2525 
	`Limô
(
adpcmb
->
adpcmd
, 
ADPCMB_DELTA_MAX
, 
ADPCMB_DELTA_MIN
);

2530 } --
°ï
);

2536 
adpcmb
->
adpcml
 =ádpcmb->
¥ev_acc


2537 * (Ë((1 << 
ADPCM_SHIFT
Ë- 
adpcmb
->
now_°ï
);

2538 
adpcmb
->
adpcml
 +◊dpcmb->
acc
 * (Ëadpcmb->
now_°ï
);

2539 
adpcmb
->
adpcml
 = (adpcmb->adpcm»>> 
ADPCM_SHIFT
Ë* (Ëadpcmb->
vﬁume
;

2541 
adpcmb
->
adpcml
 = (◊dpcmb->
acc
 * (Ôdpcmb->
now_°ï
Ë>> 
ADPCM_SHIFT
)* (Ôdpcmb->
vﬁume
;;

2545 *
adpcmb
->
∑n
 +adpcmb->
adpcml
;

2546 
	}
}

2552 #ifde‡
SOUND_TEST


2553 
	g°ªam_pos
;

2554 
	gßm∂es_À·
;

2556 
FM_TIMERHANDLER
 
	gßv_TimîH™dÀr
;

2557 
FM_IRQHANDLER
 
	gßv_IRQH™dÀr
;

2559 
	$YM2610Inô
(
˛ock
, 
øã
, *
pcmroma
, 
pcmsizó
, *
pcmromb
,

2560 
pcmsizeb
, 
FM_TIMERHANDLER
 
TimîH™dÀr
, 
FM_IRQHANDLER
 
IRQH™dÀr
) {

2573 
	`mem£t
(&
YM2610
, 0, (YM2610));

2574 
	`mem£t
(&
SSG
, 0, (SSG));

2576 
	`OPNInôTabÀ
();

2577 
	`SSG_öô_èbÀ
();

2578 
	`OPNB_ADPCMA_öô_èbÀ
();

2581 
YM2610
.
OPN
.
P_CH
 = YM2610.
CH
;

2582 
YM2610
.
OPN
.
ST
.
˛ock
 = clock;

2583 
YM2610
.
OPN
.
ST
.
øã
 =Ñate;

2585 
YM2610
.
OPN
.
ST
.
Timî_H™dÀr
 = 
TimîH™dÀr
;

2586 
YM2610
.
OPN
.
ST
.
IRQ_H™dÀr
 = 
IRQH™dÀr
;

2587 
ßv_TimîH™dÀr
 = 
TimîH™dÀr
;

2588 
ßv_IRQH™dÀr
 = 
IRQH™dÀr
;

2590 
SSG
.
°ï
 = ((Ë
SSG_STEP
 * 
øã
 * 8Ë/ 
˛ock
;

2592 
pcmbufA
 = (
u8
 *Ë
pcmroma
;

2593 
pcmsizeA
 = 
pcmsizó
;

2595 
pcmbufB
 = (
u8
 *Ë
pcmromb
;

2596 
pcmsizeB
 = 
pcmsizeb
;

2598 
YM2610
.
adpcmb
.
°©us_ch™ge_EOS_bô
 = 0x80;

2600 
	`YM2610Re£t
();

2601 
	}
}

2603 
	$YM2610Ch™geSam∂î©e
(
øã
) {

2604 
i
;

2605 
YM2610
.
OPN
.
ST
.
øã
 =Ñate;

2606 
SSG
.
°ï
 = ((Ë
SSG_STEP
 * 
øã
 * 8Ë/ 
YM2610
.
OPN
.
ST
.
˛ock
;

2607 
	`OPNSëPªs
(&
YM2610
.
OPN
, 6 * 24, 6 * 24, 4 * 2);

2608 
i
 = 0; i < 6; i++) {

2609 
YM2610
.
adpcma
[
i
].
°ï
 = (
u32
Ë((Ë(1 << 
ADPCM_SHIFT
)

2610 * ((Ë
YM2610
.
OPN
.
ST
.
‰eqba£
) / 3.0);

2612 
YM2610
.
adpcmb
.
‰eqba£
 = YM2610.
OPN
.
ST
.freqbase;

2613 
	}
}

2615 
	$YM2610Re£t
() {

2616 
i
;

2617 
FM_OPN
 *
OPN
 = &
YM2610
.OPN;

2620 
	`OPNSëPªs
(
OPN
, 6 * 24, 6 * 24, 4 * 2);

2622 
	`SSG_ª£t
();

2624 
	`FM_IRQMASK_SET
(&
OPN
->
ST
, 0x03);

2625 
	`FM_BUSY_CLEAR
(&
OPN
->
ST
);

2626 
	`OPNWrôeMode
(
OPN
, 0x27, 0x30);

2628 
OPN
->
eg_timî
 = 0;

2629 
OPN
->
eg_˙t
 = 0;

2631 
	`FM_STATUS_RESET
(&
OPN
->
ST
, 0xff);

2633 
	`ª£t_ch™√ls
(&
OPN
->
ST
, 
YM2610
.
CH
, 6);

2635 
i
 = 0xb6; i >= 0xb4; i--) {

2636 
	`OPNWrôeReg
(
OPN
, 
i
, 0xc0);

2637 
	`OPNWrôeReg
(
OPN
, 
i
 | 0x100, 0xc0);

2639 
i
 = 0xb2; i >= 0x30; i--) {

2640 
	`OPNWrôeReg
(
OPN
, 
i
, 0x00);

2641 
	`OPNWrôeReg
(
OPN
, 
i
 | 0x100, 0x00);

2643 
i
 = 0x26; i >= 0x20; i--) {

2644 
	`OPNWrôeReg
(
OPN
, 
i
, 0x00);

2647 
i
 = 0; i < 6; i++) {

2648 
YM2610
.
adpcma
[
i
].
°ï
 = (
u32
Ë((Ë(1 << 
ADPCM_SHIFT
)

2649 * ((Ë
YM2610
.
OPN
.
ST
.
‰eqba£
) / 3.0);

2650 
YM2610
.
adpcma
[
i
].
now_addr
 = 0;

2651 
YM2610
.
adpcma
[
i
].
now_°ï
 = 0;

2652 
YM2610
.
adpcma
[
i
].
°¨t
 = 0;

2653 
YM2610
.
adpcma
[
i
].
íd
 = 0;

2654 
YM2610
.
adpcma
[
i
].
vﬁ_mul
 = 0;

2655 
YM2610
.
adpcma
[
i
].
∑n
 = &
out_adpcma
[
OUTD_CENTER
];

2656 
YM2610
.
adpcma
[
i
].
ÊagMask
 = 1 << i;

2657 
YM2610
.
adpcma
[
i
].
Êag
 = 0;

2658 
YM2610
.
adpcma
[
i
].
adpcma_acc
 = 0;

2659 
YM2610
.
adpcma
[
i
].
adpcma_°ï
 = 0;

2660 
YM2610
.
adpcma
[
i
].
adpcma_out
 = 0;

2662 
YM2610
.
adpcmaTL
 = 0x3f;

2664 
YM2610
.
adpcm_¨rivedEndAddªss
 = 0;

2667 
YM2610
.
adpcmb
.
‰eqba£
 = 
OPN
->
ST
.freqbase;

2668 
YM2610
.
adpcmb
.
p‹tshi·
 = 8;

2669 
YM2610
.
adpcmb
.
ouçut_ønge
 = 1 << 23;

2671 
YM2610
.
adpcmb
.
now_addr
 = 0;

2672 
YM2610
.
adpcmb
.
now_°ï
 = 0;

2673 
YM2610
.
adpcmb
.
°ï
 = 0;

2674 
YM2610
.
adpcmb
.
°¨t
 = 0;

2675 
YM2610
.
adpcmb
.
íd
 = 0;

2676 
YM2610
.
adpcmb
.
limô
 = ~0;

2677 
YM2610
.
adpcmb
.
vﬁume
 = 0;

2678 
YM2610
.
adpcmb
.
∑n
 = &
out_dñè
[
OUTD_CENTER
];

2679 
YM2610
.
adpcmb
.
acc
 = 0;

2680 
YM2610
.
adpcmb
.
¥ev_acc
 = 0;

2681 
YM2610
.
adpcmb
.
adpcmd
 = 127;

2682 
YM2610
.
adpcmb
.
adpcml
 = 0;

2683 
YM2610
.
adpcmb
.
p‹t°©e
 = 0x20;

2684 
YM2610
.
adpcmb
.
c⁄åﬁ2
 = 0x01;

2690 i‡(
YM2610
.
adpcmb
.
°©us_ch™ge_BRDY_bô
)

2691 
YM2610
.
adpcm_¨rivedEndAddªss
 |YM2610.
adpcmb
.
°©us_ch™ge_BRDY_bô
;

2693 #ifde‡
SOUND_TEST


2694 
°ªam_pos
 = 0;

2695 
ßm∂es_À·
 = 0;

2697 
	}
}

2702 
	$YM2610Wrôe
(
a
, 
u8
 
v
) {

2703 
FM_OPN
 *
OPN
 = &
YM2610
.OPN;

2704 
addr
;

2705 
ch
;

2707 
v
 &= 0xff;

2709 
a
 & 3) {

2711 
OPN
->
ST
.
addªss
 = 
v
;

2712 
YM2610
.
addr_A1
 = 0;

2719 i‡(
YM2610
.
addr_A1
 != 0)

2722 
	`YM2610Upd©eReque°
();

2723 
addr
 = 
OPN
->
ST
.
addªss
;

2724 
YM2610
.
ªgs
[
addr
] = 
v
;

2725 
addr
 & 0xf0) {

2728 
	`SSG_wrôe
(
addr
, 
v
);

2732 
addr
) {

2743 
	`OPNB_ADPCMB_wrôe
(&
YM2610
.
adpcmb
, 
addr
, 
v
);

2748 
u8
 
°©usmask
 = ~
v
;

2750 
ch
 = 0; ch < 6; ch++)

2751 
YM2610
.
adpcma
[
ch
].
ÊagMask
 = 
°©usmask
 & (1 << ch);

2753 
YM2610
.
adpcmb
.
°©us_ch™ge_EOS_bô
 = 
°©usmask
 & 0x80;

2756 
YM2610
.
adpcm_¨rivedEndAddªss
 &
°©usmask
;

2763 
	`OPNWrôeMode
(
OPN
, 
addr
, 
v
);

2768 
	`OPNWrôeReg
(
OPN
, 
addr
, 
v
);

2774 
OPN
->
ST
.
addªss
 = 
v
;

2775 
YM2610
.
addr_A1
 = 1;

2779 i‡(
YM2610
.
addr_A1
 != 1)

2782 
	`YM2610Upd©eReque°
();

2783 
addr
 = 
YM2610
.
OPN
.
ST
.
addªss
 | 0x100;

2784 
YM2610
.
ªgs
[
addr
 | 0x100] = 
v
;

2785 i‡(
addr
 < 0x130)

2787 
	`OPNB_ADPCMA_wrôe
(
addr
, 
v
);

2789 
	`OPNWrôeReg
(
OPN
, 
addr
, 
v
);

2793  
OPN
->
ST
.
úq
;

2794 
	}
}

2796 
u8
 
	$YM2610Ród
(
a
) {

2797 
addr
 = 
YM2610
.
OPN
.
ST
.
addªss
;

2799 
a
 & 3) {

2801  
	`FM_STATUS_FLAG
(&
YM2610
.
OPN
.
ST
) & 0x83;

2804 i‡(
addr
 < 
SSG_PORTA
)

2805  
YM2610
.
ªgs
[
addr
];

2806 i‡(
addr
 == 0xff)

2815  
YM2610
.
adpcm_¨rivedEndAddªss
;

2818 
	}
}

2820 
	$YM2610TimîOvî
(
ch
) {

2821 
FM_ST
 *
ST
 = &
YM2610
.
OPN
.ST;

2823 i‡(
ch
) {

2825 
	`TimîBOvî
(
ST
);

2829 
	`YM2610Upd©eReque°
();

2832 
	`TimîAOvî
(
ST
);

2835 i‡(
ST
->
mode
 & 0x80) {

2837 
	`CSMKeyC⁄åﬁl
(&
YM2610
.
CH
[2]);

2841  
ST
->
úq
;

2842 
	}
}

2843 
s16
 
	gmixög_buf„r
[2][16384];

2844 
Uöt16
 
∂ay_buf„r
[16384];

2848 
	$YM2610Upd©e_°ªam
(
Àngth
) {

2849 
FM_OPN
 *
OPN
 = &
YM2610
.OPN;

2850 
i
, 
j
, 
ouä
;

2851 
FMSAMPLE_MIX
 
…
, 
π
;

2852 
FM_CH
 *
cch
[6];

2853 
Uöt16
 *
∂
 = 
∂ay_buf„r
;

2856 
cch
[0] = &
YM2610
.
CH
[1];

2857 
cch
[1] = &
YM2610
.
CH
[2];

2858 
cch
[2] = &
YM2610
.
CH
[4];

2859 
cch
[3] = &
YM2610
.
CH
[5];

2862 
	`ª‰esh_fc_eg_ch™
(
cch
[0]);

2863 i‡(
OPN
->
ST
.
mode
 & 0xc0) {

2865 i‡(
cch
[1]->
SLOT
[
SLOT1
].
In¸
 == -1) {

2867 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT1
], 
OPN
->
SL3
.
fc
[1],

2868 
OPN
->
SL3
.
kcode
[1]);

2869 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT2
], 
OPN
->
SL3
.
fc
[2],

2870 
OPN
->
SL3
.
kcode
[2]);

2871 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT3
], 
OPN
->
SL3
.
fc
[0],

2872 
OPN
->
SL3
.
kcode
[0]);

2873 
	`ª‰esh_fc_eg_¶Ÿ
(&
cch
[1]->
SLOT
[
SLOT4
], cch[1]->
fc
, cch[1]->
kcode
);

2876 
	`ª‰esh_fc_eg_ch™
(
cch
[1]);

2877 
	`ª‰esh_fc_eg_ch™
(
cch
[2]);

2878 
	`ª‰esh_fc_eg_ch™
(
cch
[3]);

2881 
ouä
 = 
	`SSG_ˇlc_cou¡
(
Àngth
);

2884 
i
 = 0; i < 
Àngth
; i++) {

2886 
	`adv™˚_lfo
(
OPN
);

2889 
out_adpcma
[
OUTD_LEFT
] = out_adpcma[
OUTD_RIGHT
] =

2890 
out_adpcma
[
OUTD_CENTER
] = 0;

2891 
out_dñè
[
OUTD_LEFT
] = out_dñè[
OUTD_RIGHT
] = out_dñè[
OUTD_CENTER
] =

2895 
out_fm
[1] = 0;

2896 
out_fm
[2] = 0;

2897 
out_fm
[4] = 0;

2898 
out_fm
[5] = 0;

2901 
out_ssg
 = 0;

2904 
OPN
->
eg_timî
 +OPN->
eg_timî_add
;

2905 
OPN
->
eg_timî
 >OPN->
eg_timî_ovîÊow
) {

2906 
OPN
->
eg_timî
 -OPN->
eg_timî_ovîÊow
;

2907 
OPN
->
eg_˙t
++;

2909 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[0]->
SLOT
[
SLOT1
]);

2910 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[1]->
SLOT
[
SLOT1
]);

2911 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[2]->
SLOT
[
SLOT1
]);

2912 
	`adv™˚_eg_ch™√l
(
OPN
, &
cch
[3]->
SLOT
[
SLOT1
]);

2916 
	`ch™_ˇlc
(
OPN
, 
cch
[0]);

2917 
	`ch™_ˇlc
(
OPN
, 
cch
[1]);

2918 
	`ch™_ˇlc
(
OPN
, 
cch
[2]);

2919 
	`ch™_ˇlc
(
OPN
, 
cch
[3]);

2922 
ouä
 = 
	`SSG_CALC
(outn);

2924 i‡(
YM2610
.
adpcmb
.
p‹t°©e
 & 0x80)

2925 
	`OPNB_ADPCMB_CALC
(&
YM2610
.
adpcmb
);

2927 
j
 = 0; j < 6; j++) {

2929 i‡(
YM2610
.
adpcma
[
j
].
Êag
)

2930 
	`OPNB_ADPCMA_ˇlc_ch™
(&
YM2610
.
adpcma
[
j
]);

2933 
…
 = 
out_adpcma
[
OUTD_LEFT
] + out_adpcma[
OUTD_CENTER
];

2934 
π
 = 
out_adpcma
[
OUTD_RIGHT
] + out_adpcma[
OUTD_CENTER
];

2936 
…
 +(
out_dñè
[
OUTD_LEFT
] + out_dñè[
OUTD_CENTER
]) >> 9;

2937 
π
 +(
out_dñè
[
OUTD_RIGHT
] + out_dñè[
OUTD_CENTER
]) >> 9;

2939 
…
 +
out_ssg
;

2940 
π
 +
out_ssg
;

2942 
…
 +((
out_fm
[1] >> 1Ë& 
OPN
->
∑n
[2]);

2943 
π
 +((
out_fm
[1] >> 1Ë& 
OPN
->
∑n
[3]);

2944 
…
 +((
out_fm
[2] >> 1Ë& 
OPN
->
∑n
[4]);

2945 
π
 +((
out_fm
[2] >> 1Ë& 
OPN
->
∑n
[5]);

2947 
…
 +((
out_fm
[4] >> 1Ë& 
OPN
->
∑n
[8]);

2948 
π
 +((
out_fm
[4] >> 1Ë& 
OPN
->
∑n
[9]);

2949 
…
 +((
out_fm
[5] >> 1Ë& 
OPN
->
∑n
[10]);

2950 
π
 +((
out_fm
[5] >> 1Ë& 
OPN
->
∑n
[11]);

2952 
…
 <<= 1;

2953 
π
 <<= 1;

2955 
	`Limô
(
…
, 
MAXOUT
, 
MINOUT
);

2956 
	`Limô
(
π
, 
MAXOUT
, 
MINOUT
);

2961 *
∂
++ = 
…
;

2962 *
∂
++ = 
π
;

2966 
	`INTERNAL_TIMER_A
–
OPN
->
ST
 , 
cch
[1] );

2967 } 
	`INTERNAL_TIMER_B
(
OPN
->
ST
,
Àngth
);

2969 
	}
}

2971 
	$YM2610Upd©e
(*
p
) {

2972 
i
;

2973 
s16
 *
buf„r
 = (s16 *Ë
p
;

2974 
s16
 
…
, 
π
;

2978 
	`YM2610Upd©e_°ªam
(
SOUND_SAMPLES
 >> 2);

2979 
i
 = 0; i < 
SOUND_SAMPLES
 >> 2; i++) {

2980 
…
 = 
mixög_buf„r
[0][
i
];

2981 
π
 = 
mixög_buf„r
[1][
i
];

2982 *
buf„r
++ = 
…
;

2983 *
buf„r
++ = 
π
;

2984 *
buf„r
++ = 
…
;

2985 *
buf„r
++ = 
π
;

2986 *
buf„r
++ = 
…
;

2987 *
buf„r
++ = 
π
;

2988 *
buf„r
++ = 
…
;

2989 *
buf„r
++ = 
π
;

2994 
	`YM2610Upd©e_°ªam
(
SOUND_SAMPLES
 >> 1);

2995 
i
 = 0; i < 
SOUND_SAMPLES
 >> 1; i++) {

2996 
…
 = 
mixög_buf„r
[0][
i
];

2997 
π
 = 
mixög_buf„r
[1][
i
];

2998 *
buf„r
++ = 
…
;

2999 *
buf„r
++ = 
π
;

3000 *
buf„r
++ = 
…
;

3001 *
buf„r
++ = 
π
;

3006 
	`YM2610Upd©e_°ªam
(
SOUND_SAMPLES
);

3007 
i
 = 0; i < 
SOUND_SAMPLES
; i++) {

3008 *
buf„r
++ = 
mixög_buf„r
[0][
i
];

3009 *
buf„r
++ = 
mixög_buf„r
[1][
i
];

3013 
	}
}

3015 #ifde‡
SOUND_TEST


3016 
	g°ªam_pos
;

3017 
	gßm∂es_À·
;

3019 
	$YM2610Upd©e_SoundTe°
(
p
)

3021 
i
, 
Àngth
;

3022 
s16
 *
buf„r
 = (s16 *)
p
;

3024 
Àngth
 = 
SOUND_SAMPLES
;

3026 i‡(
ßm∂es_À·
)

3028 
i
 = 0; i < 
ßm∂es_À·
; i++)

3030 *
buf„r
++ = 
mixög_buf„r
[0][
°ªam_pos
];

3031 *
buf„r
++ = 
mixög_buf„r
[1][
°ªam_pos
];

3032 
°ªam_pos
++;

3033 
Àngth
--;

3037 
√xt_‰ame
:

3038 
	`timî_upd©e_sub˝u
();

3039 
	`YM2610Upd©e_°ªam
(736);

3040 
ßm∂es_À·
 = 736;

3041 
°ªam_pos
 = 0;

3043 
i
 = 0; i < 736; i++)

3045 *
buf„r
++ = 
mixög_buf„r
[0][
°ªam_pos
];

3046 *
buf„r
++ = 
mixög_buf„r
[1][
°ªam_pos
];

3047 
°ªam_pos
++;

3048 
ßm∂es_À·
--;

3050 i‡(--
Àngth
 == 0) ;

3052 i‡(
Àngth
Ë
√xt_‰ame
;

3053 
	}
}

3056 
	$ym2610_mk°©e
(
gzFûe
 *
gzf
, 
mode
) {

3057 
r
;

3061 i‡(
°©e_vîsi⁄
 =
ST_VER2
 && 
mode
 =
STREAD
) {

3062 
ym2610_t
 
ym2610_ßv
;

3063 
	`mem˝y
(&
ym2610_ßv
, &
YM2610
, (YM2610));

3064 
	`mk°©e_d©a
(
gzf
, &
YM2610
, (YM2610), 
mode
);

3066 
fm
, 
ch
, 
¶Ÿ
;

3067 
YM2610
.
OPN
.
ST
.
Timî_H™dÀr
 = 
ym2610_ßv
.OPN.ST.Timer_Handler;

3068 
YM2610
.
OPN
.
ST
.
IRQ_H™dÀr
 = 
ym2610_ßv
.OPN.ST.IRQ_Handler;

3069 
ch
 = 0; ch < 6; ch++) {

3070 
YM2610
.
CH
[
ch
].
c⁄√˘1
 = 
ym2610_ßv
.CH[ch].connect1;

3071 
YM2610
.
CH
[
ch
].
c⁄√˘2
 = 
ym2610_ßv
.CH[ch].connect2;

3072 
YM2610
.
CH
[
ch
].
c⁄√˘3
 = 
ym2610_ßv
.CH[ch].connect3;

3073 
YM2610
.
CH
[
ch
].
c⁄√˘4
 = 
ym2610_ßv
.CH[ch].connect4;

3074 
YM2610
.
CH
[
ch
].
mem_c⁄√˘
 = 
ym2610_ßv
.CH[ch].mem_connect;

3075 
¶Ÿ
 = 0; slot < 4; slot++) {

3076 
YM2610
.
CH
[
ch
].
SLOT
[
¶Ÿ
].
DT
 = 
ym2610_ßv
.CH[ch].SLOT[slot].DT;

3079 
YM2610
.
OPN
.
P_CH
 = 
ym2610_ßv
.OPN.P_CH;

3080 
ch
 = 0; ch < 6; ch++) {

3081 
YM2610
.
adpcma
[
ch
].
∑n
 = 
ym2610_ßv
.adpcma[ch].pan;

3083 
YM2610
.
adpcmb
.
∑n
 = 
ym2610_ßv
.adpcmb.pan;

3085 
fm
, 
ch
, 
¶Ÿ
;

3087 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
ªgs
, 512, 
mode
);

3088 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
BusyExpúe
, 4, 
mode
);

3089 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
addªss
, 1, 
mode
);

3090 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
úq
, 1, 
mode
);

3091 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
úqmask
, 1, 
mode
);

3092 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
°©us
, 1, 
mode
);

3093 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
mode
, 4, mode);

3094 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
¥esˇÀr_£l
, 1, 
mode
);

3095 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
‚_h
, 1, 
mode
);

3096 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
TA
, 4, 
mode
);

3097 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
TAC
, 4, 
mode
);

3098 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
TB
, 1, 
mode
);

3099 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
ST
.
TBC
, 4, 
mode
);

3101 
ch
 = 0; ch < 6; ch++) {

3102 
	`mk°©e_d©a
(
gzf
, 
YM2610
.
CH
[
ch
].
›1_out
, 4 * 2, 
mode
);

3103 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
CH
[
ch
].
fc
, 4, 
mode
);

3105 
¶Ÿ
 = 0; slot < 4; slot++) {

3106 
FM_SLOT
 *
SLOT
 = &
YM2610
.
CH
[
ch
].SLOT[
¶Ÿ
];

3108 
	`mk°©e_d©a
(
gzf
, &
SLOT
->
pha£
, 4, 
mode
);

3109 
	`mk°©e_d©a
(
gzf
, &
SLOT
->
°©e
, 1, 
mode
);

3110 
	`mk°©e_d©a
(
gzf
, &
SLOT
->
vﬁume
, 4, 
mode
);

3114 
	`mk°©e_d©a
(
gzf
, 
YM2610
.
OPN
.
SL3
.
fc
, 4 * 3, 
mode
);

3115 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
OPN
.
SL3
.
‚_h
, 1, 
mode
);

3116 
	`mk°©e_d©a
(
gzf
, 
YM2610
.
OPN
.
SL3
.
kcode
, 3, 
mode
);

3118 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
addr_A1
, 1, 
mode
);

3119 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcm_¨rivedEndAddªss
, 1, 
mode
);

3121 
ch
 = 0; ch < 6; ch++) {

3122 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
Êag
, 1, 
mode
);

3123 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
now_d©a
, 1, 
mode
);

3124 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
now_addr
, 4, 
mode
);

3125 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
now_°ï
, 4, 
mode
);

3126 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
adpcma_acc
, 4, 
mode
);

3127 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
adpcma_°ï
, 4, 
mode
);

3128 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcma
[
ch
].
adpcma_out
, 4, 
mode
);

3131 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
p‹t°©e
, 1, 
mode
);

3132 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
now_addr
, 4, 
mode
);

3133 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
now_°ï
, 4, 
mode
);

3134 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
acc
, 4, 
mode
);

3135 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
¥ev_acc
, 4, 
mode
);

3136 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
adpcmd
, 4, 
mode
);

3137 
	`mk°©e_d©a
(
gzf
, &
YM2610
.
adpcmb
.
adpcml
, 4, 
mode
);

3140 i‡(
mode
 =
STREAD
) {

3142 
r
 = 0;Ñ < 16;Ñ++) {

3143 
	`SSG_wrôe
(0, 
r
);

3144 
	`SSG_wrôe
(1, 
YM2610
.
ªgs
[
r
]);

3147 
r
 = 0x30;Ñ < 0x9e;Ñ++) {

3148 i‡((
r
 & 3) != 3) {

3149 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
, YM2610.
ªgs
[r]);

3150 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
 | 0x100, YM2610.
ªgs
[r | 0x100]);

3154 
r
 = 0xb0;Ñ < 0xb6;Ñ++) {

3155 i‡((
r
 & 3) != 3) {

3156 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
, YM2610.
ªgs
[r]);

3157 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
 | 0x100, YM2610.
ªgs
[r | 0x100]);

3161 
	`OPNB_ADPCMA_wrôe
(0x101, 
YM2610
.
ªgs
[0x101]);

3162 
r
 = 0;Ñ < 6;Ñ++) {

3163 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x108, 
YM2610
.
ªgs
[r + 0x108]);

3164 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x110, 
YM2610
.
ªgs
[r + 0x110]);

3165 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x118, 
YM2610
.
ªgs
[r + 0x118]);

3166 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x120, 
YM2610
.
ªgs
[r + 0x120]);

3167 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x128, 
YM2610
.
ªgs
[r + 0x128]);

3170 
YM2610
.
adpcmb
.
vﬁume
 = 0;

3172 
r
 = 1;Ñ < 16;Ñ++)

3173 
	`OPNB_ADPCMB_wrôe
(&
YM2610
.
adpcmb
, 
r
 + 0x10, YM2610.
ªgs
[r + 0x10]);

3175 i‡(
pcmbufB
)

3176 
YM2610
.
adpcmb
.
now_d©a
 = *(
pcmbufB
 + (YM2610.adpcmb.
now_addr
 >> 1));

3178 
	}
}

3180 #ifde‡
SAVE_STATE


3182 
	$STATE_SAVE
–
ym2610
 )

3184 
¶Ÿ
, 
ch
;

3186 
	`°©e_ßve_byã
(
YM2610
.
ªgs
, 512);

3188 
	`°©e_ßve_doubÀ
(&
YM2610
.
OPN
.
ST
.
BusyExpúe
, 1);

3189 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
addªss
, 1);

3190 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
úq
, 1);

3191 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
úqmask
, 1);

3192 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
°©us
, 1);

3193 
	`°©e_ßve_l⁄g
(&
YM2610
.
OPN
.
ST
.
mode
, 1);

3194 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
¥esˇÀr_£l
, 1);

3195 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
‚_h
, 1);

3196 
	`°©e_ßve_l⁄g
(&
YM2610
.
OPN
.
ST
.
TA
, 1);

3197 
	`°©e_ßve_l⁄g
(&
YM2610
.
OPN
.
ST
.
TAC
, 1);

3198 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
ST
.
TB
, 1);

3199 
	`°©e_ßve_l⁄g
(&
YM2610
.
OPN
.
ST
.
TBC
, 1);

3201 
ch
 = 0; ch < 6; ch++)

3203 
	`°©e_ßve_l⁄g
(
YM2610
.
CH
[
ch
].
›1_out
, 2);

3204 
	`°©e_ßve_l⁄g
(&
YM2610
.
CH
[
ch
].
fc
, 1);

3206 
¶Ÿ
 = 0; slot < 4; slot++)

3208 
FM_SLOT
 *
SLOT
 = &
YM2610
.
CH
[
ch
].SLOT[
¶Ÿ
];

3210 
	`°©e_ßve_l⁄g
(&
SLOT
->
pha£
, 1);

3211 
	`°©e_ßve_byã
(&
SLOT
->
°©e
, 1);

3212 
	`°©e_ßve_l⁄g
(&
SLOT
->
vﬁume
, 1);

3216 
	`°©e_ßve_l⁄g
(
YM2610
.
OPN
.
SL3
.
fc
, 3);

3217 
	`°©e_ßve_byã
(&
YM2610
.
OPN
.
SL3
.
‚_h
, 1);

3218 
	`°©e_ßve_byã
(
YM2610
.
OPN
.
SL3
.
kcode
, 3);

3220 
	`°©e_ßve_byã
(&
YM2610
.
addr_A1
, 1);

3221 
	`°©e_ßve_byã
(&
YM2610
.
adpcm_¨rivedEndAddªss
, 1);

3223 
ch
 = 0; ch < 6; ch++)

3225 
	`°©e_ßve_byã
(&
YM2610
.
adpcma
[
ch
].
Êag
, 1);

3226 
	`°©e_ßve_byã
(&
YM2610
.
adpcma
[
ch
].
now_d©a
, 1);

3227 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcma
[
ch
].
now_addr
, 1);

3228 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcma
[
ch
].
now_°ï
, 1);

3229 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_acc
, 1);

3230 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_°ï
, 1);

3231 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_out
, 1);

3234 
	`°©e_ßve_byã
(&
YM2610
.
adpcmb
.
p‹t°©e
, 1);

3235 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
now_addr
, 1);

3236 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
now_°ï
, 1);

3237 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
acc
, 1);

3238 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
¥ev_acc
, 1);

3239 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
adpcmd
, 1);

3240 
	`°©e_ßve_l⁄g
(&
YM2610
.
adpcmb
.
adpcml
, 1);

3242 
	`°©e_ßve_l⁄g
(&
›ti⁄_ßm∂î©e
, 1);

3243 
	}
}

3245 
	$STATE_LOAD
–
ym2610
 )

3247 
¶Ÿ
, 
ch
, 
r
;

3249 
	`°©e_lﬂd_byã
(
YM2610
.
ªgs
, 512);

3251 
	`°©e_lﬂd_doubÀ
(&
YM2610
.
OPN
.
ST
.
BusyExpúe
, 1);

3252 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
addªss
, 1);

3253 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
úq
, 1);

3254 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
úqmask
, 1);

3255 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
°©us
, 1);

3256 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
OPN
.
ST
.
mode
, 1);

3257 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
¥esˇÀr_£l
, 1);

3258 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
‚_h
, 1);

3259 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
OPN
.
ST
.
TA
, 1);

3260 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
OPN
.
ST
.
TAC
, 1);

3261 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
ST
.
TB
, 1);

3262 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
OPN
.
ST
.
TBC
, 1);

3264 
ch
 = 0; ch < 6; ch++)

3266 
	`°©e_lﬂd_l⁄g
(
YM2610
.
CH
[
ch
].
›1_out
, 2);

3267 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
CH
[
ch
].
fc
, 1);

3269 
¶Ÿ
 = 0; slot < 4; slot++)

3271 
FM_SLOT
 *
SLOT
 = &
YM2610
.
CH
[
ch
].SLOT[
¶Ÿ
];

3273 
	`°©e_lﬂd_l⁄g
(&
SLOT
->
pha£
, 1);

3274 
	`°©e_lﬂd_byã
(&
SLOT
->
°©e
, 1);

3275 
	`°©e_lﬂd_l⁄g
(&
SLOT
->
vﬁume
, 1);

3279 
	`°©e_lﬂd_l⁄g
(
YM2610
.
OPN
.
SL3
.
fc
, 3);

3280 
	`°©e_lﬂd_byã
(&
YM2610
.
OPN
.
SL3
.
‚_h
, 1);

3281 
	`°©e_lﬂd_byã
(
YM2610
.
OPN
.
SL3
.
kcode
, 3);

3283 
	`°©e_lﬂd_byã
(&
YM2610
.
addr_A1
, 1);

3284 
	`°©e_lﬂd_byã
(&
YM2610
.
adpcm_¨rivedEndAddªss
, 1);

3286 
ch
 = 0; ch < 6; ch++)

3288 
	`°©e_lﬂd_byã
(&
YM2610
.
adpcma
[
ch
].
Êag
, 1);

3289 
	`°©e_lﬂd_byã
(&
YM2610
.
adpcma
[
ch
].
now_d©a
, 1);

3290 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcma
[
ch
].
now_addr
, 1);

3291 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcma
[
ch
].
now_°ï
, 1);

3292 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_acc
, 1);

3293 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_°ï
, 1);

3294 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcma
[
ch
].
adpcma_out
, 1);

3297 
	`°©e_lﬂd_byã
(&
YM2610
.
adpcmb
.
p‹t°©e
, 1);

3298 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
now_addr
, 1);

3299 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
now_°ï
, 1);

3300 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
acc
, 1);

3301 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
¥ev_acc
, 1);

3302 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
adpcmd
, 1);

3303 
	`°©e_lﬂd_l⁄g
(&
YM2610
.
adpcmb
.
adpcml
, 1);

3305 
	`°©e_lﬂd_l⁄g
(&
›ti⁄_ßm∂î©e
, 1);

3307 
r
 = 0;Ñ < 16;Ñ++)

3309 
	`SSG_wrôe
(0, 
r
);

3310 
	`SSG_wrôe
(1, 
YM2610
.
ªgs
[
r
]);

3313 
r
 = 0x30;Ñ <0x9e;Ñ++)

3315 i‡((
r
 & 3) != 3)

3317 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
, YM2610.
ªgs
[r]);

3318 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
 | 0x100, YM2610.
ªgs
[r | 0x100]);

3322 
r
 = 0xb0;Ñ < 0xb6;Ñ++)

3324 i‡((
r
 & 3) != 3)

3326 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
, YM2610.
ªgs
[r]);

3327 
	`OPNWrôeReg
(&
YM2610
.
OPN
, 
r
 | 0x100, YM2610.
ªgs
[r | 0x100]);

3331 
	`OPNB_ADPCMA_wrôe
(0x101, 
YM2610
.
ªgs
[0x101]);

3332 
r
 = 0;Ñ < 6;Ñ++)

3334 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x108, 
YM2610
.
ªgs
[r + 0x108]);

3335 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x110, 
YM2610
.
ªgs
[r + 0x110]);

3336 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x118, 
YM2610
.
ªgs
[r + 0x118]);

3337 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x120, 
YM2610
.
ªgs
[r + 0x120]);

3338 
	`OPNB_ADPCMA_wrôe
(
r
 + 0x128, 
YM2610
.
ªgs
[r + 0x128]);

3341 
YM2610
.
adpcmb
.
vﬁume
 = 0;

3343 
r
 = 1;Ñ < 16;Ñ++)

3344 
	`OPNB_ADPCMB_wrôe
(&
YM2610
.
adpcmb
, 
r
 + 0x10, YM2610.
ªgs
[r + 0x10]);

3346 i‡(
pcmbufB
)

3347 
YM2610
.
adpcmb
.
now_d©a
 = *(
pcmbufB
 + (YM2610.adpcmb.
now_addr
 >> 1));

3348 
	}
}

	@src/ym2610/ym2610.h

9 #i‚de‡
_YM2610_H_


10 
	#_YM2610_H_


	)

12 
	~"mvs.h
"

13 
	~"../timî.h
"

18 
	#FM_GET_TIME_NOW
(Ë
	`timî_gë_time
()

	)

20 
s16
 
	tFMSAMPLE
;

21 
s32
 
	tFMSAMPLE_MIX
;

22 
	#TIMER_SH
 16

	)

24 (*
	tFM_TIMERHANDLER
)(
	tch™√l
, 
	tcou¡
, 
	t°ïTime
);

25 (*
	tFM_IRQHANDLER
)(
	túq
);

27 
	`YM2610Inô
(
ba£˛ock
, 
øã
,

28 *
pcmroma
, 
pcmsizó
,

29 *
pcmromb
, 
pcmsizeb
,

30 
FM_TIMERHANDLER
 
TimîH™dÀr
,

31 
FM_IRQHANDLER
 
IRQH™dÀr
);

32 
	`YM2610Ch™geSam∂î©e
(
øã
);

33 
	`YM2610Re£t
();

34 
	`YM2610Wrôe
(
addr
, 
u8
 
vÆue
);

35 
u8
 
	`YM2610Ród
(
addr
);

36 
	`YM2610TimîOvî
(
ch™√l
);

38 
	`YM2610Upd©e
(*
p
);

39 
	`YM2610Upd©e_°ªam
(
Àngth
);

41 #ifde‡
SOUND_TEST


42 
	`YM2610Upd©e_SoundTe°
(
p
);

45 #ifde‡
SAVE_STATE


46 
	`STATE_SAVE
–
ym2610
 );

47 
	`STATE_LOAD
–
ym2610
 );

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

78 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


79 
	~<bôs/°©.h
>

81 
	#S_IFMT
 
__S_IFMT


	)

82 
	#S_IFDIR
 
__S_IFDIR


	)

83 
	#S_IFCHR
 
__S_IFCHR


	)

84 
	#S_IFBLK
 
__S_IFBLK


	)

85 
	#S_IFREG
 
__S_IFREG


	)

86 #ifde‡
__S_IFIFO


87 
	#S_IFIFO
 
__S_IFIFO


	)

89 #ifde‡
__S_IFLNK


90 
	#S_IFLNK
 
__S_IFLNK


	)

92 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


93 
	#S_IFSOCK
 
__S_IFSOCK


	)

98 
	#S_ISUID
 
__S_ISUID


	)

99 
	#S_ISGID
 
__S_ISGID


	)

101 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


103 
	#S_ISVTX
 
__S_ISVTX


	)

106 
	#S_IRUSR
 
__S_IREAD


	)

107 
	#S_IWUSR
 
__S_IWRITE


	)

108 
	#S_IXUSR
 
__S_IEXEC


	)

110 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

112 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

113 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

114 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

116 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

118 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

119 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

120 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

122 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

125 #ifdef 
__USE_MISC


126 #i‚de‡
R_OK


129 
	#R_OK
 4

	)

130 
	#W_OK
 2

	)

131 
	#X_OK
 1

	)

132 
	#F_OK
 0

	)

137 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


138 
	#SEEK_SET
 0

	)

139 
	#SEEK_CUR
 1

	)

140 
	#SEEK_END
 2

	)

148 
f˙é
 (
__fd
, 
__cmd
, ...);

157 #i‚de‡
__USE_FILE_OFFSET64


158 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

160 #ifde‡
__REDIRECT


161 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

162 
	`__n⁄nuŒ
 ((1));

164 
	#›í
 
›í64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

171 #ifde‡
__USE_ATFILE


181 #i‚de‡
__USE_FILE_OFFSET64


182 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

183 
	`__n⁄nuŒ
 ((2));

185 #ifde‡
__REDIRECT


186 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

187 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

189 
	#›í©
 
›í©64


	)

192 #ifde‡
__USE_LARGEFILE64


193 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

194 
	`__n⁄nuŒ
 ((2));

203 #i‚de‡
__USE_FILE_OFFSET64


204 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

206 #ifde‡
__REDIRECT


207 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

208 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

210 
	#¸ót
 
¸ót64


	)

213 #ifde‡
__USE_LARGEFILE64


214 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

217 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

218 && !
deföed
 
__USE_POSIX
))

227 
	#F_ULOCK
 0

	)

228 
	#F_LOCK
 1

	)

229 
	#F_TLOCK
 2

	)

230 
	#F_TEST
 3

	)

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

238 
	#lockf
 
lockf64


	)

241 #ifde‡
__USE_LARGEFILE64


242 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

246 #ifde‡
__USE_XOPEN2K


249 #i‚de‡
__USE_FILE_OFFSET64


250 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

251 
__advi£
Ë
__THROW
;

253 #ifde‡
__REDIRECT_NTH


254 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

255 
__off64_t
 
__Àn
, 
__advi£
),

256 
posix_Ádvi£64
);

258 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

261 #ifde‡
__USE_LARGEFILE64


262 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

263 
__advi£
Ë
__THROW
;

271 #i‚de‡
__USE_FILE_OFFSET64


272 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

274 #ifde‡
__REDIRECT


275 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

276 
__off64_t
 
__Àn
),

277 
posix_ÁŒoˇã64
);

279 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

282 #ifde‡
__USE_LARGEFILE64


283 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

289 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

290 && 
deföed
 
__va_¨g_∑ck_Àn


291 
	~<bôs/f˙é2.h
>

294 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

12 
	#__KERNEL_DIV_ROUND_UP
(
n
, 
d
Ë((“Ë+ (dË- 1Ë/ (d))

	)

	@/usr/include/linux/version.h

1 
	#LINUX_VERSION_CODE
 264478

	)

2 
	#KERNEL_VERSION
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/memory.h

22 #i‚def 
_MEMORY_H


23 
	#_MEMORY_H
 1

	)

25 
	~<„©uªs.h
>

28 #i‚def 
_STRING_H


29 
	~<°rög.h
>

	@/usr/include/menu.h

35 #i‚de‡
ETI_MENU


36 
	#ETI_MENU


	)

38 #ifde‡
AMIGA


39 
	#TEXT
 
TEXT_ncur£s


	)

42 
	~<cur£s.h
>

43 
	~<ëi.h
>

45 #ifde‡
__˝lu•lus


49 
	tMíu_O±i⁄s
;

50 
	tIãm_O±i⁄s
;

53 
	#O_ONEVALUE
 (0x01)

	)

54 
	#O_SHOWDESC
 (0x02)

	)

55 
	#O_ROWMAJOR
 (0x04)

	)

56 
	#O_IGNORECASE
 (0x08)

	)

57 
	#O_SHOWMATCH
 (0x10)

	)

58 
	#O_NONCYCLIC
 (0x20)

	)

59 
	#O_MOUSE_MENU
 (0x40)

	)

62 
	#O_SELECTABLE
 (0x01)

	)

66 c⁄° * 
°r
;

67 
Àngth
;

68 } 
	tTEXT
;

70 
	sègITEM


72 
TEXT
 
«me
;

73 
TEXT
 
des¸ùti⁄
;

74 
ègMENU
 *
imíu
;

75 *
u£Ωå
;

76 
Iãm_O±i⁄s
 
›t
;

77 
ödex
;

78 
y
;

79 
x
;

80 
boﬁ
 
vÆue
;

82 
ègITEM
 *
À·
;

83 
ègITEM
 *
right
;

84 
ègITEM
 *
up
;

85 
ègITEM
 *
down
;

87 } 
	tITEM
;

89 (*
Míu_Hook
)(
	tègMENU
 *);

91 
	sègMENU


93 
height
;

94 
width
;

95 
rows
;

96 
cﬁs
;

97 
‰ows
;

98 
fcﬁs
;

99 
¨ows
;

100 
«mñí
;

101 
des˛í
;

102 
m¨kÀn
;

103 
ôemÀn
;

104 
•c_desc
;

105 
•c_cﬁs
;

106 
•c_rows
;

107 *
∑âîn
;

108 
pödex
;

109 
WINDOW
 *
wö
;

110 
WINDOW
 *
sub
;

111 
WINDOW
 *
u£rwö
;

112 
WINDOW
 *
u£rsub
;

113 
ITEM
 **
ôems
;

114 
nôems
;

115 
ITEM
 *
curôem
;

116 
t›row
;

117 
chty≥
 
f‹e
;

118 
chty≥
 
back
;

119 
chty≥
 
gªy
;

120 
∑d
;

122 
Míu_Hook
 
míuöô
;

123 
Míu_Hook
 
míuãrm
;

124 
Míu_Hook
 
ôemöô
;

125 
Míu_Hook
 
ôemãrm
;

127 *
u£Ωå
;

128 *
m¨k
;

130 
Míu_O±i⁄s
 
›t
;

131 
°©us
;

133 } 
	tMENU
;

138 
	#REQ_LEFT_ITEM
 (
KEY_MAX
 + 1)

	)

139 
	#REQ_RIGHT_ITEM
 (
KEY_MAX
 + 2)

	)

140 
	#REQ_UP_ITEM
 (
KEY_MAX
 + 3)

	)

141 
	#REQ_DOWN_ITEM
 (
KEY_MAX
 + 4)

	)

142 
	#REQ_SCR_ULINE
 (
KEY_MAX
 + 5)

	)

143 
	#REQ_SCR_DLINE
 (
KEY_MAX
 + 6)

	)

144 
	#REQ_SCR_DPAGE
 (
KEY_MAX
 + 7)

	)

145 
	#REQ_SCR_UPAGE
 (
KEY_MAX
 + 8)

	)

146 
	#REQ_FIRST_ITEM
 (
KEY_MAX
 + 9)

	)

147 
	#REQ_LAST_ITEM
 (
KEY_MAX
 + 10)

	)

148 
	#REQ_NEXT_ITEM
 (
KEY_MAX
 + 11)

	)

149 
	#REQ_PREV_ITEM
 (
KEY_MAX
 + 12)

	)

150 
	#REQ_TOGGLE_ITEM
 (
KEY_MAX
 + 13)

	)

151 
	#REQ_CLEAR_PATTERN
 (
KEY_MAX
 + 14)

	)

152 
	#REQ_BACK_PATTERN
 (
KEY_MAX
 + 15)

	)

153 
	#REQ_NEXT_MATCH
 (
KEY_MAX
 + 16)

	)

154 
	#REQ_PREV_MATCH
 (
KEY_MAX
 + 17)

	)

156 
	#MIN_MENU_COMMAND
 (
KEY_MAX
 + 1)

	)

157 
	#MAX_MENU_COMMAND
 (
KEY_MAX
 + 17)

	)

163 #i‡
deföed
(
MAX_COMMAND
)

164 #i‡(
MAX_MENU_COMMAND
 > 
MAX_COMMAND
)

165 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_MENU_COMMAND
 i†
gª©î
 
th™
 
MAX_COMMAND


166 #ñi‡(
MAX_COMMAND
 !(
KEY_MAX
 + 128))

167 #îr‹ 
Somëhög
 
is
 
wr⁄g
 -- 
MAX_COMMAND
 i†
Æªady
 
öc⁄si°íéy
 
deföed
.

170 
	#MAX_COMMAND
 (
KEY_MAX
 + 128)

	)

176 
NCURSES_EXPORT
(
ITEM
 **Ë
míu_ôems
 (c⁄° 
MENU
 *);

177 
NCURSES_EXPORT
(
ITEM
 *Ë
cuºít_ôem
 (c⁄° 
MENU
 *);

178 
NCURSES_EXPORT
(
ITEM
 *Ë
√w_ôem
 (const *,const *);

180 
NCURSES_EXPORT
(
MENU
 *Ë
√w_míu
 (
ITEM
 **);

182 
NCURSES_EXPORT
(
Iãm_O±i⁄s
Ë
ôem_›ts
 (c⁄° 
ITEM
 *);

183 
NCURSES_EXPORT
(
Míu_O±i⁄s
Ë
míu_›ts
 (c⁄° 
MENU
 *);

185 
NCURSES_EXPORT
(
Míu_Hook
Ë
ôem_öô
 (c⁄° 
MENU
 *);

186 
NCURSES_EXPORT
(
Míu_Hook
Ë
ôem_ãrm
 (c⁄° 
MENU
 *);

187 
NCURSES_EXPORT
(
Míu_Hook
Ë
míu_öô
 (c⁄° 
MENU
 *);

188 
NCURSES_EXPORT
(
Míu_Hook
Ë
míu_ãrm
 (c⁄° 
MENU
 *);

190 
NCURSES_EXPORT
(
WINDOW
 *Ë
míu_sub
 (c⁄° 
MENU
 *);

191 
NCURSES_EXPORT
(
WINDOW
 *Ë
míu_wö
 (c⁄° 
MENU
 *);

193 
NCURSES_EXPORT
(c⁄° *Ë
ôem_des¸ùti⁄
 (c⁄° 
ITEM
 *);

194 
NCURSES_EXPORT
(c⁄° *Ë
ôem_«me
 (c⁄° 
ITEM
 *);

195 
NCURSES_EXPORT
(c⁄° *Ë
míu_m¨k
 (c⁄° 
MENU
 *);

196 
NCURSES_EXPORT
(c⁄° *Ë
míu_ªque°_«me
 ();

198 
NCURSES_EXPORT
(*Ë
míu_∑âîn
 (c⁄° 
MENU
 *);

200 
NCURSES_EXPORT
(*Ë
míu_u£Ωå
 (c⁄° 
MENU
 *);

201 
NCURSES_EXPORT
(*Ë
ôem_u£Ωå
 (c⁄° 
ITEM
 *);

203 
NCURSES_EXPORT
(
chty≥
Ë
míu_back
 (c⁄° 
MENU
 *);

204 
NCURSES_EXPORT
(
chty≥
Ë
míu_f‹e
 (c⁄° 
MENU
 *);

205 
NCURSES_EXPORT
(
chty≥
Ë
míu_gªy
 (c⁄° 
MENU
 *);

207 
NCURSES_EXPORT
(Ë
‰ì_ôem
 (
ITEM
 *);

208 
NCURSES_EXPORT
(Ë
‰ì_míu
 (
MENU
 *);

209 
NCURSES_EXPORT
(Ë
ôem_cou¡
 (c⁄° 
MENU
 *);

210 
NCURSES_EXPORT
(Ë
ôem_ödex
 (c⁄° 
ITEM
 *);

211 
NCURSES_EXPORT
(Ë
ôem_›ts_off
 (
ITEM
 *,
Iãm_O±i⁄s
);

212 
NCURSES_EXPORT
(Ë
ôem_›ts_⁄
 (
ITEM
 *,
Iãm_O±i⁄s
);

213 
NCURSES_EXPORT
(Ë
míu_drivî
 (
MENU
 *,);

214 
NCURSES_EXPORT
(Ë
míu_›ts_off
 (
MENU
 *,
Míu_O±i⁄s
);

215 
NCURSES_EXPORT
(Ë
míu_›ts_⁄
 (
MENU
 *,
Míu_O±i⁄s
);

216 
NCURSES_EXPORT
(Ë
míu_∑d
 (c⁄° 
MENU
 *);

217 
NCURSES_EXPORT
(Ë
pos_míu_curs‹
 (c⁄° 
MENU
 *);

218 
NCURSES_EXPORT
(Ë
po°_míu
 (
MENU
 *);

219 
NCURSES_EXPORT
(Ë
sˇÀ_míu
 (c⁄° 
MENU
 *,*,*);

220 
NCURSES_EXPORT
(Ë
£t_cuºít_ôem
 (
MENU
 *
míu
,
ITEM
 *
ôem
);

221 
NCURSES_EXPORT
(Ë
£t_ôem_öô
 (
MENU
 *, 
Míu_Hook
);

222 
NCURSES_EXPORT
(Ë
£t_ôem_›ts
 (
ITEM
 *,
Iãm_O±i⁄s
);

223 
NCURSES_EXPORT
(Ë
£t_ôem_ãrm
 (
MENU
 *, 
Míu_Hook
);

224 
NCURSES_EXPORT
(Ë
£t_ôem_u£Ωå
 (
ITEM
 *, *);

225 
NCURSES_EXPORT
(Ë
£t_ôem_vÆue
 (
ITEM
 *,
boﬁ
);

226 
NCURSES_EXPORT
(Ë
£t_míu_back
 (
MENU
 *,
chty≥
);

227 
NCURSES_EXPORT
(Ë
£t_míu_f‹e
 (
MENU
 *,
chty≥
);

228 
NCURSES_EXPORT
(Ë
£t_míu_f‹m©
 (
MENU
 *,,);

229 
NCURSES_EXPORT
(Ë
£t_míu_gªy
 (
MENU
 *,
chty≥
);

230 
NCURSES_EXPORT
(Ë
£t_míu_öô
 (
MENU
 *, 
Míu_Hook
);

231 
NCURSES_EXPORT
(Ë
£t_míu_ôems
 (
MENU
 *,
ITEM
 **);

232 
NCURSES_EXPORT
(Ë
£t_míu_m¨k
 (
MENU
 *, const *);

233 
NCURSES_EXPORT
(Ë
£t_míu_›ts
 (
MENU
 *,
Míu_O±i⁄s
);

234 
NCURSES_EXPORT
(Ë
£t_míu_∑d
 (
MENU
 *,);

235 
NCURSES_EXPORT
(Ë
£t_míu_∑âîn
 (
MENU
 *,const *);

236 
NCURSES_EXPORT
(Ë
£t_míu_sub
 (
MENU
 *,
WINDOW
 *);

237 
NCURSES_EXPORT
(Ë
£t_míu_ãrm
 (
MENU
 *, 
Míu_Hook
);

238 
NCURSES_EXPORT
(Ë
£t_míu_u£Ωå
 (
MENU
 *,*);

239 
NCURSES_EXPORT
(Ë
£t_míu_wö
 (
MENU
 *,
WINDOW
 *);

240 
NCURSES_EXPORT
(Ë
£t_t›_row
 (
MENU
 *,);

241 
NCURSES_EXPORT
(Ë
t›_row
 (c⁄° 
MENU
 *);

242 
NCURSES_EXPORT
(Ë
u≈o°_míu
 (
MENU
 *);

243 
NCURSES_EXPORT
(Ë
míu_ªque°_by_«me
 (const *);

244 
NCURSES_EXPORT
(Ë
£t_míu_•acög
 (
MENU
 *,,,);

245 
NCURSES_EXPORT
(Ë
míu_•acög
 (c⁄° 
MENU
 *,*,*,*);

248 
NCURSES_EXPORT
(
boﬁ
Ë
ôem_vÆue
 (c⁄° 
ITEM
 *);

249 
NCURSES_EXPORT
(
boﬁ
Ë
ôem_visibÀ
 (c⁄° 
ITEM
 *);

251 
NCURSES_EXPORT
(Ë
míu_f‹m©
 (c⁄° 
MENU
 *,*,*);

253 #i‡
NCURSES_SP_FUNCS


254 
NCURSES_EXPORT
(
MENU
 *Ë
NCURSES_SP_NAME
(
√w_míu
Ë(
SCREEN
*, 
ITEM
 **);

257 #ifde‡
__˝lu•lus


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

102 #ifde‡
__USE_XOPEN2K8


103 #i‚de‡
__ssize_t_deföed


104 
__ssize_t
 
	tssize_t
;

105 
	#__ssize_t_deföed


	)

110 
__BEGIN_NAMESPACE_STD


111 #i‚de‡
__USE_FILE_OFFSET64


112 
_G_Âos_t
 
	tÂos_t
;

114 
_G_Âos64_t
 
	tÂos_t
;

116 
__END_NAMESPACE_STD


117 #ifde‡
__USE_LARGEFILE64


118 
_G_Âos64_t
 
	tÂos64_t
;

122 
	#_IOFBF
 0

	)

123 
	#_IOLBF
 1

	)

124 
	#_IONBF
 2

	)

128 #i‚de‡
BUFSIZ


129 
	#BUFSIZ
 
_IO_BUFSIZ


	)

135 #i‚de‡
EOF


136 
	#EOF
 (-1)

	)

142 
	#SEEK_SET
 0

	)

143 
	#SEEK_CUR
 1

	)

144 
	#SEEK_END
 2

	)

145 #ifde‡
__USE_GNU


146 
	#SEEK_DATA
 3

	)

147 
	#SEEK_HOLE
 4

	)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


153 
	#P_tmpdú
 "/tmp"

	)

166 
	~<bôs/°dio_lim.h
>

170 
_IO_FILE
 *
°dö
;

171 
_IO_FILE
 *
°dout
;

172 
_IO_FILE
 *
°dîr
;

174 
	#°dö
 
°dö


	)

175 
	#°dout
 
°dout


	)

176 
	#°dîr
 
°dîr


	)

178 
__BEGIN_NAMESPACE_STD


180 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

182 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

183 
__END_NAMESPACE_STD


185 #ifde‡
__USE_ATFILE


187 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

188 c⁄° *
__√w
Ë
__THROW
;

191 
__BEGIN_NAMESPACE_STD


196 #i‚de‡
__USE_FILE_OFFSET64


197 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

199 #ifde‡
__REDIRECT


200 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

202 
	#tmpfûe
 
tmpfûe64


	)

206 #ifde‡
__USE_LARGEFILE64


207 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

211 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


217 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

221 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


229 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

230 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

234 
__BEGIN_NAMESPACE_STD


239 
	`f˛o£
 (
FILE
 *
__°ªam
);

244 
	`fÊush
 (
FILE
 *
__°ªam
);

245 
__END_NAMESPACE_STD


247 #ifde‡
__USE_MISC


254 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

257 #ifde‡
__USE_GNU


264 
	`f˛o£Æl
 ();

268 
__BEGIN_NAMESPACE_STD


269 #i‚de‡
__USE_FILE_OFFSET64


274 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

275 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

280 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

281 c⁄° *
__ª°ri˘
 
__modes
,

282 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

284 #ifde‡
__REDIRECT


285 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

286 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

287 
__wur
;

288 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

289 c⁄° *
__ª°ri˘
 
__modes
,

290 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

291 
__wur
;

293 
	#f›í
 
f›í64


	)

294 
	#‰e›í
 
‰e›í64


	)

297 
__END_NAMESPACE_STD


298 #ifde‡
__USE_LARGEFILE64


299 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

301 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

302 c⁄° *
__ª°ri˘
 
__modes
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

306 #ifdef 
__USE_POSIX


308 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

311 #ifdef 
__USE_GNU


314 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

315 c⁄° *
__ª°ri˘
 
__modes
,

316 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

319 #ifde‡
__USE_XOPEN2K8


321 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

322 
__THROW
 
__wur
;

327 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

331 
__BEGIN_NAMESPACE_STD


334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

338 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

339 
__modes
, 
size_t
 
__n
Ë
__THROW
;

340 
__END_NAMESPACE_STD


342 #ifdef 
__USE_MISC


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
;

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

353 
__BEGIN_NAMESPACE_STD


358 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

366 
	$•rötf
 (*
__ª°ri˘
 
__s
,

367 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

373 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

374 
_G_va_li°
 
__¨g
);

379 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

381 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

382 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

383 
__END_NAMESPACE_STD


385 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


386 
__BEGIN_NAMESPACE_C99


388 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

389 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

390 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

392 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

393 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

394 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

395 
__END_NAMESPACE_C99


398 #ifde‡
__USE_GNU


401 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

402 
_G_va_li°
 
__¨g
)

403 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

404 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

405 c⁄° *
__ª°ri˘
 
__fmt
, ...)

406 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

408 c⁄° *
__ª°ri˘
 
__fmt
, ...)

409 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

412 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

436 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

451 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

486 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (c⁄° *
__ª°ri˘
 
__s
,

506 c⁄° *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

516 c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #ifde‡
__USE_POSIX199506


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #ifde‡
__USE_POSIX199506


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

627 #i‡!
deföed
 
__USE_ISOC11
 \

628 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

640 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

642 
__END_NAMESPACE_STD


644 #ifde‡
__USE_GNU


651 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

652 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

656 #ifdef 
__USE_XOPEN2K8


667 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

668 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

670 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

671 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

672 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

680 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

681 
size_t
 *
__ª°ri˘
 
__n
,

682 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

686 
__BEGIN_NAMESPACE_STD


691 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

697 
	`puts
 (c⁄° *
__s
);

704 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

711 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

712 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

717 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

718 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

719 
__END_NAMESPACE_STD


721 #ifde‡
__USE_GNU


728 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

729 
FILE
 *
__ª°ri˘
 
__°ªam
);

732 #ifde‡
__USE_MISC


739 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

741 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

742 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

746 
__BEGIN_NAMESPACE_STD


751 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

756 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

761 
	`ªwöd
 (
FILE
 *
__°ªam
);

762 
__END_NAMESPACE_STD


769 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


770 #i‚de‡
__USE_FILE_OFFSET64


775 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

780 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

782 #ifde‡
__REDIRECT


783 
	`__REDIRECT
 (
f£eko
,

784 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

785 
f£eko64
);

786 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

788 
	#f£eko
 
f£eko64


	)

789 
	#·ñlo
 
·ñlo64


	)

794 
__BEGIN_NAMESPACE_STD


795 #i‚de‡
__USE_FILE_OFFSET64


800 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

805 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

807 #ifde‡
__REDIRECT


808 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

809 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

810 
	`__REDIRECT
 (
f£ços
,

811 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

813 
	#fgëpos
 
fgëpos64


	)

814 
	#f£ços
 
f£ços64


	)

817 
__END_NAMESPACE_STD


819 #ifde‡
__USE_LARGEFILE64


820 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

821 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

822 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

823 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

826 
__BEGIN_NAMESPACE_STD


828 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

830 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

833 
__END_NAMESPACE_STD


835 #ifde‡
__USE_MISC


837 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

838 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

839 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

843 
__BEGIN_NAMESPACE_STD


848 
	`≥º‹
 (c⁄° *
__s
);

849 
__END_NAMESPACE_STD


855 
	~<bôs/sys_îæi°.h
>

858 #ifdef 
__USE_POSIX


860 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

863 #ifde‡
__USE_MISC


865 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

869 #ifde‡
__USE_POSIX2


874 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

880 
	`p˛o£
 (
FILE
 *
__°ªam
);

884 #ifdef 
__USE_POSIX


886 *
	$˘îmid
 (*
__s
Ë
__THROW
;

890 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


892 *
	`cu£rid
 (*
__s
);

896 #ifdef 
__USE_GNU


897 
ob°ack
;

900 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

901 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

903 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

904 c⁄° *
__ª°ri˘
 
__f‹m©
,

905 
_G_va_li°
 
__¨gs
)

906 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

910 #ifde‡
__USE_POSIX199506


914 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

918 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

921 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

924 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


928 
	#__√ed_gë›t


	)

929 
	~<gë›t.h
>

934 #ifde‡
__USE_EXTERN_INLINES


935 
	~<bôs/°dio.h
>

937 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


938 
	~<bôs/°dio2.h
>

940 #ifde‡
__LDBL_COMPAT


941 
	~<bôs/°dio-ldbl.h
>

944 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

45 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

46 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

47 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

48 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

49 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

50 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

51 #ifde‡
__WIFCONTINUED


52 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
__BEGIN_NAMESPACE_STD


60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

73 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__BEGIN_NAMESPACE_C99


78 
__exãnsi⁄__
 struct

80 
	mquŸ
;

81 
	mªm
;

82 } 
	tŒdiv_t
;

83 
	#__Œdiv_t_deföed
 1

	)

84 
	g__END_NAMESPACE_C99


89 
	#RAND_MAX
 2147483647

	)

94 
	#EXIT_FAILURE
 1

	)

95 
	#EXIT_SUCCESS
 0

	)

99 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

100 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

103 
__BEGIN_NAMESPACE_STD


105 
	$©of
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©oi
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 
	$©ﬁ
 (c⁄° *
__≈å
)

112 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_ISOC99


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

119 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

120 
__END_NAMESPACE_C99


123 
__BEGIN_NAMESPACE_STD


125 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

126 **
__ª°ri˘
 
__íd±r
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1));

128 
__END_NAMESPACE_STD


130 #ifdef 
__USE_ISOC99


131 
__BEGIN_NAMESPACE_C99


133 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

134 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

136 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

137 **
__ª°ri˘
 
__íd±r
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 
__END_NAMESPACE_C99


142 
__BEGIN_NAMESPACE_STD


144 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

145 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

149 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 
__END_NAMESPACE_STD


153 #ifde‡
__USE_MISC


155 
__exãnsi⁄__


156 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

157 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

158 
__THROW
 
	`__n⁄nuŒ
 ((1));

160 
__exãnsi⁄__


161 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

162 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__exãnsi⁄__


170 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

174 
__exãnsi⁄__


175 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


182 #ifde‡
__USE_GNU


196 
	~<xloˇÀ.h
>

200 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

202 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

204 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

205 **
__ª°ri˘
 
__íd±r
,

206 
__ba£
, 
__loˇÀ_t
 
__loc
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

209 
__exãnsi⁄__


210 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

212 
__loˇÀ_t
 
__loc
)

213 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

215 
__exãnsi⁄__


216 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

217 **
__ª°ri˘
 
__íd±r
,

218 
__ba£
, 
__loˇÀ_t
 
__loc
)

219 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

221 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

222 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

223 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

225 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

226 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

227 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

229 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

230 **
__ª°ri˘
 
__íd±r
,

231 
__loˇÀ_t
 
__loc
)

232 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

236 #ifde‡
__USE_EXTERN_INLINES


237 
__BEGIN_NAMESPACE_STD


238 
__exã∫_ölöe
 

239 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

241  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

242 
	}
}

243 
__exã∫_ölöe
 

244 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

246  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

247 
	}
}

248 
	g__END_NAMESPACE_STD


250 #ifde‡
__USE_ISOC99


251 
__BEGIN_NAMESPACE_C99


252 
__exãnsi⁄__
 
__exã∫_ölöe
 

253 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

255  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

256 
	}
}

257 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


266 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

269 
	$a64l
 (c⁄° *
__s
)

270 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

274 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


275 
	~<sys/ty≥s.h
>

282 
	$øndom
 (Ë
__THROW
;

285 
	$§™dom
 (
__£ed
Ë
__THROW
;

291 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

292 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

296 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 #ifde‡
__USE_MISC


304 
	søndom_d©a


306 
öt32_t
 *
Âå
;

307 
öt32_t
 *
Ωå
;

308 
öt32_t
 *
°©e
;

309 
ønd_ty≥
;

310 
ønd_deg
;

311 
ønd_£p
;

312 
öt32_t
 *
íd_±r
;

315 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

316 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

319 
__THROW
 
	`__n⁄nuŒ
 ((2));

321 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

322 
size_t
 
__°©ñí
,

323 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

326 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

327 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
__BEGIN_NAMESPACE_STD


335 
	$ønd
 (Ë
__THROW
;

337 
	$§™d
 (
__£ed
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifde‡
__USE_POSIX199506


342 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

346 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


350 
	$dønd48
 (Ë
__THROW
;

351 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$Ã™d48
 (Ë
__THROW
;

355 
	$ƒ™d48
 (
__xsubi
[3])

356 
__THROW
 
	`__n⁄nuŒ
 ((1));

359 
	$mønd48
 (Ë
__THROW
;

360 
	$jønd48
 (
__xsubi
[3])

361 
__THROW
 
	`__n⁄nuŒ
 ((1));

364 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

365 *
	$£ed48
 (
__£ed16v
[3])

366 
__THROW
 
	`__n⁄nuŒ
 ((1));

367 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

369 #ifde‡
__USE_MISC


373 
	sdønd48_d©a


375 
__x
[3];

376 
__ﬁd_x
[3];

377 
__c
;

378 
__öô
;

379 
__exãnsi⁄__
 
__a
;

384 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

385 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$î™d48_r
 (
__xsubi
[3],

387 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

388 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

392 *
__ª°ri˘
 
__ªsu…
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

394 
	$ƒ™d48_r
 (
__xsubi
[3],

395 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

396 *
__ª°ri˘
 
__ªsu…
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

401 *
__ª°ri˘
 
__ªsu…
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

403 
	$jønd48_r
 (
__xsubi
[3],

404 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

405 *
__ª°ri˘
 
__ªsu…
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

409 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

410 
__THROW
 
	`__n⁄nuŒ
 ((2));

412 
	$£ed48_r
 (
__£ed16v
[3],

413 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

415 
	$lc⁄g48_r
 (
__∑øm
[7],

416 
dønd48_d©a
 *
__buf„r
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

423 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


424 
	#__mÆloc_™d_ˇŒoc_deföed


	)

425 
__BEGIN_NAMESPACE_STD


427 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

429 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

430 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

431 
__END_NAMESPACE_STD


434 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


435 
__BEGIN_NAMESPACE_STD


441 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

442 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

444 
	$‰ì
 (*
__±r
Ë
__THROW
;

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_MISC


449 
	$c‰ì
 (*
__±r
Ë
__THROW
;

452 #ifde‡
__USE_MISC


453 
	~<Æloˇ.h
>

456 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

457 || 
deföed
 
__USE_MISC


459 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

462 #ifde‡
__USE_XOPEN2K


464 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

465 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

468 #ifde‡
__USE_ISOC11


470 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

471 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

474 
__BEGIN_NAMESPACE_STD


476 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

480 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

482 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


484 #ifde‡
__˝lu•lus


485 "C++" 
	$©_quick_exô
 ((*
__func
) ())

486 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

488 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 
__END_NAMESPACE_STD


493 #ifdef 
__USE_MISC


496 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

497 
__THROW
 
	`__n⁄nuŒ
 ((1));

500 
__BEGIN_NAMESPACE_STD


504 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

506 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


510 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

512 
__END_NAMESPACE_STD


514 #ifde‡
__USE_ISOC99


515 
__BEGIN_NAMESPACE_C99


518 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
__END_NAMESPACE_C99


523 
__BEGIN_NAMESPACE_STD


525 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

526 
__END_NAMESPACE_STD


528 #ifde‡
__USE_GNU


531 *
	$£cuª_gëív
 (c⁄° *
__«me
)

532 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

535 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


539 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

542 #ifde‡
__USE_XOPEN2K


545 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

546 
__THROW
 
	`__n⁄nuŒ
 ((2));

549 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

552 #ifdef 
__USE_MISC


556 
	$˛óªnv
 (Ë
__THROW
;

560 #i‡
deföed
 
__USE_MISC
 \

561 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

567 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

570 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


579 #i‚de‡
__USE_FILE_OFFSET64


580 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

582 #ifde‡
__REDIRECT


583 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

584 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

586 
	#mk°emp
 
mk°emp64


	)

589 #ifde‡
__USE_LARGEFILE64


590 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

594 #ifde‡
__USE_MISC


601 #i‚de‡
__USE_FILE_OFFSET64


602 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

604 #ifde‡
__REDIRECT


605 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

606 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 
	#mk°emps
 
mk°emps64


	)

611 #ifde‡
__USE_LARGEFILE64


612 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

613 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_XOPEN2K8


623 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 #ifde‡
__USE_GNU


633 #i‚de‡
__USE_FILE_OFFSET64


634 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__REDIRECT


637 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

638 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
	#mko°emp
 
mko°emp64


	)

643 #ifde‡
__USE_LARGEFILE64


644 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

653 #i‚de‡
__USE_FILE_OFFSET64


654 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

655 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #ifde‡
__REDIRECT


658 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

659 
__Êags
), 
mko°emps64
)

660 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

662 
	#mko°emps
 
mko°emps64


	)

665 #ifde‡
__USE_LARGEFILE64


666 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

667 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

672 
__BEGIN_NAMESPACE_STD


677 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

678 
__END_NAMESPACE_STD


681 #ifdef 
__USE_GNU


684 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

685 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


694 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

695 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

700 #i‚de‡
__COMPAR_FN_T


701 
	#__COMPAR_FN_T


	)

702 (*
	t__com∑r_‚_t
) (const *, const *);

704 #ifdef 
__USE_GNU


705 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

708 #ifde‡
__USE_GNU


709 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

712 
__BEGIN_NAMESPACE_STD


715 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

716 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

717 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

719 #ifde‡
__USE_EXTERN_INLINES


720 
	~<bôs/°dlib-b£¨ch.h
>

725 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

726 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

727 #ifde‡
__USE_GNU


728 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

729 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

730 
	`__n⁄nuŒ
 ((1, 4));

735 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

736 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

737 
__END_NAMESPACE_STD


739 #ifde‡
__USE_ISOC99


740 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

741 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

745 
__BEGIN_NAMESPACE_STD


749 
div_t
 
	$div
 (
__numî
, 
__díom
)

750 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

751 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

752 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

753 
__END_NAMESPACE_STD


755 #ifde‡
__USE_ISOC99


756 
__BEGIN_NAMESPACE_C99


757 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

758 
__díom
)

759 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

760 
__END_NAMESPACE_C99


764 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

765 || 
deföed
 
__USE_MISC


772 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

773 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

778 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

779 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

784 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

785 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

788 #ifde‡
__USE_MISC


790 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

791 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

792 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

793 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

794 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

795 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

796 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

797 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

802 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

804 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

805 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

806 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

807 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

809 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

810 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

811 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

812 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

813 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

814 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

815 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

816 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

820 
__BEGIN_NAMESPACE_STD


823 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

826 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

827 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

830 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

834 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

835 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

837 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

838 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

839 
__THROW
;

840 
__END_NAMESPACE_STD


843 #ifde‡
__USE_MISC


848 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

852 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


859 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

860 *c⁄° *
__ª°ri˘
 
__tokís
,

861 **
__ª°ri˘
 
__vÆuï
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

866 #ifde‡
__USE_XOPEN


868 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #ifde‡
__USE_XOPEN2KXSI


876 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

879 #ifde‡
__USE_XOPEN_EXTENDED


884 
	$gø¡±
 (
__fd
Ë
__THROW
;

888 
	$u∆ock±
 (
__fd
Ë
__THROW
;

893 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

896 #ifde‡
__USE_GNU


900 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

901 
__THROW
 
	`__n⁄nuŒ
 ((2));

904 
	`gë±
 ();

907 #ifde‡
__USE_MISC


911 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

915 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


918 
	$ây¶Ÿ
 (Ë
__THROW
;

921 
	~<bôs/°dlib-Êﬂt.h
>

924 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


925 
	~<bôs/°dlib.h
>

927 #ifde‡
__LDBL_COMPAT


928 
	~<bôs/°dlib-ldbl.h
>

932 #unde‡
__√ed_mÆloc_™d_ˇŒoc


934 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
	`__GNUC_PREREQ
 (3,4)

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

644 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
__exã∫_Æways_ölöe
 *

647 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

648 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

650  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

651 
	}
}

656 
	g__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_MISC


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

31 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

32 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

35 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


39 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

40 
__THROW
 
__©åibuã_puª__
;

43 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

46 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

49 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


52 *
	`ödex
 (*
__s
, 
__c
)

53 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

54 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

57 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


58 
__exã∫_Æways_ölöe
 *

59 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


61  
	`__buûtö_ödex
 (
__s
, 
__c
);

64 
__exã∫_Æways_ölöe
 const *

65 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


67  
	`__buûtö_ödex
 (
__s
, 
__c
);

70 
	}
}

72 *
	$ödex
 (c⁄° *
__s
, 
__c
)

73 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


80 *
	`rödex
 (*
__s
, 
__c
)

81 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

85 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


86 
__exã∫_Æways_ölöe
 *

87 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


89  
	`__buûtö_rödex
 (
__s
, 
__c
);

92 
__exã∫_Æways_ölöe
 const *

93 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


95  
	`__buûtö_rödex
 (
__s
, 
__c
);

98 
	}
}

100 *
	$rödex
 (c⁄° *
__s
, 
__c
)

101 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


108 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

112 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

113 
__THROW
 
__©åibuã_puª__
;

116 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

117 
__THROW
 
__©åibuã_puª__
;

119 #ifdef 
__USE_XOPEN2K8


123 
	~<xloˇÀ.h
>

127 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

128 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

130 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

131 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

135 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/soundcard.h

1 
	~<löux/soundˇrd.h
>

	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_ATFILE


30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

33 #ifde‡
__USE_ATFILE


34 
	#__√ed_time•ec


	)

36 
	~<time.h
>

39 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


42 #i‚de‡
__dev_t_deföed


43 
__dev_t
 
	tdev_t
;

44 
	#__dev_t_deföed


	)

47 #i‚de‡
__gid_t_deföed


48 
__gid_t
 
	tgid_t
;

49 
	#__gid_t_deföed


	)

52 #i‚de‡
__öo_t_deföed


53 #i‚de‡
__USE_FILE_OFFSET64


54 
__öo_t
 
	töo_t
;

56 
__öo64_t
 
	töo_t
;

58 
	#__öo_t_deföed


	)

61 #i‚de‡
__mode_t_deföed


62 
__mode_t
 
	tmode_t
;

63 
	#__mode_t_deföed


	)

66 #i‚de‡
__∆ök_t_deföed


67 
__∆ök_t
 
	t∆ök_t
;

68 
	#__∆ök_t_deföed


	)

71 #i‚de‡
__off_t_deföed


72 #i‚de‡
__USE_FILE_OFFSET64


73 
__off_t
 
	toff_t
;

75 
__off64_t
 
	toff_t
;

77 
	#__off_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

86 #ifde‡
__USE_UNIX98


87 #i‚de‡
__blk˙t_t_deföed


88 #i‚de‡
__USE_FILE_OFFSET64


89 
__blk˙t_t
 
	tblk˙t_t
;

91 
__blk˙t64_t
 
	tblk˙t_t
;

93 
	#__blk˙t_t_deföed


	)

96 #i‚de‡
__blksize_t_deföed


97 
__blksize_t
 
	tblksize_t
;

98 
	#__blksize_t_deföed


	)

102 
	g__BEGIN_DECLS


104 
	~<bôs/°©.h
>

106 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


107 
	#S_IFMT
 
__S_IFMT


	)

108 
	#S_IFDIR
 
__S_IFDIR


	)

109 
	#S_IFCHR
 
__S_IFCHR


	)

110 
	#S_IFBLK
 
__S_IFBLK


	)

111 
	#S_IFREG
 
__S_IFREG


	)

112 #ifde‡
__S_IFIFO


113 
	#S_IFIFO
 
__S_IFIFO


	)

115 #ifde‡
__S_IFLNK


116 
	#S_IFLNK
 
__S_IFLNK


	)

118 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

119 && 
deföed
 
	g__S_IFSOCK


120 
	#S_IFSOCK
 
__S_IFSOCK


	)

126 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

128 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

129 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

130 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

131 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

132 #ifde‡
__S_IFIFO


133 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

135 #ifde‡
__S_IFLNK


136 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

139 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


140 
	#S_ISLNK
(
mode
Ë0

	)

143 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

144 && 
deföed
 
	g__S_IFSOCK


145 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

146 #ñi‡
deföed
 
__USE_XOPEN2K


147 
	#S_ISSOCK
(
mode
Ë0

	)

154 #ifdef 
__USE_POSIX199309


155 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

156 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

157 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

163 
	#S_ISUID
 
__S_ISUID


	)

164 
	#S_ISGID
 
__S_ISGID


	)

166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
	#S_ISVTX
 
__S_ISVTX


	)

171 
	#S_IRUSR
 
__S_IREAD


	)

172 
	#S_IWUSR
 
__S_IWRITE


	)

173 
	#S_IXUSR
 
__S_IEXEC


	)

175 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

177 #ifde‡
__USE_MISC


178 
	#S_IREAD
 
S_IRUSR


	)

179 
	#S_IWRITE
 
S_IWUSR


	)

180 
	#S_IEXEC
 
S_IXUSR


	)

183 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

184 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

185 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

187 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

189 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

190 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

191 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

193 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

196 #ifdef 
__USE_MISC


198 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

199 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

200 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

202 
	#S_BLKSIZE
 512

	)

206 #i‚de‡
__USE_FILE_OFFSET64


208 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

209 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

213 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

215 #ifde‡
__REDIRECT_NTH


216 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

217 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

218 
	`__n⁄nuŒ
 ((1, 2));

219 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

220 
	`__n⁄nuŒ
 ((2));

222 
	#°©
 
°©64


	)

223 
	#f°©
 
f°©64


	)

226 #ifde‡
__USE_LARGEFILE64


227 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

228 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

229 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

232 #ifde‡
__USE_ATFILE


236 #i‚de‡
__USE_FILE_OFFSET64


237 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

238 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

239 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

243 
°©
 *
__ª°ri˘
 
__buf
,

244 
__Êag
),

245 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

247 
	#f°©©
 
f°©©64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

253 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

254 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

258 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


262 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

263 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

265 #ifde‡
__REDIRECT_NTH


266 
	`__REDIRECT_NTH
 (
l°©
,

267 (c⁄° *
__ª°ri˘
 
__fûe
,

268 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 
	#l°©
 
l°©64


	)

274 #ifde‡
__USE_LARGEFILE64


275 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

276 
°©64
 *
__ª°ri˘
 
__buf
)

277 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

283 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

286 #ifde‡
__USE_MISC


290 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


296 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

299 #ifde‡
__USE_ATFILE


302 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

303 
__Êag
)

304 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

313 #ifdef 
__USE_GNU


316 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

320 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1));

323 #ifde‡
__USE_ATFILE


327 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

328 
__THROW
 
	`__n⁄nuŒ
 ((2));

334 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


335 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_ATFILE


342 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

343 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

349 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1));

352 #ifde‡
__USE_ATFILE


356 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 #ifde‡
__USE_ATFILE


363 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

364 c⁄° 
time•ec
 
__times
[2],

365 
__Êags
)

366 
__THROW
 
	`__n⁄nuŒ
 ((2));

369 #ifde‡
__USE_XOPEN2K8


371 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

389 #i‚de‡
_STAT_VER


390 
	#_STAT_VER
 0

	)

392 #i‚de‡
_MKNOD_VER


393 
	#_MKNOD_VER
 0

	)

397 #i‚de‡
__USE_FILE_OFFSET64


398 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

399 
__THROW
 
	`__n⁄nuŒ
 ((3));

400 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

401 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

402 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
, 
__Êag
)

406 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

410 
°©
 *
__°©_buf
), 
__fx°©64
)

411 
	`__n⁄nuŒ
 ((3));

412 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__x°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__lx°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

419 c⁄° *
__fûíame
,

420 
°©
 *
__°©_buf
, 
__Êag
),

421 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

424 
	#__fx°©
 
__fx°©64


	)

425 
	#__x°©
 
__x°©64


	)

426 
	#__lx°©
 
__lx°©64


	)

430 #ifde‡
__USE_LARGEFILE64


431 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

432 
__THROW
 
	`__n⁄nuŒ
 ((3));

433 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

434 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

435 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
, 
__Êag
)

439 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

441 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

442 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

444 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

445 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

446 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

448 #ifde‡
__USE_EXTERN_INLINES


451 
__exã∫_ölöe
 

452 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

454  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

455 
	}
}

457 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


458 
__exã∫_ölöe
 

459 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

461  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

462 
	}
}

465 
__exã∫_ölöe
 

466 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

468  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

469 
	}
}

471 #ifde‡
__USE_ATFILE


472 
__exã∫_ölöe
 

473 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

474 
__Êag
))

476  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

477 
	}
}

480 #ifde‡
__USE_MISC


481 
__exã∫_ölöe
 

482 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

484  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

485 
	}
}

488 #ifde‡
__USE_ATFILE


489 
__exã∫_ölöe
 

490 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

491 
__dev_t
 
__dev
))

493  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

494 
	}
}

497 #i‡
deföed
 
__USE_LARGEFILE64
 \

498 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

499 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

500 
__exã∫_ölöe
 

501 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

503  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

504 
	}
}

506 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


507 
__exã∫_ölöe
 

508 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

510  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

511 
	}
}

514 
__exã∫_ölöe
 

515 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

517  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

518 
	}
}

520 #ifde‡
__USE_ATFILE


521 
__exã∫_ölöe
 

522 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

523 
__Êag
))

525  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

526 
	}
}

533 
	g__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_MISC


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_MISC


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_MISC


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_MISC


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #ifde‡
__USE_MISC


787 
	$ây¶Ÿ
 (Ë
__THROW
;

792 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

795 #ifde‡
__USE_ATFILE


798 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

799 c⁄° *
__to
, 
__Êags
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

803 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


805 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

811 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

812 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


818 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

822 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

823 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

824 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

828 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_ATFILE


832 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

833 
__THROW
 
	`__n⁄nuŒ
 ((2));

837 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

844 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

851 *
	`gëlogö
 ();

852 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


859 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

862 #ifdef 
__USE_MISC


864 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

868 #ifdef 
__USE_POSIX2


872 
	#__√ed_gë›t


	)

873 
	~<gë›t.h
>

877 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


881 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #i‡
deföed
 
__USE_MISC


888 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

893 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

899 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

901 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

908 
	$vh™gup
 (Ë
__THROW
;

911 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

919 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

920 
size_t
 
__off£t
, 
__sˇÀ
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1));

927 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

931 *
	$gëu£rshñl
 (Ë
__THROW
;

932 
	$ídu£rshñl
 (Ë
__THROW
;

933 
	$£tu£rshñl
 (Ë
__THROW
;

939 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

943 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

946 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

958 
	`fsync
 (
__fd
);

961 #ifde‡
__USE_GNU


964 
	$syncfs
 (
__fd
Ë
__THROW
;

968 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


971 
	`gëho°id
 ();

974 
	$sync
 (Ë
__THROW
;

977 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


980 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

985 
	$gëdèbÀsize
 (Ë
__THROW
;

991 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


994 #i‚de‡
__USE_FILE_OFFSET64


995 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

996 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

998 #ifde‡
__REDIRECT_NTH


999 
	`__REDIRECT_NTH
 (
åunˇã
,

1000 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1001 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1003 
	#åunˇã
 
åunˇã64


	)

1006 #ifde‡
__USE_LARGEFILE64


1007 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1013 #i‡
deföed
 
__USE_POSIX199309
 \

1014 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1020 #ifde‡
__REDIRECT_NTH


1021 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1022 
·runˇã64
Ë
__wur
;

1024 
	#·runˇã
 
·runˇã64


	)

1027 #ifde‡
__USE_LARGEFILE64


1028 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1034 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1035 || 
deföed
 
__USE_MISC


1039 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1045 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1049 #ifde‡
__USE_MISC


1060 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1065 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1077 
	#F_ULOCK
 0

	)

1078 
	#F_LOCK
 1

	)

1079 
	#F_TLOCK
 2

	)

1080 
	#F_TEST
 3

	)

1082 #i‚de‡
__USE_FILE_OFFSET64


1083 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1085 #ifde‡
__REDIRECT


1086 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1087 
lockf64
Ë
__wur
;

1089 
	#lockf
 
lockf64


	)

1092 #ifde‡
__USE_LARGEFILE64


1093 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1098 #ifde‡
__USE_GNU


1103 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1104 (
__exãnsi⁄__
 \

1105 ({ 
__ªsu…
; \

1106 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1107 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1108 
__ªsu…
; 
	}
}))

	)

1111 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1114 
fd©async
 (
__fûdes
);

1120 #ifdef 
__USE_XOPEN


1122 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1127 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1128 
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1148 *
	`cu£rid
 (*
__s
);

1154 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1155 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1156 (*
__∑ª¡
) (),

1157 (*
__chûd
Ë()Ë
__THROW
;

1162 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1163 
	~<bôs/uni°d.h
>

1166 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.8"

	)

41 
	#ZLIB_VERNUM
 0x1280

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 8

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

843 
Byãf
 *
di˘i⁄¨y
,

844 
uI¡
 *
di˘Lígth
));

857 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

876 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

877 
z_°ªamp
 
sour˚
));

892 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

902 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

903 
wödowBôs
));

914 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

915 
bôs
,

916 
vÆue
));

935 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

963 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

964 
gz_hódîp
 
hód
));

1025 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1026 
	tz_c⁄°
 
	tFAR
 * FAR *));

1027 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1029 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1030 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1031 
out_func
 
out
, 
FAR
 *
out_desc
));

1099 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1107 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1148 #i‚de‡
Z_SOLO


1160 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1161 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1174 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1175 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1176 
Àvñ
));

1190 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1197 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1198 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1224 
gzFûe_s
 *
	tgzFûe
;

1264 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1287 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1304 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1313 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1341 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1342 
voidpc
 
buf
, 
Àn
));

1349 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1364 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1372 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1385 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1391 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1400 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1412 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1447 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1475 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1490 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1511 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1524 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1525 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1536 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1552 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1569 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1633 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1634 c⁄° *
vîsi⁄
, 
°ªam_size
));

1635 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1636 c⁄° *
vîsi⁄
, 
°ªam_size
));

1637 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1638 
wödowBôs
, 
memLevñ
,

1639 
°øãgy
, c⁄° *
vîsi⁄
,

1640 
°ªam_size
));

1641 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1642 c⁄° *
vîsi⁄
, 
°ªam_size
));

1643 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1644 
FAR
 *
wödow
,

1645 c⁄° *
vîsi⁄
,

1646 
°ªam_size
));

1647 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1648 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1649 
	#öÊ©eInô
(
°rm
) \

1650 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1651 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1652 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1653 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1654 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1655 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1656 ()(
z_°ªam
))

	)

1657 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1658 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1659 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1661 #i‚de‡
Z_SOLO


1670 
	sgzFûe_s
 {

1671 
have
;

1672 *
√xt
;

1673 
z_off64_t
 
pos
;

1675 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1676 #ifde‡
Z_PREFIX_SET


1677 #unde‡
z_gzgëc


1678 
	#z_gzgëc
(
g
) \

1679 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1681 
	#gzgëc
(
g
) \

1682 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1691 #ifde‡
Z_LARGE64


1692 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1693 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1694 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1695 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1696 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1697 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1700 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1701 #ifde‡
Z_PREFIX_SET


1702 
	#z_gz›í
 
z_gz›í64


	)

1703 
	#z_gz£ek
 
z_gz£ek64


	)

1704 
	#z_gzãŒ
 
z_gzãŒ64


	)

1705 
	#z_gzoff£t
 
z_gzoff£t64


	)

1706 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1707 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1709 
	#gz›í
 
gz›í64


	)

1710 
	#gz£ek
 
gz£ek64


	)

1711 
	#gzãŒ
 
gzãŒ64


	)

1712 
	#gzoff£t
 
gzoff£t64


	)

1713 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1714 
	#¸c32_comböe
 
¸c32_comböe64


	)

1716 #i‚de‡
Z_LARGE64


1717 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1718 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1719 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1720 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1721 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1722 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1725 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1726 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1727 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1728 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1729 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1730 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1735 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1736 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1741 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1742 
	söã∫Æ_°©e
 {
dummy
;};

1746 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1747 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1748 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1749 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1750 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1751 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1752 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1753 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1754 c⁄° *
mode
));

1756 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1757 #i‚de‡
Z_SOLO


1758 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1759 c⁄° *
f‹m©
,

1760 
va_li°
 
va
));

1764 #ifde‡
__˝lu•lus


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 #ifde‡
__USE_ISOC99


26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 #ifde‡
__NO_LONG_DOUBLE_MATH


29 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

31 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

36 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


38 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

40 #ifde‡
__USE_ISOC99


41 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

42 #ifde‡
__MATH_DECLARE_LDOUBLE


43 #ifde‡
__NO_LONG_DOUBLE_MATH


44 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

46 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

52 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

53 #ifde‡
__USE_ISOC99


54 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

55 #ifde‡
__MATH_DECLARE_LDOUBLE


56 #ifde‡
__NO_LONG_DOUBLE_MATH


57 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

59 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

65 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

66 #ifde‡
__USE_ISOC99


67 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

68 #ifde‡
__MATH_DECLARE_LDOUBLE


69 #ifde‡
__NO_LONG_DOUBLE_MATH


70 
__REDIRECT_NTH
 (
©™2l
, (, ),

71 
__©™2_föôe
);

73 
__REDIRECT_NTH
 (
©™2l
, (, ),

74 
__©™2l_föôe
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


81 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

83 #ifde‡
__USE_ISOC99


84 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

85 #ifde‡
__MATH_DECLARE_LDOUBLE


86 #ifde‡
__NO_LONG_DOUBLE_MATH


87 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

89 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

95 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

96 #ifde‡
__USE_ISOC99


97 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

102 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

108 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

109 #ifde‡
__USE_ISOC99


110 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

111 #ifde‡
__MATH_DECLARE_LDOUBLE


112 #ifde‡
__NO_LONG_DOUBLE_MATH


113 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

115 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

120 #ifde‡
__USE_GNU


122 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

123 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

124 #ifde‡
__MATH_DECLARE_LDOUBLE


125 #ifde‡
__NO_LONG_DOUBLE_MATH


126 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

128 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

133 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

134 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

135 #ifde‡
__MATH_DECLARE_LDOUBLE


136 #ifde‡
__NO_LONG_DOUBLE_MATH


137 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

139 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

144 #ifde‡
__USE_ISOC99


146 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

147 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

148 #ifde‡
__MATH_DECLARE_LDOUBLE


149 #ifde‡
__NO_LONG_DOUBLE_MATH


150 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

152 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

158 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

159 #ifde‡
__USE_ISOC99


160 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

161 #ifde‡
__MATH_DECLARE_LDOUBLE


162 #ifde‡
__NO_LONG_DOUBLE_MATH


163 
__REDIRECT_NTH
 (
fmodl
, (, ),

164 
__fmod_föôe
);

166 
__REDIRECT_NTH
 (
fmodl
, (, ),

167 
__fmodl_föôe
);

172 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


174 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

176 #ifde‡
__USE_ISOC99


177 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

178 #ifde‡
__MATH_DECLARE_LDOUBLE


179 #ifde‡
__NO_LONG_DOUBLE_MATH


180 
__REDIRECT_NTH
 (
hypŸl
, (, ),

181 
__hypŸ_föôe
);

183 
__REDIRECT_NTH
 (
hypŸl
, (, ),

184 
__hypŸl_föôe
);

189 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


191 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

193 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


194 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 #ifde‡
__NO_LONG_DOUBLE_MATH


197 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

199 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

204 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


206 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

208 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


209 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

210 #ifde‡
__MATH_DECLARE_LDOUBLE


211 #ifde‡
__NO_LONG_DOUBLE_MATH


212 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

214 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


221 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

223 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


224 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

225 #ifde‡
__MATH_DECLARE_LDOUBLE


226 #ifde‡
__NO_LONG_DOUBLE_MATH


227 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

229 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

238 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


239 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

240 #ifde‡
__MATH_DECLARE_LDOUBLE


241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

244 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


251 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

253 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


254 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

255 #ifde‡
__MATH_DECLARE_LDOUBLE


256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

259 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

268 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


269 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

270 #ifde‡
__MATH_DECLARE_LDOUBLE


271 #ifde‡
__NO_LONG_DOUBLE_MATH


272 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

274 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

279 #ifde‡
__USE_MISC


281 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

282 #ifde‡
__USE_ISOC99


283 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 #ifde‡
__NO_LONG_DOUBLE_MATH


286 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

287 
__lgamma_r_föôe
);

289 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

290 
__lgammÆ_r_föôe
);

296 
__lgamma_r_föôe
 (, *);

297 
__lgammaf_r_föôe
 (, *);

298 #ifde‡
__NO_LONG_DOUBLE_MATH


299 
__REDIRECT_NTH
 (
__lgammÆ_r_föôe
, (, *),

300 
__lgamma_r_föôe
);

302 
__lgammÆ_r_föôe
 (, *);

305 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

306 && 
deföed
 
	g__exã∫_Æways_ölöe
)

308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

310 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


311  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

313 
__loˇl_signgam
 = 0;

314  
	`__lgamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

316 
	}
}

318 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


319 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

321 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


322  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

324 
__loˇl_signgam
 = 0;

325  
	`__lgammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

327 
	}
}

328 #ifde‡
__MATH_DECLARE_LDOUBLE


329 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


332  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

334 
__loˇl_signgam
 = 0;

335  
	`__lgammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

337 
	}
}

341 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

342 && 
deföed
 
	g__exã∫_Æways_ölöe
)

344 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

346  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

347 
	}
}

348 #ifde‡
__USE_ISOC99


349 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

351  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

352 
	}
}

353 #ifde‡
__MATH_DECLARE_LDOUBLE


354 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

356  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

357 
	}
}

363 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

364 #ifde‡
__USE_ISOC99


365 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

366 #ifde‡
__MATH_DECLARE_LDOUBLE


367 #ifde‡
__NO_LONG_DOUBLE_MATH


368 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

370 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

376 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

377 #ifde‡
__USE_ISOC99


378 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

379 #ifde‡
__MATH_DECLARE_LDOUBLE


380 #ifde‡
__NO_LONG_DOUBLE_MATH


381 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

383 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

388 #ifde‡
__USE_ISOC99


390 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

391 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

396 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

402 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

403 #ifde‡
__USE_ISOC99


404 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

405 #ifde‡
__MATH_DECLARE_LDOUBLE


406 #ifde‡
__NO_LONG_DOUBLE_MATH


407 
__REDIRECT_NTH
 (
powl
, (, ),

408 
__pow_föôe
);

410 
__REDIRECT_NTH
 (
powl
, (, ),

411 
__powl_föôe
);

416 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


418 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

420 #ifde‡
__USE_ISOC99


421 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

422 #ifde‡
__MATH_DECLARE_LDOUBLE


423 #ifde‡
__NO_LONG_DOUBLE_MATH


424 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

425 
__ªmaödî_föôe
);

427 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

428 
__ªmaödîl_föôe
);

433 #i‡(
deföed
 
__USE_MISC
 \

434 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))

436 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

438 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


439 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

440 #ifde‡
__MATH_DECLARE_LDOUBLE


441 #ifde‡
__NO_LONG_DOUBLE_MATH


442 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

443 
__sˇlb_föôe
);

445 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

446 
__sˇlbl_föôe
);

452 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

453 #ifde‡
__USE_ISOC99


454 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

455 #ifde‡
__MATH_DECLARE_LDOUBLE


456 #ifde‡
__NO_LONG_DOUBLE_MATH


457 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

459 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

465 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

466 #ifde‡
__USE_ISOC99


467 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

468 #ifde‡
__MATH_DECLARE_LDOUBLE


469 #ifde‡
__NO_LONG_DOUBLE_MATH


470 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

472 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

477 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


479 
__gamma_r_föôe
 (, *);

480 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

482 
__loˇl_signgam
 = 0;

483 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

484  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

485 
	}
}

486 
__gammaf_r_föôe
 (, *);

487 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

489 
__loˇl_signgam
 = 0;

490 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

491  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

492 
	}
}

493 #ifde‡
__MATH_DECLARE_LDOUBLE


494 
__gammÆ_r_föôe
 (, *);

495 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

497 
__loˇl_signgam
 = 0;

498 #ifde‡
__NO_LONG_DOUBLE_MATH


499 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

501 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

503  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

504 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


199 #i‡(!
deföed
 
__˝lu•lus
 \

200 || 
	g__˝lu•lus
 < 201103L \

201 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

204 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

211 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

215 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

218 #ifde‡
__USE_ISOC99


219 
__BEGIN_NAMESPACE_C99


221 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

222 
	g__END_NAMESPACE_C99


225 #ifde‡
__USE_ISOC99


226 
__BEGIN_NAMESPACE_C99


228 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

229 
	g__END_NAMESPACE_C99


234 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

236 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

237 #i‡(!
deföed
 
__˝lu•lus
 \

238 || 
	g__˝lu•lus
 < 201103L \

239 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

241 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

245 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

247 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

248 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

249 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

250 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

256 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

260 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

261 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

262 
	g__END_NAMESPACE_C99


265 #ifde‡
__USE_ISOC99


266 
__BEGIN_NAMESPACE_C99


268 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

269 
	g__END_NAMESPACE_C99


272 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

274 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

277 #ifde‡
__USE_MISC


281 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

285 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


286 
__BEGIN_NAMESPACE_C99


289 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

292 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

293 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


294 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

297 #ifde‡
__USE_GNU


299 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

301 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

305 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

307 #ifde‡
__USE_ISOC99


309 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

313 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

316 #ifde‡
__USE_ISOC99


318 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

322 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

330 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

335 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

342 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

343 
__exãnsi⁄__


344 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

348 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

349 
__exãnsi⁄__


350 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

354 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

357 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

360 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

364 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

365 
__©åibuã__
 ((
__c⁄°__
));

368 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

369 
__©åibuã__
 ((
__c⁄°__
));

373 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

376 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


377 
	g__END_NAMESPACE_C99


380 #ifde‡
__USE_GNU


382 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

383 
__©åibuã__
 ((
__c⁄°__
));

386 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

387 && 
	g__MATH_DECLARING_DOUBLE
 \

388 && !
deföed
 
	g__USE_XOPEN2K8
)

390 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


390 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


391 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

392 && 
deföed
 
	g__OPTIMIZE__
)

396 #unde‡
m©h_îrh™dlög


405 #ifde‡
__USE_ISOC99


406 
	#__ölöe_m©h›
(
func
, 
›
) \

407 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

408 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

409 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›NP
(
func
, 
›
) \

411 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

412 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

415 
	#__ölöe_m©h›
(
func
, 
›
) \

416 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

417 
	#__ölöe_m©h›NP
(
func
, 
›
) \

418 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

421 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

422 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

423 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

424 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

427 #ifde‡
__USE_ISOC99


428 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

429 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

434 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

437 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

438 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

439 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

440 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

443 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

444 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

445 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

447 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

448 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

450 
Êﬂt_ty≥
 
__ªsu…
; \

451 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

452  
__ªsu…
; \

453 }

	)

456 #ifde‡
__USE_ISOC99


457 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

460 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

461 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

462 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

463 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

464 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

465 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

469 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

470 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

471 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

472 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

473 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

478 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

479 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

480 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

482 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

483 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

484 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

485 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

486 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

487 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

488 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

489 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

490 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

491 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

492 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

493 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

496 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

497 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

498 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

500 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

501 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

503 
code
; \

504 }

	)

507 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

508 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

509 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

511 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

512 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

514 
code
; \

515 }

	)

517 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

518 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

519 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

521 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

522 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

523 
Êﬂt_ty≥
 
¨g3
)) \

525 
code
; \

526 }

	)

530 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


534 #ifde‡
__FAST_MATH__


535 #ifde‡
__USE_GNU


536 
	#__söcos_code
 \

537 
__co§
; \

538 
__sör
; \

539 
__swtmp
; \

540 
__asm
 
__vﬁ©ûe__
 \

555 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

556 *
__söx
 = 
__sör
; \

557 *
__cosx
 = 
__co§


	)

559 
__MATH_INLINE
 

560 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

562 
__söcos_code
;

563 
	}
}

565 
__MATH_INLINE
 

566 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

568 
__söcos_code
;

569 
	}
}

571 
__MATH_INLINE
 

572 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

574 
__söcos_code
;

575 
	}
}

582 #i‡
__GNUC_PREREQ
 (3, 5)

583 
	#__expm1_code
 \

584 
__ãmp
; \

585 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

586  
__ãmp
 ? __ãm∞: 
__x


	)

588 
	#__expm1_code
 \

589 
__vÆue
; \

590 
__exp⁄ít
; \

591 
__ãmp
; \

592 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

602 
__asm
 
__vﬁ©ûe__
 \

604 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

605 
__ãmp
 -= 1.0; \

606 
__ãmp
 +
__vÆue
; \

607  
__ãmp
 ? __ãm∞: 
__x


	)

609 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

611 #i‡
	`__GNUC_PREREQ
 (3, 4)

612 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

614 
	#__exp_code
 \

615 
__vÆue
; \

616 
__exp⁄ít
; \

617 
__asm
 
__vﬁ©ûe__
 \

625 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

626 
__vÆue
 += 1.0; \

627 
__asm
 
__vﬁ©ûe__
 \

629 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

630  
__vÆue


	)

631 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

632 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

636 #i‡!
	`__GNUC_PREREQ
 (3, 5)

637 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

638 
__vÆue
; \

639 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

643  
__vÆue
)

648 #i‡
	`__GNUC_PREREQ
 (3, 4)

649 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

650  
	$__buûtö_©™2l
 (
__y
, 
__x
))

652 
	#__©™2_code
 \

653 
__vÆue
; \

654 
__asm
 
__vﬁ©ûe__
 \

656 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

657  
__vÆue


	)

658 #ifde‡
__FAST_MATH__


659 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

661 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

665 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

666 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

667 
__vÆue
; \

668 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

674  
__vÆue
)

678 #ifde‡
__FAST_MATH__


679 #i‡!
	`__GNUC_PREREQ
 (3,3)

680 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

681 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

682 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

684 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

688 #i‡
	`__GNUC_PREREQ
 (2, 8)

689 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

690 #ifde‡
__USE_ISOC99


691 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

692 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

694 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

696 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

697 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

700 #ifde‡
__FAST_MATH__


701 #i‡!
	`__GNUC_PREREQ
 (3, 4)

703 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

705 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

707 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 #i‡!
	`__GNUC_PREREQ
 (3, 5)

711 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

713 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

714 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

717 #i‡!
	`__GNUC_PREREQ
 (3, 4)

718 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

722 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

723 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

724 { 
__xld
: 
__x
 
	}
}; \

725 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

726 
	g__n
.
	g__xi
[1] = 0x80000000; \

727 
	g__n
.
	g__xi
[0] = 0; \

728  
	g__n
.
	g__xld
)

731 #ifde‡
__FAST_MATH__


733 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

734 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

735  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

737 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

738 
__ex
 = 
	`__ex∂
 (
__x
); \

739  0.5 * (
__ex
 + 1.0 / __ex))

741 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

742 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

743  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

746 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

747 
__vÆue
; \

748 
__ign‹e
; \

749 
__cw
; \

750 
__cwtmp
; \

751 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

759 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

760 "=m" (
__cw
) \

761 : "0" (
__x
)); \

762  
__vÆue
)

764 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

765 
__vÆue
; \

766 
__ign‹e
; \

767 
__cw
; \

768 
__cwtmp
; \

769 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

777 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

778 "=m" (
__cw
) \

779 : "0" (
__x
)); \

780  
__vÆue
)

782 #ifde‡
__FAST_MATH__


783 
	#__ldexp_code
 \

784 
__vÆue
; \

785 
__asm
 
__vﬁ©ûe__
 \

787 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

788  
__vÆue


	)

790 
__MATH_INLINE
 

791 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

793 
__ldexp_code
;

794 
	}
}

799 #ifde‡
__USE_ISOC99


801 #ifde‡
__FAST_MATH__


802 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

806 
	#__M_SQRT2
 1.41421356237309504880L

	)

808 #i‡!
	`__GNUC_PREREQ
 (3, 5)

809 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

810 
__vÆue
; \

811 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

812 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

814 
__asm
 
__vﬁ©ûe__
 \

818 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

819  
__vÆue
)

824 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

825 
__y
 = 
	`__Áb¶
 (
__x
); \

826  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

827 * 
	$__sgn1l
 (
__x
)))

829 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

830  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

832 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

833 
__y
 = 
	`__Áb¶
 (
__x
); \

834  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

837 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

838  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

840 #i‡!
	`__GNUC_PREREQ
 (3, 5)

841 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

842 
__vÆue
; \

843 
__junk
; \

844 
__asm
 
__vﬁ©ûe__
 \

846 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

847  
__vÆue
)

853 #ifde‡
__USE_ISOC99


854 #ifde‡
__FAST_MATH__


856 #i‡!
	`__GNUC_PREREQ
 (3, 5)

857 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

860 
__MATH_INLINE
 

861 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

863 
__ldexp_code
;

864 
	}
}

866 
__MATH_INLINE
 

867 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

869 
__ldexp_code
;

870 
	}
}

872 
__ölöe_m©h›NP
 (
röt
, "frndint")

875 
	#__Ãöt_code
 \

876 
__Ãöåes
; \

877 
__asm__
 
__vﬁ©ûe__
 \

879 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

880  
__Ãöåes


	)

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãötf
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöt
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 
__MATH_INLINE
 

892 
__NTH
 (
	$Ãöé
 (
__x
))

894 
__Ãöt_code
;

895 
	}
}

896 #unde‡
__Ãöt_code


898 
	#__Œröt_code
 \

899 
__Œröåes
; \

900 
__asm__
 
__vﬁ©ûe__
 \

902 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

903  
__Œröåes


	)

904 
__exãnsi⁄__


905 
__MATH_INLINE
 

906 
__NTH
 (
	$Œrötf
 (
__x
))

908 
__Œröt_code
;

909 
	}
}

910 
__exãnsi⁄__


911 
__MATH_INLINE
 

912 
__NTH
 (
	$Œröt
 (
__x
))

914 
__Œröt_code
;

915 
	}
}

916 
__exãnsi⁄__


917 
__MATH_INLINE
 

918 
__NTH
 (
	$Œröé
 (
__x
))

920 
__Œröt_code
;

921 
	}
}

922 #unde‡
__Œröt_code


927 #ifde‡
__USE_MISC


929 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

930 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

931 
__vÆue
; \

932 
__˛obbîed
; \

933 
__asm
 
__vﬁ©ûe__
 \

938 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

939  
__vÆue
)

944 
__MATH_INLINE
 

945 
__NTH
 (
	$__föôe
 (
__x
))

947  (
__exãnsi⁄__


948 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

950 
	}
}

955 #unde‡
__©™2_code


956 #ifde‡
__FAST_MATH__


957 #unde‡
__expm1_code


958 #unde‡
__exp_code


959 #unde‡
__söcos_code


966 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


967 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

968 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

969 
__vÆue
;

970 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

971 : "Ò" (
__vÆue
)

972 : "0" (
__x
), "u" (
__y
) : "st(1)");

973  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

113 *
_lowî
;

114 *
_uµî
;

115 } 
si_addr_bnd
;

116 } 
_sigÁu…
;

121 
si_b™d
;

122 
si_fd
;

123 } 
_sigpﬁl
;

128 *
_ˇŒ_addr
;

129 
_sysˇŒ
;

130 
_¨ch
;

131 } 
_sigsys
;

132 } 
_sifõlds
;

133 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

137 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

138 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

139 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

140 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

141 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

142 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

143 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

144 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

145 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

146 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

147 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

148 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

149 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_lowî


	)

150 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
si_addr_bnd
.
_uµî


	)

151 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

152 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

153 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

154 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

155 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

162 
SI_ASYNCNL
 = -60,

163 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

164 
SI_TKILL
 = -6,

165 
	#SI_TKILL
 
SI_TKILL


	)

166 
SI_SIGIO
,

167 
	#SI_SIGIO
 
SI_SIGIO


	)

168 
SI_ASYNCIO
,

169 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

170 
SI_MESGQ
,

171 
	#SI_MESGQ
 
SI_MESGQ


	)

172 
SI_TIMER
,

173 
	#SI_TIMER
 
SI_TIMER


	)

174 
SI_QUEUE
,

175 
	#SI_QUEUE
 
SI_QUEUE


	)

176 
SI_USER
,

177 
	#SI_USER
 
SI_USER


	)

178 
SI_KERNEL
 = 0x80

179 
	#SI_KERNEL
 
SI_KERNEL


	)

183 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


187 
ILL_ILLOPC
 = 1,

188 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

189 
ILL_ILLOPN
,

190 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

191 
ILL_ILLADR
,

192 
	#ILL_ILLADR
 
ILL_ILLADR


	)

193 
ILL_ILLTRP
,

194 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

195 
ILL_PRVOPC
,

196 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

197 
ILL_PRVREG
,

198 
	#ILL_PRVREG
 
ILL_PRVREG


	)

199 
ILL_COPROC
,

200 
	#ILL_COPROC
 
ILL_COPROC


	)

201 
ILL_BADSTK


202 
	#ILL_BADSTK
 
ILL_BADSTK


	)

208 
FPE_INTDIV
 = 1,

209 
	#FPE_INTDIV
 
FPE_INTDIV


	)

210 
FPE_INTOVF
,

211 
	#FPE_INTOVF
 
FPE_INTOVF


	)

212 
FPE_FLTDIV
,

213 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

214 
FPE_FLTOVF
,

215 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

216 
FPE_FLTUND
,

217 
	#FPE_FLTUND
 
FPE_FLTUND


	)

218 
FPE_FLTRES
,

219 
	#FPE_FLTRES
 
FPE_FLTRES


	)

220 
FPE_FLTINV
,

221 
	#FPE_FLTINV
 
FPE_FLTINV


	)

222 
FPE_FLTSUB


223 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

229 
SEGV_MAPERR
 = 1,

230 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

231 
SEGV_ACCERR


232 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

238 
BUS_ADRALN
 = 1,

239 
	#BUS_ADRALN
 
BUS_ADRALN


	)

240 
BUS_ADRERR
,

241 
	#BUS_ADRERR
 
BUS_ADRERR


	)

242 
BUS_OBJERR
,

243 
	#BUS_OBJERR
 
BUS_OBJERR


	)

244 
BUS_MCEERR_AR
,

245 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

246 
BUS_MCEERR_AO


247 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

251 #ifde‡
__USE_XOPEN_EXTENDED


255 
TRAP_BRKPT
 = 1,

256 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

257 
TRAP_TRACE


258 
	#TRAP_TRACE
 
TRAP_TRACE


	)

262 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


266 
CLD_EXITED
 = 1,

267 
	#CLD_EXITED
 
CLD_EXITED


	)

268 
CLD_KILLED
,

269 
	#CLD_KILLED
 
CLD_KILLED


	)

270 
CLD_DUMPED
,

271 
	#CLD_DUMPED
 
CLD_DUMPED


	)

272 
CLD_TRAPPED
,

273 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

274 
CLD_STOPPED
,

275 
	#CLD_STOPPED
 
CLD_STOPPED


	)

276 
CLD_CONTINUED


277 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

283 
POLL_IN
 = 1,

284 
	#POLL_IN
 
POLL_IN


	)

285 
POLL_OUT
,

286 
	#POLL_OUT
 
POLL_OUT


	)

287 
POLL_MSG
,

288 
	#POLL_MSG
 
POLL_MSG


	)

289 
POLL_ERR
,

290 
	#POLL_ERR
 
POLL_ERR


	)

291 
POLL_PRI
,

292 
	#POLL_PRI
 
POLL_PRI


	)

293 
POLL_HUP


294 
	#POLL_HUP
 
POLL_HUP


	)

298 #unde‡
__√ed_sigöfo_t


302 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

303 && !
deföed
 
__have_sigevít_t


304 
	#__have_sigevít_t
 1

	)

307 
	#__SIGEV_MAX_SIZE
 64

	)

308 #i‡
__WORDSIZE
 == 64

309 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

311 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

315 #i‚de‡
__have_±hªad_©å_t


316 
±hªad_©å_t
 
	t±hªad_©å_t
;

317 
	#__have_±hªad_©å_t
 1

	)

320 
	ssigevít


322 
sigvÆ_t
 
sigev_vÆue
;

323 
sigev_signo
;

324 
sigev_nŸify
;

328 
_∑d
[
__SIGEV_PAD_SIZE
];

332 
__pid_t
 
_tid
;

336 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

337 
±hªad_©å_t
 *
_©åibuã
;

338 } 
_sigev_thªad
;

339 } 
_sigev_un
;

340 } 
	tsigevít_t
;

343 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

344 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

349 
SIGEV_SIGNAL
 = 0,

350 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

351 
SIGEV_NONE
,

352 
	#SIGEV_NONE
 
SIGEV_NONE


	)

353 
SIGEV_THREAD
,

354 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

356 
SIGEV_THREAD_ID
 = 4

357 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 
__asm__
 
__vﬁ©ûe__


1109 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1110 : "1" ((Ë
__tmp
 - 1), "2" (
__§c
), "3" (
__n
)

1113  
__de°
;

1114 
	}
}

1118 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1119 
	#°rcmp
(
s1
, 
s2
) \

1120 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1121 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1122 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1123 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1124 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1125 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1126 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1127 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1128 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1129 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1130 (c⁄° *Ë(
s2
), \

1131 
	`°æí
 (
s1
)) \

1132 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1133 (c⁄° *Ë(
s2
), \

1134 
	`°æí
 (
s1
))) \

1135 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1136 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1137 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1138 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1139 (c⁄° *Ë(
s2
), \

1140 
	`°æí
 (
s2
)) \

1141 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1142 (c⁄° *Ë(
s2
), \

1143 
	`°æí
 (
s2
))) \

1144 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1146 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1147 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1148 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1150 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1151 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1154 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1155 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1158 
__ªsu…
; }))

	)

1160 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1161 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1162 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1163 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1165 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1166 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1169 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1170 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1173 
__ªsu…
; }))

	)

1175 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1176 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1177 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1178 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1180 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1181 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1183 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1184 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1185 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1188 
__ªsu…
; }))

	)

1190 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1192 
__STRING_INLINE
 

1193 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1195 
__ªs
;

1196 
__asm__
 
__vﬁ©ûe__


1212 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1213 : "1" (
__s1
), "2" (
__s2
),

1214 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1217  
__ªs
;

1218 
	}
}

1222 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1223 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1224 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1225 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1226 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1227 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1228 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1230 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1231 
size_t
 
__n
);

1233 
__STRING_INLINE
 

1234 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1236 
__ªs
;

1237 
__asm__
 
__vﬁ©ûe__


1256 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1257 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1258 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1261  
__ªs
;

1262 
	}
}

1266 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1267 
	#_USE_STRING_ARCH_°rchr
 1

	)

1268 
	#°rchr
(
s
, 
c
) \

1269 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1270 ? ((
c
) == '\0' \

1271 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1272 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1273 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1275 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1277 
__STRING_INLINE
 *

1278 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1280 
__d0
;

1281 *
__ªs
;

1282 
__asm__
 
__vﬁ©ûe__


1292 : "Ù" (
__ªs
), "=&a" (
__d0
)

1293 : "0" (
__s
), "1" (
__c
),

1294 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1296  
__ªs
;

1297 
	}
}

1299 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1301 
__STRING_INLINE
 *

1302 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1304 
__d0
;

1305 *
__ªs
;

1306 
__asm__
 
__vﬁ©ûe__


1317 : "Ù" (
__ªs
), "=&a" (
__d0
)

1318 : "0" (
__s
), "1" (
__c
),

1319 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1321  
__ªs
;

1322 
	}
}

1326 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1327 
	#__°rch∫ul
(
s
, 
c
) \

1328 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1329 ? ((
c
) == '\0' \

1330 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1331 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1332 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1334 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1336 
__STRING_INLINE
 *

1337 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1339 
__d0
;

1340 *
__ªs
;

1341 
__asm__
 
__vﬁ©ûe__


1351 : "Ù" (
__ªs
), "=&a" (
__d0
)

1352 : "0" (
__s
), "1" (
__c
),

1353 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1355  
__ªs
;

1356 
	}
}

1358 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1360 
__STRING_INLINE
 *

1361 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1363 
__d0
;

1364 *
__ªs
;

1365 
__asm__
 
__vﬁ©ûe__


1376 : "Ù" (
__ªs
), "=&a" (
__d0
)

1377 : "0" (
__s
), "1" (
__c
),

1378 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1380  
__ªs
;

1381 
	}
}

1382 #ifde‡
__USE_GNU


1383 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1387 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1389 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1390 
	#ödex
(
s
, 
c
) \

1391 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1392 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1393 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1398 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1399 
	#°ºchr
(
s
, 
c
) \

1400 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1401 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1402 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1404 #ifde‡
__i686__


1405 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1420 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1421 : "0" (1), "1" (
__s
), "2" (
__c
),

1422 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1424  
__ªs
 - 1;

1425 
	}
}

1427 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1429 
__STRING_INLINE
 *

1430 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1432 
__d0
, 
__d1
;

1433 *
__ªs
;

1434 
__asm__
 
__vﬁ©ûe__


1443 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1444 : "0" (1), "1" (
__s
), "2" (
__c
),

1445 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1447  
__ªs
 - 1;

1448 
	}
}

1450 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1452 
__STRING_INLINE
 *

1453 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1455 
__d0
, 
__d1
;

1456 *
__ªs
;

1457 
__asm__
 
__vﬁ©ûe__


1467 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1468 : "0" (0), "1" (
__s
), "2" (
__c
),

1469 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1471  
__ªs
;

1472 
	}
}

1474 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1476 
__STRING_INLINE
 *

1477 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1479 
__d0
, 
__d1
;

1480 *
__ªs
;

1481 
__asm__
 
__vﬁ©ûe__


1492 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1493 : "0" (0), "1" (
__s
), "2" (
__c
),

1494 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1496  
__ªs
;

1497 
	}
}

1501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1503 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1504 
	#rödex
(
s
, 
c
) \

1505 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1506 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1507 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1513 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1514 
	#°rc•n
(
s
, 
ªje˘
) \

1515 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1516 ? ((
ªje˘
)[0] == '\0' \

1517 ? 
	`°æí
 (
s
) \

1518 : ((
ªje˘
)[1] == '\0' \

1519 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1520 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1521 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1523 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1525 #i‚de‡
_FORCE_INLINES


1526 
__STRING_INLINE
 
size_t


1527 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1529 
__d0
;

1530 *
__ªs
;

1531 
__asm__
 
__vﬁ©ûe__


1540 : "Ù" (
__ªs
), "=&a" (
__d0
)

1541 : "0" (
__s
), "1" (
__ªje˘
),

1542 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1544  (
__ªs
 - 1Ë- 
__s
;

1545 
	}
}

1548 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1549 
size_t
 
__ªje˘_Àn
);

1551 
__STRING_INLINE
 
size_t


1552 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1554 
__d0
, 
__d1
, 
__d2
;

1555 c⁄° *
__ªs
;

1556 
__asm__
 
__vﬁ©ûe__


1567 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1568 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1570  (
__ªs
 - 1Ë- 
__s
;

1571 
	}
}

1573 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1574 #ifde‡
__PIC__


1576 
__STRING_INLINE
 
size_t


1577 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1579 
__d0
, 
__d1
, 
__d2
;

1580 c⁄° *
__ªs
;

1581 
__asm__
 
__vﬁ©ûe__


1598 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1599 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1601  (
__ªs
 - 1Ë- 
__s
;

1602 
	}
}

1604 
__STRING_INLINE
 
size_t


1605 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1607 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1608 c⁄° *
__ªs
;

1609 
__asm__
 
__vﬁ©ûe__


1623 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1624 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1627  (
__ªs
 - 1Ë- 
__s
;

1628 
	}
}

1634 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1635 
	#°r•n
(
s
, 
ac˚±
) \

1636 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1637 ? ((
ac˚±
)[0] == '\0' \

1638 ? ((Ë(
s
), 0) \

1639 : ((
ac˚±
)[1] == '\0' \

1640 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1641 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1642 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1644 #i‚de‡
_FORCE_INLINES


1645 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1647 
__STRING_INLINE
 
size_t


1648 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1650 
__d0
;

1651 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1659 : "Ù" (
__ªs
), "=&q" (
__d0
)

1660 : "0" (
__s
), "1" (
__ac˚±
),

1661 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1663  (
__ªs
 - 1Ë- 
__s
;

1664 
	}
}

1667 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1668 
size_t
 
__ac˚±_Àn
);

1670 
__STRING_INLINE
 
size_t


1671 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1673 
__d0
, 
__d1
, 
__d2
;

1674 c⁄° *
__ªs
;

1675 
__asm__
 
__vﬁ©ûe__


1686 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1687 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1690 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1691 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1693  (
__ªs
 - 1Ë- 
__s
;

1694 
	}
}

1696 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1697 #ifde‡
__PIC__


1699 
__STRING_INLINE
 
size_t


1700 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1702 
__d0
, 
__d1
, 
__d2
;

1703 c⁄° *
__ªs
;

1704 
__asm__
 
__vﬁ©ûe__


1720 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1721 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1723  (
__ªs
 - 1Ë- 
__s
;

1724 
	}
}

1726 
__STRING_INLINE
 
size_t


1727 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1729 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1730 c⁄° *
__ªs
;

1731 
__asm__
 
__vﬁ©ûe__


1745 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1746 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1748  (
__ªs
 - 1Ë- 
__s
;

1749 
	}
}

1754 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1755 
	#°Ωbrk
(
s
, 
ac˚±
) \

1756 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1757 ? ((
ac˚±
)[0] == '\0' \

1758 ? ((Ë(
s
), (*) 0) \

1759 : ((
ac˚±
)[1] == '\0' \

1760 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1761 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1762 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1764 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1765 
size_t
 
__ac˚±_Àn
);

1767 
__STRING_INLINE
 *

1768 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1770 
__d0
, 
__d1
, 
__d2
;

1771 *
__ªs
;

1772 
__asm__
 
__vﬁ©ûe__


1787 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1788 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1790  
__ªs
;

1791 
	}
}

1793 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1794 #ifde‡
__PIC__


1796 
__STRING_INLINE
 *

1797 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1799 
__d0
, 
__d1
, 
__d2
;

1800 *
__ªs
;

1801 
__asm__
 
__vﬁ©ûe__


1822 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1823 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1825  
__ªs
;

1826 
	}
}

1828 
__STRING_INLINE
 *

1829 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1831 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1832 *
__ªs
;

1833 
__asm__
 
__vﬁ©ûe__


1852 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1853 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1855  
__ªs
;

1856 
	}
}

1861 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1862 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1863 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1864 ? ((
√edÀ
)[0] == '\0' \

1865 ? (
hay°ack
) \

1866 : ((
√edÀ
)[1] == '\0' \

1867 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1868 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1869 
	`°æí
 (
√edÀ
)))) \

1870 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1874 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1875 c⁄° 
__√edÀ
[],

1876 
size_t
 
__√edÀ_Àn
);

1878 
__STRING_INLINE
 *

1879 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1880 
size_t
 
__√edÀ_Àn
)

1882 
__d0
, 
__d1
, 
__d2
;

1883 *
__ªs
;

1884 
__asm__
 
__vﬁ©ûe__


1897 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1898 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1900  
__ªs
;

1901 
	}
}

1903 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1904 c⁄° *
__√edÀ
);

1905 #ifde‡
__PIC__


1907 
__STRING_INLINE
 *

1908 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1910 
__d0
, 
__d1
, 
__d2
;

1911 *
__ªs
;

1912 
__asm__
 
__vﬁ©ûe__


1931 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1932 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1933 "d" (
__√edÀ
)

1935  
__ªs
;

1936 
	}
}

1938 
__STRING_INLINE
 *

1939 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1941 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1942 *
__ªs
;

1943 
__asm__
 
__vﬁ©ûe__


1960 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1961 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1962 "b" (
__√edÀ
)

1964  
__ªs
;

1965 
	}
}

1971 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1972 #ifde‡
__i686__


1973 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1974 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1975 ? 
	`__buûtö_ffs
 (
w‹d
) \

1976 : ({ 
__˙t
, 
__tmp
; \

1977 
__asm__
 
__vﬁ©ûe__
 \

1980 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1981 : "rm" (
w‹d
), "1" (-1)); \

1982 
__˙t
 + 1; }))

	)

1984 #i‚de‡
ff¶


1985 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1990 #i‚de‡
_FORCE_INLINES


1991 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

52 
	#__°rög2_1b±r_p
(
__x
) \

53 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

56 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


57 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

61 #i‚de‡
_HAVE_STRING_ARCH_°rchr


62 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

63 
	#°rchr
(
s
, 
c
) \

64 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

65 && (
c
) == '\0' \

66 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

67 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

72 #ifde‡
__USE_GNU


73 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


74 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

77 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

83 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


84 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

89 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


90 #ifde‡
_USE_STRING_ARCH_°rchr


91 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

92 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

93 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

94 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

95 ? 
	`°rˇt
 (
__de°
, 
§c
) \

96 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

97 
§c
, 
n
)Ë'\0', 
__de°
)) \

98 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

100 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

106 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


107 
	#°rcmp
(
s1
, 
s2
) \

108 
__exãnsi⁄__
 \

109 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

110 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

111 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

112 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

113 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

114 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

115 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

116 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

118 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

119 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

120 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

121 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

122 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

123 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

124 : -
	`__°rcmp_cg
 (
s2
, 
s1
, 
__s2_Àn
)) \

125 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

127 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

128 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

129 (c⁄° *Ë(c⁄° *Ë(
s2
); \

130 
__ªsu…
 = \

131 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

132 - 
__s2
[0]); \

133 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

135 
__ªsu…
 = (((const *) \

136 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

137 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

139 
__ªsu…
 = (((const *) \

140 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

141 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

142 
__ªsu…
 = (((const *) \

143 (c⁄° *Ë(
s1
))[3] \

144 - 
__s2
[3]); \

147 
__ªsu…
; }))

	)

152 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


153 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

154 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

155 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

156 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

157 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

158 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

159 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

165 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


166 
	#°rc•n
(
s
, 
ªje˘
Ë
	`__buûtö_°rc•n
 (s,Ñeje˘)

	)

172 #i‚de‡
_HAVE_STRING_ARCH_°r•n


173 
	#°r•n
(
s
, 
ac˚±
Ë
	`__buûtö_°r•n
 (s,ác˚±)

	)

178 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


179 
	#°Ωbrk
(
s
, 
ac˚±
Ë
	`__buûtö_°Ωbrk
 (s,ác˚±)

	)

183 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


184 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


185 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

186 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

187 && ((c⁄° *Ë(
£p
))[0] != '\0' \

188 && ((c⁄° *Ë(
£p
))[1] == '\0' \

189 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

190 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

193 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

194 
__STRING_INLINE
 *

195 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

197 *
__ªsu…
;

198 i‡(
__s
 =
NULL
)

199 
__s
 = *
__√xç
;

200 *
__s
 =
__£p
)

201 ++
__s
;

202 
__ªsu…
 = 
NULL
;

203 i‡(*
__s
 != '\0')

205 
__ªsu…
 = 
__s
++;

206 *
__s
 != '\0')

207 i‡(*
__s
++ =
__£p
)

209 
__s
[-1] = '\0';

213 *
__√xç
 = 
__s
;

214  
__ªsu…
;

215 
	}
}

216 #ifde‡
__USE_POSIX


217 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

222 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


223 #i‚de‡
_HAVE_STRING_ARCH_°r£p


225 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

226 
	#__°r£p
(
s
, 
ªje˘
) \

227 
__exãnsi⁄__
 \

228 ({ 
__r0
, 
__r1
, 
__r2
; \

229 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

230 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

231 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

232 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

233 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

234 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

235 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

236 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

237 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

238 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

239 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

240 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

243 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

244 
__STRING_INLINE
 *

245 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

247 *
__ªtvÆ
 = *
__s
;

248 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

249 *(*
__s
)++ = '\0';

250  
__ªtvÆ
;

251 
	}
}

253 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

254 
__STRING_INLINE
 *

255 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

257 *
__ªtvÆ
 = *
__s
;

258 i‡(
__ªtvÆ
 !
NULL
)

260 *
__˝
 = 
__ªtvÆ
;

263 i‡(*
__˝
 == '\0')

265 
__˝
 = 
NULL
;

268 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

270 *
__˝
++ = '\0';

273 ++
__˝
;

275 *
__s
 = 
__˝
;

277  
__ªtvÆ
;

278 
	}
}

280 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

281 
__ªje˘3
);

282 
__STRING_INLINE
 *

283 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

285 *
__ªtvÆ
 = *
__s
;

286 i‡(
__ªtvÆ
 !
NULL
)

288 *
__˝
 = 
__ªtvÆ
;

291 i‡(*
__˝
 == '\0')

293 
__˝
 = 
NULL
;

296 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

298 *
__˝
++ = '\0';

301 ++
__˝
;

303 *
__s
 = 
__˝
;

305  
__ªtvÆ
;

306 
	}
}

307 #ifde‡
__USE_MISC


308 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

315 #ifde‡
__USE_MISC


317 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


318 
	#__√ed_mÆloc_™d_ˇŒoc


	)

319 
	~<°dlib.h
>

322 #i‚de‡
_HAVE_STRING_ARCH_°rdup


324 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

325 
	#__°rdup
(
s
) \

326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

327 ? (((c⁄° *Ë(
s
))[0] == '\0' \

328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

330 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

331 i‡(
__ªtvÆ
 !
NULL
) \

332 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

333 
__ªtvÆ
; 
	}
})) \

334 : 
	`__°rdup
 (
s
)))

	)

336 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


337 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

341 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


343 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

344 
__THROW
 
__©åibuã_mÆloc__
;

345 
	#__°∫dup
(
s
, 
n
) \

346 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

347 ? (((c⁄° *Ë(
s
))[0] == '\0' \

348 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

349 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

350 
size_t
 
__n
 = (
n
); \

351 *
__ªtvÆ
; \

352 i‡(
__n
 < 
__Àn
) \

353 
__Àn
 = 
__n
 + 1; \

354 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

355 i‡(
__ªtvÆ
 !
NULL
) \

357 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

358 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

359 
__Àn
 - 1); \

361 
__ªtvÆ
; 
	}
})) \

362 : 
	`__°∫dup
 (
s
, 
n
)))

	)

364 #ifde‡
__USE_XOPEN2K8


365 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

371 #i‚de‡
_FORCE_INLINES


372 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 6

	)

45 
	#NCURSES_VERSION_MINOR
 0

	)

46 
	#NCURSES_VERSION_PATCH
 20161126

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "6.0"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

63 
	~<°döt.h
>

69 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


70 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

77 #i‚de‡
NCURSES_ATTR_T


78 
	#NCURSES_ATTR_T
 

	)

85 #unde‡
NCURSES_CONST


86 
	#NCURSES_CONST
 c⁄°

	)

88 #unde‡
NCURSES_INLINE


89 
	#NCURSES_INLINE
 
ölöe


	)

100 #unde‡
NCURSES_COLOR_T


101 
	#NCURSES_COLOR_T
 

	)

103 #unde‡
NCURSES_PAIRS_T


104 
	#NCURSES_PAIRS_T
 

	)

109 #i‚de‡
NCURSES_OPAQUE


110 
	#NCURSES_OPAQUE
 0

	)

116 #i‚de‡
NCURSES_REENTRANT


117 
	#NCURSES_REENTRANT
 0

	)

123 #unde‡
NCURSES_INTEROP_FUNCS


124 
	#NCURSES_INTEROP_FUNCS
 0

	)

129 #unde‡
NCURSES_SIZE_T


130 
	#NCURSES_SIZE_T
 

	)

135 #unde‡
NCURSES_TPARM_VARARGS


136 
	#NCURSES_TPARM_VARARGS
 1

	)

142 #unde‡
NCURSES_TPARM_ARG


143 
	#NCURSES_TPARM_ARG
 

	)

149 #unde‡
NCURSES_WCWIDTH_GRAPHICS


150 
	#NCURSES_WCWIDTH_GRAPHICS
 1

	)

157 #unde‡
NCURSES_CH_T


158 
	#NCURSES_CH_T
 
chty≥


	)

160 #i‡0 && 
deföed
(
_LP64
)

161 
	tchty≥
;

162 
	tmmask_t
;

164 
	tchty≥
;

165 
	tmmask_t
;

171 
	~<°dio.h
>

180 #i‚de‡
NCURSES_WIDECHAR


181 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| (deföed(
_XOPEN_SOURCE
) && (_XOPEN_SOURCE - 0 >= 500))

182 
	#NCURSES_WIDECHAR
 1

	)

184 
	#NCURSES_WIDECHAR
 0

	)

188 
	~<°d¨g.h
>

189 #i‡
NCURSES_WIDECHAR


190 
	~<°ddef.h
>

205 #unde‡
TRUE


206 
	#TRUE
 1

	)

208 #unde‡
FALSE


209 
	#FALSE
 0

	)

211 
	tNCURSES_BOOL
;

213 #i‡
deföed
(
__˝lu•lus
)

216 
	#NCURSES_BOOL
 
boﬁ


	)

220 #i‡
NCURSES_ENABLE_STDBOOL_H


221 
	~<°dboﬁ.h
>

223 
	#NCURSES_BOOL
 
boﬁ


	)

226 #unde‡
boﬁ


227 
	#boﬁ
 
NCURSES_BOOL


	)

232 #ifde‡
__˝lu•lus


234 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

236 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

243 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

244 
	#WA_NORMAL
 
A_NORMAL


	)

245 
	#WA_STANDOUT
 
A_STANDOUT


	)

246 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

247 
	#WA_REVERSE
 
A_REVERSE


	)

248 
	#WA_BLINK
 
A_BLINK


	)

249 
	#WA_DIM
 
A_DIM


	)

250 
	#WA_BOLD
 
A_BOLD


	)

251 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

252 
	#WA_INVIS
 
A_INVIS


	)

253 
	#WA_PROTECT
 
A_PROTECT


	)

254 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

255 
	#WA_LEFT
 
A_LEFT


	)

256 
	#WA_LOW
 
A_LOW


	)

257 
	#WA_RIGHT
 
A_RIGHT


	)

258 
	#WA_TOP
 
A_TOP


	)

259 
	#WA_VERTICAL
 
A_VERTICAL


	)

262 
	#WA_ITALIC
 
A_ITALIC


	)

266 
	#COLOR_BLACK
 0

	)

267 
	#COLOR_RED
 1

	)

268 
	#COLOR_GREEN
 2

	)

269 
	#COLOR_YELLOW
 3

	)

270 
	#COLOR_BLUE
 4

	)

271 
	#COLOR_MAGENTA
 5

	)

272 
	#COLOR_CYAN
 6

	)

273 
	#COLOR_WHITE
 7

	)

277 #i‡0 || 
NCURSES_REENTRANT


278 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

279 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

281 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

284 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,(c))])

	)

287 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

288 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

289 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

290 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

291 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

292 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

293 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

294 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

295 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

296 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

297 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

298 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

299 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

300 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

301 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

302 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

303 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

304 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

306 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

307 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

308 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

309 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

310 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

311 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

312 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

318 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

319 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

320 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

321 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

322 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

323 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

324 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

332 
	#ACS_BSSB
 
ACS_ULCORNER


	)

333 
	#ACS_SSBB
 
ACS_LLCORNER


	)

334 
	#ACS_BBSS
 
ACS_URCORNER


	)

335 
	#ACS_SBBS
 
ACS_LRCORNER


	)

336 
	#ACS_SBSS
 
ACS_RTEE


	)

337 
	#ACS_SSSB
 
ACS_LTEE


	)

338 
	#ACS_SSBS
 
ACS_BTEE


	)

339 
	#ACS_BSSS
 
ACS_TTEE


	)

340 
	#ACS_BSBS
 
ACS_HLINE


	)

341 
	#ACS_SBSB
 
ACS_VLINE


	)

342 
	#ACS_SSSS
 
ACS_PLUS


	)

344 #unde‡
ERR


345 
	#ERR
 (-1)

	)

347 #unde‡
OK


348 
	#OK
 (0)

	)

351 
	#_SUBWIN
 0x01

	)

352 
	#_ENDLINE
 0x02

	)

353 
	#_FULLWIN
 0x04

	)

354 
	#_SCROLLWIN
 0x08

	)

355 
	#_ISPAD
 0x10

	)

356 
	#_HASMOVED
 0x20

	)

357 
	#_WRAPPED
 0x40

	)

363 
	#_NOCHANGE
 -1

	)

369 
	#_NEWINDEX
 -1

	)

371 
s¸ìn
 
	tSCREEN
;

372 
_wö_°
 
	tWINDOW
;

374 
chty≥
 
	t©å_t
;

376 #i‡
NCURSES_WIDECHAR


379 #ifde‡
mbÀn


380 #unde‡
mbÀn


382 
	~<libutf8.h
>

386 
	~<wch¨.h
>

390 
	twch¨_t
;

394 
	twöt_t
;

403 
	#CCHARW_MAX
 5

	)

406 
©å_t
 
	g©å
;

407 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

409 #unde‡
NCURSES_EXT_COLORS


410 
	#NCURSES_EXT_COLORS
 20161126

	)

411 
	gext_cﬁ‹
;

414 
	tcch¨_t
;

418 #i‡!
NCURSES_OPAQUE


419 
	gld©
;

421 
	s_wö_°


423 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

426 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

427 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

429 
	g_Êags
;

432 
©å_t
 
	g_©ås
;

433 
chty≥
 
	g_bkgd
;

436 
boﬁ
 
	g_nŸimeout
;

437 
boﬁ
 
	g_˛ór
;

438 
boﬁ
 
	g_Àaveok
;

439 
boﬁ
 
	g_s¸ﬁl
;

440 
boﬁ
 
	g_idlok
;

441 
boﬁ
 
	g_idcok
;

442 
boﬁ
 
	g_immed
;

443 
boﬁ
 
	g_sync
;

444 
boﬁ
 
	g_u£_key∑d
;

445 
	g_dñay
;

447 
ld©
 *
	g_löe
;

450 
NCURSES_SIZE_T
 
	g_ªgt›
;

451 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

454 
	g_∑rx
;

455 
	g_∑ry
;

456 
WINDOW
 *
	g_∑ª¡
;

459 
	spd©


461 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

462 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

463 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

464 } 
	g_∑d
;

466 
NCURSES_SIZE_T
 
	g_yoff£t
;

468 #i‡
NCURSES_WIDECHAR


469 
cch¨_t
 
	g_bkg∫d
;

471 
	g_cﬁ‹
;

481 #ifde‡
NCURSES_WGETCH_EVENTS


482 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

484 
	#NCURSES_EVENT_VERSION
 1

	)

490 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

491 
	#_NC_EVENT_FILE
 2

	)

492 
	#_NC_EVENT_FILE_READABLE
 2

	)

494 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

495 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

500 
	gty≥
;

503 
	gtimeout_m£c
;

506 
	gÊags
;

507 
	gfd
;

508 
	gªsu…
;

509 } 
	g„v
;

510 } 
	gd©a
;

511 } 
	t_nc_evít
;

515 
	gcou¡
;

516 
	gªsu…_Êags
;

517 
_nc_evít
 *
	gevíts
[1];

518 } 
	t_nc_evíéi°
;

520 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

521 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

533 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

534 
	#__©åibuã__
(
p
Ë

	)

545 #i‚de‡
GCC_PRINTFLIKE


546 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

547 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

549 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

553 #i‚de‡
GCC_SCANFLIKE


554 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

555 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

557 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

561 #i‚def 
GCC_NORETURN


562 
	#GCC_NORETURN


	)

565 #i‚def 
GCC_UNUSED


566 
	#GCC_UNUSED


	)

573 (*
	gNCURSES_OUTC
)();

582 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

583 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

584 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

585 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

586 
NCURSES_EXPORT
(Ë
add°r
 (const *);

587 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

588 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

589 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

590 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

591 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

592 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

593 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, 
NCURSES_PAIRS_T
, *);

594 
NCURSES_EXPORT
(Ë
baudøã
 ();

595 
NCURSES_EXPORT
(Ë
bìp
 ();

596 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

597 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

598 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

599 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

600 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

601 
NCURSES_EXPORT
(Ë
cbªak
 ();

602 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, 
NCURSES_PAIRS_T
, const *);

603 
NCURSES_EXPORT
(Ë
˛ór
 ();

604 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

605 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

606 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

607 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T*,NCURSES_COLOR_T*,NCURSES_COLOR_T*);

608 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (
NCURSES_PAIRS_T
,*);

609 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

610 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

611 
NCURSES_EXPORT
(Ë
curs_£t
 ();

612 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

613 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

614 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

615 
NCURSES_EXPORT
(Ë
dñch
 ();

616 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

617 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

618 
NCURSES_EXPORT
(Ë
dñëñn
 ();

619 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

620 
NCURSES_EXPORT
(Ë
doupd©e
 ();

621 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

622 
NCURSES_EXPORT
(Ë
echo
 ();

623 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

624 
NCURSES_EXPORT
(Ë
îa£
 ();

625 
NCURSES_EXPORT
(Ë
ídwö
 ();

626 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

627 
NCURSES_EXPORT
(Ë
fûãr
 ();

628 
NCURSES_EXPORT
(Ë
Êash
 ();

629 
NCURSES_EXPORT
(Ë
Êushöp
 ();

630 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

631 
NCURSES_EXPORT
(Ë
gëch
 ();

632 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

633 
NCURSES_EXPORT
(Ë
gë°r
 (*);

634 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

635 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

636 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

637 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

638 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

639 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

640 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

641 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

642 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

643 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

644 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

645 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

646 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

647 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T,NCURSES_COLOR_T,NCURSES_COLOR_T);

648 
NCURSES_EXPORT
(Ë
öô_∑ú
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
,NCURSES_COLOR_T);

649 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

650 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

651 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

652 
NCURSES_EXPORT
(Ë
ö£π 
 ();

653 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

654 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

655 
NCURSES_EXPORT
(Ë
ö°r
 (*);

656 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

657 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

658 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

659 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

660 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

661 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

662 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

663 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

664 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

665 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

666 
NCURSES_EXPORT
(Ë
move
 (, );

667 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

668 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

669 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

670 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

671 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

672 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

673 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

674 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

675 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

676 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

677 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

678 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

679 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

680 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

681 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

682 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

683 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

684 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

685 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

686 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

687 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

688 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

689 
GCC_PRINTFLIKE
(3,4);

690 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

691 
GCC_SCANFLIKE
(3,4);

692 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

693 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

694 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

695 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

696 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

697 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

698 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

699 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

700 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

701 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

702 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

703 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

704 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

705 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

706 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

707 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

708 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

709 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

710 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

711 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

712 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

713 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

714 
GCC_PRINTFLIKE
(4,5);

715 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

716 
GCC_SCANFLIKE
(4,5);

717 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

718 
NCURSES_EXPORT
(Ë
«pms
 ();

719 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

720 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

721 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

722 
NCURSES_EXPORT
(Ë
∆
 ();

723 
NCURSES_EXPORT
(Ë
nocbªak
 ();

724 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
n€cho
 ();

726 
NCURSES_EXPORT
(Ë
n⁄l
 ();

727 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

728 
NCURSES_EXPORT
(Ë
n‹aw
 ();

729 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

730 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

731 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

732 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
*,NCURSES_COLOR_T*);

733 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

734 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

735 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

736 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

737 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

738 
GCC_PRINTFLIKE
(1,2);

739 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

740 
NCURSES_EXPORT
(Ë
qiÊush
 ();

741 
NCURSES_EXPORT
(Ë
øw
 ();

742 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

743 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

744 
NCURSES_EXPORT
(Ë
ª£ây
 ();

745 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

746 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

747 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

748 
NCURSES_EXPORT
(Ë
ßvëty
 ();

749 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

750 
GCC_SCANFLIKE
(1,2);

751 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

752 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

753 
NCURSES_EXPORT
(Ë
s¸l
 ();

754 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

755 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

756 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

757 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

758 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

759 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

760 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

761 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

762 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

763 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

764 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

765 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

766 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,
NCURSES_PAIRS_T
,*);

767 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

768 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 (
NCURSES_PAIRS_T
);

769 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

770 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

771 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

772 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

773 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

774 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

775 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

776 
NCURSES_EXPORT
(Ë
°™dout
 ();

777 
NCURSES_EXPORT
(Ë
°™díd
 ();

778 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

779 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

780 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

781 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

782 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

783 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

784 
NCURSES_EXPORT
(Ë
timeout
 ();

785 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

786 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

787 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

788 
NCURSES_EXPORT
(Ë
ungëch
 ();

789 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

791 
NCURSES_EXPORT
(Ë
u£_tio˘l
 (
boﬁ
);

792 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

793 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

794 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

795 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

796 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

797 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

798 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

799 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

800 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

801 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

802 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

803 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

804 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

805 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

806 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

807 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

808 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

809 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

810 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, 
NCURSES_PAIRS_T
, *);

811 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

812 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

813 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

814 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

815 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

816 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,
NCURSES_PAIRS_T
,*);

819 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

821 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

822 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

823 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

824 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

825 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

826 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

827 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

828 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

829 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

830 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

831 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

832 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

833 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

834 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

835 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

836 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

837 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

838 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

839 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

840 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

841 
GCC_PRINTFLIKE
(2,3);

842 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

843 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

844 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

845 
GCC_SCANFLIKE
(2,3);

846 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

847 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

848 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

853 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

854 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

859 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

860 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

861 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

862 
NCURSES_EXPORT
(Ë
puç
 (const *);

864 #i‡
NCURSES_TPARM_VARARGS


865 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

867 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, 
NCURSES_TPARM_ARG
,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG);

868 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

871 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

876 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

877 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

878 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

879 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

880 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

881 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

882 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

883 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

884 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

889 #i‡!
NCURSES_WIDECHAR


890 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

897 #unde‡
NCURSES_EXT_FUNCS


898 
	#NCURSES_EXT_FUNCS
 20161126

	)

899 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

900 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

902 
NCURSES_EXPORT
(*Ë
keybound
 (, );

903 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

904 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

905 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

906 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

907 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

908 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

909 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

910 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

911 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

912 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

913 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

914 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

915 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

916 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

917 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

918 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

919 
NCURSES_EXPORT
(Ë
nofûãr
();

925 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

926 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

927 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

928 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

929 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

930 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

931 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

932 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

933 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

934 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

935 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

936 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

937 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

938 
NCURSES_EXPORT
(Ë
wgëdñay
 (c⁄° 
WINDOW
 *);

939 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

942 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

950 #unde‡
NCURSES_SP_FUNCS


951 
	#NCURSES_SP_FUNCS
 20161126

	)

952 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

955 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

956 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*, NCURSES_COLOR_T*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

976 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

978 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

979 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

980 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_COLOR_T
, NCURSES_COLOR_T, NCURSES_COLOR_T, NCURSES_COLOR_T);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
, NCURSES_COLOR_T);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

984 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

985 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

990 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

991 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

992 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

993 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

999 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*);

1000 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

1013 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

1014 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, 
NCURSES_PAIRS_T
, *);

1015 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

1016 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
);

1017 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

1018 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

1019 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

1020 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

1021 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

1022 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

1023 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

1024 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

1025 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

1026 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

1027 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

1028 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

1029 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

1030 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_tio˘l
Ë(
SCREEN
*, 
boﬁ
);

1031 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

1032 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1034 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1035 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1036 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1037 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1038 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1039 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1040 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1041 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1042 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1043 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1044 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1045 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1046 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1047 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1050 #unde‡
NCURSES_SP_FUNCS


1051 
	#NCURSES_SP_FUNCS
 0

	)

1052 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1053 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1058 
	#NCURSES_ATTR_SHIFT
 8

	)

1059 
	#NCURSES_BITS
(
mask
,
shi·
Ë(
	`NCURSES_CAST
(
chty≥
,(mask)Ë<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1061 
	#A_NORMAL
 (1UL - 1UL)

	)

1062 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1063 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1064 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1065 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1066 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1067 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1068 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1069 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1070 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1071 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1072 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1073 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1074 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1075 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1076 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1077 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1078 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1079 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1082 
	#A_ITALIC
 
	`NCURSES_BITS
(1UL,23Ë

	)

1095 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1096 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1097 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1098 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1100 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1101 i‡(
	`is_Àaveok
(
√ws¸
)) \

1102 (
y
Ë(
x
) = -1; \

1104 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1106 } 0)

	)

1108 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1109 i‡((
y
Ë=-1 && (
x
) == -1) \

1110 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1112 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1113 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1116 } 0)

	)

1118 #i‚de‡
NCURSES_NOMACROS


1124 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1125 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s, (n))

	)

1127 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1129 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1130 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1131 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1132 
	#¸mode
(Ë
	`cbªak
()

	)

1133 
	#no¸mode
(Ë
	`nocbªak
()

	)

1134 
	#gëtmode
()

	)

1137 #i‡!
NCURSES_OPAQUE


1138 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1139 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1140 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1141 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1142 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1143 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1144 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1145 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1146 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1149 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1150 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1152 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1153 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1155 #i‡!
NCURSES_OPAQUE


1156 #i‡
NCURSES_WIDECHAR
 && 0

1157 
	#w©å£t
(
wö
,
©
) ((win) \

1158 ? ((
wö
)->
_cﬁ‹
 = 
	`NCURSES_CAST
(, 
	`PAIR_NUMBER
(
©
)), \

1159 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1160 
OK
) \

1161 : 
ERR
)

	)

1163 
	#w©å£t
(
wö
,
©
) ((win) \

1164 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1165 
OK
) \

1166 : 
ERR
)

	)

1170 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1172 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1173 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1174 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1176 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1177 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1178 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch, (n))

	)

1179 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch, (n))

	)

1181 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1182 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1183 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1185 #i‡!
NCURSES_OPAQUE


1186 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, ((wöË? (wö)->
_maxy
+1 : -1))

	)

1189 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1190 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1195 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
(“), 0)

	)

1196 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,◊)Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1202 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,(ch))

	)

1203 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,(°r),“))

	)

1204 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,(°r))

	)

1205 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,(°r),“))

	)

1206 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,(°r),-1)

	)

1207 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,◊p),(˝),(o))

	)

1208 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,◊),(o))

	)

1209 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,◊),(o))

	)

1210 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,◊),(c),(o))

	)

1211 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,◊t))

	)

1212 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,◊t))

	)

1213 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,◊t))

	)

1214 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,(ch))

	)

1215 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,(ch))

	)

1216 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,“),◊),(c),(o))

	)

1217 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1218 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1219 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1220 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,(c),(o))

	)

1221 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1222 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1223 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,(c))

	)

1224 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1225 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1226 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,(°r))

	)

1227 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1228 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,(s),“))

	)

1229 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,(s))

	)

1230 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,(s),“))

	)

1231 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,(c))

	)

1232 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,“))

	)

1233 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1234 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,(s),“))

	)

1235 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,(s))

	)

1236 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,(s))

	)

1237 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,(y),(x))

	)

1238 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1239 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,“))

	)

1240 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,—),(b))

	)

1241 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1242 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1243 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,(dñay))

	)

1244 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1245 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1251 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddch
((wö),(ch)))

	)

1252 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),“)))

	)

1253 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),-1))

	)

1254 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),“)))

	)

1255 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),-1))

	)

1256 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wchg©
((wö),“),◊),(c),(o)))

	)

1257 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1258 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1259 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgën°r
((wö),(°r),“)))

	)

1260 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgë°r
((wö),(°r)))

	)

1261 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`whlöe
((wö),(c),“)))

	)

1262 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1263 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöchn°r
((wö),(s),“)))

	)

1264 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöch°r
((wö),(s)))

	)

1265 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wön°r
((wö),(s),“)))

	)

1266 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wösch
((wö),(c)))

	)

1267 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö¢°r
((wö),(s),“)))

	)

1268 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wös°r
((wö),(s)))

	)

1269 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö°r
((wö),(s)))

	)

1270 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wvlöe
((wö),(c),“)))

	)

1272 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,(y),(x),(ch))

	)

1273 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1274 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,(y),(x),(°r))

	)

1275 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1276 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,(y),(x),(°r))

	)

1277 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,(y),(x),“),◊),(c),(o))

	)

1278 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,(y),(x))

	)

1279 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,(y),(x))

	)

1280 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,(y),(x),(°r),“))

	)

1281 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,(y),(x),(°r))

	)

1282 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,(y),(x),(c),“))

	)

1283 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,(y),(x))

	)

1284 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,(y),(x),(s),“))

	)

1285 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,(y),(x),(s))

	)

1286 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,(y),(x),(s),“))

	)

1287 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,(y),(x),(c))

	)

1288 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,(y),(x),(s),“))

	)

1289 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,(y),(x),(s))

	)

1290 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,(y),(x),(s))

	)

1291 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,(y),(x),(c),“))

	)

1296 #i‡!
NCURSES_OPAQUE


1297 
	#gëbkgd
(
wö
Ë((wöË? ((wö)->
_bkgd
Ë: 0)

	)

1300 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1301 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1303 #i‡!
NCURSES_OPAQUE


1304 #i‡
NCURSES_WIDECHAR
 && 0

1305 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) (((win) \

1306 ? ((
wö
)->
_©ås
 = ((
a
Ë& ~
A_COLOR
), \

1307 (
wö
)->
_cﬁ‹
 = (
p
)) \

1308 : 
OK
), \

1309 
OK
)

	)

1310 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()((◊Ë!(*)0Ë? (*◊Ë(wöË? (wö)->
_©ås
 : 0Ë: 
OK
), \

1311 ()(((
p
Ë!(*)0Ë? (*’Ë(
NCURSES_PAIRS_T
Ë((
wö
Ë? (wö)->
_cﬁ‹
 : 0)Ë: 
OK
), \

1312 
OK
)

	)

1314 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) (((win) \

1315 ? ((
wö
)->
_©ås
 = (((
a
Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
(
p
))) \

1316 : 
OK
), \

1317 
OK
)

	)

1318 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()((◊Ë!(*)0Ë? (*◊Ë(wöË? (wö)->
_©ås
 : 0Ë: 
OK
), \

1319 ()(((
p
Ë!(*)0Ë? (*’Ë(
NCURSES_PAIRS_T
Ë((
wö
Ë? 
	`PAIR_NUMBER
((wö)->
_©ås
Ë: 0)Ë: 
OK
), \

1320 
OK
)

	)

1330 
	#vw_¥ötw
 
vw¥ötw


	)

1331 
	#vw_sˇnw
 
vwsˇnw


	)

1337 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1338 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1345 #i‡!
NCURSES_OPAQUE


1346 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1347 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1348 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1349 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1350 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1351 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1352 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1353 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1354 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1355 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1356 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1357 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1358 
	#wgëdñay
(
wö
Ë((wöË? (wö)->
_dñay
 : 0)

	)

1359 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1360 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1374 #i‡
NCURSES_REENTRANT


1376 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1377 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1378 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1379 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1380 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1381 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1382 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1383 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1384 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1385 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1387 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1388 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1389 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1390 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1391 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1392 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1393 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1394 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1395 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1396 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1400 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1401 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1402 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1403 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1404 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1405 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1406 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1407 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1408 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1409 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1425 
	#KEY_CODE_YES
 0400

	)

1426 
	#KEY_MIN
 0401

	)

1427 
	#KEY_BREAK
 0401

	)

1428 
	#KEY_SRESET
 0530

	)

1429 
	#KEY_RESET
 0531

	)

1433 
	#KEY_DOWN
 0402

	)

1434 
	#KEY_UP
 0403

	)

1435 
	#KEY_LEFT
 0404

	)

1436 
	#KEY_RIGHT
 0405

	)

1437 
	#KEY_HOME
 0406

	)

1438 
	#KEY_BACKSPACE
 0407

	)

1439 
	#KEY_F0
 0410

	)

1440 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1441 
	#KEY_DL
 0510

	)

1442 
	#KEY_IL
 0511

	)

1443 
	#KEY_DC
 0512

	)

1444 
	#KEY_IC
 0513

	)

1445 
	#KEY_EIC
 0514

	)

1446 
	#KEY_CLEAR
 0515

	)

1447 
	#KEY_EOS
 0516

	)

1448 
	#KEY_EOL
 0517

	)

1449 
	#KEY_SF
 0520

	)

1450 
	#KEY_SR
 0521

	)

1451 
	#KEY_NPAGE
 0522

	)

1452 
	#KEY_PPAGE
 0523

	)

1453 
	#KEY_STAB
 0524

	)

1454 
	#KEY_CTAB
 0525

	)

1455 
	#KEY_CATAB
 0526

	)

1456 
	#KEY_ENTER
 0527

	)

1457 
	#KEY_PRINT
 0532

	)

1458 
	#KEY_LL
 0533

	)

1459 
	#KEY_A1
 0534

	)

1460 
	#KEY_A3
 0535

	)

1461 
	#KEY_B2
 0536

	)

1462 
	#KEY_C1
 0537

	)

1463 
	#KEY_C3
 0540

	)

1464 
	#KEY_BTAB
 0541

	)

1465 
	#KEY_BEG
 0542

	)

1466 
	#KEY_CANCEL
 0543

	)

1467 
	#KEY_CLOSE
 0544

	)

1468 
	#KEY_COMMAND
 0545

	)

1469 
	#KEY_COPY
 0546

	)

1470 
	#KEY_CREATE
 0547

	)

1471 
	#KEY_END
 0550

	)

1472 
	#KEY_EXIT
 0551

	)

1473 
	#KEY_FIND
 0552

	)

1474 
	#KEY_HELP
 0553

	)

1475 
	#KEY_MARK
 0554

	)

1476 
	#KEY_MESSAGE
 0555

	)

1477 
	#KEY_MOVE
 0556

	)

1478 
	#KEY_NEXT
 0557

	)

1479 
	#KEY_OPEN
 0560

	)

1480 
	#KEY_OPTIONS
 0561

	)

1481 
	#KEY_PREVIOUS
 0562

	)

1482 
	#KEY_REDO
 0563

	)

1483 
	#KEY_REFERENCE
 0564

	)

1484 
	#KEY_REFRESH
 0565

	)

1485 
	#KEY_REPLACE
 0566

	)

1486 
	#KEY_RESTART
 0567

	)

1487 
	#KEY_RESUME
 0570

	)

1488 
	#KEY_SAVE
 0571

	)

1489 
	#KEY_SBEG
 0572

	)

1490 
	#KEY_SCANCEL
 0573

	)

1491 
	#KEY_SCOMMAND
 0574

	)

1492 
	#KEY_SCOPY
 0575

	)

1493 
	#KEY_SCREATE
 0576

	)

1494 
	#KEY_SDC
 0577

	)

1495 
	#KEY_SDL
 0600

	)

1496 
	#KEY_SELECT
 0601

	)

1497 
	#KEY_SEND
 0602

	)

1498 
	#KEY_SEOL
 0603

	)

1499 
	#KEY_SEXIT
 0604

	)

1500 
	#KEY_SFIND
 0605

	)

1501 
	#KEY_SHELP
 0606

	)

1502 
	#KEY_SHOME
 0607

	)

1503 
	#KEY_SIC
 0610

	)

1504 
	#KEY_SLEFT
 0611

	)

1505 
	#KEY_SMESSAGE
 0612

	)

1506 
	#KEY_SMOVE
 0613

	)

1507 
	#KEY_SNEXT
 0614

	)

1508 
	#KEY_SOPTIONS
 0615

	)

1509 
	#KEY_SPREVIOUS
 0616

	)

1510 
	#KEY_SPRINT
 0617

	)

1511 
	#KEY_SREDO
 0620

	)

1512 
	#KEY_SREPLACE
 0621

	)

1513 
	#KEY_SRIGHT
 0622

	)

1514 
	#KEY_SRSUME
 0623

	)

1515 
	#KEY_SSAVE
 0624

	)

1516 
	#KEY_SSUSPEND
 0625

	)

1517 
	#KEY_SUNDO
 0626

	)

1518 
	#KEY_SUSPEND
 0627

	)

1519 
	#KEY_UNDO
 0630

	)

1520 
	#KEY_MOUSE
 0631

	)

1521 
	#KEY_RESIZE
 0632

	)

1522 
	#KEY_EVENT
 0633

	)

1524 
	#KEY_MAX
 0777

	)

1534 #i‡
NCURSES_MOUSE_VERSION
 > 1

1535 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1537 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1540 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1541 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1542 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1543 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1544 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1545 
	#NCURSES_RESERVED_EVENT
 040L

	)

1548 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1549 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1550 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1551 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1552 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1554 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1555 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1556 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1557 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1558 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1560 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1561 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1562 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1563 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1564 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1566 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1567 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1568 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1569 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1570 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1576 #i‡
NCURSES_MOUSE_VERSION
 > 1

1578 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1579 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1580 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1581 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1582 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1584 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1585 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1586 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1587 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1591 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1592 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1593 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1594 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1596 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1597 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1598 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1599 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1603 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1606 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1607 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1608 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1609 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1610 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1611 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1615 
	gid
;

1616 
	gx
, 
	gy
, 
	gz
;

1617 
mmask_t
 
	gb°©e
;

1619 
	tMEVENT
;

1621 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1622 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1623 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1624 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1625 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1626 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1627 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1628 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1630 #i‡
NCURSES_SP_FUNCS


1631 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1632 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1633 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1634 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1635 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1638 #i‚de‡
NCURSES_NOMACROS


1639 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1644 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1645 
NCURSES_EXPORT
(Ë
has_key
 ();

1647 #i‡
NCURSES_SP_FUNCS


1648 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1649 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1654 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1655 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1656 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1657 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1658 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1659 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1660 #i‡
NCURSES_WIDECHAR


1661 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1662 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1663 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1664 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1666 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1667 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1669 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1672 
	#TRACE_DISABLE
 0x0000

	)

1673 
	#TRACE_TIMES
 0x0001

	)

1674 
	#TRACE_TPUTS
 0x0002

	)

1675 
	#TRACE_UPDATE
 0x0004

	)

1676 
	#TRACE_MOVE
 0x0008

	)

1677 
	#TRACE_CHARPUT
 0x0010

	)

1678 
	#TRACE_ORDINARY
 0x001F

	)

1679 
	#TRACE_CALLS
 0x0020

	)

1680 
	#TRACE_VIRTPUT
 0x0040

	)

1681 
	#TRACE_IEVENT
 0x0080

	)

1682 
	#TRACE_BITS
 0x0100

	)

1683 
	#TRACE_ICALLS
 0x0200

	)

1684 
	#TRACE_CCALLS
 0x0400

	)

1685 
	#TRACE_DATABASE
 0x0800

	)

1686 
	#TRACE_ATTRS
 0x1000

	)

1688 
	#TRACE_SHIFT
 13

	)

1689 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1691 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1692 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1693 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1694 
	#OPTIMIZE_MVCUR
 0x01

	)

1695 
	#OPTIMIZE_HASHMAP
 0x02

	)

1696 
	#OPTIMIZE_SCROLL
 0x04

	)

1697 
	#OPTIMIZE_ALL
 0xf‡

	)

1700 
	~<un˘æ.h
>

1702 #ifde‡
__˝lu•lus


1704 #i‚de‡
NCURSES_NOMACROS


1707 #unde‡
box


1708 #unde‡
˛ór


1709 #unde‡
îa£


1710 #unde‡
move


1711 #unde‡
ª‰esh


	@/usr/include/eti.h

35 #i‚de‡
NCURSES_ETI_H_ö˛


36 
	#NCURSES_ETI_H_ö˛
 1

	)

38 
	#E_OK
 (0)

	)

39 
	#E_SYSTEM_ERROR
 (-1)

	)

40 
	#E_BAD_ARGUMENT
 (-2)

	)

41 
	#E_POSTED
 (-3)

	)

42 
	#E_CONNECTED
 (-4)

	)

43 
	#E_BAD_STATE
 (-5)

	)

44 
	#E_NO_ROOM
 (-6)

	)

45 
	#E_NOT_POSTED
 (-7)

	)

46 
	#E_UNKNOWN_COMMAND
 (-8)

	)

47 
	#E_NO_MATCH
 (-9)

	)

48 
	#E_NOT_SELECTABLE
 (-10)

	)

49 
	#E_NOT_CONNECTED
 (-11)

	)

50 
	#E_REQUEST_DENIED
 (-12)

	)

51 
	#E_INVALID_FIELD
 (-13)

	)

52 
	#E_CURRENT
 (-14)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 \

228 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

229 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

230 
	#_POSIX_SOURCE
 1

	)

231 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

232 
	#_POSIX_C_SOURCE
 2

	)

233 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

234 
	#_POSIX_C_SOURCE
 199506L

	)

235 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

236 
	#_POSIX_C_SOURCE
 200112L

	)

238 
	#_POSIX_C_SOURCE
 200809L

	)

240 
	#__USE_POSIX_IMPLICITLY
 1

	)

243 #i‡(
deföed
 
_POSIX_SOURCE
 \

244 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

245 || 
deföed
 
_XOPEN_SOURCE
)

246 
	#__USE_POSIX
 1

	)

249 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


250 
	#__USE_POSIX2
 1

	)

253 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

254 
	#__USE_POSIX199309
 1

	)

257 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

258 
	#__USE_POSIX199506
 1

	)

261 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

262 
	#__USE_XOPEN2K
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

270 
	#__USE_XOPEN2K8
 1

	)

271 #unde‡
_ATFILE_SOURCE


272 
	#_ATFILE_SOURCE
 1

	)

275 #ifdef 
_XOPEN_SOURCE


276 
	#__USE_XOPEN
 1

	)

277 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

278 
	#__USE_XOPEN_EXTENDED
 1

	)

279 
	#__USE_UNIX98
 1

	)

280 #unde‡
_LARGEFILE_SOURCE


281 
	#_LARGEFILE_SOURCE
 1

	)

282 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

283 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

284 
	#__USE_XOPEN2K8
 1

	)

285 
	#__USE_XOPEN2K8XSI
 1

	)

287 
	#__USE_XOPEN2K
 1

	)

288 
	#__USE_XOPEN2KXSI
 1

	)

289 #unde‡
__USE_ISOC95


290 
	#__USE_ISOC95
 1

	)

291 #unde‡
__USE_ISOC99


292 
	#__USE_ISOC99
 1

	)

295 #ifde‡
_XOPEN_SOURCE_EXTENDED


296 
	#__USE_XOPEN_EXTENDED
 1

	)

301 #ifde‡
_LARGEFILE_SOURCE


302 
	#__USE_LARGEFILE
 1

	)

305 #ifde‡
_LARGEFILE64_SOURCE


306 
	#__USE_LARGEFILE64
 1

	)

309 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

310 
	#__USE_FILE_OFFSET64
 1

	)

313 #i‡
deföed
 
_DEFAULT_SOURCE


314 
	#__USE_MISC
 1

	)

317 #ifdef 
_ATFILE_SOURCE


318 
	#__USE_ATFILE
 1

	)

321 #ifdef 
_GNU_SOURCE


322 
	#__USE_GNU
 1

	)

325 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


326 
	#__USE_REENTRANT
 1

	)

329 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

330 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

331 #i‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 
	#__USE_FORTIFY_LEVEL
 0

	)

342 
	~<°dc-¥edef.h
>

350 #unde‡
__GNU_LIBRARY__


351 
	#__GNU_LIBRARY__
 6

	)

355 
	#__GLIBC__
 2

	)

356 
	#__GLIBC_MINOR__
 24

	)

358 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

359 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

362 #i‚de‡
__ASSEMBLER__


363 #i‚de‡
_SYS_CDEFS_H


364 
	~<sys/cdefs.h
>

369 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


370 
	#__USE_LARGEFILE
 1

	)

371 
	#__USE_LARGEFILE64
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/linux/soundcard.h

24 #i‚de‡
SOUNDCARD_H


25 
	#SOUNDCARD_H


	)

36 
	#SOUND_VERSION
 0x030802

	)

37 
	#OPEN_SOUND_SYSTEM


	)

40 
	~<löux/io˘l.h
>

43 
	~<ídün.h
>

49 
	#SNDCARD_ADLIB
 1

	)

50 
	#SNDCARD_SB
 2

	)

51 
	#SNDCARD_PAS
 3

	)

52 
	#SNDCARD_GUS
 4

	)

53 
	#SNDCARD_MPU401
 5

	)

54 
	#SNDCARD_SB16
 6

	)

55 
	#SNDCARD_SB16MIDI
 7

	)

56 
	#SNDCARD_UART6850
 8

	)

57 
	#SNDCARD_GUS16
 9

	)

58 
	#SNDCARD_MSS
 10

	)

59 
	#SNDCARD_PSS
 11

	)

60 
	#SNDCARD_SSCAPE
 12

	)

61 
	#SNDCARD_PSS_MPU
 13

	)

62 
	#SNDCARD_PSS_MSS
 14

	)

63 
	#SNDCARD_SSCAPE_MSS
 15

	)

64 
	#SNDCARD_TRXPRO
 16

	)

65 
	#SNDCARD_TRXPRO_SB
 17

	)

66 
	#SNDCARD_TRXPRO_MPU
 18

	)

67 
	#SNDCARD_MAD16
 19

	)

68 
	#SNDCARD_MAD16_MPU
 20

	)

69 
	#SNDCARD_CS4232
 21

	)

70 
	#SNDCARD_CS4232_MPU
 22

	)

71 
	#SNDCARD_MAUI
 23

	)

72 
	#SNDCARD_PSEUDO_MSS
 24

	)

73 
	#SNDCARD_GUSPNP
 25

	)

74 
	#SNDCARD_UART401
 26

	)

81 #i‚de‡
_SIOWR


82 #i‡
deföed
(
_IOWR
Ë&& (deföed(
_AIX
Ë|| (!deföed(
sun
Ë&& !deföed(
•¨c
Ë&& !deföed(
__•¨c__
Ë&& !deföed(
__INCio˘lh
Ë&& !deföed(
__Lynx__
)))

84 
	#SIOCPARM_MASK
 
IOCPARM_MASK


	)

85 
	#SIOC_VOID
 
IOC_VOID


	)

86 
	#SIOC_OUT
 
IOC_OUT


	)

87 
	#SIOC_IN
 
IOC_IN


	)

88 
	#SIOC_INOUT
 
IOC_INOUT


	)

89 
	#_SIOC_SIZE
 
_IOC_SIZE


	)

90 
	#_SIOC_DIR
 
_IOC_DIR


	)

91 
	#_SIOC_NONE
 
_IOC_NONE


	)

92 
	#_SIOC_READ
 
_IOC_READ


	)

93 
	#_SIOC_WRITE
 
_IOC_WRITE


	)

94 
	#_SIO
 
_IO


	)

95 
	#_SIOR
 
_IOR


	)

96 
	#_SIOW
 
_IOW


	)

97 
	#_SIOWR
 
_IOWR


	)

107 
	#SIOCPARM_MASK
 0x1ff‡

	)

108 
	#SIOC_VOID
 0x00000000

	)

109 
	#SIOC_OUT
 0x20000000

	)

110 
	#SIOC_IN
 0x40000000

	)

111 
	#SIOC_INOUT
 (
SIOC_IN
|
SIOC_OUT
)

	)

113 
	#_SIO
(
x
,
y
Ë(()(
SIOC_VOID
|(x<<8)|y))

	)

114 
	#_SIOR
(
x
,
y
,
t
Ë(()(
SIOC_OUT
|((—)&
SIOCPARM_MASK
)<<16)|(x<<8)|y))

	)

115 
	#_SIOW
(
x
,
y
,
t
Ë(()(
SIOC_IN
|((—)&
SIOCPARM_MASK
)<<16)|(x<<8)|y))

	)

117 
	#_SIOWR
(
x
,
y
,
t
Ë(()(
SIOC_INOUT
|((—)&
SIOCPARM_MASK
)<<16)|(x<<8)|y))

	)

118 
	#_SIOC_SIZE
(
x
Ë((x>>16)&
SIOCPARM_MASK
)

	)

119 
	#_SIOC_DIR
(
x
Ë(x & 0xf0000000)

	)

120 
	#_SIOC_NONE
 
SIOC_VOID


	)

121 
	#_SIOC_READ
 
SIOC_OUT


	)

122 
	#_SIOC_WRITE
 
SIOC_IN


	)

126 
	#SNDCTL_SEQ_RESET
 
	`_SIO
 ('Q', 0)

	)

127 
	#SNDCTL_SEQ_SYNC
 
	`_SIO
 ('Q', 1)

	)

128 
	#SNDCTL_SYNTH_INFO
 
	`_SIOWR
('Q', 2, 
sy¡h_öfo
)

	)

129 
	#SNDCTL_SEQ_CTRLRATE
 
	`_SIOWR
('Q', 3, Ë

	)

130 
	#SNDCTL_SEQ_GETOUTCOUNT
 
	`_SIOR
 ('Q', 4, )

	)

131 
	#SNDCTL_SEQ_GETINCOUNT
 
	`_SIOR
 ('Q', 5, )

	)

132 
	#SNDCTL_SEQ_PERCMODE
 
	`_SIOW
 ('Q', 6, )

	)

133 
	#SNDCTL_FM_LOAD_INSTR
 
	`_SIOW
 ('Q', 7, 
sbi_ö°rumít
Ë

	)

134 
	#SNDCTL_SEQ_TESTMIDI
 
	`_SIOW
 ('Q', 8, )

	)

135 
	#SNDCTL_SEQ_RESETSAMPLES
 
	`_SIOW
 ('Q', 9, )

	)

136 
	#SNDCTL_SEQ_NRSYNTHS
 
	`_SIOR
 ('Q',10, )

	)

137 
	#SNDCTL_SEQ_NRMIDIS
 
	`_SIOR
 ('Q',11, )

	)

138 
	#SNDCTL_MIDI_INFO
 
	`_SIOWR
('Q',12, 
midi_öfo
)

	)

139 
	#SNDCTL_SEQ_THRESHOLD
 
	`_SIOW
 ('Q',13, )

	)

140 
	#SNDCTL_SYNTH_MEMAVL
 
	`_SIOWR
('Q',14, Ë

	)

141 
	#SNDCTL_FM_4OP_ENABLE
 
	`_SIOW
 ('Q',15, Ë

	)

142 
	#SNDCTL_SEQ_PANIC
 
	`_SIO
 ('Q',17)

	)

143 
	#SNDCTL_SEQ_OUTOFBAND
 
	`_SIOW
 ('Q',18, 
£q_evít_ªc
)

	)

144 
	#SNDCTL_SEQ_GETTIME
 
	`_SIOR
 ('Q',19, )

	)

145 
	#SNDCTL_SYNTH_ID
 
	`_SIOWR
('Q',20, 
sy¡h_öfo
)

	)

146 
	#SNDCTL_SYNTH_CONTROL
 
	`_SIOWR
('Q',21, 
sy¡h_c⁄åﬁ
)

	)

147 
	#SNDCTL_SYNTH_REMOVESAMPLE
 
	`_SIOWR
('Q',22, 
ªmove_ßm∂e
)

	)

149 
	ssy¡h_c⁄åﬁ


151 
	mdevno
;

152 
	md©a
[4000];

153 }
	tsy¡h_c⁄åﬁ
;

155 
	sªmove_ßm∂e


157 
	mdevno
;

158 
	mb™kno
;

159 
	mö°∫o
;

160 } 
	tªmove_ßm∂e
;

162 
	s£q_evít_ªc
 {

163 
	m¨r
[8];

164 } 
	t£q_evít_ªc
;

166 
	#SNDCTL_TMR_TIMEBASE
 
	`_SIOWR
('T', 1, )

	)

167 
	#SNDCTL_TMR_START
 
	`_SIO
 ('T', 2)

	)

168 
	#SNDCTL_TMR_STOP
 
	`_SIO
 ('T', 3)

	)

169 
	#SNDCTL_TMR_CONTINUE
 
	`_SIO
 ('T', 4)

	)

170 
	#SNDCTL_TMR_TEMPO
 
	`_SIOWR
('T', 5, )

	)

171 
	#SNDCTL_TMR_SOURCE
 
	`_SIOWR
('T', 6, )

	)

172 
	#TMR_INTERNAL
 0x00000001

	)

173 
	#TMR_EXTERNAL
 0x00000002

	)

174 
	#TMR_MODE_MIDI
 0x00000010

	)

175 
	#TMR_MODE_FSK
 0x00000020

	)

176 
	#TMR_MODE_CLS
 0x00000040

	)

177 
	#TMR_MODE_SMPTE
 0x00000080

	)

178 
	#SNDCTL_TMR_METRONOME
 
	`_SIOW
 ('T', 7, )

	)

179 
	#SNDCTL_TMR_SELECT
 
	`_SIOW
 ('T', 8, )

	)

185 
	#_LINUX_PATCHKEY_H_INDIRECT


	)

186 
	~<löux/∑tchkey.h
>

187 #unde‡
_LINUX_PATCHKEY_H_INDIRECT


189 #i‡
deföed
(
__BYTE_ORDER
)

190 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


191 
	#AFMT_S16_NE
 
AFMT_S16_BE


	)

192 #ñi‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


193 
	#AFMT_S16_NE
 
AFMT_S16_LE


	)

209 
	s∑tch_öfo
 {

210 
	mkey
;

211 
	#WAVE_PATCH
 
	`_PATCHKEY
(0x04)

	)

212 
	#GUS_PATCH
 
WAVE_PATCH


	)

213 
	#WAVEFRONT_PATCH
 
	`_PATCHKEY
(0x06)

	)

215 
	mdevi˚_no
;

216 
	mö°r_no
;

218 
	mmode
;

223 
	#WAVE_16_BITS
 0x01

	)

224 
	#WAVE_UNSIGNED
 0x02

	)

225 
	#WAVE_LOOPING
 0x04

	)

226 
	#WAVE_BIDIR_LOOP
 0x08

	)

227 
	#WAVE_LOOP_BACK
 0x10

	)

228 
	#WAVE_SUSTAIN_ON
 0x20

	)

229 
	#WAVE_ENVELOPES
 0x40

	)

230 
	#WAVE_FAST_RELEASE
 0x80

	)

233 
	#WAVE_VIBRATO
 0x00010000

	)

234 
	#WAVE_TREMOLO
 0x00020000

	)

235 
	#WAVE_SCALE
 0x00040000

	)

236 
	#WAVE_FRACTIONS
 0x00080000

	)

238 
	#WAVE_ROM
 0x40000000

	)

239 
	#WAVE_MULAW
 0x20000000

	)

242 
	mÀn
;

243 
	mlo›_°¨t
, 
	mlo›_íd
;

261 
	mba£_‰eq
;

262 
	mba£_nŸe
;

263 
	mhigh_nŸe
;

264 
	mlow_nŸe
;

265 
	m∑¬ög
;

266 
	mdëunög
;

271 
	mív_øã
[ 6 ];

272 
	mív_off£t
[ 6 ];

280 
	måemﬁo_swìp
;

281 
	måemﬁo_øã
;

282 
	måemﬁo_dïth
;

284 
	mvibøto_swìp
;

285 
	mvibøto_øã
;

286 
	mvibøto_dïth
;

288 
	msˇÀ_‰equícy
;

289 
	msˇÀ_Á˘‹
;

291 
	mvﬁume
;

292 
	m‰a˘i⁄s
;

293 
	mª£rved1
;

294 
	m•¨e
[2];

295 
	md©a
[1];

298 
	ssy£x_öfo
 {

299 
	mkey
;

300 
	#SYSEX_PATCH
 
	`_PATCHKEY
(0x05)

	)

301 
	#MAUI_PATCH
 
	`_PATCHKEY
(0x06)

	)

302 
	mdevi˚_no
;

303 
	mÀn
;

304 
	md©a
[1];

327 
	#SEQ_NOTEOFF
 0

	)

328 
	#SEQ_FMNOTEOFF
 
SEQ_NOTEOFF


	)

329 
	#SEQ_NOTEON
 1

	)

330 
	#SEQ_FMNOTEON
 
SEQ_NOTEON


	)

331 
	#SEQ_WAIT
 
TMR_WAIT_ABS


	)

332 
	#SEQ_PGMCHANGE
 3

	)

333 
	#SEQ_FMPGMCHANGE
 
SEQ_PGMCHANGE


	)

334 
	#SEQ_SYNCTIMER
 
TMR_START


	)

335 
	#SEQ_MIDIPUTC
 5

	)

336 
	#SEQ_DRUMON
 6

	)

337 
	#SEQ_DRUMOFF
 7

	)

338 
	#SEQ_ECHO
 
TMR_ECHO


	)

339 
	#SEQ_AFTERTOUCH
 9

	)

340 
	#SEQ_CONTROLLER
 10

	)

354 
	#CTL_BANK_SELECT
 0x00

	)

355 
	#CTL_MODWHEEL
 0x01

	)

356 
	#CTL_BREATH
 0x02

	)

358 
	#CTL_FOOT
 0x04

	)

359 
	#CTL_PORTAMENTO_TIME
 0x05

	)

360 
	#CTL_DATA_ENTRY
 0x06

	)

361 
	#CTL_MAIN_VOLUME
 0x07

	)

362 
	#CTL_BALANCE
 0x08

	)

364 
	#CTL_PAN
 0x0a

	)

365 
	#CTL_EXPRESSION
 0x0b

	)

370 
	#CTL_GENERAL_PURPOSE1
 0x10

	)

371 
	#CTL_GENERAL_PURPOSE2
 0x11

	)

372 
	#CTL_GENERAL_PURPOSE3
 0x12

	)

373 
	#CTL_GENERAL_PURPOSE4
 0x13

	)

383 
	#CTL_DAMPER_PEDAL
 0x40

	)

384 
	#CTL_SUSTAIN
 0x40

	)

385 
	#CTL_HOLD
 0x40

	)

386 
	#CTL_PORTAMENTO
 0x41

	)

387 
	#CTL_SOSTENUTO
 0x42

	)

388 
	#CTL_SOFT_PEDAL
 0x43

	)

390 
	#CTL_HOLD2
 0x45

	)

393 
	#CTL_GENERAL_PURPOSE5
 0x50

	)

394 
	#CTL_GENERAL_PURPOSE6
 0x51

	)

395 
	#CTL_GENERAL_PURPOSE7
 0x52

	)

396 
	#CTL_GENERAL_PURPOSE8
 0x53

	)

398 
	#CTL_EXT_EFF_DEPTH
 0x5b

	)

399 
	#CTL_TREMOLO_DEPTH
 0x5c

	)

400 
	#CTL_CHORUS_DEPTH
 0x5d

	)

401 
	#CTL_DETUNE_DEPTH
 0x5e

	)

402 
	#CTL_CELESTE_DEPTH
 0x5ê

	)

403 
	#CTL_PHASER_DEPTH
 0x5f

	)

404 
	#CTL_DATA_INCREMENT
 0x60

	)

405 
	#CTL_DATA_DECREMENT
 0x61

	)

406 
	#CTL_NONREG_PARM_NUM_LSB
 0x62

	)

407 
	#CTL_NONREG_PARM_NUM_MSB
 0x63

	)

408 
	#CTL_REGIST_PARM_NUM_LSB
 0x64

	)

409 
	#CTL_REGIST_PARM_NUM_MSB
 0x65

	)

414 
	#CTRL_PITCH_BENDER
 255

	)

415 
	#CTRL_PITCH_BENDER_RANGE
 254

	)

416 
	#CTRL_EXPRESSION
 253

	)

417 
	#CTRL_MAIN_VOLUME
 252

	)

418 
	#SEQ_BALANCE
 11

	)

419 
	#SEQ_VOLMODE
 12

	)

425 
	#VOL_METHOD_ADAGIO
 1

	)

426 
	#VOL_METHOD_LINEAR
 2

	)

437 
	#SEQ_FULLSIZE
 0xfd

	)

458 
	#SEQ_PRIVATE
 0x„

	)

459 
	#SEQ_EXTENDED
 0xf‡

	)

465 
	tsbi_ö°r_d©a
[32];

467 
	ssbi_ö°rumít
 {

468 
	mkey
;

469 
	#FM_PATCH
 
	`_PATCHKEY
(0x01)

	)

470 
	#OPL3_PATCH
 
	`_PATCHKEY
(0x03)

	)

471 
	mdevi˚
;

472 
	mch™√l
;

473 
sbi_ö°r_d©a
 
	m›î©‹s
;

476 
	ssy¡h_öfo
 {

477 
	m«me
[30];

478 
	mdevi˚
;

479 
	msy¡h_ty≥
;

480 
	#SYNTH_TYPE_FM
 0

	)

481 
	#SYNTH_TYPE_SAMPLE
 1

	)

482 
	#SYNTH_TYPE_MIDI
 2

	)

484 
	msy¡h_subty≥
;

485 
	#FM_TYPE_ADLIB
 0x00

	)

486 
	#FM_TYPE_OPL3
 0x01

	)

487 
	#MIDI_TYPE_MPU401
 0x401

	)

489 
	#SAMPLE_TYPE_BASIC
 0x10

	)

490 
	#SAMPLE_TYPE_GUS
 
SAMPLE_TYPE_BASIC


	)

491 
	#SAMPLE_TYPE_WAVEFRONT
 0x11

	)

493 
	m≥rc_mode
;

494 
	mƒ_voi˚s
;

495 
	mƒ_drums
;

496 
	mö°r_b™k_size
;

497 
	mˇ∑bûôõs
;

498 
	#SYNTH_CAP_PERCMODE
 0x00000001

	)

499 
	#SYNTH_CAP_OPL3
 0x00000002

	)

500 
	#SYNTH_CAP_INPUT
 0x00000004

	)

501 
	mdummõs
[19];

504 
	ssound_timî_öfo
 {

505 
	m«me
[32];

506 
	mˇps
;

509 
	#MIDI_CAP_MPU401
 1

	)

511 
	smidi_öfo
 {

512 
	m«me
[30];

513 
	mdevi˚
;

514 
	mˇ∑bûôõs
;

515 
	mdev_ty≥
;

516 
	mdummõs
[18];

523 
	mcmd
;

524 
	mƒ_¨gs
, 
	mƒ_ªtu∫s
;

525 
	md©a
[30];

526 } 
	tmpu_comm™d_ªc
;

528 
	#SNDCTL_MIDI_PRETIME
 
	`_SIOWR
('m', 0, )

	)

529 
	#SNDCTL_MIDI_MPUMODE
 
	`_SIOWR
('m', 1, )

	)

530 
	#SNDCTL_MIDI_MPUCMD
 
	`_SIOWR
('m', 2, 
mpu_comm™d_ªc
)

	)

536 
	#SNDCTL_DSP_RESET
 
	`_SIO
 ('P', 0)

	)

537 
	#SNDCTL_DSP_SYNC
 
	`_SIO
 ('P', 1)

	)

538 
	#SNDCTL_DSP_SPEED
 
	`_SIOWR
('P', 2, )

	)

539 
	#SNDCTL_DSP_STEREO
 
	`_SIOWR
('P', 3, )

	)

540 
	#SNDCTL_DSP_GETBLKSIZE
 
	`_SIOWR
('P', 4, )

	)

541 
	#SNDCTL_DSP_SAMPLESIZE
 
SNDCTL_DSP_SETFMT


	)

542 
	#SNDCTL_DSP_CHANNELS
 
	`_SIOWR
('P', 6, )

	)

543 
	#SOUND_PCM_WRITE_CHANNELS
 
SNDCTL_DSP_CHANNELS


	)

544 
	#SOUND_PCM_WRITE_FILTER
 
	`_SIOWR
('P', 7, )

	)

545 
	#SNDCTL_DSP_POST
 
	`_SIO
 ('P', 8)

	)

546 
	#SNDCTL_DSP_SUBDIVIDE
 
	`_SIOWR
('P', 9, )

	)

547 
	#SNDCTL_DSP_SETFRAGMENT
 
	`_SIOWR
('P',10, )

	)

550 
	#SNDCTL_DSP_GETFMTS
 
	`_SIOR
 ('P',11, Ë

	)

551 
	#SNDCTL_DSP_SETFMT
 
	`_SIOWR
('P',5, Ë

	)

552 
	#AFMT_QUERY
 0x00000000

	)

553 
	#AFMT_MU_LAW
 0x00000001

	)

554 
	#AFMT_A_LAW
 0x00000002

	)

555 
	#AFMT_IMA_ADPCM
 0x00000004

	)

556 
	#AFMT_U8
 0x00000008

	)

557 
	#AFMT_S16_LE
 0x00000010

	)

558 
	#AFMT_S16_BE
 0x00000020

	)

559 
	#AFMT_S8
 0x00000040

	)

560 
	#AFMT_U16_LE
 0x00000080

	)

561 
	#AFMT_U16_BE
 0x00000100

	)

562 
	#AFMT_MPEG
 0x00000200

	)

563 
	#AFMT_AC3
 0x00000400

	)

568 
	saudio_buf_öfo
 {

569 
	m‰agmíts
;

570 
	m‰ag°ŸÆ
;

571 
	m‰agsize
;

573 
	mbyãs
;

575 } 
	taudio_buf_öfo
;

577 
	#SNDCTL_DSP_GETOSPACE
 
	`_SIOR
 ('P',12, 
audio_buf_öfo
)

	)

578 
	#SNDCTL_DSP_GETISPACE
 
	`_SIOR
 ('P',13, 
audio_buf_öfo
)

	)

579 
	#SNDCTL_DSP_NONBLOCK
 
	`_SIO
 ('P',14)

	)

580 
	#SNDCTL_DSP_GETCAPS
 
	`_SIOR
 ('P',15, )

	)

581 
	#DSP_CAP_REVISION
 0x000000f‡

	)

582 
	#DSP_CAP_DUPLEX
 0x00000100

	)

583 
	#DSP_CAP_REALTIME
 0x00000200

	)

584 
	#DSP_CAP_BATCH
 0x00000400

	)

588 
	#DSP_CAP_COPROC
 0x00000800

	)

591 
	#DSP_CAP_TRIGGER
 0x00001000

	)

592 
	#DSP_CAP_MMAP
 0x00002000

	)

593 
	#DSP_CAP_MULTI
 0x00004000

	)

594 
	#DSP_CAP_BIND
 0x00008000

	)

597 
	#SNDCTL_DSP_GETTRIGGER
 
	`_SIOR
 ('P',16, )

	)

598 
	#SNDCTL_DSP_SETTRIGGER
 
	`_SIOW
 ('P',16, )

	)

599 
	#PCM_ENABLE_INPUT
 0x00000001

	)

600 
	#PCM_ENABLE_OUTPUT
 0x00000002

	)

602 
	scou¡_öfo
 {

603 
	mbyãs
;

604 
	mblocks
;

605 
	m±r
;

606 } 
	tcou¡_öfo
;

608 
	#SNDCTL_DSP_GETIPTR
 
	`_SIOR
 ('P',17, 
cou¡_öfo
)

	)

609 
	#SNDCTL_DSP_GETOPTR
 
	`_SIOR
 ('P',18, 
cou¡_öfo
)

	)

611 
	sbuffmem_desc
 {

612 *
	mbuf„r
;

613 
	msize
;

614 } 
	tbuffmem_desc
;

615 
	#SNDCTL_DSP_MAPINBUF
 
	`_SIOR
 ('P', 19, 
buffmem_desc
)

	)

616 
	#SNDCTL_DSP_MAPOUTBUF
 
	`_SIOR
 ('P', 20, 
buffmem_desc
)

	)

617 
	#SNDCTL_DSP_SETSYNCRO
 
	`_SIO
 ('P', 21)

	)

618 
	#SNDCTL_DSP_SETDUPLEX
 
	`_SIO
 ('P', 22)

	)

619 
	#SNDCTL_DSP_GETODELAY
 
	`_SIOR
 ('P', 23, )

	)

621 
	#SNDCTL_DSP_GETCHANNELMASK
 
	`_SIOWR
('P', 64, )

	)

622 
	#SNDCTL_DSP_BIND_CHANNEL
 
	`_SIOWR
('P', 65, )

	)

623 
	#DSP_BIND_QUERY
 0x00000000

	)

624 
	#DSP_BIND_FRONT
 0x00000001

	)

625 
	#DSP_BIND_SURR
 0x00000002

	)

626 
	#DSP_BIND_CENTER_LFE
 0x00000004

	)

627 
	#DSP_BIND_HANDSET
 0x00000008

	)

628 
	#DSP_BIND_MIC
 0x00000010

	)

629 
	#DSP_BIND_MODEM1
 0x00000020

	)

630 
	#DSP_BIND_MODEM2
 0x00000040

	)

631 
	#DSP_BIND_I2S
 0x00000080

	)

632 
	#DSP_BIND_SPDIF
 0x00000100

	)

634 
	#SNDCTL_DSP_SETSPDIF
 
	`_SIOW
 ('P', 66, )

	)

635 
	#SNDCTL_DSP_GETSPDIF
 
	`_SIOR
 ('P', 67, )

	)

636 
	#SPDIF_PRO
 0x0001

	)

637 
	#SPDIF_N_AUD
 0x0002

	)

638 
	#SPDIF_COPY
 0x0004

	)

639 
	#SPDIF_PRE
 0x0008

	)

640 
	#SPDIF_CC
 0x07f0

	)

641 
	#SPDIF_L
 0x0800

	)

642 
	#SPDIF_DRS
 0x4000

	)

643 
	#SPDIF_V
 0x8000

	)

656 
	#SNDCTL_DSP_PROFILE
 
	`_SIOW
 ('P', 23, )

	)

657 
	#APF_NORMAL
 0

	)

658 
	#APF_NETWORK
 1

	)

659 
	#APF_CPUINTENS
 2

	)

661 
	#SOUND_PCM_READ_RATE
 
	`_SIOR
 ('P', 2, )

	)

662 
	#SOUND_PCM_READ_CHANNELS
 
	`_SIOR
 ('P', 6, )

	)

663 
	#SOUND_PCM_READ_BITS
 
	`_SIOR
 ('P', 5, )

	)

664 
	#SOUND_PCM_READ_FILTER
 
	`_SIOR
 ('P', 7, )

	)

667 
	#SOUND_PCM_WRITE_BITS
 
SNDCTL_DSP_SETFMT


	)

668 
	#SOUND_PCM_WRITE_RATE
 
SNDCTL_DSP_SPEED


	)

669 
	#SOUND_PCM_POST
 
SNDCTL_DSP_POST


	)

670 
	#SOUND_PCM_RESET
 
SNDCTL_DSP_RESET


	)

671 
	#SOUND_PCM_SYNC
 
SNDCTL_DSP_SYNC


	)

672 
	#SOUND_PCM_SUBDIVIDE
 
SNDCTL_DSP_SUBDIVIDE


	)

673 
	#SOUND_PCM_SETFRAGMENT
 
SNDCTL_DSP_SETFRAGMENT


	)

674 
	#SOUND_PCM_GETFMTS
 
SNDCTL_DSP_GETFMTS


	)

675 
	#SOUND_PCM_SETFMT
 
SNDCTL_DSP_SETFMT


	)

676 
	#SOUND_PCM_GETOSPACE
 
SNDCTL_DSP_GETOSPACE


	)

677 
	#SOUND_PCM_GETISPACE
 
SNDCTL_DSP_GETISPACE


	)

678 
	#SOUND_PCM_NONBLOCK
 
SNDCTL_DSP_NONBLOCK


	)

679 
	#SOUND_PCM_GETCAPS
 
SNDCTL_DSP_GETCAPS


	)

680 
	#SOUND_PCM_GETTRIGGER
 
SNDCTL_DSP_GETTRIGGER


	)

681 
	#SOUND_PCM_SETTRIGGER
 
SNDCTL_DSP_SETTRIGGER


	)

682 
	#SOUND_PCM_SETSYNCRO
 
SNDCTL_DSP_SETSYNCRO


	)

683 
	#SOUND_PCM_GETIPTR
 
SNDCTL_DSP_GETIPTR


	)

684 
	#SOUND_PCM_GETOPTR
 
SNDCTL_DSP_GETOPTR


	)

685 
	#SOUND_PCM_MAPINBUF
 
SNDCTL_DSP_MAPINBUF


	)

686 
	#SOUND_PCM_MAPOUTBUF
 
SNDCTL_DSP_MAPOUTBUF


	)

693 
	sc›r_buf„r
 {

694 
	mcomm™d
;

695 
	mÊags
;

696 
	#CPF_NONE
 0x0000

	)

697 
	#CPF_FIRST
 0x0001

	)

698 
	#CPF_LAST
 0x0002

	)

699 
	mÀn
;

700 
	moffs
;

702 
	md©a
[4000];

703 } 
	tc›r_buf„r
;

705 
	sc›r_debug_buf
 {

706 
	mcomm™d
;

707 
	m∑rm1
;

708 
	m∑rm2
;

709 
	mÊags
;

710 
	mÀn
;

711 } 
	tc›r_debug_buf
;

713 
	sc›r_msg
 {

714 
	mÀn
;

715 
	md©a
[4000];

716 } 
	tc›r_msg
;

718 
	#SNDCTL_COPR_RESET
 
	`_SIO
 ('C', 0)

	)

719 
	#SNDCTL_COPR_LOAD
 
	`_SIOWR
('C', 1, 
c›r_buf„r
)

	)

720 
	#SNDCTL_COPR_RDATA
 
	`_SIOWR
('C', 2, 
c›r_debug_buf
)

	)

721 
	#SNDCTL_COPR_RCODE
 
	`_SIOWR
('C', 3, 
c›r_debug_buf
)

	)

722 
	#SNDCTL_COPR_WDATA
 
	`_SIOW
 ('C', 4, 
c›r_debug_buf
)

	)

723 
	#SNDCTL_COPR_WCODE
 
	`_SIOW
 ('C', 5, 
c›r_debug_buf
)

	)

724 
	#SNDCTL_COPR_RUN
 
	`_SIOWR
('C', 6, 
c›r_debug_buf
)

	)

725 
	#SNDCTL_COPR_HALT
 
	`_SIOWR
('C', 7, 
c›r_debug_buf
)

	)

726 
	#SNDCTL_COPR_SENDMSG
 
	`_SIOWR
('C', 8, 
c›r_msg
)

	)

727 
	#SNDCTL_COPR_RCVMSG
 
	`_SIOR
 ('C', 9, 
c›r_msg
)

	)

742 
	#SOUND_MIXER_NRDEVICES
 25

	)

743 
	#SOUND_MIXER_VOLUME
 0

	)

744 
	#SOUND_MIXER_BASS
 1

	)

745 
	#SOUND_MIXER_TREBLE
 2

	)

746 
	#SOUND_MIXER_SYNTH
 3

	)

747 
	#SOUND_MIXER_PCM
 4

	)

748 
	#SOUND_MIXER_SPEAKER
 5

	)

749 
	#SOUND_MIXER_LINE
 6

	)

750 
	#SOUND_MIXER_MIC
 7

	)

751 
	#SOUND_MIXER_CD
 8

	)

752 
	#SOUND_MIXER_IMIX
 9

	)

753 
	#SOUND_MIXER_ALTPCM
 10

	)

754 
	#SOUND_MIXER_RECLEV
 11

	)

755 
	#SOUND_MIXER_IGAIN
 12

	)

756 
	#SOUND_MIXER_OGAIN
 13

	)

763 
	#SOUND_MIXER_LINE1
 14

	)

764 
	#SOUND_MIXER_LINE2
 15

	)

765 
	#SOUND_MIXER_LINE3
 16

	)

766 
	#SOUND_MIXER_DIGITAL1
 17

	)

767 
	#SOUND_MIXER_DIGITAL2
 18

	)

768 
	#SOUND_MIXER_DIGITAL3
 19

	)

769 
	#SOUND_MIXER_PHONEIN
 20

	)

770 
	#SOUND_MIXER_PHONEOUT
 21

	)

771 
	#SOUND_MIXER_VIDEO
 22

	)

772 
	#SOUND_MIXER_RADIO
 23

	)

773 
	#SOUND_MIXER_MONITOR
 24

	)

777 
	#SOUND_ONOFF_MIN
 28

	)

778 
	#SOUND_ONOFF_MAX
 30

	)

781 
	#SOUND_MIXER_NONE
 31

	)

787 
	#SOUND_MIXER_ENHANCE
 
SOUND_MIXER_NONE


	)

788 
	#SOUND_MIXER_MUTE
 
SOUND_MIXER_NONE


	)

789 
	#SOUND_MIXER_LOUD
 
SOUND_MIXER_NONE


	)

792 
	#SOUND_DEVICE_LABELS
 {"Vol ", "Bass ", "Trebl", "Synth", "Pcm ", "Spkr ", "Line ", \

795 "Ph⁄eIn", "Ph⁄eOut", "Video", "Radio", "M⁄ô‹"}

	)

797 
	#SOUND_DEVICE_NAMES
 {"vol", "bass", "treble", "synth", "pcm", "speaker", "line", \

800 "phö", "phout", "video", "ødio", "m⁄ô‹"}

	)

804 
	#SOUND_MIXER_RECSRC
 0xf‡

	)

805 
	#SOUND_MIXER_DEVMASK
 0x„

	)

806 
	#SOUND_MIXER_RECMASK
 0xfd

	)

807 
	#SOUND_MIXER_CAPS
 0xfc

	)

808 
	#SOUND_CAP_EXCL_INPUT
 0x00000001

	)

809 
	#SOUND_MIXER_STEREODEVS
 0xfb

	)

810 
	#SOUND_MIXER_OUTSRC
 0xÁ

	)

811 
	#SOUND_MIXER_OUTMASK
 0xf9

	)

815 
	#SOUND_MASK_VOLUME
 (1 << 
SOUND_MIXER_VOLUME
)

	)

816 
	#SOUND_MASK_BASS
 (1 << 
SOUND_MIXER_BASS
)

	)

817 
	#SOUND_MASK_TREBLE
 (1 << 
SOUND_MIXER_TREBLE
)

	)

818 
	#SOUND_MASK_SYNTH
 (1 << 
SOUND_MIXER_SYNTH
)

	)

819 
	#SOUND_MASK_PCM
 (1 << 
SOUND_MIXER_PCM
)

	)

820 
	#SOUND_MASK_SPEAKER
 (1 << 
SOUND_MIXER_SPEAKER
)

	)

821 
	#SOUND_MASK_LINE
 (1 << 
SOUND_MIXER_LINE
)

	)

822 
	#SOUND_MASK_MIC
 (1 << 
SOUND_MIXER_MIC
)

	)

823 
	#SOUND_MASK_CD
 (1 << 
SOUND_MIXER_CD
)

	)

824 
	#SOUND_MASK_IMIX
 (1 << 
SOUND_MIXER_IMIX
)

	)

825 
	#SOUND_MASK_ALTPCM
 (1 << 
SOUND_MIXER_ALTPCM
)

	)

826 
	#SOUND_MASK_RECLEV
 (1 << 
SOUND_MIXER_RECLEV
)

	)

827 
	#SOUND_MASK_IGAIN
 (1 << 
SOUND_MIXER_IGAIN
)

	)

828 
	#SOUND_MASK_OGAIN
 (1 << 
SOUND_MIXER_OGAIN
)

	)

829 
	#SOUND_MASK_LINE1
 (1 << 
SOUND_MIXER_LINE1
)

	)

830 
	#SOUND_MASK_LINE2
 (1 << 
SOUND_MIXER_LINE2
)

	)

831 
	#SOUND_MASK_LINE3
 (1 << 
SOUND_MIXER_LINE3
)

	)

832 
	#SOUND_MASK_DIGITAL1
 (1 << 
SOUND_MIXER_DIGITAL1
)

	)

833 
	#SOUND_MASK_DIGITAL2
 (1 << 
SOUND_MIXER_DIGITAL2
)

	)

834 
	#SOUND_MASK_DIGITAL3
 (1 << 
SOUND_MIXER_DIGITAL3
)

	)

835 
	#SOUND_MASK_PHONEIN
 (1 << 
SOUND_MIXER_PHONEIN
)

	)

836 
	#SOUND_MASK_PHONEOUT
 (1 << 
SOUND_MIXER_PHONEOUT
)

	)

837 
	#SOUND_MASK_RADIO
 (1 << 
SOUND_MIXER_RADIO
)

	)

838 
	#SOUND_MASK_VIDEO
 (1 << 
SOUND_MIXER_VIDEO
)

	)

839 
	#SOUND_MASK_MONITOR
 (1 << 
SOUND_MIXER_MONITOR
)

	)

842 
	#SOUND_MASK_MUTE
 (1 << 
SOUND_MIXER_MUTE
)

	)

843 
	#SOUND_MASK_ENHANCE
 (1 << 
SOUND_MIXER_ENHANCE
)

	)

844 
	#SOUND_MASK_LOUD
 (1 << 
SOUND_MIXER_LOUD
)

	)

846 
	#MIXER_READ
(
dev
Ë
	`_SIOR
('M', dev, )

	)

847 
	#SOUND_MIXER_READ_VOLUME
 
	`MIXER_READ
(
SOUND_MIXER_VOLUME
)

	)

848 
	#SOUND_MIXER_READ_BASS
 
	`MIXER_READ
(
SOUND_MIXER_BASS
)

	)

849 
	#SOUND_MIXER_READ_TREBLE
 
	`MIXER_READ
(
SOUND_MIXER_TREBLE
)

	)

850 
	#SOUND_MIXER_READ_SYNTH
 
	`MIXER_READ
(
SOUND_MIXER_SYNTH
)

	)

851 
	#SOUND_MIXER_READ_PCM
 
	`MIXER_READ
(
SOUND_MIXER_PCM
)

	)

852 
	#SOUND_MIXER_READ_SPEAKER
 
	`MIXER_READ
(
SOUND_MIXER_SPEAKER
)

	)

853 
	#SOUND_MIXER_READ_LINE
 
	`MIXER_READ
(
SOUND_MIXER_LINE
)

	)

854 
	#SOUND_MIXER_READ_MIC
 
	`MIXER_READ
(
SOUND_MIXER_MIC
)

	)

855 
	#SOUND_MIXER_READ_CD
 
	`MIXER_READ
(
SOUND_MIXER_CD
)

	)

856 
	#SOUND_MIXER_READ_IMIX
 
	`MIXER_READ
(
SOUND_MIXER_IMIX
)

	)

857 
	#SOUND_MIXER_READ_ALTPCM
 
	`MIXER_READ
(
SOUND_MIXER_ALTPCM
)

	)

858 
	#SOUND_MIXER_READ_RECLEV
 
	`MIXER_READ
(
SOUND_MIXER_RECLEV
)

	)

859 
	#SOUND_MIXER_READ_IGAIN
 
	`MIXER_READ
(
SOUND_MIXER_IGAIN
)

	)

860 
	#SOUND_MIXER_READ_OGAIN
 
	`MIXER_READ
(
SOUND_MIXER_OGAIN
)

	)

861 
	#SOUND_MIXER_READ_LINE1
 
	`MIXER_READ
(
SOUND_MIXER_LINE1
)

	)

862 
	#SOUND_MIXER_READ_LINE2
 
	`MIXER_READ
(
SOUND_MIXER_LINE2
)

	)

863 
	#SOUND_MIXER_READ_LINE3
 
	`MIXER_READ
(
SOUND_MIXER_LINE3
)

	)

866 
	#SOUND_MIXER_READ_MUTE
 
	`MIXER_READ
(
SOUND_MIXER_MUTE
)

	)

867 
	#SOUND_MIXER_READ_ENHANCE
 
	`MIXER_READ
(
SOUND_MIXER_ENHANCE
)

	)

868 
	#SOUND_MIXER_READ_LOUD
 
	`MIXER_READ
(
SOUND_MIXER_LOUD
)

	)

870 
	#SOUND_MIXER_READ_RECSRC
 
	`MIXER_READ
(
SOUND_MIXER_RECSRC
)

	)

871 
	#SOUND_MIXER_READ_DEVMASK
 
	`MIXER_READ
(
SOUND_MIXER_DEVMASK
)

	)

872 
	#SOUND_MIXER_READ_RECMASK
 
	`MIXER_READ
(
SOUND_MIXER_RECMASK
)

	)

873 
	#SOUND_MIXER_READ_STEREODEVS
 
	`MIXER_READ
(
SOUND_MIXER_STEREODEVS
)

	)

874 
	#SOUND_MIXER_READ_CAPS
 
	`MIXER_READ
(
SOUND_MIXER_CAPS
)

	)

876 
	#MIXER_WRITE
(
dev
Ë
	`_SIOWR
('M', dev, )

	)

877 
	#SOUND_MIXER_WRITE_VOLUME
 
	`MIXER_WRITE
(
SOUND_MIXER_VOLUME
)

	)

878 
	#SOUND_MIXER_WRITE_BASS
 
	`MIXER_WRITE
(
SOUND_MIXER_BASS
)

	)

879 
	#SOUND_MIXER_WRITE_TREBLE
 
	`MIXER_WRITE
(
SOUND_MIXER_TREBLE
)

	)

880 
	#SOUND_MIXER_WRITE_SYNTH
 
	`MIXER_WRITE
(
SOUND_MIXER_SYNTH
)

	)

881 
	#SOUND_MIXER_WRITE_PCM
 
	`MIXER_WRITE
(
SOUND_MIXER_PCM
)

	)

882 
	#SOUND_MIXER_WRITE_SPEAKER
 
	`MIXER_WRITE
(
SOUND_MIXER_SPEAKER
)

	)

883 
	#SOUND_MIXER_WRITE_LINE
 
	`MIXER_WRITE
(
SOUND_MIXER_LINE
)

	)

884 
	#SOUND_MIXER_WRITE_MIC
 
	`MIXER_WRITE
(
SOUND_MIXER_MIC
)

	)

885 
	#SOUND_MIXER_WRITE_CD
 
	`MIXER_WRITE
(
SOUND_MIXER_CD
)

	)

886 
	#SOUND_MIXER_WRITE_IMIX
 
	`MIXER_WRITE
(
SOUND_MIXER_IMIX
)

	)

887 
	#SOUND_MIXER_WRITE_ALTPCM
 
	`MIXER_WRITE
(
SOUND_MIXER_ALTPCM
)

	)

888 
	#SOUND_MIXER_WRITE_RECLEV
 
	`MIXER_WRITE
(
SOUND_MIXER_RECLEV
)

	)

889 
	#SOUND_MIXER_WRITE_IGAIN
 
	`MIXER_WRITE
(
SOUND_MIXER_IGAIN
)

	)

890 
	#SOUND_MIXER_WRITE_OGAIN
 
	`MIXER_WRITE
(
SOUND_MIXER_OGAIN
)

	)

891 
	#SOUND_MIXER_WRITE_LINE1
 
	`MIXER_WRITE
(
SOUND_MIXER_LINE1
)

	)

892 
	#SOUND_MIXER_WRITE_LINE2
 
	`MIXER_WRITE
(
SOUND_MIXER_LINE2
)

	)

893 
	#SOUND_MIXER_WRITE_LINE3
 
	`MIXER_WRITE
(
SOUND_MIXER_LINE3
)

	)

896 
	#SOUND_MIXER_WRITE_MUTE
 
	`MIXER_WRITE
(
SOUND_MIXER_MUTE
)

	)

897 
	#SOUND_MIXER_WRITE_ENHANCE
 
	`MIXER_WRITE
(
SOUND_MIXER_ENHANCE
)

	)

898 
	#SOUND_MIXER_WRITE_LOUD
 
	`MIXER_WRITE
(
SOUND_MIXER_LOUD
)

	)

900 
	#SOUND_MIXER_WRITE_RECSRC
 
	`MIXER_WRITE
(
SOUND_MIXER_RECSRC
)

	)

902 
	smixî_öfo


904 
	mid
[16];

905 
	m«me
[32];

906 
	mmodify_cou¡î
;

907 
	mfûÀrs
[10];

908 } 
	tmixî_öfo
;

910 
	s_ﬁd_mixî_öfo


912 
	mid
[16];

913 
	m«me
[32];

914 } 
	t_ﬁd_mixî_öfo
;

916 
	#SOUND_MIXER_INFO
 
	`_SIOR
 ('M', 101, 
mixî_öfo
)

	)

917 
	#SOUND_OLD_MIXER_INFO
 
	`_SIOR
 ('M', 101, 
_ﬁd_mixî_öfo
)

	)

925 
	tmixî_ªc‹d
[128];

927 
	#SOUND_MIXER_ACCESS
 
	`_SIOWR
('M', 102, 
mixî_ªc‹d
)

	)

932 
	#SOUND_MIXER_AGC
 
	`_SIOWR
('M', 103, )

	)

933 
	#SOUND_MIXER_3DSE
 
	`_SIOWR
('M', 104, )

	)

939 
	#SOUND_MIXER_PRIVATE1
 
	`_SIOWR
('M', 111, )

	)

940 
	#SOUND_MIXER_PRIVATE2
 
	`_SIOWR
('M', 112, )

	)

941 
	#SOUND_MIXER_PRIVATE3
 
	`_SIOWR
('M', 113, )

	)

942 
	#SOUND_MIXER_PRIVATE4
 
	`_SIOWR
('M', 114, )

	)

943 
	#SOUND_MIXER_PRIVATE5
 
	`_SIOWR
('M', 115, )

	)

953 
	smixî_vﬁ_èbÀ
 {

954 
	mnum
;

955 
	m«me
[32];

956 
	mÀvñs
[32];

957 } 
	tmixî_vﬁ_èbÀ
;

959 
	#SOUND_MIXER_GETLEVELS
 
	`_SIOWR
('M', 116, 
mixî_vﬁ_èbÀ
)

	)

960 
	#SOUND_MIXER_SETLEVELS
 
	`_SIOWR
('M', 117, 
mixî_vﬁ_èbÀ
)

	)

968 
	#OSS_GETVERSION
 
	`_SIOR
 ('M', 118, )

	)

988 
	#EV_SEQ_LOCAL
 0x80

	)

989 
	#EV_TIMING
 0x81

	)

990 
	#EV_CHN_COMMON
 0x92

	)

991 
	#EV_CHN_VOICE
 0x93

	)

992 
	#EV_SYSEX
 0x94

	)

1002 
	#MIDI_NOTEOFF
 0x80

	)

1003 
	#MIDI_NOTEON
 0x90

	)

1004 
	#MIDI_KEY_PRESSURE
 0xA0

	)

1010 
	#MIDI_CTL_CHANGE
 0xB0

	)

1011 
	#MIDI_PGM_CHANGE
 0xC0

	)

1012 
	#MIDI_CHN_PRESSURE
 0xD0

	)

1013 
	#MIDI_PITCH_BEND
 0xE0

	)

1015 
	#MIDI_SYSTEM_PREFIX
 0xF0

	)

1020 
	#TMR_WAIT_REL
 1

	)

1021 
	#TMR_WAIT_ABS
 2

	)

1022 
	#TMR_STOP
 3

	)

1023 
	#TMR_START
 4

	)

1024 
	#TMR_CONTINUE
 5

	)

1025 
	#TMR_TEMPO
 6

	)

1026 
	#TMR_ECHO
 8

	)

1027 
	#TMR_CLOCK
 9

	)

1028 
	#TMR_SPP
 10

	)

1029 
	#TMR_TIMESIG
 11

	)

1034 
	#LOCL_STARTAUDIO
 1

	)

1052 
	#SEQ_DECLAREBUF
(Ë
	`SEQ_USE_EXTBUF
()

	)

1054 
£qbuf_dump
();

1056 
	#SEQ_PM_DEFINES
 
__foo_b¨___


	)

1058 
	#SEQ_LOAD_GMINSTR
(
dev
, 
ö°r
)

	)

1059 
	#SEQ_LOAD_GMDRUM
(
dev
, 
drum
)

	)

1061 
	#_SEQ_EXTERN
 

	)

1062 
	#SEQ_USE_EXTBUF
() \

1063 
_SEQ_EXTERN
 
_£qbuf
[]; \

1064 
_SEQ_EXTERN
 
_£qbuÊí
; _SEQ_EXTERN 
_£qbuÂå


	)

1066 #i‚de‡
USE_SIMPLE_MACROS


1086 
	#SEQ_DEFINEBUF
(
Àn
Ë
_£qbuf
[Àn]; 
_£qbuÊí
 =Üí;
_£qbuÂå
 = 0

	)

1087 
	#_SEQ_NEEDBUF
(
Àn
Ëi‡((
_£qbuÂå
+÷í)Ë> 
_£qbuÊí
Ë
	`£qbuf_dump
()

	)

1088 
	#_SEQ_ADVBUF
(
Àn
Ë
_£qbuÂå
 +
	)
len

1089 
	#SEQ_DUMPBUF
 
£qbuf_dump


	)

1105 
	#_SEQ_NEEDBUF
(
Àn
Ë

	)

1108 
	#SEQ_VOLUME_MODE
(
dev
, 
mode
Ë{
	`_SEQ_NEEDBUF
(8);\

1109 
_£qbuf
[
_£qbuÂå
] = 
SEQ_EXTENDED
;\

1110 
_£qbuf
[
_£qbuÂå
+1] = 
SEQ_VOLMODE
;\

1111 
_£qbuf
[
_£qbuÂå
+2] = (
dev
);\

1112 
_£qbuf
[
_£qbuÂå
+3] = (
mode
);\

1113 
_£qbuf
[
_£qbuÂå
+4] = 0;\

1114 
_£qbuf
[
_£qbuÂå
+5] = 0;\

1115 
_£qbuf
[
_£qbuÂå
+6] = 0;\

1116 
_£qbuf
[
_£qbuÂå
+7] = 0;\

1117 
	`_SEQ_ADVBUF
(8);}

	)

1123 
	#_CHN_VOICE
(
dev
, 
evít
, 
chn
, 
nŸe
, 
∑rm
) \

1124 {
	`_SEQ_NEEDBUF
(8);\

1125 
_£qbuf
[
_£qbuÂå
] = 
EV_CHN_VOICE
;\

1126 
_£qbuf
[
_£qbuÂå
+1] = (
dev
);\

1127 
_£qbuf
[
_£qbuÂå
+2] = (
evít
);\

1128 
_£qbuf
[
_£qbuÂå
+3] = (
chn
);\

1129 
_£qbuf
[
_£qbuÂå
+4] = (
nŸe
);\

1130 
_£qbuf
[
_£qbuÂå
+5] = (
∑rm
);\

1131 
_£qbuf
[
_£qbuÂå
+6] = (0);\

1132 
_£qbuf
[
_£qbuÂå
+7] = 0;\

1133 
	`_SEQ_ADVBUF
(8);}

	)

1135 
	#SEQ_START_NOTE
(
dev
, 
chn
, 
nŸe
, 
vﬁ
) \

1136 
	`_CHN_VOICE
(
dev
, 
MIDI_NOTEON
, 
chn
, 
nŸe
, 
vﬁ
)

	)

1138 
	#SEQ_STOP_NOTE
(
dev
, 
chn
, 
nŸe
, 
vﬁ
) \

1139 
	`_CHN_VOICE
(
dev
, 
MIDI_NOTEOFF
, 
chn
, 
nŸe
, 
vﬁ
)

	)

1141 
	#SEQ_KEY_PRESSURE
(
dev
, 
chn
, 
nŸe
, 
¥essuª
) \

1142 
	`_CHN_VOICE
(
dev
, 
MIDI_KEY_PRESSURE
, 
chn
, 
nŸe
, 
¥essuª
)

	)

1148 
	#_CHN_COMMON
(
dev
, 
evít
, 
chn
, 
p1
, 
p2
, 
w14
) \

1149 {
	`_SEQ_NEEDBUF
(8);\

1150 
_£qbuf
[
_£qbuÂå
] = 
EV_CHN_COMMON
;\

1151 
_£qbuf
[
_£qbuÂå
+1] = (
dev
);\

1152 
_£qbuf
[
_£qbuÂå
+2] = (
evít
);\

1153 
_£qbuf
[
_£qbuÂå
+3] = (
chn
);\

1154 
_£qbuf
[
_£qbuÂå
+4] = (
p1
);\

1155 
_£qbuf
[
_£qbuÂå
+5] = (
p2
);\

1156 *(*)&
_£qbuf
[
_£qbuÂå
+6] = (
w14
);\

1157 
	`_SEQ_ADVBUF
(8);}

	)

1173 
	#SEQ_SYSEX
(
dev
, 
buf
, 
Àn
) \

1174 {
ii
, 
Œ
=(
Àn
); \

1175 *
buÂ
=
buf
;\

1176 i‡(
Œ
>6)ll=6;\

1177 
	`_SEQ_NEEDBUF
(8);\

1178 
_£qbuf
[
_£qbuÂå
] = 
EV_SYSEX
;\

1179 
_£qbuf
[
_£qbuÂå
+1] = (
dev
);\

1180 
ii
=0;ii<
Œ
;ii++)\

1181 
_£qbuf
[
_£qbuÂå
+
ii
+2] = 
buÂ
[ii];\

1182 
ii
=
Œ
;ii<6;ii++)\

1183 
_£qbuf
[
_£qbuÂå
+
ii
+2] = 0xff;\

1184 
	`_SEQ_ADVBUF
(8);}

	)

1186 
	#SEQ_CHN_PRESSURE
(
dev
, 
chn
, 
¥essuª
) \

1187 
	`_CHN_COMMON
(
dev
, 
MIDI_CHN_PRESSURE
, 
chn
, 
¥essuª
, 0, 0)

	)

1189 
	#SEQ_SET_PATCH
 
SEQ_PGM_CHANGE


	)

1190 
	#SEQ_PGM_CHANGE
(
dev
, 
chn
, 
∑tch
) \

1191 
	`_CHN_COMMON
(
dev
, 
MIDI_PGM_CHANGE
, 
chn
, 
∑tch
, 0, 0)

	)

1193 
	#SEQ_CONTROL
(
dev
, 
chn
, 
c⁄åﬁÀr
, 
vÆue
) \

1194 
	`_CHN_COMMON
(
dev
, 
MIDI_CTL_CHANGE
, 
chn
, 
c⁄åﬁÀr
, 0, 
vÆue
)

	)

1196 
	#SEQ_BENDER
(
dev
, 
chn
, 
vÆue
) \

1197 
	`_CHN_COMMON
(
dev
, 
MIDI_PITCH_BEND
, 
chn
, 0, 0, 
vÆue
)

	)

1200 
	#SEQ_V2_X_CONTROL
(
dev
, 
voi˚
, 
c⁄åﬁÀr
, 
vÆue
Ë{
	`_SEQ_NEEDBUF
(8);\

1201 
_£qbuf
[
_£qbuÂå
] = 
SEQ_EXTENDED
;\

1202 
_£qbuf
[
_£qbuÂå
+1] = 
SEQ_CONTROLLER
;\

1203 
_£qbuf
[
_£qbuÂå
+2] = (
dev
);\

1204 
_£qbuf
[
_£qbuÂå
+3] = (
voi˚
);\

1205 
_£qbuf
[
_£qbuÂå
+4] = (
c⁄åﬁÀr
);\

1206 
_£qbuf
[
_£qbuÂå
+5] = ((
vÆue
)&0xff);\

1207 
_£qbuf
[
_£qbuÂå
+6] = ((
vÆue
>>8)&0xff);\

1208 
_£qbuf
[
_£qbuÂå
+7] = 0;\

1209 
	`_SEQ_ADVBUF
(8);}

	)

1214 
	#SEQ_PITCHBEND
(
dev
, 
voi˚
, 
vÆue
Ë
	`SEQ_V2_X_CONTROL
(dev, voi˚, 
CTRL_PITCH_BENDER
, vÆue)

	)

1215 
	#SEQ_BENDER_RANGE
(
dev
, 
voi˚
, 
vÆue
Ë
	`SEQ_V2_X_CONTROL
(dev, voi˚, 
CTRL_PITCH_BENDER_RANGE
, vÆue)

	)

1216 
	#SEQ_EXPRESSION
(
dev
, 
voi˚
, 
vÆue
Ë
	`SEQ_CONTROL
(dev, voi˚, 
CTL_EXPRESSION
, vÆue*128)

	)

1217 
	#SEQ_MAIN_VOLUME
(
dev
, 
voi˚
, 
vÆue
Ë
	`SEQ_CONTROL
(dev, voi˚, 
CTL_MAIN_VOLUME
, (vÆue*16383)/100)

	)

1218 
	#SEQ_PANNING
(
dev
, 
voi˚
, 
pos
Ë
	`SEQ_CONTROL
(dev, voi˚, 
CTL_PAN
, (pos+128Ë/ 2)

	)

1224 
	#_TIMER_EVENT
(
ev
, 
∑rm
Ë{
	`_SEQ_NEEDBUF
(8);\

1225 
_£qbuf
[
_£qbuÂå
+0] = 
EV_TIMING
; \

1226 
_£qbuf
[
_£qbuÂå
+1] = (
ev
); \

1227 
_£qbuf
[
_£qbuÂå
+2] = 0;\

1228 
_£qbuf
[
_£qbuÂå
+3] = 0;\

1229 *(*)&
_£qbuf
[
_£qbuÂå
+4] = (
∑rm
); \

1230 
	`_SEQ_ADVBUF
(8);}

	)

1232 
	#SEQ_START_TIMER
(Ë
	`_TIMER_EVENT
(
TMR_START
, 0)

	)

1233 
	#SEQ_STOP_TIMER
(Ë
	`_TIMER_EVENT
(
TMR_STOP
, 0)

	)

1234 
	#SEQ_CONTINUE_TIMER
(Ë
	`_TIMER_EVENT
(
TMR_CONTINUE
, 0)

	)

1235 
	#SEQ_WAIT_TIME
(
ticks
Ë
	`_TIMER_EVENT
(
TMR_WAIT_ABS
,Åicks)

	)

1236 
	#SEQ_DELTA_TIME
(
ticks
Ë
	`_TIMER_EVENT
(
TMR_WAIT_REL
,Åicks)

	)

1237 
	#SEQ_ECHO_BACK
(
key
Ë
	`_TIMER_EVENT
(
TMR_ECHO
, key)

	)

1238 
	#SEQ_SET_TEMPO
(
vÆue
Ë
	`_TIMER_EVENT
(
TMR_TEMPO
, vÆue)

	)

1239 
	#SEQ_SONGPOS
(
pos
Ë
	`_TIMER_EVENT
(
TMR_SPP
,Öos)

	)

1240 
	#SEQ_TIME_SIGNATURE
(
sig
Ë
	`_TIMER_EVENT
(
TMR_TIMESIG
, sig)

	)

1246 
	#_LOCAL_EVENT
(
ev
, 
∑rm
Ë{
	`_SEQ_NEEDBUF
(8);\

1247 
_£qbuf
[
_£qbuÂå
+0] = 
EV_SEQ_LOCAL
; \

1248 
_£qbuf
[
_£qbuÂå
+1] = (
ev
); \

1249 
_£qbuf
[
_£qbuÂå
+2] = 0;\

1250 
_£qbuf
[
_£qbuÂå
+3] = 0;\

1251 *(*)&
_£qbuf
[
_£qbuÂå
+4] = (
∑rm
); \

1252 
	`_SEQ_ADVBUF
(8);}

	)

1254 
	#SEQ_PLAYAUDIO
(
devmask
Ë
	`_LOCAL_EVENT
(
LOCL_STARTAUDIO
, devmask)

	)

1259 
	#SEQ_MIDIOUT
(
devi˚
, 
byã
Ë{
	`_SEQ_NEEDBUF
(4);\

1260 
_£qbuf
[
_£qbuÂå
] = 
SEQ_MIDIPUTC
;\

1261 
_£qbuf
[
_£qbuÂå
+1] = (
byã
);\

1262 
_£qbuf
[
_£qbuÂå
+2] = (
devi˚
);\

1263 
_£qbuf
[
_£qbuÂå
+3] = 0;\

1264 
	`_SEQ_ADVBUF
(4);}

	)

1269 
	#SEQ_WRPATCH
(
∑tchx
, 
Àn
) \

1270 {i‡(
_£qbuÂå
Ë
	`SEQ_DUMPBUF
();\

1271 i‡(
	`wrôe
(
£qfd
, (*)(
∑tchx
), 
Àn
)==-1) \

1272 
	`≥º‹
("Wrôê∑tch: /dev/£quí˚r");}

	)

1273 
	#SEQ_WRPATCH2
(
∑tchx
, 
Àn
) \

1274 (
	`SEQ_DUMPBUF
(), 
	`wrôe
(
£qfd
, (*)(
∑tchx
), 
Àn
))

	)

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 #ifde‡
__USE_XOPEN2K


43 
	#__√ed_time•ec


	)

45 
	~<time.h
>

46 
	#__√ed_timevÆ


	)

47 
	~<bôs/time.h
>

49 #i‚de‡
__su£c⁄ds_t_deföed


50 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

51 
	#__su£c⁄ds_t_deföed


	)

56 
	t__fd_mask
;

59 #unde‡
__NFDBITS


61 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

62 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

63 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

70 #ifde‡
__USE_XOPEN


71 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

72 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

74 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

75 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

77 } 
	tfd_£t
;

80 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

82 #ifde‡
__USE_MISC


84 
__fd_mask
 
	tfd_mask
;

87 
	#NFDBITS
 
__NFDBITS


	)

92 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

93 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

94 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

95 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

98 
__BEGIN_DECLS


108 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

109 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

110 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

111 
timevÆ
 *
__ª°ri˘
 
__timeout
);

113 #ifde‡
__USE_XOPEN2K


120 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

121 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

122 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

123 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

124 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

129 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


130 
	~<bôs/£À˘2.h
>

133 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


18 
	#Z_PREFIX_SET


	)

21 
	#_di°_code
 
z__di°_code


	)

22 
	#_Àngth_code
 
z__Àngth_code


	)

23 
	#_å_Æign
 
z__å_Æign


	)

24 
	#_å_Êush_bôs
 
z__å_Êush_bôs


	)

25 
	#_å_Êush_block
 
z__å_Êush_block


	)

26 
	#_å_öô
 
z__å_öô


	)

27 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

28 
	#_å_èŒy
 
z__å_èŒy


	)

29 
	#adÀr32
 
z_adÀr32


	)

30 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

31 
	#adÀr32_comböe64
 
z_adÀr32_comböe64


	)

32 #i‚de‡
Z_SOLO


33 
	#com¥ess
 
z_com¥ess


	)

34 
	#com¥ess2
 
z_com¥ess2


	)

35 
	#com¥essBound
 
z_com¥essBound


	)

37 
	#¸c32
 
z_¸c32


	)

38 
	#¸c32_comböe
 
z_¸c32_comböe


	)

39 
	#¸c32_comböe64
 
z_¸c32_comböe64


	)

40 
	#deÊ©e
 
z_deÊ©e


	)

41 
	#deÊ©eBound
 
z_deÊ©eBound


	)

42 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

43 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

44 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

45 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

46 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

47 
	#deÊ©ePídög
 
z_deÊ©ePídög


	)

48 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

49 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

50 
	#deÊ©eRe£tKìp
 
z_deÊ©eRe£tKìp


	)

51 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

52 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

53 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

54 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

55 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

56 #i‚de‡
Z_SOLO


57 
	#gz_îr‹
 
z_gz_îr‹


	)

58 
	#gz_ötmax
 
z_gz_ötmax


	)

59 
	#gz_°rwöîr‹
 
z_gz_°rwöîr‹


	)

60 
	#gzbuf„r
 
z_gzbuf„r


	)

61 
	#gz˛óªº
 
z_gz˛óªº


	)

62 
	#gz˛o£
 
z_gz˛o£


	)

63 
	#gz˛o£_r
 
z_gz˛o£_r


	)

64 
	#gz˛o£_w
 
z_gz˛o£_w


	)

65 
	#gzdúe˘
 
z_gzdúe˘


	)

66 
	#gzd›í
 
z_gzd›í


	)

67 
	#gzeof
 
z_gzeof


	)

68 
	#gzîr‹
 
z_gzîr‹


	)

69 
	#gzÊush
 
z_gzÊush


	)

70 
	#gzgëc
 
z_gzgëc


	)

71 
	#gzgëc_
 
z_gzgëc_


	)

72 
	#gzgës
 
z_gzgës


	)

73 
	#gzoff£t
 
z_gzoff£t


	)

74 
	#gzoff£t64
 
z_gzoff£t64


	)

75 
	#gz›í
 
z_gz›í


	)

76 
	#gz›í64
 
z_gz›í64


	)

77 #ifde‡
_WIN32


78 
	#gz›í_w
 
z_gz›í_w


	)

80 
	#gz¥ötf
 
z_gz¥ötf


	)

81 
	#gzv¥ötf
 
z_gzv¥ötf


	)

82 
	#gzputc
 
z_gzputc


	)

83 
	#gzputs
 
z_gzputs


	)

84 
	#gzªad
 
z_gzªad


	)

85 
	#gzªwöd
 
z_gzªwöd


	)

86 
	#gz£ek
 
z_gz£ek


	)

87 
	#gz£ek64
 
z_gz£ek64


	)

88 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

89 
	#gzãŒ
 
z_gzãŒ


	)

90 
	#gzãŒ64
 
z_gzãŒ64


	)

91 
	#gzungëc
 
z_gzungëc


	)

92 
	#gzwrôe
 
z_gzwrôe


	)

94 
	#öÊ©e
 
z_öÊ©e


	)

95 
	#öÊ©eBack
 
z_öÊ©eBack


	)

96 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

97 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

98 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

99 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

100 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

101 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

102 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

103 
	#öÊ©eM¨k
 
z_öÊ©eM¨k


	)

104 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

105 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

106 
	#öÊ©eRe£t2
 
z_öÊ©eRe£t2


	)

107 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

108 
	#öÊ©eGëDi˘i⁄¨y
 
z_öÊ©eGëDi˘i⁄¨y


	)

109 
	#öÊ©eSync
 
z_öÊ©eSync


	)

110 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

111 
	#öÊ©eUndîmöe
 
z_öÊ©eUndîmöe


	)

112 
	#öÊ©eRe£tKìp
 
z_öÊ©eRe£tKìp


	)

113 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

114 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

115 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

116 #i‚de‡
Z_SOLO


117 
	#uncom¥ess
 
z_uncom¥ess


	)

119 
	#zEº‹
 
z_zEº‹


	)

120 #i‚de‡
Z_SOLO


121 
	#zˇŒoc
 
z_zˇŒoc


	)

122 
	#zc‰ì
 
z_zc‰ì


	)

124 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

125 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

128 
	#Byã
 
z_Byã


	)

129 
	#Byãf
 
z_Byãf


	)

130 
	#Æloc_func
 
z_Æloc_func


	)

131 
	#ch¨f
 
z_ch¨f


	)

132 
	#‰ì_func
 
z_‰ì_func


	)

133 #i‚de‡
Z_SOLO


134 
	#gzFûe
 
z_gzFûe


	)

136 
	#gz_hódî
 
z_gz_hódî


	)

137 
	#gz_hódîp
 
z_gz_hódîp


	)

138 
	#ö_func
 
z_ö_func


	)

139 
	#ötf
 
z_ötf


	)

140 
	#out_func
 
z_out_func


	)

141 
	#uI¡
 
z_uI¡


	)

142 
	#uI¡f
 
z_uI¡f


	)

143 
	#uL⁄g
 
z_uL⁄g


	)

144 
	#uL⁄gf
 
z_uL⁄gf


	)

145 
	#voidp
 
z_voidp


	)

146 
	#voidpc
 
z_voidpc


	)

147 
	#voidpf
 
z_voidpf


	)

150 
	#gz_hódî_s
 
z_gz_hódî_s


	)

151 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

155 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

156 
	#MSDOS


	)

158 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

159 
	#OS2


	)

161 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

162 
	#WINDOWS


	)

164 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

165 #i‚de‡
WIN32


166 
	#WIN32


	)

169 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

170 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

171 #i‚de‡
SYS16BIT


172 
	#SYS16BIT


	)

181 #ifde‡
SYS16BIT


182 
	#MAXSEG_64K


	)

184 #ifde‡
MSDOS


185 
	#UNALIGNED_OK


	)

188 #ifde‡
__STDC_VERSION__


189 #i‚de‡
STDC


190 
	#STDC


	)

192 #i‡
__STDC_VERSION__
 >= 199901L

193 #i‚de‡
STDC99


194 
	#STDC99


	)

198 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

199 
	#STDC


	)

201 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

202 
	#STDC


	)

204 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

205 
	#STDC


	)

207 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

208 
	#STDC


	)

211 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

212 
	#STDC


	)

215 #i‚de‡
STDC


217 c⁄°

	)

221 #i‡
deföed
(
ZLIB_CONST
Ë&& !deföed(
z_c⁄°
)

222 
	#z_c⁄°
 c⁄°

	)

224 
	#z_c⁄°


	)

228 #i‡
deföed
(
__MWERKS__
)||deföed(
≠∂ec
)||deföed(
THINK_C
)||deföed(
__SC__
)

229 
	#NO_DUMMY_DECL


	)

233 #i‚de‡
MAX_MEM_LEVEL


234 #ifde‡
MAXSEG_64K


235 
	#MAX_MEM_LEVEL
 8

	)

237 
	#MAX_MEM_LEVEL
 9

	)

246 #i‚de‡
MAX_WBITS


247 
	#MAX_WBITS
 15

	)

265 #i‚de‡
OF


266 #ifde‡
STDC


267 
	#OF
(
¨gs
Ë
	)
args

269 
	#OF
(
¨gs
Ë()

	)

273 #i‚de‡
Z_ARG


274 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

275 
	#Z_ARG
(
¨gs
Ë
	)
args

277 
	#Z_ARG
(
¨gs
Ë()

	)

287 #ifde‡
SYS16BIT


288 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

290 
	#SMALL_MEDIUM


	)

291 #ifde‡
_MSC_VER


292 
	#FAR
 
_Ár


	)

294 
	#FAR
 
Ár


	)

297 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

299 
	#SMALL_MEDIUM


	)

300 #ifde‡
__BORLANDC__


301 
	#FAR
 
_Ár


	)

303 
	#FAR
 
Ár


	)

308 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

312 #ifde‡
ZLIB_DLL


313 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

314 #ifde‡
ZLIB_INTERNAL


315 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

317 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

325 #ifde‡
ZLIB_WINAPI


326 #ifde‡
FAR


327 #unde‡
FAR


329 
	~<wödows.h
>

332 
	#ZEXPORT
 
WINAPI


	)

333 #ifde‡
WIN32


334 
	#ZEXPORTVA
 
WINAPIV


	)

336 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

341 #i‡
deföed
 (
__BEOS__
)

342 #ifde‡
ZLIB_DLL


343 #ifde‡
ZLIB_INTERNAL


344 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

345 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

347 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

348 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

353 #i‚de‡
ZEXTERN


354 
	#ZEXTERN
 

	)

356 #i‚de‡
ZEXPORT


357 
	#ZEXPORT


	)

359 #i‚de‡
ZEXPORTVA


360 
	#ZEXPORTVA


	)

363 #i‚de‡
FAR


364 
	#FAR


	)

367 #i‡!
deföed
(
__MACTYPES__
)

368 
	tByã
;

370 
	tuI¡
;

371 
	tuL⁄g
;

373 #ifde‡
SMALL_MEDIUM


375 
	#Byãf
 
Byã
 
FAR


	)

377 
Byã
 
	tFAR
 
	tByãf
;

379 
	tFAR
 
	tch¨f
;

380 
	tFAR
 
	tötf
;

381 
uI¡
 
	tFAR
 
	tuI¡f
;

382 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

384 #ifde‡
STDC


385 c⁄° *
	tvoidpc
;

386 
	tFAR
 *
	tvoidpf
;

387 *
	tvoidp
;

389 
Byã
 c⁄° *
	tvoidpc
;

390 
Byã
 
	tFAR
 *
	tvoidpf
;

391 
Byã
 *
	tvoidp
;

394 #i‡!
deföed
(
Z_U4
Ë&& !deföed(
Z_SOLO
Ë&& deföed(
STDC
)

395 
	~<limôs.h
>

396 #i‡(
UINT_MAX
 == 0xffffffffUL)

397 
	#Z_U4
 

	)

398 #ñi‡(
ULONG_MAX
 == 0xffffffffUL)

399 
	#Z_U4
 

	)

400 #ñi‡(
USHRT_MAX
 == 0xffffffffUL)

401 
	#Z_U4
 

	)

405 #ifde‡
Z_U4


406 
Z_U4
 
	tz_¸c_t
;

408 
	tz_¸c_t
;

412 
	#Z_HAVE_UNISTD_H


	)

416 
	#Z_HAVE_STDARG_H


	)

419 #ifde‡
STDC


420 #i‚de‡
Z_SOLO


421 
	~<sys/ty≥s.h
>

425 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

426 #i‚de‡
Z_SOLO


427 
	~<°d¨g.h
>

431 #ifde‡
_WIN32


432 #i‚de‡
Z_SOLO


433 
	~<°ddef.h
>

443 #i‡
deföed
(
_LARGEFILE64_SOURCE
) && -_LARGEFILE64_SOURCE - -1 == 1

444 #unde‡
_LARGEFILE64_SOURCE


447 #i‡
deföed
(
__WATCOMC__
Ë&& !deföed(
Z_HAVE_UNISTD_H
)

448 
	#Z_HAVE_UNISTD_H


	)

450 #i‚de‡
Z_SOLO


451 #i‡
deföed
(
Z_HAVE_UNISTD_H
Ë|| deföed(
_LARGEFILE64_SOURCE
)

452 
	~<uni°d.h
>

453 #ifde‡
VMS


454 
	~<unixio.h
>

456 #i‚de‡
z_off_t


457 
	#z_off_t
 
off_t


	)

462 #i‡
deföed
(
_LFS64_LARGEFILE
) && _LFS64_LARGEFILE-0

463 
	#Z_LFS64


	)

466 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë&& deföed(
Z_LFS64
)

467 
	#Z_LARGE64


	)

470 #i‡
deföed
(
_FILE_OFFSET_BITS
Ë&& _FILE_OFFSET_BITS-0 =64 && deföed(
Z_LFS64
)

471 
	#Z_WANT64


	)

474 #i‡!
deföed
(
SEEK_SET
Ë&& !deföed(
Z_SOLO
)

475 
	#SEEK_SET
 0

	)

476 
	#SEEK_CUR
 1

	)

477 
	#SEEK_END
 2

	)

480 #i‚de‡
z_off_t


481 
	#z_off_t
 

	)

484 #i‡!
deföed
(
_WIN32
Ë&& deföed(
Z_LARGE64
)

485 
	#z_off64_t
 
off64_t


	)

487 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
Ë&& !deföed(
Z_SOLO
)

488 
	#z_off64_t
 
__öt64


	)

490 
	#z_off64_t
 
z_off_t


	)

495 #i‡
deföed
(
__MVS__
)

496 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

497 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

498 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

499 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

500 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

501 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

502 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

503 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

504 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

505 #¥agm®
m≠
(
com¥essBound
,"CMBND")

506 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

507 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

508 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

206 #ifde‡
__USE_XOPEN2K8


207 
	#F_DUPFD_CLOEXEC
 1030

	)

212 
	#FD_CLOEXEC
 1

	)

214 #i‚de‡
F_RDLCK


216 
	#F_RDLCK
 0

	)

217 
	#F_WRLCK
 1

	)

218 
	#F_UNLCK
 2

	)

223 #i‚de‡
F_EXLCK


224 
	#F_EXLCK
 4

	)

225 
	#F_SHLCK
 8

	)

228 #ifde‡
__USE_MISC


230 
	#LOCK_SH
 1

	)

231 
	#LOCK_EX
 2

	)

232 
	#LOCK_NB
 4

	)

234 
	#LOCK_UN
 8

	)

237 #ifde‡
__USE_GNU


238 
	#LOCK_MAND
 32

	)

239 
	#LOCK_READ
 64

	)

240 
	#LOCK_WRITE
 128

	)

241 
	#LOCK_RW
 192

	)

244 #ifde‡
__USE_GNU


246 
	#DN_ACCESS
 0x00000001

	)

247 
	#DN_MODIFY
 0x00000002

	)

248 
	#DN_CREATE
 0x00000004

	)

249 
	#DN_DELETE
 0x00000008

	)

250 
	#DN_RENAME
 0x00000010

	)

251 
	#DN_ATTRIB
 0x00000020

	)

252 
	#DN_MULTISHOT
 0x80000000

	)

256 #ifde‡
__USE_GNU


258 
	e__pid_ty≥


260 
	mF_OWNER_TID
 = 0,

261 
	mF_OWNER_PID
,

262 
	mF_OWNER_PGRP
,

263 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


267 
	sf_ow√r_ex


269 
__pid_ty≥
 
	mty≥
;

270 
__pid_t
 
	mpid
;

276 #ifdef 
__USE_MISC


277 
	#FAPPEND
 
O_APPEND


	)

278 
	#FFSYNC
 
O_FSYNC


	)

279 
	#FASYNC
 
O_ASYNC


	)

280 
	#FNONBLOCK
 
O_NONBLOCK


	)

281 
	#FNDELAY
 
O_NDELAY


	)

284 #i‚de‡
__POSIX_FADV_DONTNEED


285 
	#__POSIX_FADV_DONTNEED
 4

	)

286 
	#__POSIX_FADV_NOREUSE
 5

	)

289 #ifde‡
__USE_XOPEN2K


290 
	#POSIX_FADV_NORMAL
 0

	)

291 
	#POSIX_FADV_RANDOM
 1

	)

292 
	#POSIX_FADV_SEQUENTIAL
 2

	)

293 
	#POSIX_FADV_WILLNEED
 3

	)

294 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

295 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

299 #ifde‡
__USE_GNU


301 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

304 
	#SYNC_FILE_RANGE_WRITE
 2

	)

307 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

312 
	#SPLICE_F_MOVE
 1

	)

313 
	#SPLICE_F_NONBLOCK
 2

	)

316 
	#SPLICE_F_MORE
 4

	)

317 
	#SPLICE_F_GIFT
 8

	)

321 
	#FALLOC_FL_KEEP_SIZE
 1

	)

324 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

325 
	#FALLOC_FL_COLLAPSE_RANGE
 8

	)

328 
	#FALLOC_FL_ZERO_RANGE
 16

	)

333 
	sfûe_h™dÀ


335 
	mh™dÀ_byãs
;

336 
	mh™dÀ_ty≥
;

338 
	mf_h™dÀ
[0];

342 
	#MAX_HANDLE_SZ
 128

	)

346 #ifde‡
__USE_ATFILE


347 
	#AT_FDCWD
 -100

	)

350 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

351 
	#AT_REMOVEDIR
 0x200

	)

353 
	#AT_SYMLINK_FOLLOW
 0x400

	)

354 #ifde‡
__USE_GNU


355 
	#AT_NO_AUTOMOUNT
 0x800

	)

357 
	#AT_EMPTY_PATH
 0x1000

	)

359 
	#AT_EACCESS
 0x200

	)

363 
	g__BEGIN_DECLS


365 #ifde‡
__USE_GNU


368 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

369 
__THROW
;

376 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

377 
__Êags
);

384 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

385 
size_t
 
__cou¡
, 
__Êags
);

391 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

392 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

393 
__Êags
);

399 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

400 
__Êags
);

406 #i‚de‡
__USE_FILE_OFFSET64


407 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

409 #ifde‡
__REDIRECT


410 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

411 
__off64_t
 
__Àn
),

412 
ÁŒoˇã64
);

414 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

417 #ifde‡
__USE_LARGEFILE64


418 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

419 
__off64_t
 
__Àn
);

424 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

425 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

426 
__Êags
Ë
__THROW
;

432 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

433 
__Êags
);

437 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


35 
	#PROT_READ
 0x1

	)

36 
	#PROT_WRITE
 0x2

	)

37 
	#PROT_EXEC
 0x4

	)

38 
	#PROT_NONE
 0x0

	)

39 
	#PROT_GROWSDOWN
 0x01000000

	)

41 
	#PROT_GROWSUP
 0x02000000

	)

45 
	#MAP_SHARED
 0x01

	)

46 
	#MAP_PRIVATE
 0x02

	)

47 #ifde‡
__USE_MISC


48 
	#MAP_TYPE
 0x0‡

	)

52 
	#MAP_FIXED
 0x10

	)

53 #ifde‡
__USE_MISC


54 
	#MAP_FILE
 0

	)

55 #ifde‡
__MAP_ANONYMOUS


56 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

58 
	#MAP_ANONYMOUS
 0x20

	)

60 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

62 
	#MAP_HUGE_SHIFT
 26

	)

63 
	#MAP_HUGE_MASK
 0x3f

	)

67 
	#MS_ASYNC
 1

	)

68 
	#MS_SYNC
 4

	)

69 
	#MS_INVALIDATE
 2

	)

72 #ifde‡
__USE_GNU


73 
	#MREMAP_MAYMOVE
 1

	)

74 
	#MREMAP_FIXED
 2

	)

78 #ifde‡
__USE_MISC


79 
	#MADV_NORMAL
 0

	)

80 
	#MADV_RANDOM
 1

	)

81 
	#MADV_SEQUENTIAL
 2

	)

82 
	#MADV_WILLNEED
 3

	)

83 
	#MADV_DONTNEED
 4

	)

84 
	#MADV_FREE
 8

	)

85 
	#MADV_REMOVE
 9

	)

86 
	#MADV_DONTFORK
 10

	)

87 
	#MADV_DOFORK
 11

	)

88 
	#MADV_MERGEABLE
 12

	)

89 
	#MADV_UNMERGEABLE
 13

	)

90 
	#MADV_HUGEPAGE
 14

	)

91 
	#MADV_NOHUGEPAGE
 15

	)

92 
	#MADV_DONTDUMP
 16

	)

94 
	#MADV_DODUMP
 17

	)

95 
	#MADV_HWPOISON
 100

	)

99 #ifde‡
__USE_XOPEN2K


100 
	#POSIX_MADV_NORMAL
 0

	)

101 
	#POSIX_MADV_RANDOM
 1

	)

102 
	#POSIX_MADV_SEQUENTIAL
 2

	)

103 
	#POSIX_MADV_WILLNEED
 3

	)

104 
	#POSIX_MADV_DONTNEED
 4

	)

108 #i‚de‡
MCL_CURRENT


109 
	#MCL_CURRENT
 1

	)

110 
	#MCL_FUTURE
 2

	)

112 
	#MCL_ONFAULT
 4

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWCGROUP
 0x02000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
	$˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
__CPU_MASK_TYPE
 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 / 8 < (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 / 8 < (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 / 8 < (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/patchkey.h

13 #i‚de‡
_LINUX_PATCHKEY_H_INDIRECT


17 #i‚de‡
_LINUX_PATCHKEY_H


18 
	#_LINUX_PATCHKEY_H


	)

21 
	~<ídün.h
>

23 #i‡
deföed
(
__BYTE_ORDER
)

24 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


25 
	#_PATCHKEY
(
id
Ë(0xfd00|id)

	)

26 #ñi‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


27 
	#_PATCHKEY
(
id
Ë((id<<8)|0x00fd)

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #i‡
deföed
(
__MINGW64__
)

38 #ñi‡
deföed
(
__MINGW32__
)

39 #i‡(
__GNUC__
 =4Ë&& (
__GNUC_MINOR__
 == 8)

41 #ifde‡
åa˚


42 #unde‡
åa˚


43 
	#TRACE


	)

53 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

54 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

60 #unde‡
NCURSES_DLL


61 
	#NCURSES_STATIC


	)

63 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

64 #i‡
deföed
(
NCURSES_DLL
)

65 #i‡
deföed
(
NCURSES_STATIC
)

66 #unde‡
NCURSES_STATIC


69 #unde‡
NCURSES_IMPEXP


70 #unde‡
NCURSES_API


71 #unde‡
NCURSES_EXPORT


72 #unde‡
NCURSES_EXPORT_VAR


73 #i‡
deföed
(
NCURSES_DLL
)

75 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

76 #ñi‡
deföed
(
NCURSES_STATIC
)

78 
	#NCURSES_IMPEXP


	)

81 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

83 
	#NCURSES_API
 
__cde˛


	)

84 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

85 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

89 #i‡!
deföed
(
NCURSES_IMPEXP
)

90 
	#NCURSES_IMPEXP


	)

92 #i‡!
deföed
(
NCURSES_API
)

93 
	#NCURSES_API


	)

95 #i‡!
deföed
(
NCURSES_EXPORT
)

96 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

98 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

99 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

57 
	#__STDC_ISO_10646__
 201605L

	)

60 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

310 #unde‡
__Æways_ölöe


311 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

313 #unde‡
__Æways_ölöe


314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡
__GNUC_PREREQ
 (4,3)

320 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

322 
	#__©åibuã_¨tificül__


	)

334 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

335 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

336 || 
deföed
 
__GNUC_GNU_INLINE__
)))

337 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


338 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

339 
	#__exã∫_Æways_ölöe
 \

340 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

342 
	#__exã∫_ölöe
 
__ölöe


	)

343 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

347 #ifde‡
__exã∫_Æways_ölöe


348 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

353 #i‡
__GNUC_PREREQ
 (4,3)

354 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

355 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

362 #i‡!
__GNUC_PREREQ
 (2,8)

363 
	#__exãnsi⁄__


	)

367 #i‡!
__GNUC_PREREQ
 (2,92)

368 
	#__ª°ri˘


	)

374 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


375 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

377 #ifde‡
__GNUC__


378 
	#__ª°ri˘_¨r


	)

380 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

381 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

384 
	#__ª°ri˘_¨r


	)

389 #i‡
__GNUC__
 >= 3

390 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

391 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

393 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

394 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

397 #i‡(!
deföed
 
_N‹ëu∫
 \

398 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

399 && !
	$__GNUC_PREREQ
 (4,7))

400 #i‡
	`__GNUC_PREREQ
 (2,8)

401 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

403 
	#_N‹ëu∫


	)

407 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

408 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

409 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

410 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

411 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

412 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

415 
	~<bôs/w‹dsize.h
>

417 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


418 
	#__LDBL_COMPAT
 1

	)

419 #ifde‡
__REDIRECT


420 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

422 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

423 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

424 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

425 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

426 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

427 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

428 
	#__LDBL_REDIR_DECL
(
«me
) \

429 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

430 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

431 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

432 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

433 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

436 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


437 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

438 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

439 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

440 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

441 
	#__LDBL_REDIR_DECL
(
«me
)

	)

442 #ifde‡
__REDIRECT


443 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

444 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

445 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "6.0"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

60 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

63 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


81 
	#NL_NMAX
 
INT_MAX


	)

85 
	#NL_SETMAX
 
INT_MAX


	)

88 
	#NL_TEXTMAX
 
INT_MAX


	)

91 
	#NZERO
 20

	)

95 #ifde‡
INT_MAX


96 #i‡
INT_MAX
 == 32767

97 
	#WORD_BIT
 16

	)

99 #i‡
INT_MAX
 == 2147483647

100 
	#WORD_BIT
 32

	)

103 
	#WORD_BIT
 64

	)

106 #ñi‡
deföed
 
__INT_MAX__


107 #i‡
__INT_MAX__
 == 32767

108 
	#WORD_BIT
 16

	)

110 #i‡
__INT_MAX__
 == 2147483647

111 
	#WORD_BIT
 32

	)

114 
	#WORD_BIT
 64

	)

118 
	#WORD_BIT
 32

	)

122 #ifde‡
LONG_MAX


123 #i‡
LONG_MAX
 == 2147483647

124 
	#LONG_BIT
 32

	)

127 
	#LONG_BIT
 64

	)

129 #ñi‡
deföed
 
__LONG_MAX__


130 #i‡
__LONG_MAX__
 == 2147483647

131 
	#LONG_BIT
 32

	)

134 
	#LONG_BIT
 64

	)

137 
	~<bôs/w‹dsize.h
>

138 #i‡
__WORDSIZE
 == 64

139 
	#LONG_BIT
 64

	)

141 
	#LONG_BIT
 32

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
[0];

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

17 
	#ENOSYS
 38

	)

19 
	#ENOTEMPTY
 39

	)

20 
	#ELOOP
 40

	)

21 
	#EWOULDBLOCK
 
EAGAIN


	)

22 
	#ENOMSG
 42

	)

23 
	#EIDRM
 43

	)

24 
	#ECHRNG
 44

	)

25 
	#EL2NSYNC
 45

	)

26 
	#EL3HLT
 46

	)

27 
	#EL3RST
 47

	)

28 
	#ELNRNG
 48

	)

29 
	#EUNATCH
 49

	)

30 
	#ENOCSI
 50

	)

31 
	#EL2HLT
 51

	)

32 
	#EBADE
 52

	)

33 
	#EBADR
 53

	)

34 
	#EXFULL
 54

	)

35 
	#ENOANO
 55

	)

36 
	#EBADRQC
 56

	)

37 
	#EBADSLT
 57

	)

39 
	#EDEADLOCK
 
EDEADLK


	)

41 
	#EBFONT
 59

	)

42 
	#ENOSTR
 60

	)

43 
	#ENODATA
 61

	)

44 
	#ETIME
 62

	)

45 
	#ENOSR
 63

	)

46 
	#ENONET
 64

	)

47 
	#ENOPKG
 65

	)

48 
	#EREMOTE
 66

	)

49 
	#ENOLINK
 67

	)

50 
	#EADV
 68

	)

51 
	#ESRMNT
 69

	)

52 
	#ECOMM
 70

	)

53 
	#EPROTO
 71

	)

54 
	#EMULTIHOP
 72

	)

55 
	#EDOTDOT
 73

	)

56 
	#EBADMSG
 74

	)

57 
	#EOVERFLOW
 75

	)

58 
	#ENOTUNIQ
 76

	)

59 
	#EBADFD
 77

	)

60 
	#EREMCHG
 78

	)

61 
	#ELIBACC
 79

	)

62 
	#ELIBBAD
 80

	)

63 
	#ELIBSCN
 81

	)

64 
	#ELIBMAX
 82

	)

65 
	#ELIBEXEC
 83

	)

66 
	#EILSEQ
 84

	)

67 
	#ERESTART
 85

	)

68 
	#ESTRPIPE
 86

	)

69 
	#EUSERS
 87

	)

70 
	#ENOTSOCK
 88

	)

71 
	#EDESTADDRREQ
 89

	)

72 
	#EMSGSIZE
 90

	)

73 
	#EPROTOTYPE
 91

	)

74 
	#ENOPROTOOPT
 92

	)

75 
	#EPROTONOSUPPORT
 93

	)

76 
	#ESOCKTNOSUPPORT
 94

	)

77 
	#EOPNOTSUPP
 95

	)

78 
	#EPFNOSUPPORT
 96

	)

79 
	#EAFNOSUPPORT
 97

	)

80 
	#EADDRINUSE
 98

	)

81 
	#EADDRNOTAVAIL
 99

	)

82 
	#ENETDOWN
 100

	)

83 
	#ENETUNREACH
 101

	)

84 
	#ENETRESET
 102

	)

85 
	#ECONNABORTED
 103

	)

86 
	#ECONNRESET
 104

	)

87 
	#ENOBUFS
 105

	)

88 
	#EISCONN
 106

	)

89 
	#ENOTCONN
 107

	)

90 
	#ESHUTDOWN
 108

	)

91 
	#ETOOMANYREFS
 109

	)

92 
	#ETIMEDOUT
 110

	)

93 
	#ECONNREFUSED
 111

	)

94 
	#EHOSTDOWN
 112

	)

95 
	#EHOSTUNREACH
 113

	)

96 
	#EALREADY
 114

	)

97 
	#EINPROGRESS
 115

	)

98 
	#ESTALE
 116

	)

99 
	#EUCLEAN
 117

	)

100 
	#ENOTNAM
 118

	)

101 
	#ENAVAIL
 119

	)

102 
	#EISNAM
 120

	)

103 
	#EREMOTEIO
 121

	)

104 
	#EDQUOT
 122

	)

106 
	#ENOMEDIUM
 123

	)

107 
	#EMEDIUMTYPE
 124

	)

108 
	#ECANCELED
 125

	)

109 
	#ENOKEY
 126

	)

110 
	#EKEYEXPIRED
 127

	)

111 
	#EKEYREVOKED
 128

	)

112 
	#EKEYREJECTED
 129

	)

115 
	#EOWNERDEAD
 130

	)

116 
	#ENOTRECOVERABLE
 131

	)

118 
	#ERFKILL
 132

	)

120 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

6 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~<asm/posix_ty≥s_32.h
>

3 #ñi‡
deföed
(
__ILP32__
)

4 
	~<asm/posix_ty≥s_x32.h
>

6 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/linux/stddef.h

3 #i‚de‡
__Æways_ölöe


4 
	#__Æways_ölöe
 
__ölöe__


	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/posix_types_32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


2 
	#_ASM_X86_POSIX_TYPES_32_H


	)

10 
	t__kî√l_mode_t
;

11 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

13 
	t__kî√l_ùc_pid_t
;

14 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

20 
	t__kî√l_ﬁd_dev_t
;

21 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


2 
	#_ASM_X86_POSIX_TYPES_64_H


	)

10 
	t__kî√l_ﬁd_uid_t
;

11 
	t__kî√l_ﬁd_gid_t
;

12 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

14 
	t__kî√l_ﬁd_dev_t
;

15 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

17 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


2 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

13 
	t__kî√l_l⁄g_t
;

14 
	t__kî√l_ul⁄g_t
;

15 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

17 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #i‡
deföed
(
__x86_64__
Ë&& !deföed(
__ILP32__
)

5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
308
7269
config.h
mmuhack/hackbench.cpp
mmuhack/mmuhack.c
src/blitter.h
src/blitter/glproc.h
src/blitter/opengl.c
src/blitter/overlay.c
src/blitter/soft.c
src/conf.c
src/conf.h
src/crypt.h
src/cyclone/Cyclone.h
src/cyclone_interf.c
src/debug.c
src/debug.h
src/drz80/DrZ80.h
src/drz80_interf.c
src/effect.h
src/effect/hq2x.c
src/effect/hq2x.h
src/effect/hq3x.c
src/effect/hq3x.h
src/effect/hqx_common.c
src/effect/hqx_common.h
src/effect/interp.c
src/effect/interp.h
src/effect/lq2x.c
src/effect/lq2x.h
src/effect/lq3x.c
src/effect/lq3x.h
src/effect/sai.c
src/effect/scale2x.c
src/effect/scale2x.h
src/effect/scale3x.h
src/effect/scanline.c
src/emu.c
src/emu.h
src/event.c
src/event.h
src/font.h
src/frame_skip.c
src/frame_skip.h
src/generator68k/ccg/asm-cache.h
src/generator68k/ccg/asm-common.h
src/generator68k/ccg/asm-i386.h
src/generator68k/ccg/asm-ppc.h
src/generator68k/ccg/asm-sparc.h
src/generator68k/ccg/ccg.c
src/generator68k/ccg/insns-i386.h
src/generator68k/ccg/insns-ppc.h
src/generator68k/ccg/insns-sparc.h
src/generator68k/compile.h
src/generator68k/cpu68k-inline.h
src/generator68k/cpu68k.c
src/generator68k/cpu68k.h
src/generator68k/def68k.c
src/generator68k/diss68k.c
src/generator68k/gen68k.c
src/generator68k/generator.h
src/generator68k/mem68k.h
src/generator68k/reg68k.c
src/generator68k/reg68k.h
src/generator68k/registers.h
src/generator68k/tab68k.c
src/generator68k/tab68k2.c
src/generator68k_interf.c
src/getopt.h
src/gngeo_icon.h
src/gnutil.c
src/gnutil.h
src/gp2x.c
src/gp2x.h
src/list.c
src/list.h
src/main.c
src/mame_layer.c
src/mame_layer.h
src/mamez80/z80.c
src/mamez80/z80.h
src/mamez80/z80daa.h
src/mamez80_interf.c
src/memory.c
src/memory.h
src/menu.c
src/menu.h
src/messages.c
src/messages.h
src/neoboot.c
src/neocrypt.c
src/neocrypt.h
src/pbar.c
src/pbar.h
src/pd4990a.c
src/pd4990a.h
src/profiler.c
src/profiler.h
src/raze/raze.h
src/raze_interf.c
src/resfile.c
src/resfile.h
src/roms.c
src/roms.h
src/screen.c
src/screen.h
src/sound.c
src/sound.h
src/star/cpudebug.c
src/star/cpudebug.h
src/star/star.c
src/star/starcpu.h
src/star_interf.c
src/state.c
src/state.h
src/stb_image.c
src/stb_image.h
src/stb_zlib.c
src/stb_zlib.h
src/timer.c
src/timer.h
src/transpack.c
src/transpack.h
src/unzip.c
src/unzip.h
src/video.c
src/video.h
src/video_template.h
src/ym2610-940/2610intf.c
src/ym2610-940/2610intf.h
src/ym2610-940/940.c
src/ym2610-940/940private.h
src/ym2610-940/940shared.h
src/ym2610-940/DrZ80.h
src/ym2610-940/drz80_interf.c
src/ym2610-940/mvs.h
src/ym2610-940/timer.c
src/ym2610-940/timer.h
src/ym2610-940/uClibc/e_log.c
src/ym2610-940/uClibc/e_pow.c
src/ym2610-940/uClibc/e_rem_pio2.c
src/ym2610-940/uClibc/e_sqrt.c
src/ym2610-940/uClibc/k_cos.c
src/ym2610-940/uClibc/k_rem_pio2.c
src/ym2610-940/uClibc/k_sin.c
src/ym2610-940/uClibc/math.h
src/ym2610-940/uClibc/math_private.h
src/ym2610-940/uClibc/s_copysign.c
src/ym2610-940/uClibc/s_fabs.c
src/ym2610-940/uClibc/s_floor.c
src/ym2610-940/uClibc/s_scalbn.c
src/ym2610-940/uClibc/s_sin.c
src/ym2610-940/uClibc/wrappers.c
src/ym2610-940/ym2610.c
src/ym2610-940/ym2610.h
src/ym2610/2610intf.c
src/ym2610/2610intf.h
src/ym2610/mvs.h
src/ym2610/ym2610.c
src/ym2610/ym2610.h
/usr/include/alloca.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/libgen.h
/usr/include/linux/kernel.h
/usr/include/linux/version.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/menu.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/resource.h
/usr/include/sys/soundcard.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/curses.h
/usr/include/eti.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/soundcard.h
/usr/include/linux/sysinfo.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/zconf.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/mman-linux.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/linux/errno.h
/usr/include/linux/ioctl.h
/usr/include/linux/patchkey.h
/usr/include/linux/types.h
/usr/include/ncurses_dll.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/types.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/bits/xopen_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/wctype.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
