// This is a generated file. DO NOT EDIT!

// These tables were generated for the following constants:
STATIC_ASSERT(PM_FP_BITS == 8);
STATIC_ASSERT(EP_FP_BITS == 15);
STATIC_ASSERT(DB_BITS == 8);
STATIC_ASSERT(DB_MUTE == 256);
STATIC_ASSERT(DBTABLEN == 768);
//STATIC_ASSERT(DB_STEP == 0.1875);
//STATIC_ASSERT(EG_STEP == 0.375);
//STATIC_ASSERT(PM_DEPTH == 13.75);
STATIC_ASSERT(PG_BITS == 9);
STATIC_ASSERT(PG_WIDTH == 512);
STATIC_ASSERT(EG_BITS == 7);
STATIC_ASSERT(DB2LIN_AMP_BITS == 8);
STATIC_ASSERT(PM_PG_BITS == 8);
STATIC_ASSERT(PM_PG_WIDTH == 256);
STATIC_ASSERT(LFO_AM_TAB_ELEMENTS == 210);

// Table for Pitch Modulator (24.8 fixed point)
static int pmtable[PM_PG_WIDTH] = {
	 256, 256, 256, 256, 256, 256, 256, 256,
	 256, 256, 256, 256, 256, 256, 256, 256,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 258, 258, 258, 258, 258, 258, 258, 258,
	 258, 258, 258, 258, 258, 258, 258, 258,
	 258, 258, 258, 258, 258, 258, 258, 258,
	 258, 258, 258, 258, 258, 258, 258, 258,
	 258, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 257, 257, 257, 257, 257, 257, 257,
	 257, 256, 256, 256, 256, 256, 256, 256,
	 256, 256, 256, 256, 256, 256, 256, 256,
	 256, 256, 256, 256, 256, 256, 256, 256,
	 256, 256, 256, 256, 256, 256, 256, 256,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 254, 254, 254, 254, 254, 254, 254, 254,
	 254, 254, 254, 254, 254, 254, 254, 254,
	 254, 254, 254, 254, 254, 254, 254, 254,
	 254, 254, 254, 254, 254, 254, 254, 254,
	 254, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 255, 255, 255, 255, 255, 255, 255,
	 255, 256, 256, 256, 256, 256, 256, 256,
	 256, 256, 256, 256, 256, 256, 256, 256,
};

// dB to linear table (used by Slot)
// dB(0 .. DB_MUTE-1) -> linear(0 .. DB2LIN_AMP_WIDTH)
// indices in range:
//   [0,        DB_MUTE )    actual values, from max to min
//   [DB_MUTE,  DBTABLEN)    filled with min val (to allow some overflow in index)
//   [DBTABLEN, 2*DBTABLEN)  as above but for negative output values
static int dB2LinTab[2 * DBTABLEN] = {
	  255,  249,  244,  239,  233,  228,  224,  219,
	  214,  209,  205,  201,  196,  192,  188,  184,
	  180,  176,  172,  169,  165,  162,  158,  155,
	  151,  148,  145,  142,  139,  136,  133,  130,
	  127,  125,  122,  119,  117,  114,  112,  109,
	  107,  105,  102,  100,   98,   96,   94,   92,
	   90,   88,   86,   84,   82,   81,   79,   77,
	   76,   74,   72,   71,   69,   68,   66,   65,
	   64,   62,   61,   60,   58,   57,   56,   55,
	   53,   52,   51,   50,   49,   48,   47,   46,
	   45,   44,   43,   42,   41,   40,   39,   38,
	   38,   37,   36,   35,   34,   34,   33,   32,
	   32,   31,   30,   30,   29,   28,   28,   27,
	   27,   26,   25,   25,   24,   24,   23,   23,
	   22,   22,   21,   21,   20,   20,   19,   19,
	   19,   18,   18,   17,   17,   17,   16,   16,
	   16,   15,   15,   15,   14,   14,   14,   13,
	   13,   13,   12,   12,   12,   12,   11,   11,
	   11,   11,   10,   10,   10,   10,   10,    9,
	    9,    9,    9,    8,    8,    8,    8,    8,
	    8,    7,    7,    7,    7,    7,    7,    6,
	    6,    6,    6,    6,    6,    6,    5,    5,
	    5,    5,    5,    5,    5,    5,    5,    4,
	    4,    4,    4,    4,    4,    4,    4,    4,
	    4,    3,    3,    3,    3,    3,    3,    3,
	    3,    3,    3,    3,    3,    3,    2,    2,
	    2,    2,    2,    2,    2,    2,    2,    2,
	    2,    2,    2,    2,    2,    2,    2,    2,
	    2,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    1,
	    1,    1,    1,    1,    1,    1,    1,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	 -255, -249, -244, -239, -233, -228, -224, -219,
	 -214, -209, -205, -201, -196, -192, -188, -184,
	 -180, -176, -172, -169, -165, -162, -158, -155,
	 -151, -148, -145, -142, -139, -136, -133, -130,
	 -127, -125, -122, -119, -117, -114, -112, -109,
	 -107, -105, -102, -100,  -98,  -96,  -94,  -92,
	  -90,  -88,  -86,  -84,  -82,  -81,  -79,  -77,
	  -76,  -74,  -72,  -71,  -69,  -68,  -66,  -65,
	  -64,  -62,  -61,  -60,  -58,  -57,  -56,  -55,
	  -53,  -52,  -51,  -50,  -49,  -48,  -47,  -46,
	  -45,  -44,  -43,  -42,  -41,  -40,  -39,  -38,
	  -38,  -37,  -36,  -35,  -34,  -34,  -33,  -32,
	  -32,  -31,  -30,  -30,  -29,  -28,  -28,  -27,
	  -27,  -26,  -25,  -25,  -24,  -24,  -23,  -23,
	  -22,  -22,  -21,  -21,  -20,  -20,  -19,  -19,
	  -19,  -18,  -18,  -17,  -17,  -17,  -16,  -16,
	  -16,  -15,  -15,  -15,  -14,  -14,  -14,  -13,
	  -13,  -13,  -12,  -12,  -12,  -12,  -11,  -11,
	  -11,  -11,  -10,  -10,  -10,  -10,  -10,   -9,
	   -9,   -9,   -9,   -8,   -8,   -8,   -8,   -8,
	   -8,   -7,   -7,   -7,   -7,   -7,   -7,   -6,
	   -6,   -6,   -6,   -6,   -6,   -6,   -5,   -5,
	   -5,   -5,   -5,   -5,   -5,   -5,   -5,   -4,
	   -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
	   -4,   -3,   -3,   -3,   -3,   -3,   -3,   -3,
	   -3,   -3,   -3,   -3,   -3,   -3,   -2,   -2,
	   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
	   -2,   -2,   -2,   -2,   -2,   -2,   -2,   -2,
	   -2,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
	   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
	   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
	   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
};

// Linear to Log curve conversion table (for Attack rate)
static unsigned AR_ADJUST_TABLE[1 << EG_BITS] = {
	 127, 127, 108,  98,  90,  84,  80,  75,
	  72,  69,  66,  64,  61,  59,  57,  56,
	  54,  52,  51,  49,  48,  47,  45,  44,
	  43,  42,  41,  40,  39,  38,  37,  36,
	  36,  35,  34,  33,  33,  32,  31,  30,
	  30,  29,  29,  28,  27,  27,  26,  26,
	  25,  24,  24,  23,  23,  22,  22,  21,
	  21,  21,  20,  20,  19,  19,  18,  18,
	  17,  17,  17,  16,  16,  15,  15,  15,
	  14,  14,  14,  13,  13,  13,  12,  12,
	  12,  11,  11,  11,  10,  10,  10,   9,
	   9,   9,   9,   8,   8,   8,   7,   7,
	   7,   7,   6,   6,   6,   6,   5,   5,
	   5,   4,   4,   4,   4,   4,   3,   3,
	   3,   3,   2,   2,   2,   2,   1,   1,
	   1,   1,   1,   0,   0,   0,   0,   0,
};

// KSL + TL Table   values are in range [0, 112)
static unsigned tllTable[16 * 8][4] = {
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },

	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   1,   2,   4 },
	{    0,   1,   3,   6 },
	{    0,   2,   4,   8 },
	{    0,   2,   5,  10 },
	{    0,   3,   6,  12 },
	{    0,   3,   7,  14 },
	{    0,   4,   8,  16 },

	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   1,   3,   6 },
	{    0,   2,   5,  10 },
	{    0,   3,   7,  14 },
	{    0,   4,   8,  16 },
	{    0,   5,  10,  20 },
	{    0,   5,  11,  22 },
	{    0,   6,  12,  24 },
	{    0,   6,  13,  26 },
	{    0,   7,  14,  28 },
	{    0,   7,  15,  30 },
	{    0,   8,  16,  32 },

	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   2,   5,  10 },
	{    0,   4,   8,  16 },
	{    0,   5,  11,  22 },
	{    0,   6,  13,  26 },
	{    0,   7,  15,  30 },
	{    0,   8,  16,  32 },
	{    0,   9,  18,  36 },
	{    0,   9,  19,  38 },
	{    0,  10,  20,  40 },
	{    0,  10,  21,  42 },
	{    0,  11,  22,  44 },
	{    0,  11,  23,  46 },
	{    0,  12,  24,  48 },

	{    0,   0,   0,   0 },
	{    0,   0,   0,   0 },
	{    0,   4,   8,  16 },
	{    0,   6,  13,  26 },
	{    0,   8,  16,  32 },
	{    0,   9,  19,  38 },
	{    0,  10,  21,  42 },
	{    0,  11,  23,  46 },
	{    0,  12,  24,  48 },
	{    0,  13,  26,  52 },
	{    0,  13,  27,  54 },
	{    0,  14,  28,  56 },
	{    0,  14,  29,  58 },
	{    0,  15,  30,  60 },
	{    0,  15,  31,  62 },
	{    0,  16,  32,  64 },

	{    0,   0,   0,   0 },
	{    0,   4,   8,  16 },
	{    0,   8,  16,  32 },
	{    0,  10,  21,  42 },
	{    0,  12,  24,  48 },
	{    0,  13,  27,  54 },
	{    0,  14,  29,  58 },
	{    0,  15,  31,  62 },
	{    0,  16,  32,  64 },
	{    0,  17,  34,  68 },
	{    0,  17,  35,  70 },
	{    0,  18,  36,  72 },
	{    0,  18,  37,  74 },
	{    0,  19,  38,  76 },
	{    0,  19,  39,  78 },
	{    0,  20,  40,  80 },

	{    0,   0,   0,   0 },
	{    0,   8,  16,  32 },
	{    0,  12,  24,  48 },
	{    0,  14,  29,  58 },
	{    0,  16,  32,  64 },
	{    0,  17,  35,  70 },
	{    0,  18,  37,  74 },
	{    0,  19,  39,  78 },
	{    0,  20,  40,  80 },
	{    0,  21,  42,  84 },
	{    0,  21,  43,  86 },
	{    0,  22,  44,  88 },
	{    0,  22,  45,  90 },
	{    0,  23,  46,  92 },
	{    0,  23,  47,  94 },
	{    0,  24,  48,  96 },

	{    0,   0,   0,   0 },
	{    0,  12,  24,  48 },
	{    0,  16,  32,  64 },
	{    0,  18,  37,  74 },
	{    0,  20,  40,  80 },
	{    0,  21,  43,  86 },
	{    0,  22,  45,  90 },
	{    0,  23,  47,  94 },
	{    0,  24,  48,  96 },
	{    0,  25,  50, 100 },
	{    0,  25,  51, 102 },
	{    0,  26,  52, 104 },
	{    0,  26,  53, 106 },
	{    0,  27,  54, 108 },
	{    0,  27,  55, 110 },
	{    0,  28,  56, 112 },
};

// WaveTable for each envelope amp
//  values are in range [0, DB_MUTE)             (for positive values)
//                  or  [0, DB_MUTE) + DBTABLEN  (for negative values)
static unsigned fullsintable[PG_WIDTH] = {
	  255,  203,  171,  152,  139,  129,  120,  113,
	  107,  102,   97,   92,   88,   85,   81,   78,
	   75,   72,   70,   67,   65,   63,   61,   59,
	   57,   55,   53,   52,   50,   48,   47,   45,
	   44,   43,   41,   40,   39,   38,   37,   35,
	   34,   33,   32,   31,   30,   29,   28,   28,
	   27,   26,   25,   24,   23,   23,   22,   21,
	   21,   20,   19,   19,   18,   17,   17,   16,
	   16,   15,   14,   14,   13,   13,   12,   12,
	   11,   11,   11,   10,   10,    9,    9,    8,
	    8,    8,    7,    7,    7,    6,    6,    6,
	    5,    5,    5,    4,    4,    4,    4,    3,
	    3,    3,    3,    2,    2,    2,    2,    2,
	    2,    1,    1,    1,    1,    1,    1,    1,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    1,    1,    1,    1,    1,    2,
	    2,    2,    2,    2,    2,    3,    3,    3,
	    3,    4,    4,    4,    4,    5,    5,    5,
	    6,    6,    6,    7,    7,    7,    8,    8,
	    8,    9,    9,   10,   10,   11,   11,   11,
	   12,   12,   13,   13,   14,   14,   15,   16,
	   16,   17,   17,   18,   19,   19,   20,   21,
	   21,   22,   23,   23,   24,   25,   26,   27,
	   28,   28,   29,   30,   31,   32,   33,   34,
	   35,   37,   38,   39,   40,   41,   43,   44,
	   45,   47,   48,   50,   52,   53,   55,   57,
	   59,   61,   63,   65,   67,   70,   72,   75,
	   78,   81,   85,   88,   92,   97,  102,  107,
	  113,  120,  129,  139,  152,  171,  203,  255,
	 1023,  971,  939,  920,  907,  897,  888,  881,
	  875,  870,  865,  860,  856,  853,  849,  846,
	  843,  840,  838,  835,  833,  831,  829,  827,
	  825,  823,  821,  820,  818,  816,  815,  813,
	  812,  811,  809,  808,  807,  806,  805,  803,
	  802,  801,  800,  799,  798,  797,  796,  796,
	  795,  794,  793,  792,  791,  791,  790,  789,
	  789,  788,  787,  787,  786,  785,  785,  784,
	  784,  783,  782,  782,  781,  781,  780,  780,
	  779,  779,  779,  778,  778,  777,  777,  776,
	  776,  776,  775,  775,  775,  774,  774,  774,
	  773,  773,  773,  772,  772,  772,  772,  771,
	  771,  771,  771,  770,  770,  770,  770,  770,
	  770,  769,  769,  769,  769,  769,  769,  769,
	  768,  768,  768,  768,  768,  768,  768,  768,
	  768,  768,  768,  768,  768,  768,  768,  768,
	  768,  768,  768,  768,  768,  768,  768,  768,
	  768,  768,  768,  768,  768,  768,  768,  768,
	  769,  769,  769,  769,  769,  769,  769,  770,
	  770,  770,  770,  770,  770,  771,  771,  771,
	  771,  772,  772,  772,  772,  773,  773,  773,
	  774,  774,  774,  775,  775,  775,  776,  776,
	  776,  777,  777,  778,  778,  779,  779,  779,
	  780,  780,  781,  781,  782,  782,  783,  784,
	  784,  785,  785,  786,  787,  787,  788,  789,
	  789,  790,  791,  791,  792,  793,  794,  795,
	  796,  796,  797,  798,  799,  800,  801,  802,
	  803,  805,  806,  807,  808,  809,  811,  812,
	  813,  815,  816,  818,  820,  821,  823,  825,
	  827,  829,  831,  833,  835,  838,  840,  843,
	  846,  849,  853,  856,  860,  865,  870,  875,
	  881,  888,  897,  907,  920,  939,  971, 1023,
};

static unsigned halfsintable[PG_WIDTH] = {
	  255,  203,  171,  152,  139,  129,  120,  113,
	  107,  102,   97,   92,   88,   85,   81,   78,
	   75,   72,   70,   67,   65,   63,   61,   59,
	   57,   55,   53,   52,   50,   48,   47,   45,
	   44,   43,   41,   40,   39,   38,   37,   35,
	   34,   33,   32,   31,   30,   29,   28,   28,
	   27,   26,   25,   24,   23,   23,   22,   21,
	   21,   20,   19,   19,   18,   17,   17,   16,
	   16,   15,   14,   14,   13,   13,   12,   12,
	   11,   11,   11,   10,   10,    9,    9,    8,
	    8,    8,    7,    7,    7,    6,    6,    6,
	    5,    5,    5,    4,    4,    4,    4,    3,
	    3,    3,    3,    2,    2,    2,    2,    2,
	    2,    1,    1,    1,    1,    1,    1,    1,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    0,    0,    0,    0,    0,    0,    0,    0,
	    1,    1,    1,    1,    1,    1,    1,    2,
	    2,    2,    2,    2,    2,    3,    3,    3,
	    3,    4,    4,    4,    4,    5,    5,    5,
	    6,    6,    6,    7,    7,    7,    8,    8,
	    8,    9,    9,   10,   10,   11,   11,   11,
	   12,   12,   13,   13,   14,   14,   15,   16,
	   16,   17,   17,   18,   19,   19,   20,   21,
	   21,   22,   23,   23,   24,   25,   26,   27,
	   28,   28,   29,   30,   31,   32,   33,   34,
	   35,   37,   38,   39,   40,   41,   43,   44,
	   45,   47,   48,   50,   52,   53,   55,   57,
	   59,   61,   63,   65,   67,   70,   72,   75,
	   78,   81,   85,   88,   92,   97,  102,  107,
	  113,  120,  129,  139,  152,  171,  203,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
	  255,  255,  255,  255,  255,  255,  255,  255,
};

static unsigned* waveform[2] = {fullsintable, halfsintable};

// Phase incr table for attack, decay and release
//  note: original code had indices swapped. It also had
//        a separate table for attack
//  17.15 fixed point
static int dphaseDRTable[16][16] = {
	{      0,     4,     8,    16,    32,    64,   128,   256,
	     512,  1024,  2048,  4096,  8192, 16384, 32768, 65536 },
	{      0,     5,    10,    20,    40,    80,   160,   320,
	     640,  1280,  2560,  5120, 10240, 20480, 40960, 81920 },
	{      0,     6,    12,    24,    48,    96,   192,   384,
	     768,  1536,  3072,  6144, 12288, 24576, 49152, 98304 },
	{      0,     7,    14,    28,    56,   112,   224,   448,
	     896,  1792,  3584,  7168, 14336, 28672, 57344,114688 },
	{      0,     8,    16,    32,    64,   128,   256,   512,
	    1024,  2048,  4096,  8192, 16384, 32768, 65536, 65536 },
	{      0,    10,    20,    40,    80,   160,   320,   640,
	    1280,  2560,  5120, 10240, 20480, 40960, 81920, 81920 },
	{      0,    12,    24,    48,    96,   192,   384,   768,
	    1536,  3072,  6144, 12288, 24576, 49152, 98304, 98304 },
	{      0,    14,    28,    56,   112,   224,   448,   896,
	    1792,  3584,  7168, 14336, 28672, 57344,114688,114688 },
	{      0,    16,    32,    64,   128,   256,   512,  1024,
	    2048,  4096,  8192, 16384, 32768, 65536, 65536, 65536 },
	{      0,    20,    40,    80,   160,   320,   640,  1280,
	    2560,  5120, 10240, 20480, 40960, 81920, 81920, 81920 },
	{      0,    24,    48,    96,   192,   384,   768,  1536,
	    3072,  6144, 12288, 24576, 49152, 98304, 98304, 98304 },
	{      0,    28,    56,   112,   224,   448,   896,  1792,
	    3584,  7168, 14336, 28672, 57344,114688,114688,114688 },
	{      0,    32,    64,   128,   256,   512,  1024,  2048,
	    4096,  8192, 16384, 32768, 65536, 65536, 65536, 65536 },
	{      0,    40,    80,   160,   320,   640,  1280,  2560,
	    5120, 10240, 20480, 40960, 81920, 81920, 81920, 81920 },
	{      0,    48,    96,   192,   384,   768,  1536,  3072,
	    6144, 12288, 24576, 49152, 98304, 98304, 98304, 98304 },
	{      0,    56,   112,   224,   448,   896,  1792,  3584,
	    7168, 14336, 28672, 57344,114688,114688,114688,114688 },
};

// LFO Amplitude Modulation table (verified on real YM3812)
static const unsigned char lfo_am_table[LFO_AM_TAB_ELEMENTS] = {
	0,0,0,0,0,0,0,
	1,1,1,1,
	2,2,2,2,
	3,3,3,3,
	4,4,4,4,
	5,5,5,5,
	6,6,6,6,
	7,7,7,7,
	8,8,8,8,
	9,9,9,9,
	10,10,10,10,
	11,11,11,11,
	12,12,12,12,
	13,13,13,13,
	14,14,14,14,
	15,15,15,15,
	16,16,16,16,
	17,17,17,17,
	18,18,18,18,
	19,19,19,19,
	20,20,20,20,
	21,21,21,21,
	22,22,22,22,
	23,23,23,23,
	24,24,24,24,
	25,25,25,25,
	26,26,26,
	25,25,25,25,
	24,24,24,24,
	23,23,23,23,
	22,22,22,22,
	21,21,21,21,
	20,20,20,20,
	19,19,19,19,
	18,18,18,18,
	17,17,17,17,
	16,16,16,16,
	15,15,15,15,
	14,14,14,14,
	13,13,13,13,
	12,12,12,12,
	11,11,11,11,
	10,10,10,10,
	9,9,9,9,
	8,8,8,8,
	7,7,7,7,
	6,6,6,6,
	5,5,5,5,
	4,4,4,4,
	3,3,3,3,
	2,2,2,2,
	1,1,1,1,
};

// Sustain level (17.15 fixed point)
static const int SL[16] = {
	       0,  262144,  524288,  786432,
	 1048576, 1310720, 1572864, 1835008,
	 2097152, 2359296, 2621440, 2883584,
	 3145728, 3407872, 3670016, 4194304,
};

